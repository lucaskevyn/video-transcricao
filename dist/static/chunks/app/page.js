/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Crepo%5C%5Cvideo-transcricao%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Crepo%5C%5Cvideo-transcricao%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(app-pages-browser)/./src/app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q3JlcG8lNUMlNUN2aWRlby10cmFuc2NyaWNhbyU1QyU1Q3NyYyU1QyU1Q2FwcCU1QyU1Q3BhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsOEpBQW9GIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/MWJkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkU6XFxcXHJlcG9cXFxcdmlkZW8tdHJhbnNjcmljYW9cXFxcc3JjXFxcXGFwcFxcXFxwYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Crepo%5C%5Cvideo-transcricao%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/image.js":
/*!*********************************************!*\
  !*** ./node_modules/next/dist/api/image.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport default from dynamic */ _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/lib/image-external */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-external.js\");\n/* harmony import */ var _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _shared_lib_image_external__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n//# sourceMappingURL=image.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2ltYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1RDtBQUNWOztBQUU3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9pbWFnZS5qcz9lY2QxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tIFwiLi4vc2hhcmVkL2xpYi9pbWFnZS1leHRlcm5hbFwiO1xuZXhwb3J0ICogZnJvbSBcIi4uL3NoYXJlZC9saWIvaW1hZ2UtZXh0ZXJuYWxcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/image.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/MDJiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/picomatch/index.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/picomatch/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n(()=>{\"use strict\";var t={170:(t,e,u)=>{const n=u(510);const isWindows=()=>{if(typeof navigator!==\"undefined\"&&navigator.platform){const t=navigator.platform.toLowerCase();return t===\"win32\"||t===\"windows\"}if(typeof process!==\"undefined\"&&process.platform){return process.platform===\"win32\"}return false};function picomatch(t,e,u=false){if(e&&(e.windows===null||e.windows===undefined)){e={...e,windows:isWindows()}}return n(t,e,u)}Object.assign(picomatch,n);t.exports=picomatch},154:t=>{const e=\"\\\\\\\\/\";const u=`[^${e}]`;const n=\"\\\\.\";const o=\"\\\\+\";const s=\"\\\\?\";const r=\"\\\\/\";const a=\"(?=.)\";const i=\"[^/]\";const c=`(?:${r}|$)`;const p=`(?:^|${r})`;const l=`${n}{1,2}${c}`;const f=`(?!${n})`;const A=`(?!${p}${l})`;const _=`(?!${n}{0,1}${c})`;const R=`(?!${l})`;const E=`[^.${r}]`;const h=`${i}*?`;const g=\"/\";const b={DOT_LITERAL:n,PLUS_LITERAL:o,QMARK_LITERAL:s,SLASH_LITERAL:r,ONE_CHAR:a,QMARK:i,END_ANCHOR:c,DOTS_SLASH:l,NO_DOT:f,NO_DOTS:A,NO_DOT_SLASH:_,NO_DOTS_SLASH:R,QMARK_NO_DOT:E,STAR:h,START_ANCHOR:p,SEP:g};const C={...b,SLASH_LITERAL:`[${e}]`,QMARK:u,STAR:`${u}*?`,DOTS_SLASH:`${n}{1,2}(?:[${e}]|$)`,NO_DOT:`(?!${n})`,NO_DOTS:`(?!(?:^|[${e}])${n}{1,2}(?:[${e}]|$))`,NO_DOT_SLASH:`(?!${n}{0,1}(?:[${e}]|$))`,NO_DOTS_SLASH:`(?!${n}{1,2}(?:[${e}]|$))`,QMARK_NO_DOT:`[^.${e}]`,START_ANCHOR:`(?:^|[${e}])`,END_ANCHOR:`(?:[${e}]|$)`,SEP:\"\\\\\"};const y={alnum:\"a-zA-Z0-9\",alpha:\"a-zA-Z\",ascii:\"\\\\x00-\\\\x7F\",blank:\" \\\\t\",cntrl:\"\\\\x00-\\\\x1F\\\\x7F\",digit:\"0-9\",graph:\"\\\\x21-\\\\x7E\",lower:\"a-z\",print:\"\\\\x20-\\\\x7E \",punct:\"\\\\-!\\\"#$%&'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~\",space:\" \\\\t\\\\r\\\\n\\\\v\\\\f\",upper:\"A-Z\",word:\"A-Za-z0-9_\",xdigit:\"A-Fa-f0-9\"};t.exports={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:y,REGEX_BACKSLASH:/\\\\(?![*+?^${}(|)[\\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\\].,$*+?^{}()|\\\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\\\?)((\\W)(\\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,REPLACEMENTS:{\"***\":\"*\",\"**/**\":\"**\",\"**/**/**\":\"**\"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,extglobChars(t){return{\"!\":{type:\"negate\",open:\"(?:(?!(?:\",close:`))${t.STAR})`},\"?\":{type:\"qmark\",open:\"(?:\",close:\")?\"},\"+\":{type:\"plus\",open:\"(?:\",close:\")+\"},\"*\":{type:\"star\",open:\"(?:\",close:\")*\"},\"@\":{type:\"at\",open:\"(?:\",close:\")\"}}},globChars(t){return t===true?C:b}}},697:(t,e,u)=>{const n=u(154);const o=u(96);const{MAX_LENGTH:s,POSIX_REGEX_SOURCE:r,REGEX_NON_SPECIAL_CHARS:a,REGEX_SPECIAL_CHARS_BACKREF:i,REPLACEMENTS:c}=n;const expandRange=(t,e)=>{if(typeof e.expandRange===\"function\"){return e.expandRange(...t,e)}t.sort();const u=`[${t.join(\"-\")}]`;try{new RegExp(u)}catch(e){return t.map((t=>o.escapeRegex(t))).join(\"..\")}return u};const syntaxError=(t,e)=>`Missing ${t}: \"${e}\" - use \"\\\\\\\\${e}\" to match literal characters`;const parse=(t,e)=>{if(typeof t!==\"string\"){throw new TypeError(\"Expected a string\")}t=c[t]||t;const u={...e};const p=typeof u.maxLength===\"number\"?Math.min(s,u.maxLength):s;let l=t.length;if(l>p){throw new SyntaxError(`Input length: ${l}, exceeds maximum allowed length: ${p}`)}const f={type:\"bos\",value:\"\",output:u.prepend||\"\"};const A=[f];const _=u.capture?\"\":\"?:\";const R=n.globChars(u.windows);const E=n.extglobChars(R);const{DOT_LITERAL:h,PLUS_LITERAL:g,SLASH_LITERAL:b,ONE_CHAR:C,DOTS_SLASH:y,NO_DOT:$,NO_DOT_SLASH:x,NO_DOTS_SLASH:S,QMARK:H,QMARK_NO_DOT:v,STAR:d,START_ANCHOR:L}=R;const globstar=t=>`(${_}(?:(?!${L}${t.dot?y:h}).)*?)`;const T=u.dot?\"\":$;const O=u.dot?H:v;let k=u.bash===true?globstar(u):d;if(u.capture){k=`(${k})`}if(typeof u.noext===\"boolean\"){u.noextglob=u.noext}const m={input:t,index:-1,start:0,dot:u.dot===true,consumed:\"\",output:\"\",prefix:\"\",backtrack:false,negated:false,brackets:0,braces:0,parens:0,quotes:0,globstar:false,tokens:A};t=o.removePrefix(t,m);l=t.length;const w=[];const N=[];const I=[];let B=f;let G;const eos=()=>m.index===l-1;const D=m.peek=(e=1)=>t[m.index+e];const M=m.advance=()=>t[++m.index]||\"\";const remaining=()=>t.slice(m.index+1);const consume=(t=\"\",e=0)=>{m.consumed+=t;m.index+=e};const append=t=>{m.output+=t.output!=null?t.output:t.value;consume(t.value)};const negate=()=>{let t=1;while(D()===\"!\"&&(D(2)!==\"(\"||D(3)===\"?\")){M();m.start++;t++}if(t%2===0){return false}m.negated=true;m.start++;return true};const increment=t=>{m[t]++;I.push(t)};const decrement=t=>{m[t]--;I.pop()};const push=t=>{if(B.type===\"globstar\"){const e=m.braces>0&&(t.type===\"comma\"||t.type===\"brace\");const u=t.extglob===true||w.length&&(t.type===\"pipe\"||t.type===\"paren\");if(t.type!==\"slash\"&&t.type!==\"paren\"&&!e&&!u){m.output=m.output.slice(0,-B.output.length);B.type=\"star\";B.value=\"*\";B.output=k;m.output+=B.output}}if(w.length&&t.type!==\"paren\"){w[w.length-1].inner+=t.value}if(t.value||t.output)append(t);if(B&&B.type===\"text\"&&t.type===\"text\"){B.output=(B.output||B.value)+t.value;B.value+=t.value;return}t.prev=B;A.push(t);B=t};const extglobOpen=(t,e)=>{const n={...E[e],conditions:1,inner:\"\"};n.prev=B;n.parens=m.parens;n.output=m.output;const o=(u.capture?\"(\":\"\")+n.open;increment(\"parens\");push({type:t,value:e,output:m.output?\"\":C});push({type:\"paren\",extglob:true,value:M(),output:o});w.push(n)};const extglobClose=t=>{let n=t.close+(u.capture?\")\":\"\");let o;if(t.type===\"negate\"){let s=k;if(t.inner&&t.inner.length>1&&t.inner.includes(\"/\")){s=globstar(u)}if(s!==k||eos()||/^\\)+$/.test(remaining())){n=t.close=`)$))${s}`}if(t.inner.includes(\"*\")&&(o=remaining())&&/^\\.[^\\\\/.]+$/.test(o)){const u=parse(o,{...e,fastpaths:false}).output;n=t.close=`)${u})${s})`}if(t.prev.type===\"bos\"){m.negatedExtglob=true}}push({type:\"paren\",extglob:true,value:G,output:n});decrement(\"parens\")};if(u.fastpaths!==false&&!/(^[*!]|[/()[\\]{}\"])/.test(t)){let n=false;let s=t.replace(i,((t,e,u,o,s,r)=>{if(o===\"\\\\\"){n=true;return t}if(o===\"?\"){if(e){return e+o+(s?H.repeat(s.length):\"\")}if(r===0){return O+(s?H.repeat(s.length):\"\")}return H.repeat(u.length)}if(o===\".\"){return h.repeat(u.length)}if(o===\"*\"){if(e){return e+o+(s?k:\"\")}return k}return e?t:`\\\\${t}`}));if(n===true){if(u.unescape===true){s=s.replace(/\\\\/g,\"\")}else{s=s.replace(/\\\\+/g,(t=>t.length%2===0?\"\\\\\\\\\":t?\"\\\\\":\"\"))}}if(s===t&&u.contains===true){m.output=t;return m}m.output=o.wrapOutput(s,m,e);return m}while(!eos()){G=M();if(G===\"\\0\"){continue}if(G===\"\\\\\"){const t=D();if(t===\"/\"&&u.bash!==true){continue}if(t===\".\"||t===\";\"){continue}if(!t){G+=\"\\\\\";push({type:\"text\",value:G});continue}const e=/^\\\\+/.exec(remaining());let n=0;if(e&&e[0].length>2){n=e[0].length;m.index+=n;if(n%2!==0){G+=\"\\\\\"}}if(u.unescape===true){G=M()}else{G+=M()}if(m.brackets===0){push({type:\"text\",value:G});continue}}if(m.brackets>0&&(G!==\"]\"||B.value===\"[\"||B.value===\"[^\")){if(u.posix!==false&&G===\":\"){const t=B.value.slice(1);if(t.includes(\"[\")){B.posix=true;if(t.includes(\":\")){const t=B.value.lastIndexOf(\"[\");const e=B.value.slice(0,t);const u=B.value.slice(t+2);const n=r[u];if(n){B.value=e+n;m.backtrack=true;M();if(!f.output&&A.indexOf(B)===1){f.output=C}continue}}}}if(G===\"[\"&&D()!==\":\"||G===\"-\"&&D()===\"]\"){G=`\\\\${G}`}if(G===\"]\"&&(B.value===\"[\"||B.value===\"[^\")){G=`\\\\${G}`}if(u.posix===true&&G===\"!\"&&B.value===\"[\"){G=\"^\"}B.value+=G;append({value:G});continue}if(m.quotes===1&&G!=='\"'){G=o.escapeRegex(G);B.value+=G;append({value:G});continue}if(G==='\"'){m.quotes=m.quotes===1?0:1;if(u.keepQuotes===true){push({type:\"text\",value:G})}continue}if(G===\"(\"){increment(\"parens\");push({type:\"paren\",value:G});continue}if(G===\")\"){if(m.parens===0&&u.strictBrackets===true){throw new SyntaxError(syntaxError(\"opening\",\"(\"))}const t=w[w.length-1];if(t&&m.parens===t.parens+1){extglobClose(w.pop());continue}push({type:\"paren\",value:G,output:m.parens?\")\":\"\\\\)\"});decrement(\"parens\");continue}if(G===\"[\"){if(u.nobracket===true||!remaining().includes(\"]\")){if(u.nobracket!==true&&u.strictBrackets===true){throw new SyntaxError(syntaxError(\"closing\",\"]\"))}G=`\\\\${G}`}else{increment(\"brackets\")}push({type:\"bracket\",value:G});continue}if(G===\"]\"){if(u.nobracket===true||B&&B.type===\"bracket\"&&B.value.length===1){push({type:\"text\",value:G,output:`\\\\${G}`});continue}if(m.brackets===0){if(u.strictBrackets===true){throw new SyntaxError(syntaxError(\"opening\",\"[\"))}push({type:\"text\",value:G,output:`\\\\${G}`});continue}decrement(\"brackets\");const t=B.value.slice(1);if(B.posix!==true&&t[0]===\"^\"&&!t.includes(\"/\")){G=`/${G}`}B.value+=G;append({value:G});if(u.literalBrackets===false||o.hasRegexChars(t)){continue}const e=o.escapeRegex(B.value);m.output=m.output.slice(0,-B.value.length);if(u.literalBrackets===true){m.output+=e;B.value=e;continue}B.value=`(${_}${e}|${B.value})`;m.output+=B.value;continue}if(G===\"{\"&&u.nobrace!==true){increment(\"braces\");const t={type:\"brace\",value:G,output:\"(\",outputIndex:m.output.length,tokensIndex:m.tokens.length};N.push(t);push(t);continue}if(G===\"}\"){const t=N[N.length-1];if(u.nobrace===true||!t){push({type:\"text\",value:G,output:G});continue}let e=\")\";if(t.dots===true){const t=A.slice();const n=[];for(let e=t.length-1;e>=0;e--){A.pop();if(t[e].type===\"brace\"){break}if(t[e].type!==\"dots\"){n.unshift(t[e].value)}}e=expandRange(n,u);m.backtrack=true}if(t.comma!==true&&t.dots!==true){const u=m.output.slice(0,t.outputIndex);const n=m.tokens.slice(t.tokensIndex);t.value=t.output=\"\\\\{\";G=e=\"\\\\}\";m.output=u;for(const t of n){m.output+=t.output||t.value}}push({type:\"brace\",value:G,output:e});decrement(\"braces\");N.pop();continue}if(G===\"|\"){if(w.length>0){w[w.length-1].conditions++}push({type:\"text\",value:G});continue}if(G===\",\"){let t=G;const e=N[N.length-1];if(e&&I[I.length-1]===\"braces\"){e.comma=true;t=\"|\"}push({type:\"comma\",value:G,output:t});continue}if(G===\"/\"){if(B.type===\"dot\"&&m.index===m.start+1){m.start=m.index+1;m.consumed=\"\";m.output=\"\";A.pop();B=f;continue}push({type:\"slash\",value:G,output:b});continue}if(G===\".\"){if(m.braces>0&&B.type===\"dot\"){if(B.value===\".\")B.output=h;const t=N[N.length-1];B.type=\"dots\";B.output+=G;B.value+=G;t.dots=true;continue}if(m.braces+m.parens===0&&B.type!==\"bos\"&&B.type!==\"slash\"){push({type:\"text\",value:G,output:h});continue}push({type:\"dot\",value:G,output:h});continue}if(G===\"?\"){const t=B&&B.value===\"(\";if(!t&&u.noextglob!==true&&D()===\"(\"&&D(2)!==\"?\"){extglobOpen(\"qmark\",G);continue}if(B&&B.type===\"paren\"){const t=D();let e=G;if(B.value===\"(\"&&!/[!=<:]/.test(t)||t===\"<\"&&!/<([!=]|\\w+>)/.test(remaining())){e=`\\\\${G}`}push({type:\"text\",value:G,output:e});continue}if(u.dot!==true&&(B.type===\"slash\"||B.type===\"bos\")){push({type:\"qmark\",value:G,output:v});continue}push({type:\"qmark\",value:G,output:H});continue}if(G===\"!\"){if(u.noextglob!==true&&D()===\"(\"){if(D(2)!==\"?\"||!/[!=<:]/.test(D(3))){extglobOpen(\"negate\",G);continue}}if(u.nonegate!==true&&m.index===0){negate();continue}}if(G===\"+\"){if(u.noextglob!==true&&D()===\"(\"&&D(2)!==\"?\"){extglobOpen(\"plus\",G);continue}if(B&&B.value===\"(\"||u.regex===false){push({type:\"plus\",value:G,output:g});continue}if(B&&(B.type===\"bracket\"||B.type===\"paren\"||B.type===\"brace\")||m.parens>0){push({type:\"plus\",value:G});continue}push({type:\"plus\",value:g});continue}if(G===\"@\"){if(u.noextglob!==true&&D()===\"(\"&&D(2)!==\"?\"){push({type:\"at\",extglob:true,value:G,output:\"\"});continue}push({type:\"text\",value:G});continue}if(G!==\"*\"){if(G===\"$\"||G===\"^\"){G=`\\\\${G}`}const t=a.exec(remaining());if(t){G+=t[0];m.index+=t[0].length}push({type:\"text\",value:G});continue}if(B&&(B.type===\"globstar\"||B.star===true)){B.type=\"star\";B.star=true;B.value+=G;B.output=k;m.backtrack=true;m.globstar=true;consume(G);continue}let e=remaining();if(u.noextglob!==true&&/^\\([^?]/.test(e)){extglobOpen(\"star\",G);continue}if(B.type===\"star\"){if(u.noglobstar===true){consume(G);continue}const n=B.prev;const o=n.prev;const s=n.type===\"slash\"||n.type===\"bos\";const r=o&&(o.type===\"star\"||o.type===\"globstar\");if(u.bash===true&&(!s||e[0]&&e[0]!==\"/\")){push({type:\"star\",value:G,output:\"\"});continue}const a=m.braces>0&&(n.type===\"comma\"||n.type===\"brace\");const i=w.length&&(n.type===\"pipe\"||n.type===\"paren\");if(!s&&n.type!==\"paren\"&&!a&&!i){push({type:\"star\",value:G,output:\"\"});continue}while(e.slice(0,3)===\"/**\"){const u=t[m.index+4];if(u&&u!==\"/\"){break}e=e.slice(3);consume(\"/**\",3)}if(n.type===\"bos\"&&eos()){B.type=\"globstar\";B.value+=G;B.output=globstar(u);m.output=B.output;m.globstar=true;consume(G);continue}if(n.type===\"slash\"&&n.prev.type!==\"bos\"&&!r&&eos()){m.output=m.output.slice(0,-(n.output+B.output).length);n.output=`(?:${n.output}`;B.type=\"globstar\";B.output=globstar(u)+(u.strictSlashes?\")\":\"|$)\");B.value+=G;m.globstar=true;m.output+=n.output+B.output;consume(G);continue}if(n.type===\"slash\"&&n.prev.type!==\"bos\"&&e[0]===\"/\"){const t=e[1]!==void 0?\"|$\":\"\";m.output=m.output.slice(0,-(n.output+B.output).length);n.output=`(?:${n.output}`;B.type=\"globstar\";B.output=`${globstar(u)}${b}|${b}${t})`;B.value+=G;m.output+=n.output+B.output;m.globstar=true;consume(G+M());push({type:\"slash\",value:\"/\",output:\"\"});continue}if(n.type===\"bos\"&&e[0]===\"/\"){B.type=\"globstar\";B.value+=G;B.output=`(?:^|${b}|${globstar(u)}${b})`;m.output=B.output;m.globstar=true;consume(G+M());push({type:\"slash\",value:\"/\",output:\"\"});continue}m.output=m.output.slice(0,-B.output.length);B.type=\"globstar\";B.output=globstar(u);B.value+=G;m.output+=B.output;m.globstar=true;consume(G);continue}const n={type:\"star\",value:G,output:k};if(u.bash===true){n.output=\".*?\";if(B.type===\"bos\"||B.type===\"slash\"){n.output=T+n.output}push(n);continue}if(B&&(B.type===\"bracket\"||B.type===\"paren\")&&u.regex===true){n.output=G;push(n);continue}if(m.index===m.start||B.type===\"slash\"||B.type===\"dot\"){if(B.type===\"dot\"){m.output+=x;B.output+=x}else if(u.dot===true){m.output+=S;B.output+=S}else{m.output+=T;B.output+=T}if(D()!==\"*\"){m.output+=C;B.output+=C}}push(n)}while(m.brackets>0){if(u.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\"]\"));m.output=o.escapeLast(m.output,\"[\");decrement(\"brackets\")}while(m.parens>0){if(u.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\")\"));m.output=o.escapeLast(m.output,\"(\");decrement(\"parens\")}while(m.braces>0){if(u.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\"}\"));m.output=o.escapeLast(m.output,\"{\");decrement(\"braces\")}if(u.strictSlashes!==true&&(B.type===\"star\"||B.type===\"bracket\")){push({type:\"maybe_slash\",value:\"\",output:`${b}?`})}if(m.backtrack===true){m.output=\"\";for(const t of m.tokens){m.output+=t.output!=null?t.output:t.value;if(t.suffix){m.output+=t.suffix}}}return m};parse.fastpaths=(t,e)=>{const u={...e};const r=typeof u.maxLength===\"number\"?Math.min(s,u.maxLength):s;const a=t.length;if(a>r){throw new SyntaxError(`Input length: ${a}, exceeds maximum allowed length: ${r}`)}t=c[t]||t;const{DOT_LITERAL:i,SLASH_LITERAL:p,ONE_CHAR:l,DOTS_SLASH:f,NO_DOT:A,NO_DOTS:_,NO_DOTS_SLASH:R,STAR:E,START_ANCHOR:h}=n.globChars(u.windows);const g=u.dot?_:A;const b=u.dot?R:A;const C=u.capture?\"\":\"?:\";const y={negated:false,prefix:\"\"};let $=u.bash===true?\".*?\":E;if(u.capture){$=`(${$})`}const globstar=t=>{if(t.noglobstar===true)return $;return`(${C}(?:(?!${h}${t.dot?f:i}).)*?)`};const create=t=>{switch(t){case\"*\":return`${g}${l}${$}`;case\".*\":return`${i}${l}${$}`;case\"*.*\":return`${g}${$}${i}${l}${$}`;case\"*/*\":return`${g}${$}${p}${l}${b}${$}`;case\"**\":return g+globstar(u);case\"**/*\":return`(?:${g}${globstar(u)}${p})?${b}${l}${$}`;case\"**/*.*\":return`(?:${g}${globstar(u)}${p})?${b}${$}${i}${l}${$}`;case\"**/.*\":return`(?:${g}${globstar(u)}${p})?${i}${l}${$}`;default:{const e=/^(.*?)\\.(\\w+)$/.exec(t);if(!e)return;const u=create(e[1]);if(!u)return;return u+i+e[2]}}};const x=o.removePrefix(t,y);let S=create(x);if(S&&u.strictSlashes!==true){S+=`${p}?`}return S};t.exports=parse},510:(t,e,u)=>{const n=u(716);const o=u(697);const s=u(96);const r=u(154);const isObject=t=>t&&typeof t===\"object\"&&!Array.isArray(t);const picomatch=(t,e,u=false)=>{if(Array.isArray(t)){const n=t.map((t=>picomatch(t,e,u)));const arrayMatcher=t=>{for(const e of n){const u=e(t);if(u)return u}return false};return arrayMatcher}const n=isObject(t)&&t.tokens&&t.input;if(t===\"\"||typeof t!==\"string\"&&!n){throw new TypeError(\"Expected pattern to be a non-empty string\")}const o=e||{};const s=o.windows;const r=n?picomatch.compileRe(t,e):picomatch.makeRe(t,e,false,true);const a=r.state;delete r.state;let isIgnored=()=>false;if(o.ignore){const t={...e,ignore:null,onMatch:null,onResult:null};isIgnored=picomatch(o.ignore,t,u)}const matcher=(u,n=false)=>{const{isMatch:i,match:c,output:p}=picomatch.test(u,r,e,{glob:t,posix:s});const l={glob:t,state:a,regex:r,posix:s,input:u,output:p,match:c,isMatch:i};if(typeof o.onResult===\"function\"){o.onResult(l)}if(i===false){l.isMatch=false;return n?l:false}if(isIgnored(u)){if(typeof o.onIgnore===\"function\"){o.onIgnore(l)}l.isMatch=false;return n?l:false}if(typeof o.onMatch===\"function\"){o.onMatch(l)}return n?l:true};if(u){matcher.state=a}return matcher};picomatch.test=(t,e,u,{glob:n,posix:o}={})=>{if(typeof t!==\"string\"){throw new TypeError(\"Expected input to be a string\")}if(t===\"\"){return{isMatch:false,output:\"\"}}const r=u||{};const a=r.format||(o?s.toPosixSlashes:null);let i=t===n;let c=i&&a?a(t):t;if(i===false){c=a?a(t):t;i=c===n}if(i===false||r.capture===true){if(r.matchBase===true||r.basename===true){i=picomatch.matchBase(t,e,u,o)}else{i=e.exec(c)}}return{isMatch:Boolean(i),match:i,output:c}};picomatch.matchBase=(t,e,u)=>{const n=e instanceof RegExp?e:picomatch.makeRe(e,u);return n.test(s.basename(t))};picomatch.isMatch=(t,e,u)=>picomatch(e,u)(t);picomatch.parse=(t,e)=>{if(Array.isArray(t))return t.map((t=>picomatch.parse(t,e)));return o(t,{...e,fastpaths:false})};picomatch.scan=(t,e)=>n(t,e);picomatch.compileRe=(t,e,u=false,n=false)=>{if(u===true){return t.output}const o=e||{};const s=o.contains?\"\":\"^\";const r=o.contains?\"\":\"$\";let a=`${s}(?:${t.output})${r}`;if(t&&t.negated===true){a=`^(?!${a}).*$`}const i=picomatch.toRegex(a,e);if(n===true){i.state=t}return i};picomatch.makeRe=(t,e={},u=false,n=false)=>{if(!t||typeof t!==\"string\"){throw new TypeError(\"Expected a non-empty string\")}let s={negated:false,fastpaths:true};if(e.fastpaths!==false&&(t[0]===\".\"||t[0]===\"*\")){s.output=o.fastpaths(t,e)}if(!s.output){s=o(t,e)}return picomatch.compileRe(s,e,u,n)};picomatch.toRegex=(t,e)=>{try{const u=e||{};return new RegExp(t,u.flags||(u.nocase?\"i\":\"\"))}catch(t){if(e&&e.debug===true)throw t;return/$^/}};picomatch.constants=r;t.exports=picomatch},716:(t,e,u)=>{const n=u(96);const{CHAR_ASTERISK:o,CHAR_AT:s,CHAR_BACKWARD_SLASH:r,CHAR_COMMA:a,CHAR_DOT:i,CHAR_EXCLAMATION_MARK:c,CHAR_FORWARD_SLASH:p,CHAR_LEFT_CURLY_BRACE:l,CHAR_LEFT_PARENTHESES:f,CHAR_LEFT_SQUARE_BRACKET:A,CHAR_PLUS:_,CHAR_QUESTION_MARK:R,CHAR_RIGHT_CURLY_BRACE:E,CHAR_RIGHT_PARENTHESES:h,CHAR_RIGHT_SQUARE_BRACKET:g}=u(154);const isPathSeparator=t=>t===p||t===r;const depth=t=>{if(t.isPrefix!==true){t.depth=t.isGlobstar?Infinity:1}};const scan=(t,e)=>{const u=e||{};const b=t.length-1;const C=u.parts===true||u.scanToEnd===true;const y=[];const $=[];const x=[];let S=t;let H=-1;let v=0;let d=0;let L=false;let T=false;let O=false;let k=false;let m=false;let w=false;let N=false;let I=false;let B=false;let G=false;let D=0;let M;let P;let K={value:\"\",depth:0,isGlob:false};const eos=()=>H>=b;const peek=()=>S.charCodeAt(H+1);const advance=()=>{M=P;return S.charCodeAt(++H)};while(H<b){P=advance();let t;if(P===r){N=K.backslashes=true;P=advance();if(P===l){w=true}continue}if(w===true||P===l){D++;while(eos()!==true&&(P=advance())){if(P===r){N=K.backslashes=true;advance();continue}if(P===l){D++;continue}if(w!==true&&P===i&&(P=advance())===i){L=K.isBrace=true;O=K.isGlob=true;G=true;if(C===true){continue}break}if(w!==true&&P===a){L=K.isBrace=true;O=K.isGlob=true;G=true;if(C===true){continue}break}if(P===E){D--;if(D===0){w=false;L=K.isBrace=true;G=true;break}}}if(C===true){continue}break}if(P===p){y.push(H);$.push(K);K={value:\"\",depth:0,isGlob:false};if(G===true)continue;if(M===i&&H===v+1){v+=2;continue}d=H+1;continue}if(u.noext!==true){const t=P===_||P===s||P===o||P===R||P===c;if(t===true&&peek()===f){O=K.isGlob=true;k=K.isExtglob=true;G=true;if(P===c&&H===v){B=true}if(C===true){while(eos()!==true&&(P=advance())){if(P===r){N=K.backslashes=true;P=advance();continue}if(P===h){O=K.isGlob=true;G=true;break}}continue}break}}if(P===o){if(M===o)m=K.isGlobstar=true;O=K.isGlob=true;G=true;if(C===true){continue}break}if(P===R){O=K.isGlob=true;G=true;if(C===true){continue}break}if(P===A){while(eos()!==true&&(t=advance())){if(t===r){N=K.backslashes=true;advance();continue}if(t===g){T=K.isBracket=true;O=K.isGlob=true;G=true;break}}if(C===true){continue}break}if(u.nonegate!==true&&P===c&&H===v){I=K.negated=true;v++;continue}if(u.noparen!==true&&P===f){O=K.isGlob=true;if(C===true){while(eos()!==true&&(P=advance())){if(P===f){N=K.backslashes=true;P=advance();continue}if(P===h){G=true;break}}continue}break}if(O===true){G=true;if(C===true){continue}break}}if(u.noext===true){k=false;O=false}let U=S;let X=\"\";let F=\"\";if(v>0){X=S.slice(0,v);S=S.slice(v);d-=v}if(U&&O===true&&d>0){U=S.slice(0,d);F=S.slice(d)}else if(O===true){U=\"\";F=S}else{U=S}if(U&&U!==\"\"&&U!==\"/\"&&U!==S){if(isPathSeparator(U.charCodeAt(U.length-1))){U=U.slice(0,-1)}}if(u.unescape===true){if(F)F=n.removeBackslashes(F);if(U&&N===true){U=n.removeBackslashes(U)}}const Q={prefix:X,input:t,start:v,base:U,glob:F,isBrace:L,isBracket:T,isGlob:O,isExtglob:k,isGlobstar:m,negated:I,negatedExtglob:B};if(u.tokens===true){Q.maxDepth=0;if(!isPathSeparator(P)){$.push(K)}Q.tokens=$}if(u.parts===true||u.tokens===true){let e;for(let n=0;n<y.length;n++){const o=e?e+1:v;const s=y[n];const r=t.slice(o,s);if(u.tokens){if(n===0&&v!==0){$[n].isPrefix=true;$[n].value=X}else{$[n].value=r}depth($[n]);Q.maxDepth+=$[n].depth}if(n!==0||r!==\"\"){x.push(r)}e=s}if(e&&e+1<t.length){const n=t.slice(e+1);x.push(n);if(u.tokens){$[$.length-1].value=n;depth($[$.length-1]);Q.maxDepth+=$[$.length-1].depth}}Q.slashes=y;Q.parts=x}return Q};t.exports=scan},96:(t,e,u)=>{const{REGEX_BACKSLASH:n,REGEX_REMOVE_BACKSLASH:o,REGEX_SPECIAL_CHARS:s,REGEX_SPECIAL_CHARS_GLOBAL:r}=u(154);e.isObject=t=>t!==null&&typeof t===\"object\"&&!Array.isArray(t);e.hasRegexChars=t=>s.test(t);e.isRegexChar=t=>t.length===1&&e.hasRegexChars(t);e.escapeRegex=t=>t.replace(r,\"\\\\$1\");e.toPosixSlashes=t=>t.replace(n,\"/\");e.removeBackslashes=t=>t.replace(o,(t=>t===\"\\\\\"?\"\":t));e.escapeLast=(t,u,n)=>{const o=t.lastIndexOf(u,n);if(o===-1)return t;if(t[o-1]===\"\\\\\")return e.escapeLast(t,u,o-1);return`${t.slice(0,o)}\\\\${t.slice(o)}`};e.removePrefix=(t,e={})=>{let u=t;if(u.startsWith(\"./\")){u=u.slice(2);e.prefix=\"./\"}return u};e.wrapOutput=(t,e={},u={})=>{const n=u.contains?\"\":\"^\";const o=u.contains?\"\":\"$\";let s=`${n}(?:${t})${o}`;if(e.negated===true){s=`(?:^(?!${s}).*$)`}return s};e.basename=(t,{windows:e}={})=>{const u=t.split(e?/[\\\\/]/:\"/\");const n=u[u.length-1];if(n===\"\"){return u[u.length-2]}return n}}};var e={};function __nccwpck_require__(u){var n=e[u];if(n!==undefined){return n.exports}var o=e[u]={exports:{}};var s=true;try{t[u](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete e[u]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var u=__nccwpck_require__(170);module.exports=u})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/picomatch/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz9lMWU1Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/player/styles/default/layouts/video.css":
/*!******************************************************************************!*\
  !*** ./node_modules/@vidstack/react/player/styles/default/layouts/video.css ***!
  \******************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"ad49cb15ba6d\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvcGxheWVyL3N0eWxlcy9kZWZhdWx0L2xheW91dHMvdmlkZW8uY3NzIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxjQUFjO0FBQzdCLElBQUksSUFBVSxJQUFJLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHZpZHN0YWNrL3JlYWN0L3BsYXllci9zdHlsZXMvZGVmYXVsdC9sYXlvdXRzL3ZpZGVvLmNzcz8xZTJlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiYWQ0OWNiMTViYTZkXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/player/styles/default/layouts/video.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/player/styles/default/theme.css":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/player/styles/default/theme.css ***!
  \**********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"904526f065f2\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvcGxheWVyL3N0eWxlcy9kZWZhdWx0L3RoZW1lLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B2aWRzdGFjay9yZWFjdC9wbGF5ZXIvc3R5bGVzL2RlZmF1bHQvdGhlbWUuY3NzPzcxMmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI5MDQ1MjZmMDY1ZjJcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/player/styles/default/theme.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/image-component.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/client/image-component.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"Image\", ({\n    enumerable: true,\n    get: function() {\n        return Image;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _reactdom = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\"));\nconst _head = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../shared/lib/head */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/head.js\"));\nconst _getimgprops = __webpack_require__(/*! ../shared/lib/get-img-props */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js\");\nconst _imageconfig = __webpack_require__(/*! ../shared/lib/image-config */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\");\nconst _imageconfigcontextsharedruntime = __webpack_require__(/*! ../shared/lib/image-config-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js\");\nconst _warnonce = __webpack_require__(/*! ../shared/lib/utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nconst _routercontextsharedruntime = __webpack_require__(/*! ../shared/lib/router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\");\nconst _imageloader = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js\"));\n// This is replaced by webpack define plugin\nconst configEnv = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image/\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[],\"remotePatterns\":[]};\nif (typeof window === \"undefined\") {\n    globalThis.__NEXT_IMAGE_IMPORTED = true;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput) {\n    const src = img == null ? void 0 : img.src;\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentElement || !img.isConnected) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder !== \"empty\") {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event(\"load\");\n            Object.defineProperty(event, \"target\", {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current({\n                ...event,\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            });\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (true) {\n            const origSrc = new URL(src, \"http://n\").searchParams.get(\"url\") || src;\n            if (img.getAttribute(\"data-nimg\") === \"fill\") {\n                if (!unoptimized && (!sizesInput || sizesInput === \"100vw\")) {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        if (sizesInput === \"100vw\") {\n                            (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" prop and \"sizes\" prop of \"100vw\", but image is not rendered at full viewport width. Please adjust \"sizes\" to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');\n                        } else {\n                            (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');\n                        }\n                    }\n                }\n                if (img.parentElement) {\n                    const { position } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" and parent element with invalid \"position\". Provided \"' + position + '\" should be one of ' + valid.map(String).join(\",\") + \".\");\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.');\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \\'width: \"auto\"\\' or \\'height: \"auto\"\\' to maintain the aspect ratio.');\n            }\n        }\n    });\n}\nfunction getDynamicProps(fetchPriority) {\n    if (Boolean(_react.use)) {\n        // In React 19.0.0 or newer, we must use camelCase\n        // prop to avoid \"Warning: Invalid DOM property\".\n        // See https://github.com/facebook/react/pull/25927\n        return {\n            fetchPriority\n        };\n    }\n    // In React 18.2.0 or older, we must use lowercase prop\n    // to avoid \"Warning: Invalid DOM property\".\n    return {\n        fetchpriority: fetchPriority\n    };\n}\nconst ImageElement = /*#__PURE__*/ (0, _react.forwardRef)((param, forwardedRef)=>{\n    let { src, srcSet, sizes, height, width, decoding, className, style, fetchPriority, placeholder, loading, unoptimized, fill, onLoadRef, onLoadingCompleteRef, setBlurComplete, setShowAltText, sizesInput, onLoad, onError, ...rest } = param;\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(\"img\", {\n        ...rest,\n        ...getDynamicProps(fetchPriority),\n        // It's intended to keep `loading` before `src` because React updates\n        // props in order which causes Safari/Firefox to not lazy load properly.\n        // See https://github.com/facebook/react/issues/25883\n        loading: loading,\n        width: width,\n        height: height,\n        decoding: decoding,\n        \"data-nimg\": fill ? \"fill\" : \"1\",\n        className: className,\n        style: style,\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        sizes: sizes,\n        srcSet: srcSet,\n        src: src,\n        ref: (0, _react.useCallback)((img)=>{\n            if (forwardedRef) {\n                if (typeof forwardedRef === \"function\") forwardedRef(img);\n                else if (typeof forwardedRef === \"object\") {\n                    // @ts-ignore - .current is read only it's usually assigned by react internally\n                    forwardedRef.current = img;\n                }\n            }\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (true) {\n                if (!src) {\n                    console.error('Image is missing required \"src\" property:', img);\n                }\n                if (img.getAttribute(\"alt\") === null) {\n                    console.error('Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.');\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput);\n            }\n        }, [\n            src,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError,\n            unoptimized,\n            sizesInput,\n            forwardedRef\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder !== \"empty\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    });\n});\nfunction ImagePreload(param) {\n    let { isAppRouter, imgAttributes } = param;\n    const opts = {\n        as: \"image\",\n        imageSrcSet: imgAttributes.srcSet,\n        imageSizes: imgAttributes.sizes,\n        crossOrigin: imgAttributes.crossOrigin,\n        referrerPolicy: imgAttributes.referrerPolicy,\n        ...getDynamicProps(imgAttributes.fetchPriority)\n    };\n    if (isAppRouter && _reactdom.default.preload) {\n        // See https://github.com/facebook/react/pull/26940\n        _reactdom.default.preload(imgAttributes.src, opts);\n        return null;\n    }\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_head.default, {\n        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(\"link\", {\n            rel: \"preload\",\n            // Note how we omit the `href` attribute, as it would only be relevant\n            // for browsers that do not support `imagesrcset`, and in those cases\n            // it would cause the incorrect image to be preloaded.\n            //\n            // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n            href: imgAttributes.srcSet ? undefined : imgAttributes.src,\n            ...opts\n        }, \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes)\n    });\n}\n_c = ImagePreload;\nconst Image = /*#__PURE__*/ (0, _react.forwardRef)((props, forwardedRef)=>{\n    const pagesRouter = (0, _react.useContext)(_routercontextsharedruntime.RouterContext);\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    const configContext = (0, _react.useContext)(_imageconfigcontextsharedruntime.ImageConfigContext);\n    const config = (0, _react.useMemo)(()=>{\n        const c = configEnv || configContext || _imageconfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return {\n            ...c,\n            allSizes,\n            deviceSizes\n        };\n    }, [\n        configContext\n    ]);\n    const { onLoad, onLoadingComplete } = props;\n    const onLoadRef = (0, _react.useRef)(onLoad);\n    (0, _react.useEffect)(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react.useRef)(onLoadingComplete);\n    (0, _react.useEffect)(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const [blurComplete, setBlurComplete] = (0, _react.useState)(false);\n    const [showAltText, setShowAltText] = (0, _react.useState)(false);\n    const { props: imgAttributes, meta: imgMeta } = (0, _getimgprops.getImgProps)(props, {\n        defaultLoader: _imageloader.default,\n        imgConf: config,\n        blurComplete,\n        showAltText\n    });\n    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0, _jsxruntime.jsx)(ImageElement, {\n                ...imgAttributes,\n                unoptimized: imgMeta.unoptimized,\n                placeholder: imgMeta.placeholder,\n                fill: imgMeta.fill,\n                onLoadRef: onLoadRef,\n                onLoadingCompleteRef: onLoadingCompleteRef,\n                setBlurComplete: setBlurComplete,\n                setShowAltText: setShowAltText,\n                sizesInput: props.sizes,\n                ref: forwardedRef\n            }),\n            imgMeta.priority ? /*#__PURE__*/ (0, _jsxruntime.jsx)(ImagePreload, {\n                isAppRouter: isAppRouter,\n                imgAttributes: imgAttributes\n            }) : null\n        ]\n    });\n});\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=image-component.js.map\nvar _c;\n$RefreshReg$(_c, \"ImagePreload\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/image-component.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"AmpStateContext\", ({\n    enumerable: true,\n    get: function() {\n        return AmpStateContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst AmpStateContext = _react.default.createContext({});\nif (true) {\n    AmpStateContext.displayName = \"AmpStateContext\";\n} //# sourceMappingURL=amp-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9hbXAtY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7O21EQUVhQTs7O2VBQUFBOzs7OzRFQUZLO0FBRVgsTUFBTUEsa0JBQXNDQyxPQUFBQSxPQUFLLENBQUNDLGFBQWEsQ0FBQyxDQUFDO0FBRXhFLElBQUlDLElBQXlCLEVBQWM7SUFDekNILGdCQUFnQkksV0FBVyxHQUFHO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9zcmMvc2hhcmVkL2xpYi9hbXAtY29udGV4dC5zaGFyZWQtcnVudGltZS50cz9mODI4Il0sIm5hbWVzIjpbIkFtcFN0YXRlQ29udGV4dCIsIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInByb2Nlc3MiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-mode.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/amp-mode.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isInAmpMode\", ({\n    enumerable: true,\n    get: function() {\n        return isInAmpMode;\n    }\n}));\nfunction isInAmpMode(param) {\n    let { ampFirst = false, hybrid = false, hasQuery = false } = param === void 0 ? {} : param;\n    return ampFirst || hybrid && hasQuery;\n} //# sourceMappingURL=amp-mode.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9hbXAtbW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7OytDQUFnQkE7OztlQUFBQTs7O0FBQVQsU0FBU0EsWUFBWUMsS0FBQTtJQUFBLE1BQzFCQyxXQUFXLEtBQUssRUFDaEJDLFNBQVMsS0FBSyxFQUNkQyxXQUFXLEtBQUssRUFDakIsR0FKMkJILFVBQUEsU0FJeEIsQ0FBQyxJQUp1QkE7SUFLMUIsT0FBT0MsWUFBYUMsVUFBVUM7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL3NyYy9zaGFyZWQvbGliL2FtcC1tb2RlLnRzP2FhYzciXSwibmFtZXMiOlsiaXNJbkFtcE1vZGUiLCJwYXJhbSIsImFtcEZpcnN0IiwiaHlicmlkIiwiaGFzUXVlcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-mode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/get-img-props.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getImgProps\", ({\n    enumerable: true,\n    get: function() {\n        return getImgProps;\n    }\n}));\nconst _warnonce = __webpack_require__(/*! ./utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nconst _imageblursvg = __webpack_require__(/*! ./image-blur-svg */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-blur-svg.js\");\nconst _imageconfig = __webpack_require__(/*! ./image-config */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\");\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nconst allImgs = new Map();\nlet perfObserver;\nfunction getInt(x) {\n    if (typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"number\") {\n        return Number.isFinite(x) ? x : NaN;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\nfunction getWidths(param, width, sizes) {\n    let { deviceSizes, allSizes } = param;\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))\n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs(param) {\n    let { config, src, unoptimized, width, quality, sizes, loader } = param;\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths, kind } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>loader({\n                config,\n                src,\n                quality,\n                width: w\n            }) + \" \" + (kind === \"w\" ? w : i + 1) + kind).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getImgProps(param, _state) {\n    let { src, sizes, unoptimized = false, priority = false, loading, className, quality, width, height, fill = false, style, overrideSrc, onLoad, onLoadingComplete, placeholder = \"empty\", blurDataURL, fetchPriority, layout, objectFit, objectPosition, lazyBoundary, lazyRoot, ...rest } = param;\n    const { imgConf, showAltText, blurComplete, defaultLoader } = _state;\n    let config;\n    let c = imgConf || _imageconfig.imageConfigDefault;\n    if (\"allSizes\" in c) {\n        config = c;\n    } else {\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        config = {\n            ...c,\n            allSizes,\n            deviceSizes\n        };\n    }\n    if (typeof defaultLoader === \"undefined\") {\n        throw new Error(\"images.loaderFile detected but the file is missing default export.\\nRead more: https://nextjs.org/docs/messages/invalid-images-config\");\n    }\n    let loader = rest.loader || defaultLoader;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    delete rest.srcSet;\n    // This special value indicates that the user\n    // didn't define a \"loader\" prop or \"loader\" config.\n    const isDefaultLoader = \"__next_img_default\" in loader;\n    if (isDefaultLoader) {\n        if (config.loader === \"custom\") {\n            throw new Error('Image with src \"' + src + '\" is missing \"loader\" prop.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader\");\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        loader = (obj)=>{\n            const { config: _, ...opts } = obj;\n            return customImageLoader(opts);\n        };\n    }\n    if (layout) {\n        if (layout === \"fill\") {\n            fill = true;\n        }\n        const layoutToStyle = {\n            intrinsic: {\n                maxWidth: \"100%\",\n                height: \"auto\"\n            },\n            responsive: {\n                width: \"100%\",\n                height: \"auto\"\n            }\n        };\n        const layoutToSizes = {\n            responsive: \"100vw\",\n            fill: \"100vw\"\n        };\n        const layoutStyle = layoutToStyle[layout];\n        if (layoutStyle) {\n            style = {\n                ...style,\n                ...layoutStyle\n            };\n        }\n        const layoutSizes = layoutToSizes[layout];\n        if (layoutSizes && !sizes) {\n            sizes = layoutSizes;\n        }\n    }\n    let staticSrc = \"\";\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received \" + JSON.stringify(staticImageData));\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received \" + JSON.stringify(staticImageData));\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio);\n            }\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (!src || src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        unoptimized = true;\n    }\n    if (priority) {\n        fetchPriority = \"high\";\n    }\n    const qualityInt = getInt(quality);\n    if (true) {\n        if (config.output === \"export\" && isDefaultLoader && !unoptimized) {\n            throw new Error(\"Image Optimization using the default loader is not compatible with `{ output: 'export' }`.\\n  Possible solutions:\\n    - Remove `{ output: 'export' }` and run \\\"next start\\\" to run server mode including the Image Optimization API.\\n    - Configure `{ images: { unoptimized: true } }` in `next.config.js` to disable the Image Optimization API.\\n  Read more: https://nextjs.org/docs/messages/export-image-api\");\n        }\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error('Image with src \"' + src + '\" has both \"width\" and \"fill\" properties. Only one should be used.');\n                }\n                if (height) {\n                    throw new Error('Image with src \"' + src + '\" has both \"height\" and \"fill\" properties. Only one should be used.');\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.');\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.');\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.');\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error('Image with src \"' + src + '\" is missing required \"width\" property.');\n                } else if (isNaN(widthInt)) {\n                    throw new Error('Image with src \"' + src + '\" has invalid \"width\" property. Expected a numeric value in pixels but received \"' + width + '\".');\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error('Image with src \"' + src + '\" is missing required \"height\" property.');\n                } else if (isNaN(heightInt)) {\n                    throw new Error('Image with src \"' + src + '\" has invalid \"height\" property. Expected a numeric value in pixels but received \"' + height + '\".');\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error('Image with src \"' + src + '\" has invalid \"loading\" property. Provided \"' + loading + '\" should be one of ' + VALID_LOADING_VALUES.map(String).join(\",\") + \".\");\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error('Image with src \"' + src + '\" has both \"priority\" and \"loading=\\'lazy\\'\" properties. Only one should be used.');\n        }\n        if (placeholder !== \"empty\" && placeholder !== \"blur\" && !placeholder.startsWith(\"data:image/\")) {\n            throw new Error('Image with src \"' + src + '\" has invalid \"placeholder\" property \"' + placeholder + '\".');\n        }\n        if (placeholder !== \"empty\") {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is smaller than 40x40. Consider removing the \"placeholder\" property to improve performance.');\n            }\n        }\n        if (placeholder === \"blur\" && !blurDataURL) {\n            const VALID_BLUR_EXT = [\n                \"jpeg\",\n                \"png\",\n                \"webp\",\n                \"avif\"\n            ] // should match next-image-loader\n            ;\n            throw new Error('Image with src \"' + src + '\" has \"placeholder=\\'blur\\'\" property but is missing the \"blurDataURL\" property.\\n        Possible solutions:\\n          - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\\n          - Change the \"src\" property to a static import with one of the supported file types: ' + VALID_BLUR_EXT.join(\",\") + ' (animated images not supported)\\n          - Remove the \"placeholder\" property, effectively no blur effect\\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url');\n        }\n        if (\"ref\" in rest) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using unsupported \"ref\" property. Consider using the \"onLoad\" property instead.');\n        }\n        if (!unoptimized && !isDefaultLoader) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width\");\n            }\n        }\n        if (onLoadingComplete) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using deprecated \"onLoadingComplete\" property. Please use the \"onLoad\" property instead.');\n        }\n        for (const [legacyKey, legacyValue] of Object.entries({\n            layout,\n            objectFit,\n            objectPosition,\n            lazyBoundary,\n            lazyRoot\n        })){\n            if (legacyValue) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has legacy prop \"' + legacyKey + '\". Did you forget to run the codemod?' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13\");\n            }\n        }\n        if (typeof window !== \"undefined\" && !perfObserver && window.PerformanceObserver) {\n            perfObserver = new PerformanceObserver((entryList)=>{\n                for (const entry of entryList.getEntries()){\n                    var _entry_element;\n                    // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n                    const imgSrc = (entry == null ? void 0 : (_entry_element = entry.element) == null ? void 0 : _entry_element.src) || \"\";\n                    const lcpImage = allImgs.get(imgSrc);\n                    if (lcpImage && !lcpImage.priority && lcpImage.placeholder === \"empty\" && !lcpImage.src.startsWith(\"data:\") && !lcpImage.src.startsWith(\"blob:\")) {\n                        // https://web.dev/lcp/#measure-lcp-in-javascript\n                        (0, _warnonce.warnOnce)('Image with src \"' + lcpImage.src + '\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.' + \"\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority\");\n                    }\n                }\n            });\n            try {\n                perfObserver.observe({\n                    type: \"largest-contentful-paint\",\n                    buffered: true\n                });\n            } catch (err) {\n                // Log error but don't crash the app\n                console.error(err);\n            }\n        }\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        objectFit,\n        objectPosition\n    } : {}, showAltText ? {} : {\n        color: \"transparent\"\n    }, style);\n    const backgroundImage = !blurComplete && placeholder !== \"empty\" ? placeholder === \"blur\" ? 'url(\"data:image/svg+xml;charset=utf-8,' + (0, _imageblursvg.getImageBlurSvg)({\n        widthInt,\n        heightInt,\n        blurWidth,\n        blurHeight,\n        blurDataURL: blurDataURL || \"\",\n        objectFit: imgStyle.objectFit\n    }) + '\")' : 'url(\"' + placeholder + '\")' // assume `data:image/`\n     : null;\n    let placeholderStyle = backgroundImage ? {\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundImage\n    } : {};\n    if (true) {\n        if (placeholderStyle.backgroundImage && placeholder === \"blur\" && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            placeholderStyle.backgroundImage = 'url(\"' + blurDataURL + '\")';\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    if (true) {\n        if (typeof window !== \"undefined\") {\n            let fullUrl;\n            try {\n                fullUrl = new URL(imgAttributes.src);\n            } catch (e) {\n                fullUrl = new URL(imgAttributes.src, window.location.href);\n            }\n            allImgs.set(fullUrl.href, {\n                src,\n                priority,\n                placeholder\n            });\n        }\n    }\n    const props = {\n        ...rest,\n        loading: isLazy ? \"lazy\" : loading,\n        fetchPriority,\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        className,\n        style: {\n            ...imgStyle,\n            ...placeholderStyle\n        },\n        sizes: imgAttributes.sizes,\n        srcSet: imgAttributes.srcSet,\n        src: overrideSrc || imgAttributes.src\n    };\n    const meta = {\n        unoptimized,\n        priority,\n        placeholder,\n        fill\n    };\n    return {\n        props,\n        meta\n    };\n} //# sourceMappingURL=get-img-props.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/head.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/head.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    default: function() {\n        return _default;\n    },\n    defaultHead: function() {\n        return defaultHead;\n    }\n});\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _sideeffect = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./side-effect */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/side-effect.js\"));\nconst _ampcontextsharedruntime = __webpack_require__(/*! ./amp-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js\");\nconst _headmanagercontextsharedruntime = __webpack_require__(/*! ./head-manager-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.js\");\nconst _ampmode = __webpack_require__(/*! ./amp-mode */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/amp-mode.js\");\nconst _warnonce = __webpack_require__(/*! ./utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nfunction defaultHead(inAmpMode) {\n    if (inAmpMode === void 0) inAmpMode = false;\n    const head = [\n        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"meta\", {\n            charSet: \"utf-8\"\n        })\n    ];\n    if (!inAmpMode) {\n        head.push(/*#__PURE__*/ (0, _jsxruntime.jsx)(\"meta\", {\n            name: \"viewport\",\n            content: \"width=device-width\"\n        }));\n    }\n    return head;\n}\nfunction onlyReactElement(list, child) {\n    // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n    if (typeof child === \"string\" || typeof child === \"number\") {\n        return list;\n    }\n    // Adds support for React.Fragment\n    if (child.type === _react.default.Fragment) {\n        return list.concat(_react.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild)=>{\n            if (typeof fragmentChild === \"string\" || typeof fragmentChild === \"number\") {\n                return fragmentList;\n            }\n            return fragmentList.concat(fragmentChild);\n        }, []));\n    }\n    return list.concat(child);\n}\nconst METATYPES = [\n    \"name\",\n    \"httpEquiv\",\n    \"charSet\",\n    \"itemProp\"\n];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/ function unique() {\n    const keys = new Set();\n    const tags = new Set();\n    const metaTypes = new Set();\n    const metaCategories = {};\n    return (h)=>{\n        let isUnique = true;\n        let hasKey = false;\n        if (h.key && typeof h.key !== \"number\" && h.key.indexOf(\"$\") > 0) {\n            hasKey = true;\n            const key = h.key.slice(h.key.indexOf(\"$\") + 1);\n            if (keys.has(key)) {\n                isUnique = false;\n            } else {\n                keys.add(key);\n            }\n        }\n        // eslint-disable-next-line default-case\n        switch(h.type){\n            case \"title\":\n            case \"base\":\n                if (tags.has(h.type)) {\n                    isUnique = false;\n                } else {\n                    tags.add(h.type);\n                }\n                break;\n            case \"meta\":\n                for(let i = 0, len = METATYPES.length; i < len; i++){\n                    const metatype = METATYPES[i];\n                    if (!h.props.hasOwnProperty(metatype)) continue;\n                    if (metatype === \"charSet\") {\n                        if (metaTypes.has(metatype)) {\n                            isUnique = false;\n                        } else {\n                            metaTypes.add(metatype);\n                        }\n                    } else {\n                        const category = h.props[metatype];\n                        const categories = metaCategories[metatype] || new Set();\n                        if ((metatype !== \"name\" || !hasKey) && categories.has(category)) {\n                            isUnique = false;\n                        } else {\n                            categories.add(category);\n                            metaCategories[metatype] = categories;\n                        }\n                    }\n                }\n                break;\n        }\n        return isUnique;\n    };\n}\n/**\n *\n * @param headChildrenElements List of children of <Head>\n */ function reduceComponents(headChildrenElements, props) {\n    const { inAmpMode } = props;\n    return headChildrenElements.reduce(onlyReactElement, []).reverse().concat(defaultHead(inAmpMode).reverse()).filter(unique()).reverse().map((c, i)=>{\n        const key = c.key || i;\n        if (false) {}\n        if (true) {\n            // omit JSON-LD structured data snippets from the warning\n            if (c.type === \"script\" && c.props[\"type\"] !== \"application/ld+json\") {\n                const srcMessage = c.props[\"src\"] ? '<script> tag with src=\"' + c.props[\"src\"] + '\"' : \"inline <script>\";\n                (0, _warnonce.warnOnce)(\"Do not add <script> tags using next/head (see \" + srcMessage + \"). Use next/script instead. \\nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component\");\n            } else if (c.type === \"link\" && c.props[\"rel\"] === \"stylesheet\") {\n                (0, _warnonce.warnOnce)('Do not add stylesheets using next/head (see <link rel=\"stylesheet\"> tag with href=\"' + c.props[\"href\"] + '\"). Use Document instead. \\nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component');\n            }\n        }\n        return /*#__PURE__*/ _react.default.cloneElement(c, {\n            key\n        });\n    });\n}\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */ function Head(param) {\n    let { children } = param;\n    const ampState = (0, _react.useContext)(_ampcontextsharedruntime.AmpStateContext);\n    const headManager = (0, _react.useContext)(_headmanagercontextsharedruntime.HeadManagerContext);\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_sideeffect.default, {\n        reduceComponentsToState: reduceComponents,\n        headManager: headManager,\n        inAmpMode: (0, _ampmode.isInAmpMode)(ampState),\n        children: children\n    });\n}\n_c = Head;\nconst _default = Head;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head.js.map\nvar _c;\n$RefreshReg$(_c, \"Head\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9oZWFkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O1FBcU1BQSxTQUFtQjs7O0lBeExIQztpQkFBQUE7Ozs7Ozs7OzJEQVRnQkMsQ0FBQSxDQUFBQyxtQkFBQUEsQ0FBQTs7eUNBRUpBLG1CQUFBQSxDQUFBOztBQU9yQixNQUFBQyxZQUFTSCxtQkFBQUEsQ0FBWUkscUdBQUFBO1NBQUFBLFlBQUFBLFNBQUFBO0lBQzFCLElBQUFBLGNBQWEsUUFBQUEsWUFBQTs7bUJBQU9DLEdBQVEsSUFBQUMsWUFBQUMsR0FBQTs7UUFBVztLQUN2QztRQUNFQyxDQUFBQSxXQUFTO2FBQU9DLElBQUFBLENBQUssa0JBQUFILFlBQUFDLEdBQUE7WUFBV0csTUFBQUE7O1FBQ2xDO0lBQ0E7SUFDRixPQUFBRjtBQUVBO1NBSUVHLGlCQUFBQyxJQUFBLEVBQUFDLEtBQUE7SUFDQSw4RkFBNEQ7UUFDMUQsT0FBT0QsVUFBQUEsWUFBQUEsT0FBQUEsVUFBQUEsVUFBQUE7UUFDVCxPQUFBQTtJQUNBO0lBQ0Esa0NBQXlCRTtRQUN2QkQsTUFBQUUsSUFBT0gsS0FBS0ksT0FDVkMsT0FBQSxDQUFBSCxRQUFBO1FBQ0FJLE9BQUFBLEtBQUFBLE1BQU1DLENBRUpDLE9BQ0VDLE9BQUFBLENBQ0FDLFFBQUFBLENBQUFBLE9BQUFBLENBQUFBLE1BQUFBLEtBQUFBLENBQUFBLFFBQUFBLEVBQUFBLE1BQUFBLGdCQUdTQTtnQkFHUCxPQUFPRCxrQkFBQUEsWUFBQUEsT0FBQUEsa0JBQUFBLFVBQUFBO2dCQUNULE9BQUFBO1lBQ0E7WUFFRixPQUFFQSxhQUFBTCxNQUFBLENBQUFNO1FBR1I7SUFDQTtJQUNGLE9BQUFWLEtBQUFJLE1BQUEsQ0FBQUg7QUFFQTtNQUFtQlUsWUFBQTtJQUFRO0lBQWE7SUFBVztJQUFXO0NBRTlEOzs7OztZQU1RQztJQUNOLE1BQU1DLE9BQU8sSUFBSUM7SUFDakIsTUFBTUMsT0FBQUEsSUFBQUE7SUFDTixNQUFNQyxZQUFBQSxJQUFBQTtJQUVOLE1BQUFBLGlCQUFRQyxDQUFBQTtXQUNOLENBQUlDO1FBQ0osSUFBSUMsV0FBUztRQUViLElBQUlGLFNBQVM7WUFDWEUsRUFBQUEsR0FBQUEsSUFBUyxPQUFBRixFQUFBRyxHQUFBLGlCQUFBSCxFQUFBRyxHQUFBLENBQUFDLE9BQUE7WUFDVEYsU0FBTUM7WUFDTixNQUFJUixNQUFRSyxFQUFDRyxHQUFBQSxDQUFBQSxLQUFNLENBQUFILEVBQUFHLEdBQUEsQ0FBQUMsT0FBQTtnQkFDakJILEtBQUFBLEdBQUFBLENBQUFBLE1BQVc7Z0JBQ2JBLFdBQU87bUJBQ0xOO2dCQUNGQSxLQUFBVSxHQUFBLENBQUFGO1lBQ0Y7UUFFQTtRQUNBLHdDQUFjO2VBQ1pILEVBQUtkLElBQUE7WUFDTCxLQUFLO2lCQUNIO29CQUNFZSxLQUFBQSxHQUFBQSxDQUFBQSxFQUFXZixJQUFBO29CQUNiZSxXQUFPO3VCQUNMTDtvQkFDRkEsS0FBQVMsR0FBQSxDQUFBTCxFQUFBZCxJQUFBO2dCQUNBO2dCQUNGO2lCQUNFO29CQUNFLElBQUFvQixJQUFNQyxHQUFBQSxNQUFXYixVQUFVWSxNQUFFLEVBQUFBLElBQUFFLEtBQUFGLElBQUE7b0JBQzdCLE1BQUtOLFdBQVFTLFNBQUFBLENBQWNILEVBQUNDO29CQUU1QixJQUFJQSxDQUFBQSxFQUFBQSxLQUFBQSxDQUFBQSxjQUFhLENBQVdBLFdBQUE7d0JBQzFCQSxhQUFJVCxXQUFjUzs0QkFDaEJOLFVBQUFBLEdBQVcsQ0FBQU0sV0FBQTs0QkFDYk4sV0FBTzsrQkFDTEg7NEJBQ0ZBLFVBQUFPLEdBQUEsQ0FBQUU7d0JBQ0Y7MkJBQ0U7d0JBQ0EsTUFBTUcsV0FBQUEsRUFBYVgsS0FBQUEsQ0FBQUEsU0FBZVE7d0JBQ2xDLE1BQUtBLGFBQWFSLGNBQVdHLENBQUFBLFNBQVdRLElBQUFBLElBQVdDOzRCQUNqRFYsQ0FBQUEsYUFBVyxXQUFBQyxNQUFBLEtBQUFRLFdBQUFDLEdBQUEsQ0FBQUMsV0FBQTs0QkFDYlgsV0FBTzsrQkFDTFM7NEJBQ0FYLFdBQUFBLEdBQWMsQ0FBQ1E7NEJBQ2pCUixjQUFBLENBQUFRLFNBQUEsR0FBQUc7d0JBQ0Y7b0JBQ0Y7Z0JBQ0E7Z0JBQ0o7UUFFQTtRQUNGLE9BQUFUO0lBQ0Y7QUFFQTs7OztJQVFFLFNBQVExQixpQkFBY3NDLG9CQUFBQSxFQUFBQSxLQUFBQTtJQUN0QixRQUFPQyxTQUFBQSxFQUFBQSxHQUFBQTtXQU9IQSxxQkFBcUJSLE1BQUFBLENBQUFBLGtCQUFBQSxFQUFBQSxFQUFBQSxPQUFBQSxHQUFBQSxNQUFBQSxDQUFBQSxZQUFBQSxXQUFBQSxPQUFBQSxJQUFBQSxNQUFBQSxDQUFBQSxVQUFBQSxPQUFBQSxHQUFBQSxHQUFBQSxDQUFBQSxDQUFBQSxHQUFBQTtRQUNyQixNQUNFUyxNQUFRQyxFQUFBQSxHQUFJQyxJQUFBQTtZQUlaRixLQUdFeEMsRUFBQSxFQWVKO1lBQ0V3QyxJQUFBO1lBQ0EseURBQStDO2dCQUM3Q0csRUFBQWhDLElBQU13QyxLQUFBQSxZQUFlYixFQUFBQSxLQUFNLFFBQ3RCLDRCQUEyQkE7Z0JBRWhDYyxNQUFBQSxhQUFBQSxFQUFBQSxLQUNHLHNDQUFBVCxFQUFBTCxLQUFBLE9BQWdEYSxHQUFBQSxNQUFBQTtnQkFFckQsSUFBT3BELFVBQVVxRCxRQUFLLHFEQUEyQ0QsYUFBQTttQkFDL0RDLElBQUFBLEVBQUFBLElBQUFBLEtBQUFBLFVBQ0dULEVBQUFMLEtBQUE7Z0JBRUwsSUFBQXZDLFVBQUFxRCxRQUFBLDBGQUFBVCxFQUFBTCxLQUFBO1lBQ0Y7UUFDQTtlQUErQlYsV0FBQUEsR0FBQUEsT0FBQUEsT0FBQUEsQ0FBQUEsWUFBQUEsQ0FBQUEsR0FBQUE7WUFBSUE7UUFDckM7SUFDSjtBQUVBOzs7O0lBSWMsU0FBRXlCLEtBQVFDLEtBQVY7SUFDWixNQUFNQyxRQUFBQSxFQUFBQSxHQUFXQztJQUNqQixNQUFNQyxXQUFBQSxDQUFBQSxHQUFjRCxPQUFBQSxVQUFBQSxFQUFBQSx5QkFBV0UsZUFBQUE7SUFDL0IsTUFBQUQsY0FBQSxDQUNFLEdBQUF6QyxPQUFBd0MsVUFBQSxFQUFDRyxpQ0FBTUQsa0JBQUE7V0FDTEUsV0FBQUEsR0FBQUEsQ0FBQUEsR0FBQUEsWUFBeUJDLEdBQUFBLEVBQUFBLFlBQUFBLE9BQUFBLEVBQUFBO1FBQ3pCSix5QkFBYUE7UUFDYnpELGFBQVc4RDttQkFFVlQsQ0FBQUEsR0FBQUEsU0FBQUEsV0FBQUEsRUFBQUE7O0lBR1A7O0tBWmdCQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vc3JjL3NoYXJlZC9saWIvaGVhZC50c3g/Mzg4OSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiZGVmYXVsdEhlYWQiLCJfIiwicmVxdWlyZSIsIl93YXJub25jZSIsImluQW1wTW9kZSIsImNoYXJTZXQiLCJfanN4cnVudGltZSIsImpzeCIsImhlYWQiLCJuYW1lIiwiY29udGVudCIsIm9ubHlSZWFjdEVsZW1lbnQiLCJsaXN0IiwiY2hpbGQiLCJGcmFnbWVudCIsInR5cGUiLCJjb25jYXQiLCJkZWZhdWx0IiwiUmVhY3QiLCJDaGlsZHJlbiIsIl9yZWFjdCIsImZyYWdtZW50TGlzdCIsImZyYWdtZW50Q2hpbGQiLCJNRVRBVFlQRVMiLCJrZXlzIiwidGFncyIsIlNldCIsIm1ldGFUeXBlcyIsIm1ldGFDYXRlZ29yaWVzIiwiaCIsImlzVW5pcXVlIiwiaGFzS2V5Iiwia2V5IiwiaW5kZXhPZiIsImFkZCIsImkiLCJtZXRhdHlwZSIsImxlbiIsImhhc093blByb3BlcnR5IiwiY2F0ZWdvcmllcyIsImhhcyIsImNhdGVnb3J5IiwicHJvcHMiLCJoZWFkQ2hpbGRyZW5FbGVtZW50cyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImMiLCJfX05FWFRfT1BUSU1JWkVfRk9OVFMiLCJzb21lIiwidXJsIiwibmV3UHJvcHMiLCJzdGFydHNXaXRoIiwidW5kZWZpbmVkIiwiY2xvbmVFbGVtZW50Iiwic3JjTWVzc2FnZSIsIndhcm5PbmNlIiwiY2hpbGRyZW4iLCJwYXJhbSIsImFtcFN0YXRlIiwidXNlQ29udGV4dCIsImhlYWRNYW5hZ2VyIiwiSGVhZE1hbmFnZXJDb250ZXh0IiwiRWZmZWN0IiwicmVkdWNlQ29tcG9uZW50c1RvU3RhdGUiLCJyZWR1Y2VDb21wb25lbnRzIiwiaXNJbkFtcE1vZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/head.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-blur-svg.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-blur-svg.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A shared function, used on both client and server, to generate a SVG blur placeholder.\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getImageBlurSvg\", ({\n    enumerable: true,\n    get: function() {\n        return getImageBlurSvg;\n    }\n}));\nfunction getImageBlurSvg(param) {\n    let { widthInt, heightInt, blurWidth, blurHeight, blurDataURL, objectFit } = param;\n    const std = 20;\n    const svgWidth = blurWidth ? blurWidth * 40 : widthInt;\n    const svgHeight = blurHeight ? blurHeight * 40 : heightInt;\n    const viewBox = svgWidth && svgHeight ? \"viewBox='0 0 \" + svgWidth + \" \" + svgHeight + \"'\" : \"\";\n    const preserveAspectRatio = viewBox ? \"none\" : objectFit === \"contain\" ? \"xMidYMid\" : objectFit === \"cover\" ? \"xMidYMid slice\" : \"none\";\n    return \"%3Csvg xmlns='http://www.w3.org/2000/svg' \" + viewBox + \"%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='\" + std + \"'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='\" + std + \"'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='\" + preserveAspectRatio + \"' style='filter: url(%23b);' href='\" + blurDataURL + \"'/%3E%3C/svg%3E\";\n} //# sourceMappingURL=image-blur-svg.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1ibHVyLXN2Zy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Q0FFQzs7OzttREFDZUE7OztlQUFBQTs7O0FBQVQsU0FBU0EsZ0JBQWdCQyxLQWMvQjtJQWQrQixNQUM5QkMsUUFBUSxFQUNSQyxTQUFTLEVBQ1RDLFNBQVMsRUFDVEMsVUFBVSxFQUNWQyxXQUFXLEVBQ1hDLFNBQVMsRUFRVixHQWQrQk47SUFlOUIsTUFBTU8sTUFBTTtJQUNaLE1BQU1DLFdBQVdMLFlBQVlBLFlBQVksS0FBS0Y7SUFDOUMsTUFBTVEsWUFBWUwsYUFBYUEsYUFBYSxLQUFLRjtJQUVqRCxNQUFNUSxVQUNKRixZQUFZQyxZQUFZLGtCQUFnQkQsV0FBUyxNQUFHQyxZQUFVLE1BQUs7SUFDckUsTUFBTUUsc0JBQXNCRCxVQUN4QixTQUNBSixjQUFjLFlBQ2QsYUFDQUEsY0FBYyxVQUNkLG1CQUNBO0lBRUosT0FBTywrQ0FBNkNJLFVBQVEsOEZBQTJGSCxNQUFJLG9RQUFpUUEsTUFBSSxnR0FBNkZJLHNCQUFvQix3Q0FBcUNOLGNBQVk7QUFDcGtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9zcmMvc2hhcmVkL2xpYi9pbWFnZS1ibHVyLXN2Zy50cz8yZjkxIl0sIm5hbWVzIjpbImdldEltYWdlQmx1clN2ZyIsInBhcmFtIiwid2lkdGhJbnQiLCJoZWlnaHRJbnQiLCJibHVyV2lkdGgiLCJibHVySGVpZ2h0IiwiYmx1ckRhdGFVUkwiLCJvYmplY3RGaXQiLCJzdGQiLCJzdmdXaWR0aCIsInN2Z0hlaWdodCIsInZpZXdCb3giLCJwcmVzZXJ2ZUFzcGVjdFJhdGlvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-blur-svg.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"ImageConfigContext\", ({\n    enumerable: true,\n    get: function() {\n        return ImageConfigContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _imageconfig = __webpack_require__(/*! ./image-config */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\");\nconst ImageConfigContext = _react.default.createContext(_imageconfig.imageConfigDefault);\nif (true) {\n    ImageConfigContext.displayName = \"ImageConfigContext\";\n} //# sourceMappingURL=image-config-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1jb25maWctY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7O3NEQUlhQTs7O2VBQUFBOzs7OzRFQUpLO3lDQUVpQjtBQUU1QixNQUFNQSxxQkFDWEMsT0FBQUEsT0FBSyxDQUFDQyxhQUFhLENBQXNCQyxhQUFBQSxrQkFBa0I7QUFFN0QsSUFBSUMsSUFBeUIsRUFBYztJQUN6Q0osbUJBQW1CSyxXQUFXLEdBQUc7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL3NyYy9zaGFyZWQvbGliL2ltYWdlLWNvbmZpZy1jb250ZXh0LnNoYXJlZC1ydW50aW1lLnRzPzJlZGEiXSwibmFtZXMiOlsiSW1hZ2VDb25maWdDb250ZXh0IiwiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwiaW1hZ2VDb25maWdEZWZhdWx0IiwicHJvY2VzcyIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-config.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    VALID_LOADERS: function() {\n        return VALID_LOADERS;\n    },\n    imageConfigDefault: function() {\n        return imageConfigDefault;\n    }\n});\nconst VALID_LOADERS = [\n    \"default\",\n    \"imgix\",\n    \"cloudinary\",\n    \"akamai\",\n    \"custom\"\n];\nconst imageConfigDefault = {\n    deviceSizes: [\n        640,\n        750,\n        828,\n        1080,\n        1200,\n        1920,\n        2048,\n        3840\n    ],\n    imageSizes: [\n        16,\n        32,\n        48,\n        64,\n        96,\n        128,\n        256,\n        384\n    ],\n    path: \"/_next/image\",\n    loader: \"default\",\n    loaderFile: \"\",\n    domains: [],\n    disableStaticImages: false,\n    minimumCacheTTL: 60,\n    formats: [\n        \"image/webp\"\n    ],\n    dangerouslyAllowSVG: false,\n    contentSecurityPolicy: \"script-src 'none'; frame-src 'none'; sandbox;\",\n    contentDispositionType: \"inline\",\n    remotePatterns: [],\n    unoptimized: false\n}; //# sourceMappingURL=image-config.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1jb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQWFBLGVBQWE7ZUFBYkE7O0lBc0dBQyxvQkFBa0I7ZUFBbEJBOzs7QUF0R04sTUFBTUQsZ0JBQWdCO0lBQzNCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQWdHTSxNQUFNQyxxQkFBMEM7SUFDckRDLGFBQWE7UUFBQztRQUFLO1FBQUs7UUFBSztRQUFNO1FBQU07UUFBTTtRQUFNO0tBQUs7SUFDMURDLFlBQVk7UUFBQztRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSztRQUFLO0tBQUk7SUFDL0NDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxZQUFZO0lBQ1pDLFNBQVMsRUFBRTtJQUNYQyxxQkFBcUI7SUFDckJDLGlCQUFpQjtJQUNqQkMsU0FBUztRQUFDO0tBQWE7SUFDdkJDLHFCQUFxQjtJQUNyQkMsdUJBQXdCO0lBQ3hCQyx3QkFBd0I7SUFDeEJDLGdCQUFnQixFQUFFO0lBQ2xCQyxhQUFhO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL3NyYy9zaGFyZWQvbGliL2ltYWdlLWNvbmZpZy50cz8wMTI4Il0sIm5hbWVzIjpbIlZBTElEX0xPQURFUlMiLCJpbWFnZUNvbmZpZ0RlZmF1bHQiLCJkZXZpY2VTaXplcyIsImltYWdlU2l6ZXMiLCJwYXRoIiwibG9hZGVyIiwibG9hZGVyRmlsZSIsImRvbWFpbnMiLCJkaXNhYmxlU3RhdGljSW1hZ2VzIiwibWluaW11bUNhY2hlVFRMIiwiZm9ybWF0cyIsImRhbmdlcm91c2x5QWxsb3dTVkciLCJjb250ZW50U2VjdXJpdHlQb2xpY3kiLCJjb250ZW50RGlzcG9zaXRpb25UeXBlIiwicmVtb3RlUGF0dGVybnMiLCJ1bm9wdGltaXplZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-config.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-external.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-external.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    default: function() {\n        return _default;\n    },\n    getImageProps: function() {\n        return getImageProps;\n    }\n});\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _getimgprops = __webpack_require__(/*! ./get-img-props */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/get-img-props.js\");\nconst _imagecomponent = __webpack_require__(/*! ../../client/image-component */ \"(app-pages-browser)/./node_modules/next/dist/client/image-component.js\");\nconst _imageloader = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js\"));\nfunction getImageProps(imgProps) {\n    const { props } = (0, _getimgprops.getImgProps)(imgProps, {\n        defaultLoader: _imageloader.default,\n        // This is replaced by webpack define plugin\n        imgConf: {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image/\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[],\"remotePatterns\":[]}\n    });\n    // Normally we don't care about undefined props because we pass to JSX,\n    // but this exported function could be used by the end user for anything\n    // so we delete undefined props to clean it up a little.\n    for (const [key, value] of Object.entries(props)){\n        if (value === undefined) {\n            delete props[key];\n        }\n    }\n    return {\n        props\n    };\n}\nconst _default = _imagecomponent.Image; //# sourceMappingURL=image-external.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1leHRlcm5hbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFpQ0FBLFNBQW9CO2VBQXBCQzs7SUFqQmdCQyxlQUFhO2VBQWJBOzs7O3lDQWJZOzRDQUNOO2tGQUdJO0FBU25CLFNBQVNBLGNBQWNDLFFBQW9CO0lBQ2hELE1BQU0sRUFBRUMsS0FBSyxFQUFFLEdBQUdDLENBQUFBLEdBQUFBLGFBQUFBLFdBQVcsRUFBQ0YsVUFBVTtRQUN0Q0csZUFBQUEsYUFBQUEsT0FBYTtRQUNiLDRDQUE0QztRQUM1Q0MsU0FBU0MsMk5BQTZCO0lBQ3hDO0lBQ0EsdUVBQXVFO0lBQ3ZFLHdFQUF3RTtJQUN4RSx3REFBd0Q7SUFDeEQsS0FBSyxNQUFNLENBQUNHLEtBQUtDLE1BQU0sSUFBSUMsT0FBT0MsT0FBTyxDQUFDVixPQUFRO1FBQ2hELElBQUlRLFVBQVVHLFdBQVc7WUFDdkIsT0FBT1gsS0FBSyxDQUFDTyxJQUEwQjtRQUN6QztJQUNGO0lBQ0EsT0FBTztRQUFFUDtJQUFNO0FBQ2pCO01BRUFILFdBQWVlLGdCQUFBQSxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9zcmMvc2hhcmVkL2xpYi9pbWFnZS1leHRlcm5hbC50c3g/MTllOSJdLCJuYW1lcyI6WyJkZWZhdWx0IiwiX2RlZmF1bHQiLCJnZXRJbWFnZVByb3BzIiwiaW1nUHJvcHMiLCJwcm9wcyIsImdldEltZ1Byb3BzIiwiZGVmYXVsdExvYWRlciIsImltZ0NvbmYiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX0lNQUdFX09QVFMiLCJrZXkiLCJ2YWx1ZSIsIk9iamVjdCIsImVudHJpZXMiLCJ1bmRlZmluZWQiLCJJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-external.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-loader.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nfunction defaultLoader(param) {\n    let { config, src, width, quality } = param;\n    if (true) {\n        const missingValues = [];\n        // these should always be provided but make sure they are\n        if (!src) missingValues.push(\"src\");\n        if (!width) missingValues.push(\"width\");\n        if (missingValues.length > 0) {\n            throw new Error(\"Next Image Optimization requires \" + missingValues.join(\", \") + \" to be provided. Make sure you pass them as props to the `next/image` component. Received: \" + JSON.stringify({\n                src,\n                width,\n                quality\n            }));\n        }\n        if (src.startsWith(\"//\")) {\n            throw new Error('Failed to parse src \"' + src + '\" on `next/image`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)');\n        }\n        if (!src.startsWith(\"/\") && (config.domains || config.remotePatterns)) {\n            let parsedSrc;\n            try {\n                parsedSrc = new URL(src);\n            } catch (err) {\n                console.error(err);\n                throw new Error('Failed to parse src \"' + src + '\" on `next/image`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)');\n            }\n            if (true) {\n                // We use dynamic require because this should only error in development\n                const { hasMatch } = __webpack_require__(/*! ./match-remote-pattern */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/match-remote-pattern.js\");\n                if (!hasMatch(config.domains, config.remotePatterns, parsedSrc)) {\n                    throw new Error(\"Invalid src prop (\" + src + ') on `next/image`, hostname \"' + parsedSrc.hostname + '\" is not configured under images in your `next.config.js`\\n' + \"See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host\");\n                }\n            }\n        }\n    }\n    return config.path + \"?url=\" + encodeURIComponent(src) + \"&w=\" + width + \"&q=\" + (quality || 75) + ( false ? 0 : \"\");\n}\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true;\nconst _default = defaultLoader; //# sourceMappingURL=image-loader.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1sb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OzsyQ0F3RUE7OztlQUFBQTs7O0FBdEVBLFNBQVNDLGNBQWNDLEtBS007SUFMTixNQUNyQkMsTUFBTSxFQUNOQyxHQUFHLEVBQ0hDLEtBQUssRUFDTEMsT0FBTyxFQUNvQixHQUxOSjtJQU1yQixJQUFJSyxJQUF5QixFQUFjO1FBQ3pDLE1BQU1DLGdCQUFnQixFQUFFO1FBRXhCLHlEQUF5RDtRQUN6RCxJQUFJLENBQUNKLEtBQUtJLGNBQWNDLElBQUksQ0FBQztRQUM3QixJQUFJLENBQUNKLE9BQU9HLGNBQWNDLElBQUksQ0FBQztRQUUvQixJQUFJRCxjQUFjRSxNQUFNLEdBQUcsR0FBRztZQUM1QixNQUFNLElBQUlDLE1BQ1Isc0NBQW9DSCxjQUFjSSxJQUFJLENBQ3BELFFBQ0EsZ0dBQStGQyxLQUFLQyxTQUFTLENBQzdHO2dCQUFFVjtnQkFBS0M7Z0JBQU9DO1lBQVE7UUFHNUI7UUFFQSxJQUFJRixJQUFJVyxVQUFVLENBQUMsT0FBTztZQUN4QixNQUFNLElBQUlKLE1BQ1IsMEJBQXdCUCxNQUFJO1FBRWhDO1FBRUEsSUFBSSxDQUFDQSxJQUFJVyxVQUFVLENBQUMsUUFBU1osQ0FBQUEsT0FBT2EsT0FBTyxJQUFJYixPQUFPYyxjQUFjLEdBQUc7WUFDckUsSUFBSUM7WUFDSixJQUFJO2dCQUNGQSxZQUFZLElBQUlDLElBQUlmO1lBQ3RCLEVBQUUsT0FBT2dCLEtBQUs7Z0JBQ1pDLFFBQVFDLEtBQUssQ0FBQ0Y7Z0JBQ2QsTUFBTSxJQUFJVCxNQUNSLDBCQUF3QlAsTUFBSTtZQUVoQztZQUVBLElBQ0VHLElBRTZCLEVBQzdCO2dCQUNBLHVFQUF1RTtnQkFDdkUsTUFBTSxFQUFFa0IsUUFBUSxFQUFFLEdBQUdDLG1CQUFBQSxDQUFRO2dCQUM3QixJQUFJLENBQUNELFNBQVN0QixPQUFPYSxPQUFPLEVBQUViLE9BQU9jLGNBQWMsRUFBRUMsWUFBWTtvQkFDL0QsTUFBTSxJQUFJUCxNQUNSLHVCQUFxQlAsTUFBSSxrQ0FBaUNjLFVBQVVTLFFBQVEsR0FBQyxnRUFDMUU7Z0JBRVA7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxPQUFPeEIsT0FBVXlCLElBQUksR0FBQyxVQUFPQyxtQkFBbUJ6QixPQUFLLFFBQUtDLFFBQU0sUUFDOURDLENBQUFBLFdBQVcsTUFFWEMsQ0FBQUEsTUFBOEIsR0FDMUIsQ0FBc0MsR0FDdEM7QUFFUjtBQUVBLCtEQUErRDtBQUMvRCwyREFBMkQ7QUFDM0ROLGNBQWM4QixrQkFBa0IsR0FBRztNQUVuQy9CLFdBQWVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9zcmMvc2hhcmVkL2xpYi9pbWFnZS1sb2FkZXIudHM/NzcxNSJdLCJuYW1lcyI6WyJfZGVmYXVsdCIsImRlZmF1bHRMb2FkZXIiLCJwYXJhbSIsImNvbmZpZyIsInNyYyIsIndpZHRoIiwicXVhbGl0eSIsInByb2Nlc3MiLCJtaXNzaW5nVmFsdWVzIiwicHVzaCIsImxlbmd0aCIsIkVycm9yIiwiam9pbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdGFydHNXaXRoIiwiZG9tYWlucyIsInJlbW90ZVBhdHRlcm5zIiwicGFyc2VkU3JjIiwiVVJMIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiZW52IiwiTkVYVF9SVU5USU1FIiwiaGFzTWF0Y2giLCJyZXF1aXJlIiwiaG9zdG5hbWUiLCJwYXRoIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiTkVYVF9ERVBMT1lNRU5UX0lEIiwiX19uZXh0X2ltZ19kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/image-loader.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/match-remote-pattern.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/match-remote-pattern.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    hasMatch: function() {\n        return hasMatch;\n    },\n    matchRemotePattern: function() {\n        return matchRemotePattern;\n    }\n});\nconst _picomatch = __webpack_require__(/*! next/dist/compiled/picomatch */ \"(app-pages-browser)/./node_modules/next/dist/compiled/picomatch/index.js\");\nfunction matchRemotePattern(pattern, url) {\n    if (pattern.protocol !== undefined) {\n        const actualProto = url.protocol.slice(0, -1);\n        if (pattern.protocol !== actualProto) {\n            return false;\n        }\n    }\n    if (pattern.port !== undefined) {\n        if (pattern.port !== url.port) {\n            return false;\n        }\n    }\n    if (pattern.hostname === undefined) {\n        throw new Error(\"Pattern should define hostname but found\\n\" + JSON.stringify(pattern));\n    } else {\n        if (!(0, _picomatch.makeRe)(pattern.hostname).test(url.hostname)) {\n            return false;\n        }\n    }\n    var _pattern_pathname;\n    if (!(0, _picomatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : \"**\", {\n        dot: true\n    }).test(url.pathname)) {\n        return false;\n    }\n    return true;\n}\nfunction hasMatch(domains, remotePatterns, url) {\n    return domains.some((domain)=>url.hostname === domain) || remotePatterns.some((p)=>matchRemotePattern(p, url));\n} //# sourceMappingURL=match-remote-pattern.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9tYXRjaC1yZW1vdGUtcGF0dGVybi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFpQ2dCQSxVQUFRO2VBQVJBOztJQTlCQUMsb0JBQWtCO2VBQWxCQTs7O3VDQUZPO0FBRWhCLFNBQVNBLG1CQUFtQkMsT0FBc0IsRUFBRUMsR0FBUTtJQUNqRSxJQUFJRCxRQUFRRSxRQUFRLEtBQUtDLFdBQVc7UUFDbEMsTUFBTUMsY0FBY0gsSUFBSUMsUUFBUSxDQUFDRyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBQzNDLElBQUlMLFFBQVFFLFFBQVEsS0FBS0UsYUFBYTtZQUNwQyxPQUFPO1FBQ1Q7SUFDRjtJQUNBLElBQUlKLFFBQVFNLElBQUksS0FBS0gsV0FBVztRQUM5QixJQUFJSCxRQUFRTSxJQUFJLEtBQUtMLElBQUlLLElBQUksRUFBRTtZQUM3QixPQUFPO1FBQ1Q7SUFDRjtJQUVBLElBQUlOLFFBQVFPLFFBQVEsS0FBS0osV0FBVztRQUNsQyxNQUFNLElBQUlLLE1BQ1IsK0NBQTZDQyxLQUFLQyxTQUFTLENBQUNWO0lBRWhFLE9BQU87UUFDTCxJQUFJLENBQUNXLENBQUFBLEdBQUFBLFdBQUFBLE1BQU0sRUFBQ1gsUUFBUU8sUUFBUSxFQUFFSyxJQUFJLENBQUNYLElBQUlNLFFBQVEsR0FBRztZQUNoRCxPQUFPO1FBQ1Q7SUFDRjtRQUVZUDtJQUFaLElBQUksQ0FBQ1csQ0FBQUEsR0FBQUEsV0FBQUEsTUFBTSxFQUFDWCxDQUFBQSxvQkFBQUEsUUFBUWEsUUFBUSxZQUFoQmIsb0JBQW9CLE1BQU07UUFBRWMsS0FBSztJQUFLLEdBQUdGLElBQUksQ0FBQ1gsSUFBSVksUUFBUSxHQUFHO1FBQ3ZFLE9BQU87SUFDVDtJQUVBLE9BQU87QUFDVDtBQUVPLFNBQVNmLFNBQ2RpQixPQUFpQixFQUNqQkMsY0FBK0IsRUFDL0JmLEdBQVE7SUFFUixPQUNFYyxRQUFRRSxJQUFJLENBQUMsQ0FBQ0MsU0FBV2pCLElBQUlNLFFBQVEsS0FBS1csV0FDMUNGLGVBQWVDLElBQUksQ0FBQyxDQUFDRSxJQUFNcEIsbUJBQW1Cb0IsR0FBR2xCO0FBRXJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9zcmMvc2hhcmVkL2xpYi9tYXRjaC1yZW1vdGUtcGF0dGVybi50cz81NDk1Il0sIm5hbWVzIjpbImhhc01hdGNoIiwibWF0Y2hSZW1vdGVQYXR0ZXJuIiwicGF0dGVybiIsInVybCIsInByb3RvY29sIiwidW5kZWZpbmVkIiwiYWN0dWFsUHJvdG8iLCJzbGljZSIsInBvcnQiLCJob3N0bmFtZSIsIkVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsIm1ha2VSZSIsInRlc3QiLCJwYXRobmFtZSIsImRvdCIsImRvbWFpbnMiLCJyZW1vdGVQYXR0ZXJucyIsInNvbWUiLCJkb21haW4iLCJwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/match-remote-pattern.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router-context.shared-runtime.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RouterContext\", ({\n    enumerable: true,\n    get: function() {\n        return RouterContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst RouterContext = _react.default.createContext(null);\nif (true) {\n    RouterContext.displayName = \"RouterContext\";\n} //# sourceMappingURL=router-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7O2lEQUdhQTs7O2VBQUFBOzs7OzRFQUhLO0FBR1gsTUFBTUEsZ0JBQWdCQyxPQUFBQSxPQUFLLENBQUNDLGFBQWEsQ0FBb0I7QUFFcEUsSUFBSUMsSUFBeUIsRUFBYztJQUN6Q0gsY0FBY0ksV0FBVyxHQUFHO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9zcmMvc2hhcmVkL2xpYi9yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS50cz85N2E2Il0sIm5hbWVzIjpbIlJvdXRlckNvbnRleHQiLCJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJwcm9jZXNzIiwiZGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/side-effect.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/side-effect.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$();\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return SideEffect;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nconst isServer = typeof window === \"undefined\";\nconst useClientOnlyLayoutEffect = isServer ? ()=>{} : _react.useLayoutEffect;\nconst useClientOnlyEffect = isServer ? ()=>{} : _react.useEffect;\nfunction SideEffect(props) {\n    _s();\n    const { headManager, reduceComponentsToState } = props;\n    function emitChange() {\n        if (headManager && headManager.mountedInstances) {\n            const headElements = _react.Children.toArray(Array.from(headManager.mountedInstances).filter(Boolean));\n            headManager.updateHead(reduceComponentsToState(headElements, props));\n        }\n    }\n    if (isServer) {\n        var _headManager_mountedInstances;\n        headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.add(props.children);\n        emitChange();\n    }\n    useClientOnlyLayoutEffect(()=>{\n        var _headManager_mountedInstances;\n        headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.add(props.children);\n        return ()=>{\n            var _headManager_mountedInstances;\n            headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.delete(props.children);\n        };\n    });\n    // We need to call `updateHead` method whenever the `SideEffect` is trigger in all\n    // life-cycles: mount, update, unmount. However, if there are multiple `SideEffect`s\n    // being rendered, we only trigger the method from the last one.\n    // This is ensured by keeping the last unflushed `updateHead` in the `_pendingUpdate`\n    // singleton in the layout effect pass, and actually trigger it in the effect pass.\n    useClientOnlyLayoutEffect(()=>{\n        if (headManager) {\n            headManager._pendingUpdate = emitChange;\n        }\n        return ()=>{\n            if (headManager) {\n                headManager._pendingUpdate = emitChange;\n            }\n        };\n    });\n    useClientOnlyEffect(()=>{\n        if (headManager && headManager._pendingUpdate) {\n            headManager._pendingUpdate();\n            headManager._pendingUpdate = null;\n        }\n        return ()=>{\n            if (headManager && headManager._pendingUpdate) {\n                headManager._pendingUpdate();\n                headManager._pendingUpdate = null;\n            }\n        };\n    });\n    return null;\n} //# sourceMappingURL=side-effect.js.map\n_s(SideEffect, \"gHVkikNHNxjVdD11eJBzaqkCiPY=\", false, function() {\n    return [\n        useClientOnlyLayoutEffect,\n        useClientOnlyLayoutEffect,\n        useClientOnlyEffect\n    ];\n});\n_c = SideEffect;\nvar _c;\n$RefreshReg$(_c, \"SideEffect\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9zaWRlLWVmZmVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7MkNBb0JBOzs7ZUFBd0JBOzs7bUNBbkI2QjtBQWVyRCxNQUFNQyxXQUFXLE9BQU9DLFdBQVc7QUFDbkMsTUFBTUMsNEJBQTRCRixXQUFXLEtBQU8sSUFBSUcsT0FBQUEsZUFBZTtBQUN2RSxNQUFNQyxzQkFBc0JKLFdBQVcsS0FBTyxJQUFJSyxPQUFBQSxTQUFTO0FBRTVDLFNBQVNOLFdBQVdPLEtBQXNCOztJQUN2RCxNQUFNLEVBQUVDLFdBQVcsRUFBRUMsdUJBQXVCLEVBQUUsR0FBR0Y7SUFFakQsU0FBU0c7UUFDUCxJQUFJRixlQUFlQSxZQUFZRyxnQkFBZ0IsRUFBRTtZQUMvQyxNQUFNQyxlQUFlQyxPQUFBQSxRQUFRLENBQUNDLE9BQU8sQ0FDbkNDLE1BQU1DLElBQUksQ0FBQ1IsWUFBWUcsZ0JBQWdCLEVBQTBCTSxNQUFNLENBQ3JFQztZQUdKVixZQUFZVyxVQUFVLENBQUNWLHdCQUF3QkcsY0FBY0w7UUFDL0Q7SUFDRjtJQUVBLElBQUlOLFVBQVU7WUFDWk87UUFBQUEsZUFBQUEsT0FBQUEsS0FBQUEsSUFBQUEsQ0FBQUEsZ0NBQUFBLFlBQWFHLGdCQUFnQixxQkFBN0JILDhCQUErQlksR0FBRyxDQUFDYixNQUFNYyxRQUFRO1FBQ2pEWDtJQUNGO0lBRUFQLDBCQUEwQjtZQUN4Qks7UUFBQUEsZUFBQUEsT0FBQUEsS0FBQUEsSUFBQUEsQ0FBQUEsZ0NBQUFBLFlBQWFHLGdCQUFnQixxQkFBN0JILDhCQUErQlksR0FBRyxDQUFDYixNQUFNYyxRQUFRO1FBQ2pELE9BQU87Z0JBQ0xiO1lBQUFBLGVBQUFBLE9BQUFBLEtBQUFBLElBQUFBLENBQUFBLGdDQUFBQSxZQUFhRyxnQkFBZ0IscUJBQTdCSCw4QkFBK0JjLE1BQU0sQ0FBQ2YsTUFBTWMsUUFBUTtRQUN0RDtJQUNGO0lBRUEsa0ZBQWtGO0lBQ2xGLG9GQUFvRjtJQUNwRixnRUFBZ0U7SUFDaEUscUZBQXFGO0lBQ3JGLG1GQUFtRjtJQUNuRmxCLDBCQUEwQjtRQUN4QixJQUFJSyxhQUFhO1lBQ2ZBLFlBQVllLGNBQWMsR0FBR2I7UUFDL0I7UUFDQSxPQUFPO1lBQ0wsSUFBSUYsYUFBYTtnQkFDZkEsWUFBWWUsY0FBYyxHQUFHYjtZQUMvQjtRQUNGO0lBQ0Y7SUFFQUwsb0JBQW9CO1FBQ2xCLElBQUlHLGVBQWVBLFlBQVllLGNBQWMsRUFBRTtZQUM3Q2YsWUFBWWUsY0FBYztZQUMxQmYsWUFBWWUsY0FBYyxHQUFHO1FBQy9CO1FBQ0EsT0FBTztZQUNMLElBQUlmLGVBQWVBLFlBQVllLGNBQWMsRUFBRTtnQkFDN0NmLFlBQVllLGNBQWM7Z0JBQzFCZixZQUFZZSxjQUFjLEdBQUc7WUFDL0I7UUFDRjtJQUNGO0lBRUEsT0FBTztBQUNUO0dBeER3QnZCOztRQW1CdEJHO1FBWUFBO1FBV0FFOzs7S0ExQ3NCTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vc3JjL3NoYXJlZC9saWIvc2lkZS1lZmZlY3QudHN4Pzc1ZGUiXSwibmFtZXMiOlsiU2lkZUVmZmVjdCIsImlzU2VydmVyIiwid2luZG93IiwidXNlQ2xpZW50T25seUxheW91dEVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsInVzZUNsaWVudE9ubHlFZmZlY3QiLCJ1c2VFZmZlY3QiLCJwcm9wcyIsImhlYWRNYW5hZ2VyIiwicmVkdWNlQ29tcG9uZW50c1RvU3RhdGUiLCJlbWl0Q2hhbmdlIiwibW91bnRlZEluc3RhbmNlcyIsImhlYWRFbGVtZW50cyIsIkNoaWxkcmVuIiwidG9BcnJheSIsIkFycmF5IiwiZnJvbSIsImZpbHRlciIsIkJvb2xlYW4iLCJ1cGRhdGVIZWFkIiwiYWRkIiwiY2hpbGRyZW4iLCJkZWxldGUiLCJfcGVuZGluZ1VwZGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/side-effect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var _vidstack_react_player_styles_default_theme_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vidstack/react/player/styles/default/theme.css */ \"(app-pages-browser)/./node_modules/@vidstack/react/player/styles/default/theme.css\");\n/* harmony import */ var _vidstack_react_player_styles_default_layouts_video_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vidstack/react/player/styles/default/layouts/video.css */ \"(app-pages-browser)/./node_modules/@vidstack/react/player/styles/default/layouts/video.css\");\n/* harmony import */ var _vidstack_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @vidstack/react */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/vidstack.js\");\n/* harmony import */ var _vidstack_react_player_layouts_default__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @vidstack/react/player/layouts/default */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-CSU4W5Sm.js\");\n/* harmony import */ var _vidstack_react_player_layouts_default__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @vidstack/react/player/layouts/default */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/player/vidstack-default-icons.js\");\n/* harmony import */ var _components_ui_card__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/card */ \"(app-pages-browser)/./src/components/ui/card.tsx\");\n/* harmony import */ var _components_ui_scroll_area__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ui/scroll-area */ \"(app-pages-browser)/./src/components/ui/scroll-area.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst videos = [\n    {\n        id: 1,\n        url: \"https://minio.tjro.jus.br/dev-cejusc/2024/05/30/Cafe%CC%81%20com%20Inovac%CC%A7a%CC%83o%20-%20Melhore%20sua%20vida%20com%20criatividade%20e%20inovac%CC%A7a%CC%83o.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=2A0EDP0DJ54UBFPHQF0O%2F20240814%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240814T153428Z&X-Amz-Expires=43200&X-Amz-Security-Token=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NLZXkiOiIyQTBFRFAwREo1NFVCRlBIUUYwTyIsImF0X2hhc2giOiJlbTRVaVZJbW5IOXhNbUNlSDlnVWxnIiwiYXVkIjoibWluaW8iLCJhdXRoX3RpbWUiOjE3MjM2NDAyNjAsImF6cCI6Im1pbmlvIiwiZW1haWwiOiJnaW92YW5pZmVybmFuZGVzQHRqcm8uanVzLmJyIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImV4cCI6MTcyMzY1MzI0OCwiZmFtaWx5X25hbWUiOiJGZXJuYW5kZXMgZG9zIFNhbnRvcyBPbGl2ZWlyYSIsImdpdmVuX25hbWUiOiJHaW92YW5pIEZlcm5hbmRlcyBkb3MgU2FudG9zIE9saXZlaXJhIiwiaWF0IjoxNzIzNjQ5NjUwLCJpc3MiOiJodHRwczovL3Nzby50anJvLmp1cy5ici9hdXRoL3JlYWxtcy9QSlJPIiwianRpIjoiNzU5MzEwNzgtMjQyZS00YmI0LWFlYTUtNWFiYzJiMjYwZDkxIiwibmFtZSI6Ikdpb3ZhbmkgRmVybmFuZGVzIGRvcyBTYW50b3MgT2xpdmVpcmEgRmVybmFuZGVzIGRvcyBTYW50b3MgT2xpdmVpcmEiLCJwb2xpY3kiOiJjb25zb2xlRGV2IiwicHJlZmVycmVkX3VzZXJuYW1lIjoiNTAwMTY0Iiwic2Vzc2lvbl9zdGF0ZSI6IjViODIzMTA0LTRmYzItNDJlMy04ODYyLTExMTE3MWZhYWNlMSIsInNpZCI6IjViODIzMTA0LTRmYzItNDJlMy04ODYyLTExMTE3MWZhYWNlMSIsInN1YiI6IjhkZDNkMWZlLTI3NDUtNDNjNC1hYjAzLWFkOWI1ZDc2ODMzNyIsInR5cCI6IklEIn0.xRrimxU06GH8Y9opwACSyb857UfXqRYfTpjxb8k9pEqkyGQ3nSq2wzzeWUGcz3pODocB2DdMg0Q4ADIOU2Ob1g&X-Amz-SignedHeaders=host&versionId=null&X-Amz-Signature=be57589ec40817a983a94e12f6b08077a6420d441f52a0230bbc1b59f06ab7be\",\n        title: \"Caf\\xe9 com Inova\\xe7\\xe3o\",\n        cardTitle: \"Caf\\xe9 com Inova\\xe7\\xe3o\",\n        cardDescription: \"Tribunal Justi\\xe7a do Estado de Rond\\xf4nia\",\n        cardContent: \"Plantei uma roseira O vento no cume bate A rosa no cume cheira, Quando vem a chuva fina Salpicos no cume caem Formigas no cume entram, Abelhas do cume saem Quando cai a chuva grossa A \\xe1gua do cume desce O barro do cume escorre O mato no cume cresce Ent\\xe3o, quando cessa a chuva No cume volta a alegria Pois torna a brilhar de novo O Sol que no cume ardia No alto daquele cume Plantei uma roseira O vento no cume bate A rosa no cume cheira Quando vem a chuva fina Salpicos no cume caem Formigas no cume entram Abelhas do cume saem Quando cai a chuva grossa A \\xe1gua do cume desce O barro do cume escorre O mato no cume cresce Ent\\xe3o, quando cessa a chuva No cume volta a alegria Pois torna a brilhar de novo O Sol que no cume ardia Pois torna a brilhar de novo O Sol que no cume ardia Pois torna a brilhar de novo OSol que no cume ardia\"\n    }\n];\nconst Home = (param)=>{\n    let { searchParams } = param;\n    var _videos_find;\n    _s();\n    const query = (searchParams === null || searchParams === void 0 ? void 0 : searchParams.query) || \"\";\n    const filteredItems = videos.filter((item)=>item.url === query);\n    const [isValidUrl, setIsValidUrl] = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)(()=>{\n        const validateUrl = (url)=>{\n            try {\n                const parsedUrl = new URL(url);\n                return parsedUrl.protocol === \"http:\" || parsedUrl.protocol === \"https:\";\n            } catch (error) {\n                return false;\n            }\n        };\n        if (query) {\n            setIsValidUrl(validateUrl(query));\n        } else {\n            setIsValidUrl(false);\n        }\n    }, [\n        query\n    ]);\n    const mediaPlayerRef = (0,react__WEBPACK_IMPORTED_MODULE_6__.useRef)(null);\n    const jumpToTimestamp = (time)=>{\n        if (mediaPlayerRef.current) {\n            mediaPlayerRef.current.currentTime = time;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-1 items-center justify-center\",\n        children: query === \"\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n                src: \"/tj.png\",\n                alt: \"No results\",\n                width: 800,\n                height: 400,\n                className: \"mt-4\"\n            }, void 0, false, {\n                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 86,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n            lineNumber: 85,\n            columnNumber: 9\n        }, undefined) : !isValidUrl ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: \"Resultado n\\xe3o encontrado\"\n            }, void 0, false, {\n                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 96,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n            lineNumber: 95,\n            columnNumber: 9\n        }, undefined) : query !== \"\" && isValidUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"grid lg:grid-cols-2 w-8/12 gap-4 items-stretch\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_vidstack_react__WEBPACK_IMPORTED_MODULE_7__.MediaPlayer, {\n                        ref: mediaPlayerRef,\n                        className: \"h-full\",\n                        title: \"Caf\\xe9 com Inova\\xe7\\xe3o\",\n                        src: query,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_vidstack_react__WEBPACK_IMPORTED_MODULE_7__.MediaProvider, {}, void 0, false, {\n                                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                lineNumber: 107,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_vidstack_react_player_layouts_default__WEBPACK_IMPORTED_MODULE_8__.DefaultVideoLayout, {\n                                thumbnails: query,\n                                icons: _vidstack_react_player_layouts_default__WEBPACK_IMPORTED_MODULE_9__.defaultLayoutIcons\n                            }, void 0, false, {\n                                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                lineNumber: 108,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 102,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                    lineNumber: 101,\n                    columnNumber: 11\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_4__.Card, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_4__.CardHeader, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_4__.CardTitle, {\n                                        children: \"Caf\\xe9 com Inova\\xe7\\xe3o\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                        lineNumber: 117,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_4__.CardDescription, {\n                                        children: \"Tribunal Justi\\xe7a do Estado de Rond\\xf4nia\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                        lineNumber: 118,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex gap-3\",\n                                        children: [\n                                            \" \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                className: \"bg-gray-100 border p-1\",\n                                                onClick: ()=>jumpToTimestamp(90),\n                                                children: \" 1:30\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                                lineNumber: 121,\n                                                columnNumber: 46\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                className: \"bg-gray-100 border p-1\",\n                                                onClick: ()=>jumpToTimestamp(120),\n                                                children: \" 2:00\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                                lineNumber: 122,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                className: \"bg-gray-100 border p-1\",\n                                                onClick: ()=>jumpToTimestamp(150),\n                                                children: \" 2:30\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                                lineNumber: 123,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                        lineNumber: 121,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                lineNumber: 116,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_scroll_area__WEBPACK_IMPORTED_MODULE_5__.ScrollArea, {\n                                className: \"h-[250px] text-justify\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_4__.CardContent, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"font-bold\",\n                                            children: \"Transcri\\xe7\\xe3o do v\\xeddeo\"\n                                        }, void 0, false, {\n                                            fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 128,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            children: \"Plantei uma roseira O vento no cume bate A rosa no cume cheira, Quando vem a chuva fina Salpicos no cume caem Formigas no cume entram, Abelhas do cume saem Quando cai a chuva grossa A \\xe1gua do cume desce O barro do cume escorre O mato no cume cresce Ent\\xe3o, quando cessa a chuva No cume volta a alegria Pois torna a brilhar de novo O Sol que no cume ardia No alto daquele cume Plantei uma roseira O vento no cume bate A rosa no cume cheira Quando vem a chuva fina Salpicos no cume caem Formigas no cume entram Abelhas do cume saem Quando cai a chuva grossa A \\xe1gua do cume desce O barro do cume escorre O mato no cume cresce Ent\\xe3o, quando cessa a chuva No cume volta a alegria Pois torna a brilhar de novo O Sol que no cume ardia Pois torna a brilhar de novo O Sol que no cume ardia Pois torna a brilhar de novo OSol que no cume ardia\"\n                                        }, void 0, false, {\n                                            fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 129,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                            href: \"/\",\n                                            children: \"00:25\"\n                                        }, void 0, false, {\n                                            fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 129,\n                                            columnNumber: 857\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            children: (_videos_find = videos.find((video)=>video.url === query)) === null || _videos_find === void 0 ? void 0 : _videos_find.cardContent\n                                        }, void 0, false, {\n                                            fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 130,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                    lineNumber: 127,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                                lineNumber: 126,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 115,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n                    lineNumber: 114,\n                    columnNumber: 11\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n            lineNumber: 100,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 83,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Home, \"K86+x4xO3YVfGG/q6U6Fs5uGmeE=\");\n_c = Home;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Home);\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/ui/card.tsx":
/*!************************************!*\
  !*** ./src/components/ui/card.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Card: function() { return /* binding */ Card; },\n/* harmony export */   CardContent: function() { return /* binding */ CardContent; },\n/* harmony export */   CardDescription: function() { return /* binding */ CardDescription; },\n/* harmony export */   CardFooter: function() { return /* binding */ CardFooter; },\n/* harmony export */   CardHeader: function() { return /* binding */ CardHeader; },\n/* harmony export */   CardTitle: function() { return /* binding */ CardTitle; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./src/lib/utils.ts\");\n\n\n\nconst Card = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\" rounded-lg border bg-card text-card-foreground shadow-sm\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 9,\n        columnNumber: 3\n    }, undefined);\n});\n_c1 = Card;\nCard.displayName = \"Card\";\nconst CardHeader = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c2 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex flex-col space-y-1.5 p-6\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 24,\n        columnNumber: 3\n    }, undefined);\n});\n_c3 = CardHeader;\nCardHeader.displayName = \"CardHeader\";\nconst CardTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c4 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"text-2xl font-semibold leading-none tracking-tight\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 36,\n        columnNumber: 3\n    }, undefined);\n});\n_c5 = CardTitle;\nCardTitle.displayName = \"CardTitle\";\nconst CardDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c6 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"text-sm text-muted-foreground\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 51,\n        columnNumber: 3\n    }, undefined);\n});\n_c7 = CardDescription;\nCardDescription.displayName = \"CardDescription\";\nconst CardContent = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c8 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"p-6 pt-0\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 63,\n        columnNumber: 3\n    }, undefined);\n});\n_c9 = CardContent;\nCardContent.displayName = \"CardContent\";\nconst CardFooter = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c10 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex items-center p-6 pt-0\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 71,\n        columnNumber: 3\n    }, undefined);\n});\n_c11 = CardFooter;\nCardFooter.displayName = \"CardFooter\";\n\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Card$React.forwardRef\");\n$RefreshReg$(_c1, \"Card\");\n$RefreshReg$(_c2, \"CardHeader$React.forwardRef\");\n$RefreshReg$(_c3, \"CardHeader\");\n$RefreshReg$(_c4, \"CardTitle$React.forwardRef\");\n$RefreshReg$(_c5, \"CardTitle\");\n$RefreshReg$(_c6, \"CardDescription$React.forwardRef\");\n$RefreshReg$(_c7, \"CardDescription\");\n$RefreshReg$(_c8, \"CardContent$React.forwardRef\");\n$RefreshReg$(_c9, \"CardContent\");\n$RefreshReg$(_c10, \"CardFooter$React.forwardRef\");\n$RefreshReg$(_c11, \"CardFooter\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL3VpL2NhcmQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQThCO0FBRUU7QUFFaEMsTUFBTUUscUJBQU9GLDZDQUFnQixNQUczQixRQUEwQkk7UUFBekIsRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE9BQU87eUJBQ3hCLDhEQUFDQztRQUNDSCxLQUFLQTtRQUNMQyxXQUFXSiw4Q0FBRUEsQ0FDWCw2REFDQUk7UUFFRCxHQUFHQyxLQUFLOzs7Ozs7OztBQUdiSixLQUFLTSxXQUFXLEdBQUc7QUFFbkIsTUFBTUMsMkJBQWFULDZDQUFnQixPQUdqQyxRQUEwQkk7UUFBekIsRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE9BQU87eUJBQ3hCLDhEQUFDQztRQUNDSCxLQUFLQTtRQUNMQyxXQUFXSiw4Q0FBRUEsQ0FBQyxpQ0FBaUNJO1FBQzlDLEdBQUdDLEtBQUs7Ozs7Ozs7O0FBR2JHLFdBQVdELFdBQVcsR0FBRztBQUV6QixNQUFNRSwwQkFBWVYsNkNBQWdCLE9BR2hDLFFBQTBCSTtRQUF6QixFQUFFQyxTQUFTLEVBQUUsR0FBR0MsT0FBTzt5QkFDeEIsOERBQUNLO1FBQ0NQLEtBQUtBO1FBQ0xDLFdBQVdKLDhDQUFFQSxDQUNYLHNEQUNBSTtRQUVELEdBQUdDLEtBQUs7Ozs7Ozs7O0FBR2JJLFVBQVVGLFdBQVcsR0FBRztBQUV4QixNQUFNSSxnQ0FBa0JaLDZDQUFnQixPQUd0QyxRQUEwQkk7UUFBekIsRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE9BQU87eUJBQ3hCLDhEQUFDTztRQUNDVCxLQUFLQTtRQUNMQyxXQUFXSiw4Q0FBRUEsQ0FBQyxpQ0FBaUNJO1FBQzlDLEdBQUdDLEtBQUs7Ozs7Ozs7O0FBR2JNLGdCQUFnQkosV0FBVyxHQUFHO0FBRTlCLE1BQU1NLDRCQUFjZCw2Q0FBZ0IsT0FHbEMsUUFBMEJJO1FBQXpCLEVBQUVDLFNBQVMsRUFBRSxHQUFHQyxPQUFPO3lCQUN4Qiw4REFBQ0M7UUFBSUgsS0FBS0E7UUFBS0MsV0FBV0osOENBQUVBLENBQUMsWUFBWUk7UUFBYSxHQUFHQyxLQUFLOzs7Ozs7OztBQUVoRVEsWUFBWU4sV0FBVyxHQUFHO0FBRTFCLE1BQU1PLDJCQUFhZiw2Q0FBZ0IsUUFHakMsUUFBMEJJO1FBQXpCLEVBQUVDLFNBQVMsRUFBRSxHQUFHQyxPQUFPO3lCQUN4Qiw4REFBQ0M7UUFDQ0gsS0FBS0E7UUFDTEMsV0FBV0osOENBQUVBLENBQUMsOEJBQThCSTtRQUMzQyxHQUFHQyxLQUFLOzs7Ozs7OztBQUdiUyxXQUFXUCxXQUFXLEdBQUc7QUFFdUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvdWkvY2FyZC50c3g/ZTdkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxyXG5cclxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIlxyXG5cclxuY29uc3QgQ2FyZCA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTERpdkVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8ZGl2XHJcbiAgICByZWY9e3JlZn1cclxuICAgIGNsYXNzTmFtZT17Y24oXHJcbiAgICAgIFwiIHJvdW5kZWQtbGcgYm9yZGVyIGJnLWNhcmQgdGV4dC1jYXJkLWZvcmVncm91bmQgc2hhZG93LXNtXCIsXHJcbiAgICAgIGNsYXNzTmFtZVxyXG4gICAgKX1cclxuICAgIHsuLi5wcm9wc31cclxuICAvPlxyXG4pKVxyXG5DYXJkLmRpc3BsYXlOYW1lID0gXCJDYXJkXCJcclxuXHJcbmNvbnN0IENhcmRIZWFkZXIgPSBSZWFjdC5mb3J3YXJkUmVmPFxyXG4gIEhUTUxEaXZFbGVtZW50LFxyXG4gIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PlxyXG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgPGRpdlxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICBjbGFzc05hbWU9e2NuKFwiZmxleCBmbGV4LWNvbCBzcGFjZS15LTEuNSBwLTZcIiwgY2xhc3NOYW1lKX1cclxuICAgIHsuLi5wcm9wc31cclxuICAvPlxyXG4pKVxyXG5DYXJkSGVhZGVyLmRpc3BsYXlOYW1lID0gXCJDYXJkSGVhZGVyXCJcclxuXHJcbmNvbnN0IENhcmRUaXRsZSA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTFBhcmFncmFwaEVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTEhlYWRpbmdFbGVtZW50PlxyXG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgPGgzXHJcbiAgICByZWY9e3JlZn1cclxuICAgIGNsYXNzTmFtZT17Y24oXHJcbiAgICAgIFwidGV4dC0yeGwgZm9udC1zZW1pYm9sZCBsZWFkaW5nLW5vbmUgdHJhY2tpbmctdGlnaHRcIixcclxuICAgICAgY2xhc3NOYW1lXHJcbiAgICApfVxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbikpXHJcbkNhcmRUaXRsZS5kaXNwbGF5TmFtZSA9IFwiQ2FyZFRpdGxlXCJcclxuXHJcbmNvbnN0IENhcmREZXNjcmlwdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTFBhcmFncmFwaEVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTFBhcmFncmFwaEVsZW1lbnQ+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8cFxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICBjbGFzc05hbWU9e2NuKFwidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmRcIiwgY2xhc3NOYW1lKX1cclxuICAgIHsuLi5wcm9wc31cclxuICAvPlxyXG4pKVxyXG5DYXJkRGVzY3JpcHRpb24uZGlzcGxheU5hbWUgPSBcIkNhcmREZXNjcmlwdGlvblwiXHJcblxyXG5jb25zdCBDYXJkQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTERpdkVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8ZGl2IHJlZj17cmVmfSBjbGFzc05hbWU9e2NuKFwicC02IHB0LTBcIiwgY2xhc3NOYW1lKX0gey4uLnByb3BzfSAvPlxyXG4pKVxyXG5DYXJkQ29udGVudC5kaXNwbGF5TmFtZSA9IFwiQ2FyZENvbnRlbnRcIlxyXG5cclxuY29uc3QgQ2FyZEZvb3RlciA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTERpdkVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8ZGl2XHJcbiAgICByZWY9e3JlZn1cclxuICAgIGNsYXNzTmFtZT17Y24oXCJmbGV4IGl0ZW1zLWNlbnRlciBwLTYgcHQtMFwiLCBjbGFzc05hbWUpfVxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbikpXHJcbkNhcmRGb290ZXIuZGlzcGxheU5hbWUgPSBcIkNhcmRGb290ZXJcIlxyXG5cclxuZXhwb3J0IHsgQ2FyZCwgQ2FyZEhlYWRlciwgQ2FyZEZvb3RlciwgQ2FyZFRpdGxlLCBDYXJkRGVzY3JpcHRpb24sIENhcmRDb250ZW50IH1cclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiY24iLCJDYXJkIiwiZm9yd2FyZFJlZiIsInJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwiZGl2IiwiZGlzcGxheU5hbWUiLCJDYXJkSGVhZGVyIiwiQ2FyZFRpdGxlIiwiaDMiLCJDYXJkRGVzY3JpcHRpb24iLCJwIiwiQ2FyZENvbnRlbnQiLCJDYXJkRm9vdGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ui/card.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/ui/scroll-area.tsx":
/*!*******************************************!*\
  !*** ./src/components/ui/scroll-area.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScrollArea: function() { return /* binding */ ScrollArea; },\n/* harmony export */   ScrollBar: function() { return /* binding */ ScrollBar; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_scroll_area__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-scroll-area */ \"(app-pages-browser)/./node_modules/@radix-ui/react-scroll-area/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./src/lib/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ ScrollArea,ScrollBar auto */ \n\n\n\nconst ScrollArea = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, children, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_scroll_area__WEBPACK_IMPORTED_MODULE_3__.Root, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"relative overflow-hidden\", className),\n        ...props,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_scroll_area__WEBPACK_IMPORTED_MODULE_3__.Viewport, {\n                className: \"h-full w-full rounded-[inherit]\",\n                children: children\n            }, void 0, false, {\n                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\scroll-area.tsx\",\n                lineNumber: 17,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ScrollBar, {}, void 0, false, {\n                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\scroll-area.tsx\",\n                lineNumber: 20,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_scroll_area__WEBPACK_IMPORTED_MODULE_3__.Corner, {}, void 0, false, {\n                fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\scroll-area.tsx\",\n                lineNumber: 21,\n                columnNumber: 5\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\scroll-area.tsx\",\n        lineNumber: 12,\n        columnNumber: 3\n    }, undefined);\n});\n_c1 = ScrollArea;\nScrollArea.displayName = _radix_ui_react_scroll_area__WEBPACK_IMPORTED_MODULE_3__.Root.displayName;\nconst ScrollBar = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((param, ref)=>{\n    let { className, orientation = \"vertical\", ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_scroll_area__WEBPACK_IMPORTED_MODULE_3__.ScrollAreaScrollbar, {\n        ref: ref,\n        orientation: orientation,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex touch-none select-none transition-colors\", orientation === \"vertical\" && \"h-full w-2.5 border-l border-l-transparent p-[1px]\", orientation === \"horizontal\" && \"h-2.5 flex-col border-t border-t-transparent p-[1px]\", className),\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_scroll_area__WEBPACK_IMPORTED_MODULE_3__.ScrollAreaThumb, {\n            className: \"relative flex-1 rounded-full bg-border\"\n        }, void 0, false, {\n            fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\scroll-area.tsx\",\n            lineNumber: 43,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"E:\\\\repo\\\\video-transcricao\\\\src\\\\components\\\\ui\\\\scroll-area.tsx\",\n        lineNumber: 30,\n        columnNumber: 3\n    }, undefined);\n});\n_c2 = ScrollBar;\nScrollBar.displayName = _radix_ui_react_scroll_area__WEBPACK_IMPORTED_MODULE_3__.ScrollAreaScrollbar.displayName;\n\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"ScrollArea$React.forwardRef\");\n$RefreshReg$(_c1, \"ScrollArea\");\n$RefreshReg$(_c2, \"ScrollBar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL3VpL3Njcm9sbC1hcmVhLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUU4QjtBQUNvQztBQUVsQztBQUVoQyxNQUFNRywyQkFBYUgsNkNBQWdCLE1BR2pDLFFBQW9DSztRQUFuQyxFQUFFQyxTQUFTLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxPQUFPO3lCQUNsQyw4REFBQ1AsNkRBQXdCO1FBQ3ZCSSxLQUFLQTtRQUNMQyxXQUFXSiw4Q0FBRUEsQ0FBQyw0QkFBNEJJO1FBQ3pDLEdBQUdFLEtBQUs7OzBCQUVULDhEQUFDUCxpRUFBNEI7Z0JBQUNLLFdBQVU7MEJBQ3JDQzs7Ozs7OzBCQUVILDhEQUFDSTs7Ozs7MEJBQ0QsOERBQUNWLCtEQUEwQjs7Ozs7Ozs7Ozs7OztBQUcvQkUsV0FBV1UsV0FBVyxHQUFHWiw2REFBd0IsQ0FBQ1ksV0FBVztBQUU3RCxNQUFNRiwwQkFBWVgsNkNBQWdCLENBR2hDLFFBQW9ESztRQUFuRCxFQUFFQyxTQUFTLEVBQUVRLGNBQWMsVUFBVSxFQUFFLEdBQUdOLE9BQU87eUJBQ2xELDhEQUFDUCw0RUFBdUM7UUFDdENJLEtBQUtBO1FBQ0xTLGFBQWFBO1FBQ2JSLFdBQVdKLDhDQUFFQSxDQUNYLGlEQUNBWSxnQkFBZ0IsY0FDZCxzREFDRkEsZ0JBQWdCLGdCQUNkLHdEQUNGUjtRQUVELEdBQUdFLEtBQUs7a0JBRVQsNEVBQUNQLHdFQUFtQztZQUFDSyxXQUFVOzs7Ozs7Ozs7Ozs7TUFqQjdDSztBQW9CTkEsVUFBVUUsV0FBVyxHQUFHWiw0RUFBdUMsQ0FBQ1ksV0FBVztBQUUzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy91aS9zY3JvbGwtYXJlYS50c3g/MjgxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxyXG5cclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcclxuaW1wb3J0ICogYXMgU2Nyb2xsQXJlYVByaW1pdGl2ZSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXNjcm9sbC1hcmVhXCJcclxuXHJcbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcclxuXHJcbmNvbnN0IFNjcm9sbEFyZWEgPSBSZWFjdC5mb3J3YXJkUmVmPFxyXG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNjcm9sbEFyZWFQcmltaXRpdmUuUm9vdD4sXHJcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBTY3JvbGxBcmVhUHJpbWl0aXZlLlJvb3Q+XHJcbj4oKHsgY2xhc3NOYW1lLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgPFNjcm9sbEFyZWFQcmltaXRpdmUuUm9vdFxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICBjbGFzc05hbWU9e2NuKFwicmVsYXRpdmUgb3ZlcmZsb3ctaGlkZGVuXCIsIGNsYXNzTmFtZSl9XHJcbiAgICB7Li4ucHJvcHN9XHJcbiAgPlxyXG4gICAgPFNjcm9sbEFyZWFQcmltaXRpdmUuVmlld3BvcnQgY2xhc3NOYW1lPVwiaC1mdWxsIHctZnVsbCByb3VuZGVkLVtpbmhlcml0XVwiPlxyXG4gICAgICB7Y2hpbGRyZW59XHJcbiAgICA8L1Njcm9sbEFyZWFQcmltaXRpdmUuVmlld3BvcnQ+XHJcbiAgICA8U2Nyb2xsQmFyIC8+XHJcbiAgICA8U2Nyb2xsQXJlYVByaW1pdGl2ZS5Db3JuZXIgLz5cclxuICA8L1Njcm9sbEFyZWFQcmltaXRpdmUuUm9vdD5cclxuKSlcclxuU2Nyb2xsQXJlYS5kaXNwbGF5TmFtZSA9IFNjcm9sbEFyZWFQcmltaXRpdmUuUm9vdC5kaXNwbGF5TmFtZVxyXG5cclxuY29uc3QgU2Nyb2xsQmFyID0gUmVhY3QuZm9yd2FyZFJlZjxcclxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBTY3JvbGxBcmVhUHJpbWl0aXZlLlNjcm9sbEFyZWFTY3JvbGxiYXI+LFxyXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgU2Nyb2xsQXJlYVByaW1pdGl2ZS5TY3JvbGxBcmVhU2Nyb2xsYmFyPlxyXG4+KCh7IGNsYXNzTmFtZSwgb3JpZW50YXRpb24gPSBcInZlcnRpY2FsXCIsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxyXG4gIDxTY3JvbGxBcmVhUHJpbWl0aXZlLlNjcm9sbEFyZWFTY3JvbGxiYXJcclxuICAgIHJlZj17cmVmfVxyXG4gICAgb3JpZW50YXRpb249e29yaWVudGF0aW9ufVxyXG4gICAgY2xhc3NOYW1lPXtjbihcclxuICAgICAgXCJmbGV4IHRvdWNoLW5vbmUgc2VsZWN0LW5vbmUgdHJhbnNpdGlvbi1jb2xvcnNcIixcclxuICAgICAgb3JpZW50YXRpb24gPT09IFwidmVydGljYWxcIiAmJlxyXG4gICAgICAgIFwiaC1mdWxsIHctMi41IGJvcmRlci1sIGJvcmRlci1sLXRyYW5zcGFyZW50IHAtWzFweF1cIixcclxuICAgICAgb3JpZW50YXRpb24gPT09IFwiaG9yaXpvbnRhbFwiICYmXHJcbiAgICAgICAgXCJoLTIuNSBmbGV4LWNvbCBib3JkZXItdCBib3JkZXItdC10cmFuc3BhcmVudCBwLVsxcHhdXCIsXHJcbiAgICAgIGNsYXNzTmFtZVxyXG4gICAgKX1cclxuICAgIHsuLi5wcm9wc31cclxuICA+XHJcbiAgICA8U2Nyb2xsQXJlYVByaW1pdGl2ZS5TY3JvbGxBcmVhVGh1bWIgY2xhc3NOYW1lPVwicmVsYXRpdmUgZmxleC0xIHJvdW5kZWQtZnVsbCBiZy1ib3JkZXJcIiAvPlxyXG4gIDwvU2Nyb2xsQXJlYVByaW1pdGl2ZS5TY3JvbGxBcmVhU2Nyb2xsYmFyPlxyXG4pKVxyXG5TY3JvbGxCYXIuZGlzcGxheU5hbWUgPSBTY3JvbGxBcmVhUHJpbWl0aXZlLlNjcm9sbEFyZWFTY3JvbGxiYXIuZGlzcGxheU5hbWVcclxuXHJcbmV4cG9ydCB7IFNjcm9sbEFyZWEsIFNjcm9sbEJhciB9XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlNjcm9sbEFyZWFQcmltaXRpdmUiLCJjbiIsIlNjcm9sbEFyZWEiLCJmb3J3YXJkUmVmIiwicmVmIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJwcm9wcyIsIlJvb3QiLCJWaWV3cG9ydCIsIlNjcm9sbEJhciIsIkNvcm5lciIsImRpc3BsYXlOYW1lIiwib3JpZW50YXRpb24iLCJTY3JvbGxBcmVhU2Nyb2xsYmFyIiwiU2Nyb2xsQXJlYVRodW1iIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ui/scroll-area.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: function() { return /* binding */ cn; }\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\nfunction cn() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ0o7QUFFakMsU0FBU0U7SUFBRztRQUFHQyxPQUFILHVCQUF1Qjs7SUFDeEMsT0FBT0YsdURBQU9BLENBQUNELDBDQUFJQSxDQUFDRztBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL3V0aWxzLnRzPzdjMWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHlwZSBDbGFzc1ZhbHVlLCBjbHN4IH0gZnJvbSBcImNsc3hcIlxyXG5pbXBvcnQgeyB0d01lcmdlIH0gZnJvbSBcInRhaWx3aW5kLW1lcmdlXCJcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjbiguLi5pbnB1dHM6IENsYXNzVmFsdWVbXSkge1xyXG4gIHJldHVybiB0d01lcmdlKGNsc3goaW5wdXRzKSlcclxufVxyXG4iXSwibmFtZXMiOlsiY2xzeCIsInR3TWVyZ2UiLCJjbiIsImlucHV0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/utils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/MGNmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@floating-ui/core/dist/floating-ui.core.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrow: function() { return /* binding */ arrow; },\n/* harmony export */   autoPlacement: function() { return /* binding */ autoPlacement; },\n/* harmony export */   computePosition: function() { return /* binding */ computePosition; },\n/* harmony export */   detectOverflow: function() { return /* binding */ detectOverflow; },\n/* harmony export */   flip: function() { return /* binding */ flip; },\n/* harmony export */   hide: function() { return /* binding */ hide; },\n/* harmony export */   inline: function() { return /* binding */ inline; },\n/* harmony export */   limitShift: function() { return /* binding */ limitShift; },\n/* harmony export */   offset: function() { return /* binding */ offset; },\n/* harmony export */   rectToClientRect: function() { return /* reexport safe */ _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect; },\n/* harmony export */   shift: function() { return /* binding */ shift; },\n/* harmony export */   size: function() { return /* binding */ size; }\n/* harmony export */ });\n/* harmony import */ var _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/utils */ \"(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs\");\n\n\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement);\n  const alignmentAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentAxis)(placement);\n  const alignLength = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAxisLength)(alignmentAxis);\n  const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch ((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n  const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentAxis)(placement);\n    const length = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAxisLength)(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) === alignment), ...allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) !== alignment)] : allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) === alignment || (autoAlignment ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAlignmentPlacement)(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentSides)(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);\n      const initialSideAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(initialPlacement);\n      const isBasePlacement = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositePlacement)(initialPlacement)] : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getExpandedPlacements)(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxisPlacements)(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentSides)(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...rects.map(rect => rect.left));\n  const minY = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...rects.map(rect => rect.top));\n  const maxX = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...rects.map(rect => rect.right));\n  const maxY = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(getBoundingRect(nativeClientRects));\n      const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if ((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === 'left';\n          const maxRight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...clientRects.map(rect => rect.right));\n          const minLeft = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);\n  const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement);\n  const isVertical = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement));\n      const mainAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxis)(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement);\n      const mainAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxis)(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);\n      const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement);\n      const isYAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.left, 0);\n        const xMax = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.right, 0);\n        const yMin = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.top, 0);\n        const yMax = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrow: function() { return /* binding */ arrow; },\n/* harmony export */   autoPlacement: function() { return /* binding */ autoPlacement; },\n/* harmony export */   autoUpdate: function() { return /* binding */ autoUpdate; },\n/* harmony export */   computePosition: function() { return /* binding */ computePosition; },\n/* harmony export */   detectOverflow: function() { return /* binding */ detectOverflow; },\n/* harmony export */   flip: function() { return /* binding */ flip; },\n/* harmony export */   getOverflowAncestors: function() { return /* reexport safe */ _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors; },\n/* harmony export */   hide: function() { return /* binding */ hide; },\n/* harmony export */   inline: function() { return /* binding */ inline; },\n/* harmony export */   limitShift: function() { return /* binding */ limitShift; },\n/* harmony export */   offset: function() { return /* binding */ offset; },\n/* harmony export */   platform: function() { return /* binding */ platform; },\n/* harmony export */   shift: function() { return /* binding */ shift; },\n/* harmony export */   size: function() { return /* binding */ size; }\n/* harmony export */ });\n/* harmony import */ var _floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @floating-ui/utils */ \"(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs\");\n/* harmony import */ var _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @floating-ui/core */ \"(app-pages-browser)/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs\");\n/* harmony import */ var _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/utils/dom */ \"(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs\");\n\n\n\n\n\nfunction getCssDimensions(element) {\n  const css = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(width) !== offsetWidth || (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(domElement)) {\n    return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(rect.width) : rect.width) / width;\n  let y = ($ ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);\nfunction getVisualOffsets(element) {\n  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element);\n  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isWebKit)() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(domElement);\n    const offsetWin = offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(offsetParent) ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.rectToClientRect)({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(offsetParent);\n  const topLayer = elements ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTopLayer)(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);\n  const offsets = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);\n  const isOffsetParentAnElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeName)(offsetParent) !== 'body' || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isOverflowElement)(documentElement)) {\n      scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(offsetParent);\n    }\n    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element)).left + (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element);\n  const scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(element);\n  const body = element.ownerDocument.body;\n  const width = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(body).direction === 'rtl') {\n    x += (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element);\n  const html = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isWebKit)();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) ? getScale(element) : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element));\n  } else if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.rectToClientRect)(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(element);\n  if (parentNode === stopNode || !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(parentNode) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(parentNode)) {\n    return false;\n  }\n  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors)(element, [], false).filter(el => (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(el) && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeName)(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).position === 'fixed';\n  let currentNode = elementIsFixed ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(currentNode) && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(currentNode)) {\n    const computedStyle = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(currentNode);\n    const currentNodeIsContaining = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isContainingBlock)(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isOverflowElement)(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTopLayer)(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(rect.top, accRect.top);\n    accRect.right = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.min)(rect.right, accRect.right);\n    accRect.bottom = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.min)(rect.bottom, accRect.bottom);\n    accRect.left = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(offsetParent);\n  const documentElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeName)(offsetParent) !== 'body' || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isOverflowElement)(documentElement)) {\n      scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element);\n  if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTopLayer)(element)) {\n    return win;\n  }\n  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {\n    let svgOffsetParent = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(element);\n    while (svgOffsetParent && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(svgOffsetParent)) {\n      if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTableElement)(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(offsetParent) && isStaticPositioned(offsetParent) && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isContainingBlock)(offsetParent)) {\n    return win;\n  }\n  return offsetParent || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getContainingBlock)(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement: _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement: _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(top);\n    const insetRight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(root.clientWidth - (left + width));\n    const insetBottom = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(root.clientHeight - (top + height));\n    const insetLeft = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(0, (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.min)(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors)(referenceEl) : []), ...(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors)(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.detectOverflow;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.offset;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.autoPlacement;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.shift;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.flip;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.size;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.hide;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.arrow;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.inline;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.limitShift;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return (0,_floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.computePosition)(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getComputedStyle: function() { return /* binding */ getComputedStyle; },\n/* harmony export */   getContainingBlock: function() { return /* binding */ getContainingBlock; },\n/* harmony export */   getDocumentElement: function() { return /* binding */ getDocumentElement; },\n/* harmony export */   getNearestOverflowAncestor: function() { return /* binding */ getNearestOverflowAncestor; },\n/* harmony export */   getNodeName: function() { return /* binding */ getNodeName; },\n/* harmony export */   getNodeScroll: function() { return /* binding */ getNodeScroll; },\n/* harmony export */   getOverflowAncestors: function() { return /* binding */ getOverflowAncestors; },\n/* harmony export */   getParentNode: function() { return /* binding */ getParentNode; },\n/* harmony export */   getWindow: function() { return /* binding */ getWindow; },\n/* harmony export */   isContainingBlock: function() { return /* binding */ isContainingBlock; },\n/* harmony export */   isElement: function() { return /* binding */ isElement; },\n/* harmony export */   isHTMLElement: function() { return /* binding */ isHTMLElement; },\n/* harmony export */   isLastTraversableNode: function() { return /* binding */ isLastTraversableNode; },\n/* harmony export */   isNode: function() { return /* binding */ isNode; },\n/* harmony export */   isOverflowElement: function() { return /* binding */ isOverflowElement; },\n/* harmony export */   isShadowRoot: function() { return /* binding */ isShadowRoot; },\n/* harmony export */   isTableElement: function() { return /* binding */ isTableElement; },\n/* harmony export */   isTopLayer: function() { return /* binding */ isTopLayer; },\n/* harmony export */   isWebKit: function() { return /* binding */ isWebKit; }\n/* harmony export */ });\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alignments: function() { return /* binding */ alignments; },\n/* harmony export */   clamp: function() { return /* binding */ clamp; },\n/* harmony export */   createCoords: function() { return /* binding */ createCoords; },\n/* harmony export */   evaluate: function() { return /* binding */ evaluate; },\n/* harmony export */   expandPaddingObject: function() { return /* binding */ expandPaddingObject; },\n/* harmony export */   floor: function() { return /* binding */ floor; },\n/* harmony export */   getAlignment: function() { return /* binding */ getAlignment; },\n/* harmony export */   getAlignmentAxis: function() { return /* binding */ getAlignmentAxis; },\n/* harmony export */   getAlignmentSides: function() { return /* binding */ getAlignmentSides; },\n/* harmony export */   getAxisLength: function() { return /* binding */ getAxisLength; },\n/* harmony export */   getExpandedPlacements: function() { return /* binding */ getExpandedPlacements; },\n/* harmony export */   getOppositeAlignmentPlacement: function() { return /* binding */ getOppositeAlignmentPlacement; },\n/* harmony export */   getOppositeAxis: function() { return /* binding */ getOppositeAxis; },\n/* harmony export */   getOppositeAxisPlacements: function() { return /* binding */ getOppositeAxisPlacements; },\n/* harmony export */   getOppositePlacement: function() { return /* binding */ getOppositePlacement; },\n/* harmony export */   getPaddingObject: function() { return /* binding */ getPaddingObject; },\n/* harmony export */   getSide: function() { return /* binding */ getSide; },\n/* harmony export */   getSideAxis: function() { return /* binding */ getSideAxis; },\n/* harmony export */   max: function() { return /* binding */ max; },\n/* harmony export */   min: function() { return /* binding */ min; },\n/* harmony export */   placements: function() { return /* binding */ placements; },\n/* harmony export */   rectToClientRect: function() { return /* binding */ rectToClientRect; },\n/* harmony export */   round: function() { return /* binding */ round; },\n/* harmony export */   sides: function() { return /* binding */ sides; }\n/* harmony export */ });\n/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZmxvYXRpbmctdWkvdXRpbHMvZGlzdC9mbG9hdGluZy11aS51dGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZmxvYXRpbmctdWkvdXRpbHMvZGlzdC9mbG9hdGluZy11aS51dGlscy5tanM/NGZmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEN1c3RvbSBwb3NpdGlvbmluZyByZWZlcmVuY2UgZWxlbWVudC5cbiAqIEBzZWUgaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy92aXJ0dWFsLWVsZW1lbnRzXG4gKi9cblxuY29uc3Qgc2lkZXMgPSBbJ3RvcCcsICdyaWdodCcsICdib3R0b20nLCAnbGVmdCddO1xuY29uc3QgYWxpZ25tZW50cyA9IFsnc3RhcnQnLCAnZW5kJ107XG5jb25zdCBwbGFjZW1lbnRzID0gLyojX19QVVJFX18qL3NpZGVzLnJlZHVjZSgoYWNjLCBzaWRlKSA9PiBhY2MuY29uY2F0KHNpZGUsIHNpZGUgKyBcIi1cIiArIGFsaWdubWVudHNbMF0sIHNpZGUgKyBcIi1cIiArIGFsaWdubWVudHNbMV0pLCBbXSk7XG5jb25zdCBtaW4gPSBNYXRoLm1pbjtcbmNvbnN0IG1heCA9IE1hdGgubWF4O1xuY29uc3Qgcm91bmQgPSBNYXRoLnJvdW5kO1xuY29uc3QgZmxvb3IgPSBNYXRoLmZsb29yO1xuY29uc3QgY3JlYXRlQ29vcmRzID0gdiA9PiAoe1xuICB4OiB2LFxuICB5OiB2XG59KTtcbmNvbnN0IG9wcG9zaXRlU2lkZU1hcCA9IHtcbiAgbGVmdDogJ3JpZ2h0JyxcbiAgcmlnaHQ6ICdsZWZ0JyxcbiAgYm90dG9tOiAndG9wJyxcbiAgdG9wOiAnYm90dG9tJ1xufTtcbmNvbnN0IG9wcG9zaXRlQWxpZ25tZW50TWFwID0ge1xuICBzdGFydDogJ2VuZCcsXG4gIGVuZDogJ3N0YXJ0J1xufTtcbmZ1bmN0aW9uIGNsYW1wKHN0YXJ0LCB2YWx1ZSwgZW5kKSB7XG4gIHJldHVybiBtYXgoc3RhcnQsIG1pbih2YWx1ZSwgZW5kKSk7XG59XG5mdW5jdGlvbiBldmFsdWF0ZSh2YWx1ZSwgcGFyYW0pIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyA/IHZhbHVlKHBhcmFtKSA6IHZhbHVlO1xufVxuZnVuY3Rpb24gZ2V0U2lkZShwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xufVxuZnVuY3Rpb24gZ2V0QWxpZ25tZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KCctJylbMV07XG59XG5mdW5jdGlvbiBnZXRPcHBvc2l0ZUF4aXMoYXhpcykge1xuICByZXR1cm4gYXhpcyA9PT0gJ3gnID8gJ3knIDogJ3gnO1xufVxuZnVuY3Rpb24gZ2V0QXhpc0xlbmd0aChheGlzKSB7XG4gIHJldHVybiBheGlzID09PSAneScgPyAnaGVpZ2h0JyA6ICd3aWR0aCc7XG59XG5mdW5jdGlvbiBnZXRTaWRlQXhpcyhwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIFsndG9wJywgJ2JvdHRvbSddLmluY2x1ZGVzKGdldFNpZGUocGxhY2VtZW50KSkgPyAneScgOiAneCc7XG59XG5mdW5jdGlvbiBnZXRBbGlnbm1lbnRBeGlzKHBsYWNlbWVudCkge1xuICByZXR1cm4gZ2V0T3Bwb3NpdGVBeGlzKGdldFNpZGVBeGlzKHBsYWNlbWVudCkpO1xufVxuZnVuY3Rpb24gZ2V0QWxpZ25tZW50U2lkZXMocGxhY2VtZW50LCByZWN0cywgcnRsKSB7XG4gIGlmIChydGwgPT09IHZvaWQgMCkge1xuICAgIHJ0bCA9IGZhbHNlO1xuICB9XG4gIGNvbnN0IGFsaWdubWVudCA9IGdldEFsaWdubWVudChwbGFjZW1lbnQpO1xuICBjb25zdCBhbGlnbm1lbnRBeGlzID0gZ2V0QWxpZ25tZW50QXhpcyhwbGFjZW1lbnQpO1xuICBjb25zdCBsZW5ndGggPSBnZXRBeGlzTGVuZ3RoKGFsaWdubWVudEF4aXMpO1xuICBsZXQgbWFpbkFsaWdubWVudFNpZGUgPSBhbGlnbm1lbnRBeGlzID09PSAneCcgPyBhbGlnbm1lbnQgPT09IChydGwgPyAnZW5kJyA6ICdzdGFydCcpID8gJ3JpZ2h0JyA6ICdsZWZ0JyA6IGFsaWdubWVudCA9PT0gJ3N0YXJ0JyA/ICdib3R0b20nIDogJ3RvcCc7XG4gIGlmIChyZWN0cy5yZWZlcmVuY2VbbGVuZ3RoXSA+IHJlY3RzLmZsb2F0aW5nW2xlbmd0aF0pIHtcbiAgICBtYWluQWxpZ25tZW50U2lkZSA9IGdldE9wcG9zaXRlUGxhY2VtZW50KG1haW5BbGlnbm1lbnRTaWRlKTtcbiAgfVxuICByZXR1cm4gW21haW5BbGlnbm1lbnRTaWRlLCBnZXRPcHBvc2l0ZVBsYWNlbWVudChtYWluQWxpZ25tZW50U2lkZSldO1xufVxuZnVuY3Rpb24gZ2V0RXhwYW5kZWRQbGFjZW1lbnRzKHBsYWNlbWVudCkge1xuICBjb25zdCBvcHBvc2l0ZVBsYWNlbWVudCA9IGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIHJldHVybiBbZ2V0T3Bwb3NpdGVBbGlnbm1lbnRQbGFjZW1lbnQocGxhY2VtZW50KSwgb3Bwb3NpdGVQbGFjZW1lbnQsIGdldE9wcG9zaXRlQWxpZ25tZW50UGxhY2VtZW50KG9wcG9zaXRlUGxhY2VtZW50KV07XG59XG5mdW5jdGlvbiBnZXRPcHBvc2l0ZUFsaWdubWVudFBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5yZXBsYWNlKC9zdGFydHxlbmQvZywgYWxpZ25tZW50ID0+IG9wcG9zaXRlQWxpZ25tZW50TWFwW2FsaWdubWVudF0pO1xufVxuZnVuY3Rpb24gZ2V0U2lkZUxpc3Qoc2lkZSwgaXNTdGFydCwgcnRsKSB7XG4gIGNvbnN0IGxyID0gWydsZWZ0JywgJ3JpZ2h0J107XG4gIGNvbnN0IHJsID0gWydyaWdodCcsICdsZWZ0J107XG4gIGNvbnN0IHRiID0gWyd0b3AnLCAnYm90dG9tJ107XG4gIGNvbnN0IGJ0ID0gWydib3R0b20nLCAndG9wJ107XG4gIHN3aXRjaCAoc2lkZSkge1xuICAgIGNhc2UgJ3RvcCc6XG4gICAgY2FzZSAnYm90dG9tJzpcbiAgICAgIGlmIChydGwpIHJldHVybiBpc1N0YXJ0ID8gcmwgOiBscjtcbiAgICAgIHJldHVybiBpc1N0YXJ0ID8gbHIgOiBybDtcbiAgICBjYXNlICdsZWZ0JzpcbiAgICBjYXNlICdyaWdodCc6XG4gICAgICByZXR1cm4gaXNTdGFydCA/IHRiIDogYnQ7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBbXTtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0T3Bwb3NpdGVBeGlzUGxhY2VtZW50cyhwbGFjZW1lbnQsIGZsaXBBbGlnbm1lbnQsIGRpcmVjdGlvbiwgcnRsKSB7XG4gIGNvbnN0IGFsaWdubWVudCA9IGdldEFsaWdubWVudChwbGFjZW1lbnQpO1xuICBsZXQgbGlzdCA9IGdldFNpZGVMaXN0KGdldFNpZGUocGxhY2VtZW50KSwgZGlyZWN0aW9uID09PSAnc3RhcnQnLCBydGwpO1xuICBpZiAoYWxpZ25tZW50KSB7XG4gICAgbGlzdCA9IGxpc3QubWFwKHNpZGUgPT4gc2lkZSArIFwiLVwiICsgYWxpZ25tZW50KTtcbiAgICBpZiAoZmxpcEFsaWdubWVudCkge1xuICAgICAgbGlzdCA9IGxpc3QuY29uY2F0KGxpc3QubWFwKGdldE9wcG9zaXRlQWxpZ25tZW50UGxhY2VtZW50KSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBsaXN0O1xufVxuZnVuY3Rpb24gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQucmVwbGFjZSgvbGVmdHxyaWdodHxib3R0b218dG9wL2csIHNpZGUgPT4gb3Bwb3NpdGVTaWRlTWFwW3NpZGVdKTtcbn1cbmZ1bmN0aW9uIGV4cGFuZFBhZGRpbmdPYmplY3QocGFkZGluZykge1xuICByZXR1cm4ge1xuICAgIHRvcDogMCxcbiAgICByaWdodDogMCxcbiAgICBib3R0b206IDAsXG4gICAgbGVmdDogMCxcbiAgICAuLi5wYWRkaW5nXG4gIH07XG59XG5mdW5jdGlvbiBnZXRQYWRkaW5nT2JqZWN0KHBhZGRpbmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBwYWRkaW5nICE9PSAnbnVtYmVyJyA/IGV4cGFuZFBhZGRpbmdPYmplY3QocGFkZGluZykgOiB7XG4gICAgdG9wOiBwYWRkaW5nLFxuICAgIHJpZ2h0OiBwYWRkaW5nLFxuICAgIGJvdHRvbTogcGFkZGluZyxcbiAgICBsZWZ0OiBwYWRkaW5nXG4gIH07XG59XG5mdW5jdGlvbiByZWN0VG9DbGllbnRSZWN0KHJlY3QpIHtcbiAgY29uc3Qge1xuICAgIHgsXG4gICAgeSxcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfSA9IHJlY3Q7XG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHRvcDogeSxcbiAgICBsZWZ0OiB4LFxuICAgIHJpZ2h0OiB4ICsgd2lkdGgsXG4gICAgYm90dG9tOiB5ICsgaGVpZ2h0LFxuICAgIHgsXG4gICAgeVxuICB9O1xufVxuXG5leHBvcnQgeyBhbGlnbm1lbnRzLCBjbGFtcCwgY3JlYXRlQ29vcmRzLCBldmFsdWF0ZSwgZXhwYW5kUGFkZGluZ09iamVjdCwgZmxvb3IsIGdldEFsaWdubWVudCwgZ2V0QWxpZ25tZW50QXhpcywgZ2V0QWxpZ25tZW50U2lkZXMsIGdldEF4aXNMZW5ndGgsIGdldEV4cGFuZGVkUGxhY2VtZW50cywgZ2V0T3Bwb3NpdGVBbGlnbm1lbnRQbGFjZW1lbnQsIGdldE9wcG9zaXRlQXhpcywgZ2V0T3Bwb3NpdGVBeGlzUGxhY2VtZW50cywgZ2V0T3Bwb3NpdGVQbGFjZW1lbnQsIGdldFBhZGRpbmdPYmplY3QsIGdldFNpZGUsIGdldFNpZGVBeGlzLCBtYXgsIG1pbiwgcGxhY2VtZW50cywgcmVjdFRvQ2xpZW50UmVjdCwgcm91bmQsIHNpZGVzIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/number/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@radix-ui/number/dist/index.mjs ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clamp: function() { return /* binding */ clamp; }\n/* harmony export */ });\n// packages/core/number/src/number.ts\nfunction clamp(value, [min, max]) {\n  return Math.min(max, Math.max(min, value));\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvbnVtYmVyL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9udW1iZXIvZGlzdC9pbmRleC5tanM/NGFkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9jb3JlL251bWJlci9zcmMvbnVtYmVyLnRzXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZSwgW21pbiwgbWF4XSkge1xuICByZXR1cm4gTWF0aC5taW4obWF4LCBNYXRoLm1heChtaW4sIHZhbHVlKSk7XG59XG5leHBvcnQge1xuICBjbGFtcFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/number/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@radix-ui/primitive/dist/index.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeEventHandlers: function() { return /* binding */ composeEventHandlers; }\n/* harmony export */ });\n// packages/core/primitive/src/primitive.tsx\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLHVFQUF1RSxrQ0FBa0MsSUFBSTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9wcmltaXRpdmUvZGlzdC9pbmRleC5tanM/OGVlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9jb3JlL3ByaW1pdGl2ZS9zcmMvcHJpbWl0aXZlLnRzeFxuZnVuY3Rpb24gY29tcG9zZUV2ZW50SGFuZGxlcnMob3JpZ2luYWxFdmVudEhhbmRsZXIsIG91ckV2ZW50SGFuZGxlciwgeyBjaGVja0ZvckRlZmF1bHRQcmV2ZW50ZWQgPSB0cnVlIH0gPSB7fSkge1xuICByZXR1cm4gZnVuY3Rpb24gaGFuZGxlRXZlbnQoZXZlbnQpIHtcbiAgICBvcmlnaW5hbEV2ZW50SGFuZGxlcj8uKGV2ZW50KTtcbiAgICBpZiAoY2hlY2tGb3JEZWZhdWx0UHJldmVudGVkID09PSBmYWxzZSB8fCAhZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgcmV0dXJuIG91ckV2ZW50SGFuZGxlcj8uKGV2ZW50KTtcbiAgICB9XG4gIH07XG59XG5leHBvcnQge1xuICBjb21wb3NlRXZlbnRIYW5kbGVyc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@radix-ui/react-compose-refs/dist/index.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeRefs: function() { return /* binding */ composeRefs; },\n/* harmony export */   useComposedRefs: function() { return /* binding */ useComposedRefs; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/compose-refs/src/composeRefs.tsx\n\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => refs.forEach((ref) => setRef(ref, node));\n}\nfunction useComposedRefs(...refs) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(composeRefs(...refs), refs);\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsOENBQWlCO0FBQzFCO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LWNvbXBvc2UtcmVmcy9kaXN0L2luZGV4Lm1qcz9hYTZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L2NvbXBvc2UtcmVmcy9zcmMvY29tcG9zZVJlZnMudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIHNldFJlZihyZWYsIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgcmVmID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZWYodmFsdWUpO1xuICB9IGVsc2UgaWYgKHJlZiAhPT0gbnVsbCAmJiByZWYgIT09IHZvaWQgMCkge1xuICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XG4gIH1cbn1cbmZ1bmN0aW9uIGNvbXBvc2VSZWZzKC4uLnJlZnMpIHtcbiAgcmV0dXJuIChub2RlKSA9PiByZWZzLmZvckVhY2goKHJlZikgPT4gc2V0UmVmKHJlZiwgbm9kZSkpO1xufVxuZnVuY3Rpb24gdXNlQ29tcG9zZWRSZWZzKC4uLnJlZnMpIHtcbiAgcmV0dXJuIFJlYWN0LnVzZUNhbGxiYWNrKGNvbXBvc2VSZWZzKC4uLnJlZnMpLCByZWZzKTtcbn1cbmV4cG9ydCB7XG4gIGNvbXBvc2VSZWZzLFxuICB1c2VDb21wb3NlZFJlZnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@radix-ui/react-context/dist/index.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContext: function() { return /* binding */ createContext2; },\n/* harmony export */   createContextScope: function() { return /* binding */ createContextScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/context/src/createContext.tsx\n\n\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n  function Provider(props) {\n    const { children, ...context } = props;\n    const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\n  }\n  function useContext2(consumerName) {\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  Provider.displayName = rootComponentName + \"Provider\";\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    function Provider(props) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\n    }\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    Provider.displayName = rootComponentName + \"Provider\";\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29udGV4dC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDK0I7QUFDUztBQUN4QztBQUNBLGtCQUFrQixnREFBbUI7QUFDckM7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQyxrQkFBa0IsMENBQWE7QUFDL0IsMkJBQTJCLHNEQUFHLHFCQUFxQixpQkFBaUI7QUFDcEU7QUFDQTtBQUNBLG9CQUFvQiw2Q0FBZ0I7QUFDcEM7QUFDQTtBQUNBLHlCQUF5QixhQUFhLDJCQUEyQixrQkFBa0I7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0RBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOEJBQThCO0FBQzVDO0FBQ0Esb0JBQW9CLDBDQUFhO0FBQ2pDLDZCQUE2QixzREFBRyxxQkFBcUIsaUJBQWlCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw2Q0FBZ0I7QUFDdEM7QUFDQTtBQUNBLDJCQUEyQixhQUFhLDJCQUEyQixrQkFBa0I7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnREFBbUI7QUFDaEMsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDBDQUFhO0FBQzFCLGlCQUFpQixXQUFXLFVBQVUsTUFBTSxtQ0FBbUM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJEQUEyRCxxQkFBcUI7QUFDaEY7QUFDQSxrREFBa0QsVUFBVTtBQUM1RCxpQkFBaUI7QUFDakIsT0FBTyxJQUFJO0FBQ1gsYUFBYSwwQ0FBYSxVQUFVLFdBQVcsb0JBQW9CLGdCQUFnQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LWNvbnRleHQvZGlzdC9pbmRleC5tanM/Yzg5MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9jb250ZXh0L3NyYy9jcmVhdGVDb250ZXh0LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIGNyZWF0ZUNvbnRleHQyKHJvb3RDb21wb25lbnROYW1lLCBkZWZhdWx0Q29udGV4dCkge1xuICBjb25zdCBDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChkZWZhdWx0Q29udGV4dCk7XG4gIGZ1bmN0aW9uIFByb3ZpZGVyKHByb3BzKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgLi4uY29udGV4dCB9ID0gcHJvcHM7XG4gICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+IGNvbnRleHQsIE9iamVjdC52YWx1ZXMoY29udGV4dCkpO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWUsIGNoaWxkcmVuIH0pO1xuICB9XG4gIGZ1bmN0aW9uIHVzZUNvbnRleHQyKGNvbnN1bWVyTmFtZSkge1xuICAgIGNvbnN0IGNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0KENvbnRleHQpO1xuICAgIGlmIChjb250ZXh0KSByZXR1cm4gY29udGV4dDtcbiAgICBpZiAoZGVmYXVsdENvbnRleHQgIT09IHZvaWQgMCkgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xuICAgIHRocm93IG5ldyBFcnJvcihgXFxgJHtjb25zdW1lck5hbWV9XFxgIG11c3QgYmUgdXNlZCB3aXRoaW4gXFxgJHtyb290Q29tcG9uZW50TmFtZX1cXGBgKTtcbiAgfVxuICBQcm92aWRlci5kaXNwbGF5TmFtZSA9IHJvb3RDb21wb25lbnROYW1lICsgXCJQcm92aWRlclwiO1xuICByZXR1cm4gW1Byb3ZpZGVyLCB1c2VDb250ZXh0Ml07XG59XG5mdW5jdGlvbiBjcmVhdGVDb250ZXh0U2NvcGUoc2NvcGVOYW1lLCBjcmVhdGVDb250ZXh0U2NvcGVEZXBzID0gW10pIHtcbiAgbGV0IGRlZmF1bHRDb250ZXh0cyA9IFtdO1xuICBmdW5jdGlvbiBjcmVhdGVDb250ZXh0Myhyb290Q29tcG9uZW50TmFtZSwgZGVmYXVsdENvbnRleHQpIHtcbiAgICBjb25zdCBCYXNlQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZGVmYXVsdENvbnRleHQpO1xuICAgIGNvbnN0IGluZGV4ID0gZGVmYXVsdENvbnRleHRzLmxlbmd0aDtcbiAgICBkZWZhdWx0Q29udGV4dHMgPSBbLi4uZGVmYXVsdENvbnRleHRzLCBkZWZhdWx0Q29udGV4dF07XG4gICAgZnVuY3Rpb24gUHJvdmlkZXIocHJvcHMpIHtcbiAgICAgIGNvbnN0IHsgc2NvcGUsIGNoaWxkcmVuLCAuLi5jb250ZXh0IH0gPSBwcm9wcztcbiAgICAgIGNvbnN0IENvbnRleHQgPSBzY29wZT8uW3Njb3BlTmFtZV1baW5kZXhdIHx8IEJhc2VDb250ZXh0O1xuICAgICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+IGNvbnRleHQsIE9iamVjdC52YWx1ZXMoY29udGV4dCkpO1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZSwgY2hpbGRyZW4gfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVzZUNvbnRleHQyKGNvbnN1bWVyTmFtZSwgc2NvcGUpIHtcbiAgICAgIGNvbnN0IENvbnRleHQgPSBzY29wZT8uW3Njb3BlTmFtZV1baW5kZXhdIHx8IEJhc2VDb250ZXh0O1xuICAgICAgY29uc3QgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQ29udGV4dCk7XG4gICAgICBpZiAoY29udGV4dCkgcmV0dXJuIGNvbnRleHQ7XG4gICAgICBpZiAoZGVmYXVsdENvbnRleHQgIT09IHZvaWQgMCkgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBcXGAke2NvbnN1bWVyTmFtZX1cXGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBcXGAke3Jvb3RDb21wb25lbnROYW1lfVxcYGApO1xuICAgIH1cbiAgICBQcm92aWRlci5kaXNwbGF5TmFtZSA9IHJvb3RDb21wb25lbnROYW1lICsgXCJQcm92aWRlclwiO1xuICAgIHJldHVybiBbUHJvdmlkZXIsIHVzZUNvbnRleHQyXTtcbiAgfVxuICBjb25zdCBjcmVhdGVTY29wZSA9ICgpID0+IHtcbiAgICBjb25zdCBzY29wZUNvbnRleHRzID0gZGVmYXVsdENvbnRleHRzLm1hcCgoZGVmYXVsdENvbnRleHQpID0+IHtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVDb250ZXh0KGRlZmF1bHRDb250ZXh0KTtcbiAgICB9KTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdXNlU2NvcGUoc2NvcGUpIHtcbiAgICAgIGNvbnN0IGNvbnRleHRzID0gc2NvcGU/LltzY29wZU5hbWVdIHx8IHNjb3BlQ29udGV4dHM7XG4gICAgICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICAgICAgKCkgPT4gKHsgW2BfX3Njb3BlJHtzY29wZU5hbWV9YF06IHsgLi4uc2NvcGUsIFtzY29wZU5hbWVdOiBjb250ZXh0cyB9IH0pLFxuICAgICAgICBbc2NvcGUsIGNvbnRleHRzXVxuICAgICAgKTtcbiAgICB9O1xuICB9O1xuICBjcmVhdGVTY29wZS5zY29wZU5hbWUgPSBzY29wZU5hbWU7XG4gIHJldHVybiBbY3JlYXRlQ29udGV4dDMsIGNvbXBvc2VDb250ZXh0U2NvcGVzKGNyZWF0ZVNjb3BlLCAuLi5jcmVhdGVDb250ZXh0U2NvcGVEZXBzKV07XG59XG5mdW5jdGlvbiBjb21wb3NlQ29udGV4dFNjb3BlcyguLi5zY29wZXMpIHtcbiAgY29uc3QgYmFzZVNjb3BlID0gc2NvcGVzWzBdO1xuICBpZiAoc2NvcGVzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIGJhc2VTY29wZTtcbiAgY29uc3QgY3JlYXRlU2NvcGUgPSAoKSA9PiB7XG4gICAgY29uc3Qgc2NvcGVIb29rcyA9IHNjb3Blcy5tYXAoKGNyZWF0ZVNjb3BlMikgPT4gKHtcbiAgICAgIHVzZVNjb3BlOiBjcmVhdGVTY29wZTIoKSxcbiAgICAgIHNjb3BlTmFtZTogY3JlYXRlU2NvcGUyLnNjb3BlTmFtZVxuICAgIH0pKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdXNlQ29tcG9zZWRTY29wZXMob3ZlcnJpZGVTY29wZXMpIHtcbiAgICAgIGNvbnN0IG5leHRTY29wZXMgPSBzY29wZUhvb2tzLnJlZHVjZSgobmV4dFNjb3BlczIsIHsgdXNlU2NvcGUsIHNjb3BlTmFtZSB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHNjb3BlUHJvcHMgPSB1c2VTY29wZShvdmVycmlkZVNjb3Blcyk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IHNjb3BlUHJvcHNbYF9fc2NvcGUke3Njb3BlTmFtZX1gXTtcbiAgICAgICAgcmV0dXJuIHsgLi4ubmV4dFNjb3BlczIsIC4uLmN1cnJlbnRTY29wZSB9O1xuICAgICAgfSwge30pO1xuICAgICAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4gKHsgW2BfX3Njb3BlJHtiYXNlU2NvcGUuc2NvcGVOYW1lfWBdOiBuZXh0U2NvcGVzIH0pLCBbbmV4dFNjb3Blc10pO1xuICAgIH07XG4gIH07XG4gIGNyZWF0ZVNjb3BlLnNjb3BlTmFtZSA9IGJhc2VTY29wZS5zY29wZU5hbWU7XG4gIHJldHVybiBjcmVhdGVTY29wZTtcbn1cbmV4cG9ydCB7XG4gIGNyZWF0ZUNvbnRleHQyIGFzIGNyZWF0ZUNvbnRleHQsXG4gIGNyZWF0ZUNvbnRleHRTY29wZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-direction/dist/index.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@radix-ui/react-direction/dist/index.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DirectionProvider: function() { return /* binding */ DirectionProvider; },\n/* harmony export */   Provider: function() { return /* binding */ Provider; },\n/* harmony export */   useDirection: function() { return /* binding */ useDirection; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/direction/src/Direction.tsx\n\n\nvar DirectionContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nvar DirectionProvider = (props) => {\n  const { dir, children } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DirectionContext.Provider, { value: dir, children });\n};\nfunction useDirection(localDir) {\n  const globalDir = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DirectionContext);\n  return localDir || globalDir || \"ltr\";\n}\nvar Provider = DirectionProvider;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtZGlyZWN0aW9uL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDK0I7QUFDUztBQUN4Qyx1QkFBdUIsZ0RBQW1CO0FBQzFDO0FBQ0EsVUFBVSxnQkFBZ0I7QUFDMUIseUJBQXlCLHNEQUFHLDhCQUE4QixzQkFBc0I7QUFDaEY7QUFDQTtBQUNBLG9CQUFvQiw2Q0FBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LWRpcmVjdGlvbi9kaXN0L2luZGV4Lm1qcz9hMGNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L2RpcmVjdGlvbi9zcmMvRGlyZWN0aW9uLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBEaXJlY3Rpb25Db250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCh2b2lkIDApO1xudmFyIERpcmVjdGlvblByb3ZpZGVyID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHsgZGlyLCBjaGlsZHJlbiB9ID0gcHJvcHM7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KERpcmVjdGlvbkNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGRpciwgY2hpbGRyZW4gfSk7XG59O1xuZnVuY3Rpb24gdXNlRGlyZWN0aW9uKGxvY2FsRGlyKSB7XG4gIGNvbnN0IGdsb2JhbERpciA9IFJlYWN0LnVzZUNvbnRleHQoRGlyZWN0aW9uQ29udGV4dCk7XG4gIHJldHVybiBsb2NhbERpciB8fCBnbG9iYWxEaXIgfHwgXCJsdHJcIjtcbn1cbnZhciBQcm92aWRlciA9IERpcmVjdGlvblByb3ZpZGVyO1xuZXhwb3J0IHtcbiAgRGlyZWN0aW9uUHJvdmlkZXIsXG4gIFByb3ZpZGVyLFxuICB1c2VEaXJlY3Rpb25cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-direction/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@radix-ui/react-presence/dist/index.mjs ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Presence: function() { return /* binding */ Presence; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ Presence auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n// packages/react/presence/src/Presence.tsx\n\n\n\n\n// packages/react/presence/src/useStateMachine.tsx\n\nfunction useStateMachine(initialState, machine) {\n    _s();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useReducer((state, event)=>{\n        const nextState = machine[state][event];\n        return nextState !== null && nextState !== void 0 ? nextState : state;\n    }, initialState);\n}\n_s(useStateMachine, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n// packages/react/presence/src/Presence.tsx\nvar Presence = (props)=>{\n    _s1();\n    const { present, children } = props;\n    const presence = usePresence(present);\n    const child = typeof children === \"function\" ? children({\n        present: presence.isPresent\n    }) : react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children);\n    const ref = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs)(presence.ref, getElementRef(child));\n    const forceMount = typeof children === \"function\";\n    return forceMount || presence.isPresent ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {\n        ref\n    }) : null;\n};\n_s1(Presence, \"uNryTcoDvJa4CrInYRt27opyun0=\", false, function() {\n    return [\n        usePresence,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs\n    ];\n});\n_c = Presence;\nPresence.displayName = \"Presence\";\nfunction usePresence(present) {\n    _s2();\n    const [node, setNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const stylesRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n    const prevPresentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(present);\n    const prevAnimationNameRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(\"none\");\n    const initialState = present ? \"mounted\" : \"unmounted\";\n    const [state, send] = useStateMachine(initialState, {\n        mounted: {\n            UNMOUNT: \"unmounted\",\n            ANIMATION_OUT: \"unmountSuspended\"\n        },\n        unmountSuspended: {\n            MOUNT: \"mounted\",\n            ANIMATION_END: \"unmounted\"\n        },\n        unmounted: {\n            MOUNT: \"mounted\"\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        prevAnimationNameRef.current = state === \"mounted\" ? currentAnimationName : \"none\";\n    }, [\n        state\n    ]);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__.useLayoutEffect)(()=>{\n        const styles = stylesRef.current;\n        const wasPresent = prevPresentRef.current;\n        const hasPresentChanged = wasPresent !== present;\n        if (hasPresentChanged) {\n            const prevAnimationName = prevAnimationNameRef.current;\n            const currentAnimationName = getAnimationName(styles);\n            if (present) {\n                send(\"MOUNT\");\n            } else if (currentAnimationName === \"none\" || (styles === null || styles === void 0 ? void 0 : styles.display) === \"none\") {\n                send(\"UNMOUNT\");\n            } else {\n                const isAnimating = prevAnimationName !== currentAnimationName;\n                if (wasPresent && isAnimating) {\n                    send(\"ANIMATION_OUT\");\n                } else {\n                    send(\"UNMOUNT\");\n                }\n            }\n            prevPresentRef.current = present;\n        }\n    }, [\n        present,\n        send\n    ]);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__.useLayoutEffect)(()=>{\n        if (node) {\n            const handleAnimationEnd = (event)=>{\n                const currentAnimationName = getAnimationName(stylesRef.current);\n                const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n                if (event.target === node && isCurrentAnimation) {\n                    react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync(()=>send(\"ANIMATION_END\"));\n                }\n            };\n            const handleAnimationStart = (event)=>{\n                if (event.target === node) {\n                    prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n                }\n            };\n            node.addEventListener(\"animationstart\", handleAnimationStart);\n            node.addEventListener(\"animationcancel\", handleAnimationEnd);\n            node.addEventListener(\"animationend\", handleAnimationEnd);\n            return ()=>{\n                node.removeEventListener(\"animationstart\", handleAnimationStart);\n                node.removeEventListener(\"animationcancel\", handleAnimationEnd);\n                node.removeEventListener(\"animationend\", handleAnimationEnd);\n            };\n        } else {\n            send(\"ANIMATION_END\");\n        }\n    }, [\n        node,\n        send\n    ]);\n    return {\n        isPresent: [\n            \"mounted\",\n            \"unmountSuspended\"\n        ].includes(state),\n        ref: react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node2)=>{\n            if (node2) stylesRef.current = getComputedStyle(node2);\n            setNode(node2);\n        }, [])\n    };\n}\n_s2(usePresence, \"ncCWxmFAyU87e4PnaTkbrqgR834=\", false, function() {\n    return [\n        useStateMachine\n    ];\n});\nfunction getAnimationName(styles) {\n    return (styles === null || styles === void 0 ? void 0 : styles.animationName) || \"none\";\n}\nfunction getElementRef(element) {\n    var _Object_getOwnPropertyDescriptor, _Object_getOwnPropertyDescriptor1;\n    let getter = (_Object_getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor(element.props, \"ref\")) === null || _Object_getOwnPropertyDescriptor === void 0 ? void 0 : _Object_getOwnPropertyDescriptor.get;\n    let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n    if (mayWarn) {\n        return element.ref;\n    }\n    getter = (_Object_getOwnPropertyDescriptor1 = Object.getOwnPropertyDescriptor(element, \"ref\")) === null || _Object_getOwnPropertyDescriptor1 === void 0 ? void 0 : _Object_getOwnPropertyDescriptor1.get;\n    mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n    if (mayWarn) {\n        return element.props.ref;\n    }\n    return element.props.ref || element.ref;\n}\n //# sourceMappingURL=index.mjs.map\nvar _c;\n$RefreshReg$(_c, \"Presence\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-scroll-area/dist/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@radix-ui/react-scroll-area/dist/index.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Corner: function() { return /* binding */ Corner; },\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   ScrollArea: function() { return /* binding */ ScrollArea; },\n/* harmony export */   ScrollAreaCorner: function() { return /* binding */ ScrollAreaCorner; },\n/* harmony export */   ScrollAreaScrollbar: function() { return /* binding */ ScrollAreaScrollbar; },\n/* harmony export */   ScrollAreaThumb: function() { return /* binding */ ScrollAreaThumb; },\n/* harmony export */   ScrollAreaViewport: function() { return /* binding */ ScrollAreaViewport; },\n/* harmony export */   Scrollbar: function() { return /* binding */ Scrollbar; },\n/* harmony export */   Thumb: function() { return /* binding */ Thumb; },\n/* harmony export */   Viewport: function() { return /* binding */ Viewport; },\n/* harmony export */   createScrollAreaScope: function() { return /* binding */ createScrollAreaScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-scroll-area/node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-presence */ \"(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_direction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-direction */ \"(app-pages-browser)/./node_modules/@radix-ui/react-direction/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* harmony import */ var _radix_ui_number__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @radix-ui/number */ \"(app-pages-browser)/./node_modules/@radix-ui/number/dist/index.mjs\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Corner,Root,ScrollArea,ScrollAreaCorner,ScrollAreaScrollbar,ScrollAreaThumb,ScrollAreaViewport,Scrollbar,Thumb,Viewport,createScrollAreaScope auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$(), _s13 = $RefreshSig$(), _s14 = $RefreshSig$(), _s15 = $RefreshSig$(), _s16 = $RefreshSig$();\n// packages/react/scroll-area/src/ScrollArea.tsx\n\n\n\n\n\n\n\n\n\n\n// packages/react/scroll-area/src/useStateMachine.ts\n\nfunction useStateMachine(initialState, machine) {\n    _s();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useReducer((state, event)=>{\n        const nextState = machine[state][event];\n        return nextState !== null && nextState !== void 0 ? nextState : state;\n    }, initialState);\n}\n_s(useStateMachine, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n// packages/react/scroll-area/src/ScrollArea.tsx\n\nvar SCROLL_AREA_NAME = \"ScrollArea\";\nvar [createScrollAreaContext, createScrollAreaScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)(SCROLL_AREA_NAME);\nvar [ScrollAreaProvider, useScrollAreaContext] = createScrollAreaContext(SCROLL_AREA_NAME);\nvar ScrollArea = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s1((props, forwardedRef)=>{\n    _s1();\n    const { __scopeScrollArea, type = \"hover\", dir, scrollHideDelay = 600, ...scrollAreaProps } = props;\n    const [scrollArea, setScrollArea] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const [viewport, setViewport] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const [content, setContent] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const [scrollbarX, setScrollbarX] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const [scrollbarY, setScrollbarY] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const [cornerWidth, setCornerWidth] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const [cornerHeight, setCornerHeight] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, (node)=>setScrollArea(node));\n    const direction = (0,_radix_ui_react_direction__WEBPACK_IMPORTED_MODULE_4__.useDirection)(dir);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaProvider, {\n        scope: __scopeScrollArea,\n        type,\n        dir: direction,\n        scrollHideDelay,\n        scrollArea,\n        viewport,\n        onViewportChange: setViewport,\n        content,\n        onContentChange: setContent,\n        scrollbarX,\n        onScrollbarXChange: setScrollbarX,\n        scrollbarXEnabled,\n        onScrollbarXEnabledChange: setScrollbarXEnabled,\n        scrollbarY,\n        onScrollbarYChange: setScrollbarY,\n        scrollbarYEnabled,\n        onScrollbarYEnabledChange: setScrollbarYEnabled,\n        onCornerWidthChange: setCornerWidth,\n        onCornerHeightChange: setCornerHeight,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_5__.Primitive.div, {\n            dir: direction,\n            ...scrollAreaProps,\n            ref: composedRefs,\n            style: {\n                position: \"relative\",\n                // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n                [\"--radix-scroll-area-corner-width\"]: cornerWidth + \"px\",\n                [\"--radix-scroll-area-corner-height\"]: cornerHeight + \"px\",\n                ...props.style\n            }\n        })\n    });\n}, \"05Ruyd+KVjVqRyLvo9TqB+FhiPE=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs,\n        _radix_ui_react_direction__WEBPACK_IMPORTED_MODULE_4__.useDirection\n    ];\n})), \"05Ruyd+KVjVqRyLvo9TqB+FhiPE=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs,\n        _radix_ui_react_direction__WEBPACK_IMPORTED_MODULE_4__.useDirection\n    ];\n});\n_c1 = ScrollArea;\nScrollArea.displayName = SCROLL_AREA_NAME;\nvar VIEWPORT_NAME = \"ScrollAreaViewport\";\nvar ScrollAreaViewport = /*#__PURE__*/ _s2(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c2 = _s2((props, forwardedRef)=>{\n    _s2();\n    const { __scopeScrollArea, children, nonce, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, ref, context.onViewportChange);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: \"[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}\"\n                },\n                nonce\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_5__.Primitive.div, {\n                \"data-radix-scroll-area-viewport\": \"\",\n                ...viewportProps,\n                ref: composedRefs,\n                style: {\n                    /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */ overflowX: context.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n                    overflowY: context.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n                    ...props.style\n                },\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                    ref: context.onContentChange,\n                    style: {\n                        minWidth: \"100%\",\n                        display: \"table\"\n                    },\n                    children\n                })\n            })\n        ]\n    });\n}, \"QJDvjtN21Lm1MiN/J0fr6IVZH/U=\", false, function() {\n    return [\n        useScrollAreaContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n})), \"QJDvjtN21Lm1MiN/J0fr6IVZH/U=\", false, function() {\n    return [\n        useScrollAreaContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n});\n_c3 = ScrollAreaViewport;\nScrollAreaViewport.displayName = VIEWPORT_NAME;\nvar SCROLLBAR_NAME = \"ScrollAreaScrollbar\";\nvar ScrollAreaScrollbar = /*#__PURE__*/ _s3(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c4 = _s3((props, forwardedRef)=>{\n    _s3();\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === \"horizontal\";\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n        return ()=>{\n            isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n        };\n    }, [\n        isHorizontal,\n        onScrollbarXEnabledChange,\n        onScrollbarYEnabledChange\n    ]);\n    return context.type === \"hover\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarHover, {\n        ...scrollbarProps,\n        ref: forwardedRef,\n        forceMount\n    }) : context.type === \"scroll\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarScroll, {\n        ...scrollbarProps,\n        ref: forwardedRef,\n        forceMount\n    }) : context.type === \"auto\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarAuto, {\n        ...scrollbarProps,\n        ref: forwardedRef,\n        forceMount\n    }) : context.type === \"always\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarVisible, {\n        ...scrollbarProps,\n        ref: forwardedRef\n    }) : null;\n}, \"ElaxBlXBgCRSqup4Y+nPaKERxHs=\", false, function() {\n    return [\n        useScrollAreaContext\n    ];\n})), \"ElaxBlXBgCRSqup4Y+nPaKERxHs=\", false, function() {\n    return [\n        useScrollAreaContext\n    ];\n});\n_c5 = ScrollAreaScrollbar;\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\nvar ScrollAreaScrollbarHover = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s4((props, forwardedRef)=>{\n    _s4();\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const [visible, setVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const scrollArea = context.scrollArea;\n        let hideTimer = 0;\n        if (scrollArea) {\n            const handlePointerEnter = ()=>{\n                window.clearTimeout(hideTimer);\n                setVisible(true);\n            };\n            const handlePointerLeave = ()=>{\n                hideTimer = window.setTimeout(()=>setVisible(false), context.scrollHideDelay);\n            };\n            scrollArea.addEventListener(\"pointerenter\", handlePointerEnter);\n            scrollArea.addEventListener(\"pointerleave\", handlePointerLeave);\n            return ()=>{\n                window.clearTimeout(hideTimer);\n                scrollArea.removeEventListener(\"pointerenter\", handlePointerEnter);\n                scrollArea.removeEventListener(\"pointerleave\", handlePointerLeave);\n            };\n        }\n    }, [\n        context.scrollArea,\n        context.scrollHideDelay\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_6__.Presence, {\n        present: forceMount || visible,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarAuto, {\n            \"data-state\": visible ? \"visible\" : \"hidden\",\n            ...scrollbarProps,\n            ref: forwardedRef\n        })\n    });\n}, \"gfF2MbracCyGmZmEc/gD3TfGPf8=\", false, function() {\n    return [\n        useScrollAreaContext\n    ];\n}));\n_c6 = ScrollAreaScrollbarHover;\nvar ScrollAreaScrollbarScroll = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s5((props, forwardedRef)=>{\n    _s5();\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const isHorizontal = props.orientation === \"horizontal\";\n    const debounceScrollEnd = useDebounceCallback(()=>send(\"SCROLL_END\"), 100);\n    const [state, send] = useStateMachine(\"hidden\", {\n        hidden: {\n            SCROLL: \"scrolling\"\n        },\n        scrolling: {\n            SCROLL_END: \"idle\",\n            POINTER_ENTER: \"interacting\"\n        },\n        interacting: {\n            SCROLL: \"interacting\",\n            POINTER_LEAVE: \"idle\"\n        },\n        idle: {\n            HIDE: \"hidden\",\n            SCROLL: \"scrolling\",\n            POINTER_ENTER: \"interacting\"\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (state === \"idle\") {\n            const hideTimer = window.setTimeout(()=>send(\"HIDE\"), context.scrollHideDelay);\n            return ()=>window.clearTimeout(hideTimer);\n        }\n    }, [\n        state,\n        context.scrollHideDelay,\n        send\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const viewport = context.viewport;\n        const scrollDirection = isHorizontal ? \"scrollLeft\" : \"scrollTop\";\n        if (viewport) {\n            let prevScrollPos = viewport[scrollDirection];\n            const handleScroll = ()=>{\n                const scrollPos = viewport[scrollDirection];\n                const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n                if (hasScrollInDirectionChanged) {\n                    send(\"SCROLL\");\n                    debounceScrollEnd();\n                }\n                prevScrollPos = scrollPos;\n            };\n            viewport.addEventListener(\"scroll\", handleScroll);\n            return ()=>viewport.removeEventListener(\"scroll\", handleScroll);\n        }\n    }, [\n        context.viewport,\n        isHorizontal,\n        send,\n        debounceScrollEnd\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_6__.Presence, {\n        present: forceMount || state !== \"hidden\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarVisible, {\n            \"data-state\": state === \"hidden\" ? \"hidden\" : \"visible\",\n            ...scrollbarProps,\n            ref: forwardedRef,\n            onPointerEnter: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onPointerEnter, ()=>send(\"POINTER_ENTER\")),\n            onPointerLeave: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onPointerLeave, ()=>send(\"POINTER_LEAVE\"))\n        })\n    });\n}, \"yVEA36XrGNc1A200CnLBdTLOtN4=\", false, function() {\n    return [\n        useScrollAreaContext,\n        useDebounceCallback,\n        useStateMachine\n    ];\n}));\n_c7 = ScrollAreaScrollbarScroll;\nvar ScrollAreaScrollbarAuto = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s6((props, forwardedRef)=>{\n    _s6();\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { forceMount, ...scrollbarProps } = props;\n    const [visible, setVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const isHorizontal = props.orientation === \"horizontal\";\n    const handleResize = useDebounceCallback(()=>{\n        if (context.viewport) {\n            const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n            const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n            setVisible(isHorizontal ? isOverflowX : isOverflowY);\n        }\n    }, 10);\n    useResizeObserver(context.viewport, handleResize);\n    useResizeObserver(context.content, handleResize);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_6__.Presence, {\n        present: forceMount || visible,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarVisible, {\n            \"data-state\": visible ? \"visible\" : \"hidden\",\n            ...scrollbarProps,\n            ref: forwardedRef\n        })\n    });\n}, \"+UkQTpAB2k/p/r2Qgr6Cj1xxgfE=\", false, function() {\n    return [\n        useScrollAreaContext,\n        useDebounceCallback,\n        useResizeObserver,\n        useResizeObserver\n    ];\n}));\n_c8 = ScrollAreaScrollbarAuto;\nvar ScrollAreaScrollbarVisible = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s7((props, forwardedRef)=>{\n    _s7();\n    const { orientation = \"vertical\", ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const thumbRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const pointerOffsetRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const [sizes, setSizes] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        content: 0,\n        viewport: 0,\n        scrollbar: {\n            size: 0,\n            paddingStart: 0,\n            paddingEnd: 0\n        }\n    });\n    const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n    const commonProps = {\n        ...scrollbarProps,\n        sizes,\n        onSizesChange: setSizes,\n        hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n        onThumbChange: (thumb)=>thumbRef.current = thumb,\n        onThumbPointerUp: ()=>pointerOffsetRef.current = 0,\n        onThumbPointerDown: (pointerPos)=>pointerOffsetRef.current = pointerPos\n    };\n    function getScrollPosition(pointerPos, dir) {\n        return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n    }\n    if (orientation === \"horizontal\") {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarX, {\n            ...commonProps,\n            ref: forwardedRef,\n            onThumbPositionChange: ()=>{\n                if (context.viewport && thumbRef.current) {\n                    const scrollPos = context.viewport.scrollLeft;\n                    const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n                    thumbRef.current.style.transform = \"translate3d(\".concat(offset, \"px, 0, 0)\");\n                }\n            },\n            onWheelScroll: (scrollPos)=>{\n                if (context.viewport) context.viewport.scrollLeft = scrollPos;\n            },\n            onDragScroll: (pointerPos)=>{\n                if (context.viewport) {\n                    context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n                }\n            }\n        });\n    }\n    if (orientation === \"vertical\") {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarY, {\n            ...commonProps,\n            ref: forwardedRef,\n            onThumbPositionChange: ()=>{\n                if (context.viewport && thumbRef.current) {\n                    const scrollPos = context.viewport.scrollTop;\n                    const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n                    thumbRef.current.style.transform = \"translate3d(0, \".concat(offset, \"px, 0)\");\n                }\n            },\n            onWheelScroll: (scrollPos)=>{\n                if (context.viewport) context.viewport.scrollTop = scrollPos;\n            },\n            onDragScroll: (pointerPos)=>{\n                if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n            }\n        });\n    }\n    return null;\n}, \"Wd7YQJPkFaDORidn1lbBkAJJGis=\", false, function() {\n    return [\n        useScrollAreaContext\n    ];\n}));\n_c9 = ScrollAreaScrollbarVisible;\nvar ScrollAreaScrollbarX = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s8((props, forwardedRef)=>{\n    _s8();\n    const { sizes, onSizesChange, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const [computedStyle, setComputedStyle] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composeRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, ref, context.onScrollbarXChange);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n    }, [\n        ref\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarImpl, {\n        \"data-orientation\": \"horizontal\",\n        ...scrollbarProps,\n        ref: composeRefs,\n        sizes,\n        style: {\n            bottom: 0,\n            left: context.dir === \"rtl\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n            right: context.dir === \"ltr\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n            [\"--radix-scroll-area-thumb-width\"]: getThumbSize(sizes) + \"px\",\n            ...props.style\n        },\n        onThumbPointerDown: (pointerPos)=>props.onThumbPointerDown(pointerPos.x),\n        onDragScroll: (pointerPos)=>props.onDragScroll(pointerPos.x),\n        onWheelScroll: (event, maxScrollPos)=>{\n            if (context.viewport) {\n                const scrollPos = context.viewport.scrollLeft + event.deltaX;\n                props.onWheelScroll(scrollPos);\n                if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n                    event.preventDefault();\n                }\n            }\n        },\n        onResize: ()=>{\n            if (ref.current && context.viewport && computedStyle) {\n                onSizesChange({\n                    content: context.viewport.scrollWidth,\n                    viewport: context.viewport.offsetWidth,\n                    scrollbar: {\n                        size: ref.current.clientWidth,\n                        paddingStart: toInt(computedStyle.paddingLeft),\n                        paddingEnd: toInt(computedStyle.paddingRight)\n                    }\n                });\n            }\n        }\n    });\n}, \"niSywvla1yTEJaUKF3mXxe2aACc=\", false, function() {\n    return [\n        useScrollAreaContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n}));\n_c10 = ScrollAreaScrollbarX;\nvar ScrollAreaScrollbarY = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s9((props, forwardedRef)=>{\n    _s9();\n    const { sizes, onSizesChange, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const [computedStyle, setComputedStyle] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composeRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, ref, context.onScrollbarYChange);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n    }, [\n        ref\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaScrollbarImpl, {\n        \"data-orientation\": \"vertical\",\n        ...scrollbarProps,\n        ref: composeRefs,\n        sizes,\n        style: {\n            top: 0,\n            right: context.dir === \"ltr\" ? 0 : void 0,\n            left: context.dir === \"rtl\" ? 0 : void 0,\n            bottom: \"var(--radix-scroll-area-corner-height)\",\n            [\"--radix-scroll-area-thumb-height\"]: getThumbSize(sizes) + \"px\",\n            ...props.style\n        },\n        onThumbPointerDown: (pointerPos)=>props.onThumbPointerDown(pointerPos.y),\n        onDragScroll: (pointerPos)=>props.onDragScroll(pointerPos.y),\n        onWheelScroll: (event, maxScrollPos)=>{\n            if (context.viewport) {\n                const scrollPos = context.viewport.scrollTop + event.deltaY;\n                props.onWheelScroll(scrollPos);\n                if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n                    event.preventDefault();\n                }\n            }\n        },\n        onResize: ()=>{\n            if (ref.current && context.viewport && computedStyle) {\n                onSizesChange({\n                    content: context.viewport.scrollHeight,\n                    viewport: context.viewport.offsetHeight,\n                    scrollbar: {\n                        size: ref.current.clientHeight,\n                        paddingStart: toInt(computedStyle.paddingTop),\n                        paddingEnd: toInt(computedStyle.paddingBottom)\n                    }\n                });\n            }\n        }\n    });\n}, \"niSywvla1yTEJaUKF3mXxe2aACc=\", false, function() {\n    return [\n        useScrollAreaContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n}));\n_c11 = ScrollAreaScrollbarY;\nvar [ScrollbarProvider, useScrollbarContext] = createScrollAreaContext(SCROLLBAR_NAME);\nvar ScrollAreaScrollbarImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s10((props, forwardedRef)=>{\n    _s10();\n    const { __scopeScrollArea, sizes, hasThumb, onThumbChange, onThumbPointerUp, onThumbPointerDown, onThumbPositionChange, onDragScroll, onWheelScroll, onResize, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n    const [scrollbar, setScrollbar] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const composeRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, (node)=>setScrollbar(node));\n    const rectRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const prevWebkitUserSelectRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(\"\");\n    const viewport = context.viewport;\n    const maxScrollPos = sizes.content - sizes.viewport;\n    const handleWheelScroll = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef)(onWheelScroll);\n    const handleThumbPositionChange = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef)(onThumbPositionChange);\n    const handleResize = useDebounceCallback(onResize, 10);\n    function handleDragScroll(event) {\n        if (rectRef.current) {\n            const x = event.clientX - rectRef.current.left;\n            const y = event.clientY - rectRef.current.top;\n            onDragScroll({\n                x,\n                y\n            });\n        }\n    }\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const handleWheel = (event)=>{\n            const element = event.target;\n            const isScrollbarWheel = scrollbar === null || scrollbar === void 0 ? void 0 : scrollbar.contains(element);\n            if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n        };\n        document.addEventListener(\"wheel\", handleWheel, {\n            passive: false\n        });\n        return ()=>document.removeEventListener(\"wheel\", handleWheel, {\n                passive: false\n            });\n    }, [\n        viewport,\n        scrollbar,\n        maxScrollPos,\n        handleWheelScroll\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(handleThumbPositionChange, [\n        sizes,\n        handleThumbPositionChange\n    ]);\n    useResizeObserver(scrollbar, handleResize);\n    useResizeObserver(context.content, handleResize);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollbarProvider, {\n        scope: __scopeScrollArea,\n        scrollbar,\n        hasThumb,\n        onThumbChange: (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef)(onThumbChange),\n        onThumbPointerUp: (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef)(onThumbPointerUp),\n        onThumbPositionChange: handleThumbPositionChange,\n        onThumbPointerDown: (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef)(onThumbPointerDown),\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_5__.Primitive.div, {\n            ...scrollbarProps,\n            ref: composeRefs,\n            style: {\n                position: \"absolute\",\n                ...scrollbarProps.style\n            },\n            onPointerDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onPointerDown, (event)=>{\n                const mainPointer = 0;\n                if (event.button === mainPointer) {\n                    const element = event.target;\n                    element.setPointerCapture(event.pointerId);\n                    rectRef.current = scrollbar.getBoundingClientRect();\n                    prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n                    document.body.style.webkitUserSelect = \"none\";\n                    if (context.viewport) context.viewport.style.scrollBehavior = \"auto\";\n                    handleDragScroll(event);\n                }\n            }),\n            onPointerMove: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onPointerMove, handleDragScroll),\n            onPointerUp: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onPointerUp, (event)=>{\n                const element = event.target;\n                if (element.hasPointerCapture(event.pointerId)) {\n                    element.releasePointerCapture(event.pointerId);\n                }\n                document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n                if (context.viewport) context.viewport.style.scrollBehavior = \"\";\n                rectRef.current = null;\n            })\n        })\n    });\n}, \"M/srFQWNmuOPpxuB8Z41v/5HpJg=\", false, function() {\n    return [\n        useScrollAreaContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef,\n        useDebounceCallback,\n        useResizeObserver,\n        useResizeObserver,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef\n    ];\n}));\n_c12 = ScrollAreaScrollbarImpl;\nvar THUMB_NAME = \"ScrollAreaThumb\";\nvar ScrollAreaThumb = /*#__PURE__*/ _s11(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c13 = _s11((props, forwardedRef)=>{\n    _s11();\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_6__.Presence, {\n        present: forceMount || scrollbarContext.hasThumb,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaThumbImpl, {\n            ref: forwardedRef,\n            ...thumbProps\n        })\n    });\n}, \"s6DmoIaTLdkuRlSQD2uCGrj+q/c=\", false, function() {\n    return [\n        useScrollbarContext\n    ];\n})), \"s6DmoIaTLdkuRlSQD2uCGrj+q/c=\", false, function() {\n    return [\n        useScrollbarContext\n    ];\n});\n_c14 = ScrollAreaThumb;\nvar ScrollAreaThumbImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s12((props, forwardedRef)=>{\n    _s12();\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, (node)=>scrollbarContext.onThumbChange(node));\n    const removeUnlinkedScrollListenerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const debounceScrollEnd = useDebounceCallback(()=>{\n        if (removeUnlinkedScrollListenerRef.current) {\n            removeUnlinkedScrollListenerRef.current();\n            removeUnlinkedScrollListenerRef.current = void 0;\n        }\n    }, 100);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const viewport = scrollAreaContext.viewport;\n        if (viewport) {\n            const handleScroll = ()=>{\n                debounceScrollEnd();\n                if (!removeUnlinkedScrollListenerRef.current) {\n                    const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n                    removeUnlinkedScrollListenerRef.current = listener;\n                    onThumbPositionChange();\n                }\n            };\n            onThumbPositionChange();\n            viewport.addEventListener(\"scroll\", handleScroll);\n            return ()=>viewport.removeEventListener(\"scroll\", handleScroll);\n        }\n    }, [\n        scrollAreaContext.viewport,\n        debounceScrollEnd,\n        onThumbPositionChange\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_5__.Primitive.div, {\n        \"data-state\": scrollbarContext.hasThumb ? \"visible\" : \"hidden\",\n        ...thumbProps,\n        ref: composedRef,\n        style: {\n            width: \"var(--radix-scroll-area-thumb-width)\",\n            height: \"var(--radix-scroll-area-thumb-height)\",\n            ...style\n        },\n        onPointerDownCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onPointerDownCapture, (event)=>{\n            const thumb = event.target;\n            const thumbRect = thumb.getBoundingClientRect();\n            const x = event.clientX - thumbRect.left;\n            const y = event.clientY - thumbRect.top;\n            scrollbarContext.onThumbPointerDown({\n                x,\n                y\n            });\n        }),\n        onPointerUp: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onPointerUp, scrollbarContext.onThumbPointerUp)\n    });\n}, \"Q7ygzvKop+l5vwjxQaIJ0OJSHPw=\", false, function() {\n    return [\n        useScrollAreaContext,\n        useScrollbarContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs,\n        useDebounceCallback\n    ];\n}));\n_c15 = ScrollAreaThumbImpl;\nScrollAreaThumb.displayName = THUMB_NAME;\nvar CORNER_NAME = \"ScrollAreaCorner\";\nvar ScrollAreaCorner = /*#__PURE__*/ _s13(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c16 = _s13((props, forwardedRef)=>{\n    _s13();\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== \"scroll\" && hasBothScrollbarsVisible;\n    return hasCorner ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ScrollAreaCornerImpl, {\n        ...props,\n        ref: forwardedRef\n    }) : null;\n}, \"6oF7LR91xweil/RUwsJOHeHGHpM=\", false, function() {\n    return [\n        useScrollAreaContext\n    ];\n})), \"6oF7LR91xweil/RUwsJOHeHGHpM=\", false, function() {\n    return [\n        useScrollAreaContext\n    ];\n});\n_c17 = ScrollAreaCorner;\nScrollAreaCorner.displayName = CORNER_NAME;\nvar ScrollAreaCornerImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s14((props, forwardedRef)=>{\n    _s14();\n    const { __scopeScrollArea, ...cornerProps } = props;\n    const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n    const [width, setWidth] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const [height, setHeight] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const hasSize = Boolean(width && height);\n    useResizeObserver(context.scrollbarX, ()=>{\n        var _context_scrollbarX;\n        const height2 = ((_context_scrollbarX = context.scrollbarX) === null || _context_scrollbarX === void 0 ? void 0 : _context_scrollbarX.offsetHeight) || 0;\n        context.onCornerHeightChange(height2);\n        setHeight(height2);\n    });\n    useResizeObserver(context.scrollbarY, ()=>{\n        var _context_scrollbarY;\n        const width2 = ((_context_scrollbarY = context.scrollbarY) === null || _context_scrollbarY === void 0 ? void 0 : _context_scrollbarY.offsetWidth) || 0;\n        context.onCornerWidthChange(width2);\n        setWidth(width2);\n    });\n    return hasSize ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_5__.Primitive.div, {\n        ...cornerProps,\n        ref: forwardedRef,\n        style: {\n            width,\n            height,\n            position: \"absolute\",\n            right: context.dir === \"ltr\" ? 0 : void 0,\n            left: context.dir === \"rtl\" ? 0 : void 0,\n            bottom: 0,\n            ...props.style\n        }\n    }) : null;\n}, \"VPucvwShgdNHWGLOUHD+VLuHeLc=\", false, function() {\n    return [\n        useScrollAreaContext,\n        useResizeObserver,\n        useResizeObserver\n    ];\n}));\n_c18 = ScrollAreaCornerImpl;\nfunction toInt(value) {\n    return value ? parseInt(value, 10) : 0;\n}\nfunction getThumbRatio(viewportSize, contentSize) {\n    const ratio = viewportSize / contentSize;\n    return isNaN(ratio) ? 0 : ratio;\n}\nfunction getThumbSize(sizes) {\n    const ratio = getThumbRatio(sizes.viewport, sizes.content);\n    const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n    const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n    return Math.max(thumbSize, 18);\n}\nfunction getScrollPositionFromPointer(pointerPos, pointerOffset, sizes) {\n    let dir = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : \"ltr\";\n    const thumbSizePx = getThumbSize(sizes);\n    const thumbCenter = thumbSizePx / 2;\n    const offset = pointerOffset || thumbCenter;\n    const thumbOffsetFromEnd = thumbSizePx - offset;\n    const minPointerPos = sizes.scrollbar.paddingStart + offset;\n    const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n    const maxScrollPos = sizes.content - sizes.viewport;\n    const scrollRange = dir === \"ltr\" ? [\n        0,\n        maxScrollPos\n    ] : [\n        maxScrollPos * -1,\n        0\n    ];\n    const interpolate = linearScale([\n        minPointerPos,\n        maxPointerPos\n    ], scrollRange);\n    return interpolate(pointerPos);\n}\nfunction getThumbOffsetFromScroll(scrollPos, sizes) {\n    let dir = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"ltr\";\n    const thumbSizePx = getThumbSize(sizes);\n    const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n    const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n    const maxScrollPos = sizes.content - sizes.viewport;\n    const maxThumbPos = scrollbar - thumbSizePx;\n    const scrollClampRange = dir === \"ltr\" ? [\n        0,\n        maxScrollPos\n    ] : [\n        maxScrollPos * -1,\n        0\n    ];\n    const scrollWithoutMomentum = (0,_radix_ui_number__WEBPACK_IMPORTED_MODULE_9__.clamp)(scrollPos, scrollClampRange);\n    const interpolate = linearScale([\n        0,\n        maxScrollPos\n    ], [\n        0,\n        maxThumbPos\n    ]);\n    return interpolate(scrollWithoutMomentum);\n}\nfunction linearScale(input, output) {\n    return (value)=>{\n        if (input[0] === input[1] || output[0] === output[1]) return output[0];\n        const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n        return output[0] + ratio * (value - input[0]);\n    };\n}\nfunction isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {\n    return scrollPos > 0 && scrollPos < maxScrollPos;\n}\nvar addUnlinkedScrollListener = function(node) {\n    let handler = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ()=>{};\n    let prevPosition = {\n        left: node.scrollLeft,\n        top: node.scrollTop\n    };\n    let rAF = 0;\n    (function loop() {\n        const position = {\n            left: node.scrollLeft,\n            top: node.scrollTop\n        };\n        const isHorizontalScroll = prevPosition.left !== position.left;\n        const isVerticalScroll = prevPosition.top !== position.top;\n        if (isHorizontalScroll || isVerticalScroll) handler();\n        prevPosition = position;\n        rAF = window.requestAnimationFrame(loop);\n    })();\n    return ()=>window.cancelAnimationFrame(rAF);\n};\nfunction useDebounceCallback(callback, delay) {\n    _s15();\n    const handleCallback = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef)(callback);\n    const debounceTimerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>()=>window.clearTimeout(debounceTimerRef.current), []);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        window.clearTimeout(debounceTimerRef.current);\n        debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n    }, [\n        handleCallback,\n        delay\n    ]);\n}\n_s15(useDebounceCallback, \"y9yjvzcSqsK0X+bsDW4f7EiNh+8=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef\n    ];\n});\nfunction useResizeObserver(element, onResize) {\n    _s16();\n    const handleResize = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef)(onResize);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_10__.useLayoutEffect)(()=>{\n        let rAF = 0;\n        if (element) {\n            const resizeObserver = new ResizeObserver(()=>{\n                cancelAnimationFrame(rAF);\n                rAF = window.requestAnimationFrame(handleResize);\n            });\n            resizeObserver.observe(element);\n            return ()=>{\n                window.cancelAnimationFrame(rAF);\n                resizeObserver.unobserve(element);\n            };\n        }\n    }, [\n        element,\n        handleResize\n    ]);\n}\n_s16(useResizeObserver, \"/Ap8uEYN0y92xlnU4jqBFTKYw/I=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef\n    ];\n});\nvar Root = ScrollArea;\nvar Viewport = ScrollAreaViewport;\nvar Scrollbar = ScrollAreaScrollbar;\nvar Thumb = ScrollAreaThumb;\nvar Corner = ScrollAreaCorner;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n$RefreshReg$(_c, \"ScrollArea$React2.forwardRef\");\n$RefreshReg$(_c1, \"ScrollArea\");\n$RefreshReg$(_c2, \"ScrollAreaViewport$React2.forwardRef\");\n$RefreshReg$(_c3, \"ScrollAreaViewport\");\n$RefreshReg$(_c4, \"ScrollAreaScrollbar$React2.forwardRef\");\n$RefreshReg$(_c5, \"ScrollAreaScrollbar\");\n$RefreshReg$(_c6, \"ScrollAreaScrollbarHover\");\n$RefreshReg$(_c7, \"ScrollAreaScrollbarScroll\");\n$RefreshReg$(_c8, \"ScrollAreaScrollbarAuto\");\n$RefreshReg$(_c9, \"ScrollAreaScrollbarVisible\");\n$RefreshReg$(_c10, \"ScrollAreaScrollbarX\");\n$RefreshReg$(_c11, \"ScrollAreaScrollbarY\");\n$RefreshReg$(_c12, \"ScrollAreaScrollbarImpl\");\n$RefreshReg$(_c13, \"ScrollAreaThumb$React2.forwardRef\");\n$RefreshReg$(_c14, \"ScrollAreaThumb\");\n$RefreshReg$(_c15, \"ScrollAreaThumbImpl\");\n$RefreshReg$(_c16, \"ScrollAreaCorner$React2.forwardRef\");\n$RefreshReg$(_c17, \"ScrollAreaCorner\");\n$RefreshReg$(_c18, \"ScrollAreaCornerImpl\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-scroll-area/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-scroll-area/node_modules/@radix-ui/react-primitive/dist/index.mjs":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@radix-ui/react-scroll-area/node_modules/@radix-ui/react-primitive/dist/index.mjs ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Primitive: function() { return /* binding */ Primitive; },\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   dispatchDiscreteCustomEvent: function() { return /* binding */ dispatchDiscreteCustomEvent; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/primitive/src/Primitive.tsx\n\n\n\n\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Node = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__.Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3Qtc2Nyb2xsLWFyZWEvbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9yZWFjdC1wcmltaXRpdmUvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQytCO0FBQ087QUFDTTtBQUNKO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw2Q0FBZ0I7QUFDL0IsWUFBWSw2QkFBNkI7QUFDekMsMkJBQTJCLHNEQUFJO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixzREFBRyxTQUFTLHNDQUFzQztBQUM3RSxHQUFHO0FBQ0gsa0NBQWtDLEtBQUs7QUFDdkMsV0FBVztBQUNYLENBQUMsSUFBSTtBQUNMO0FBQ0EsY0FBYyxnREFBa0I7QUFDaEM7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9yZWFjdC1zY3JvbGwtYXJlYS9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZS9kaXN0L2luZGV4Lm1qcz82NjI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L3ByaW1pdGl2ZS9zcmMvUHJpbWl0aXZlLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBSZWFjdERPTSBmcm9tIFwicmVhY3QtZG9tXCI7XG5pbXBvcnQgeyBTbG90IH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1zbG90XCI7XG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBOT0RFUyA9IFtcbiAgXCJhXCIsXG4gIFwiYnV0dG9uXCIsXG4gIFwiZGl2XCIsXG4gIFwiZm9ybVwiLFxuICBcImgyXCIsXG4gIFwiaDNcIixcbiAgXCJpbWdcIixcbiAgXCJpbnB1dFwiLFxuICBcImxhYmVsXCIsXG4gIFwibGlcIixcbiAgXCJuYXZcIixcbiAgXCJvbFwiLFxuICBcInBcIixcbiAgXCJzcGFuXCIsXG4gIFwic3ZnXCIsXG4gIFwidWxcIlxuXTtcbnZhciBQcmltaXRpdmUgPSBOT0RFUy5yZWR1Y2UoKHByaW1pdGl2ZSwgbm9kZSkgPT4ge1xuICBjb25zdCBOb2RlID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIGNvbnN0IHsgYXNDaGlsZCwgLi4ucHJpbWl0aXZlUHJvcHMgfSA9IHByb3BzO1xuICAgIGNvbnN0IENvbXAgPSBhc0NoaWxkID8gU2xvdCA6IG5vZGU7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHdpbmRvd1tTeW1ib2wuZm9yKFwicmFkaXgtdWlcIildID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29tcCwgeyAuLi5wcmltaXRpdmVQcm9wcywgcmVmOiBmb3J3YXJkZWRSZWYgfSk7XG4gIH0pO1xuICBOb2RlLmRpc3BsYXlOYW1lID0gYFByaW1pdGl2ZS4ke25vZGV9YDtcbiAgcmV0dXJuIHsgLi4ucHJpbWl0aXZlLCBbbm9kZV06IE5vZGUgfTtcbn0sIHt9KTtcbmZ1bmN0aW9uIGRpc3BhdGNoRGlzY3JldGVDdXN0b21FdmVudCh0YXJnZXQsIGV2ZW50KSB7XG4gIGlmICh0YXJnZXQpIFJlYWN0RE9NLmZsdXNoU3luYygoKSA9PiB0YXJnZXQuZGlzcGF0Y2hFdmVudChldmVudCkpO1xufVxudmFyIFJvb3QgPSBQcmltaXRpdmU7XG5leHBvcnQge1xuICBQcmltaXRpdmUsXG4gIFJvb3QsXG4gIGRpc3BhdGNoRGlzY3JldGVDdXN0b21FdmVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-scroll-area/node_modules/@radix-ui/react-primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@radix-ui/react-slot/dist/index.mjs ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   Slot: function() { return /* binding */ Slot; },\n/* harmony export */   Slottable: function() { return /* binding */ Slottable; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/slot/src/Slot.tsx\n\n\n\nvar Slot = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(newElement) > 1) return react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null);\n        return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(forwardedRef, childrenRef) : childrenRef\n    });\n  }\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) > 1 ? react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children });\n};\nfunction isSlottable(child) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3Qtc2xvdC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUM0QjtBQUNUO0FBQ2xELFdBQVcsNkNBQWdCO0FBQzNCLFVBQVUseUJBQXlCO0FBQ25DLHdCQUF3QiwyQ0FBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQ0FBYywrQkFBK0IsMkNBQWM7QUFDdkUsZUFBZSxpREFBb0I7QUFDbkMsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkJBQTJCLHNEQUFHLGNBQWMsMkNBQTJDLGlEQUFvQixlQUFlLCtDQUFrQiwwQ0FBMEM7QUFDdEw7QUFDQSx5QkFBeUIsc0RBQUcsY0FBYywyQ0FBMkM7QUFDckYsQ0FBQztBQUNEO0FBQ0EsZ0JBQWdCLDZDQUFnQjtBQUNoQyxVQUFVLHlCQUF5QjtBQUNuQyxNQUFNLGlEQUFvQjtBQUMxQjtBQUNBLFdBQVcsK0NBQWtCO0FBQzdCO0FBQ0E7QUFDQSwwQkFBMEIseUVBQVc7QUFDckMsS0FBSztBQUNMO0FBQ0EsU0FBUywyQ0FBYyx1QkFBdUIsMkNBQWM7QUFDNUQsQ0FBQztBQUNEO0FBQ0EsbUJBQW1CLFVBQVU7QUFDN0IseUJBQXlCLHNEQUFHLENBQUMsdURBQVEsSUFBSSxVQUFVO0FBQ25EO0FBQ0E7QUFDQSxTQUFTLGlEQUFvQjtBQUM3QjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ04sa0NBQWtDO0FBQ2xDLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXNsb3QvZGlzdC9pbmRleC5tanM/NGE1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9zbG90L3NyYy9TbG90LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb21wb3NlUmVmcyB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzXCI7XG5pbXBvcnQgeyBGcmFnbWVudCwganN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgU2xvdCA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3QgeyBjaGlsZHJlbiwgLi4uc2xvdFByb3BzIH0gPSBwcm9wcztcbiAgY29uc3QgY2hpbGRyZW5BcnJheSA9IFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoY2hpbGRyZW4pO1xuICBjb25zdCBzbG90dGFibGUgPSBjaGlsZHJlbkFycmF5LmZpbmQoaXNTbG90dGFibGUpO1xuICBpZiAoc2xvdHRhYmxlKSB7XG4gICAgY29uc3QgbmV3RWxlbWVudCA9IHNsb3R0YWJsZS5wcm9wcy5jaGlsZHJlbjtcbiAgICBjb25zdCBuZXdDaGlsZHJlbiA9IGNoaWxkcmVuQXJyYXkubWFwKChjaGlsZCkgPT4ge1xuICAgICAgaWYgKGNoaWxkID09PSBzbG90dGFibGUpIHtcbiAgICAgICAgaWYgKFJlYWN0LkNoaWxkcmVuLmNvdW50KG5ld0VsZW1lbnQpID4gMSkgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLm9ubHkobnVsbCk7XG4gICAgICAgIHJldHVybiBSZWFjdC5pc1ZhbGlkRWxlbWVudChuZXdFbGVtZW50KSA/IG5ld0VsZW1lbnQucHJvcHMuY2hpbGRyZW4gOiBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFNsb3RDbG9uZSwgeyAuLi5zbG90UHJvcHMsIHJlZjogZm9yd2FyZGVkUmVmLCBjaGlsZHJlbjogUmVhY3QuaXNWYWxpZEVsZW1lbnQobmV3RWxlbWVudCkgPyBSZWFjdC5jbG9uZUVsZW1lbnQobmV3RWxlbWVudCwgdm9pZCAwLCBuZXdDaGlsZHJlbikgOiBudWxsIH0pO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFNsb3RDbG9uZSwgeyAuLi5zbG90UHJvcHMsIHJlZjogZm9yd2FyZGVkUmVmLCBjaGlsZHJlbiB9KTtcbn0pO1xuU2xvdC5kaXNwbGF5TmFtZSA9IFwiU2xvdFwiO1xudmFyIFNsb3RDbG9uZSA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3QgeyBjaGlsZHJlbiwgLi4uc2xvdFByb3BzIH0gPSBwcm9wcztcbiAgaWYgKFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkcmVuKSkge1xuICAgIGNvbnN0IGNoaWxkcmVuUmVmID0gZ2V0RWxlbWVudFJlZihjaGlsZHJlbik7XG4gICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZHJlbiwge1xuICAgICAgLi4ubWVyZ2VQcm9wcyhzbG90UHJvcHMsIGNoaWxkcmVuLnByb3BzKSxcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHJlZjogZm9yd2FyZGVkUmVmID8gY29tcG9zZVJlZnMoZm9yd2FyZGVkUmVmLCBjaGlsZHJlblJlZikgOiBjaGlsZHJlblJlZlxuICAgIH0pO1xuICB9XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPiAxID8gUmVhY3QuQ2hpbGRyZW4ub25seShudWxsKSA6IG51bGw7XG59KTtcblNsb3RDbG9uZS5kaXNwbGF5TmFtZSA9IFwiU2xvdENsb25lXCI7XG52YXIgU2xvdHRhYmxlID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChGcmFnbWVudCwgeyBjaGlsZHJlbiB9KTtcbn07XG5mdW5jdGlvbiBpc1Nsb3R0YWJsZShjaGlsZCkge1xuICByZXR1cm4gUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpICYmIGNoaWxkLnR5cGUgPT09IFNsb3R0YWJsZTtcbn1cbmZ1bmN0aW9uIG1lcmdlUHJvcHMoc2xvdFByb3BzLCBjaGlsZFByb3BzKSB7XG4gIGNvbnN0IG92ZXJyaWRlUHJvcHMgPSB7IC4uLmNoaWxkUHJvcHMgfTtcbiAgZm9yIChjb25zdCBwcm9wTmFtZSBpbiBjaGlsZFByb3BzKSB7XG4gICAgY29uc3Qgc2xvdFByb3BWYWx1ZSA9IHNsb3RQcm9wc1twcm9wTmFtZV07XG4gICAgY29uc3QgY2hpbGRQcm9wVmFsdWUgPSBjaGlsZFByb3BzW3Byb3BOYW1lXTtcbiAgICBjb25zdCBpc0hhbmRsZXIgPSAvXm9uW0EtWl0vLnRlc3QocHJvcE5hbWUpO1xuICAgIGlmIChpc0hhbmRsZXIpIHtcbiAgICAgIGlmIChzbG90UHJvcFZhbHVlICYmIGNoaWxkUHJvcFZhbHVlKSB7XG4gICAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICBjaGlsZFByb3BWYWx1ZSguLi5hcmdzKTtcbiAgICAgICAgICBzbG90UHJvcFZhbHVlKC4uLmFyZ3MpO1xuICAgICAgICB9O1xuICAgICAgfSBlbHNlIGlmIChzbG90UHJvcFZhbHVlKSB7XG4gICAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gc2xvdFByb3BWYWx1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHByb3BOYW1lID09PSBcInN0eWxlXCIpIHtcbiAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0geyAuLi5zbG90UHJvcFZhbHVlLCAuLi5jaGlsZFByb3BWYWx1ZSB9O1xuICAgIH0gZWxzZSBpZiAocHJvcE5hbWUgPT09IFwiY2xhc3NOYW1lXCIpIHtcbiAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gW3Nsb3RQcm9wVmFsdWUsIGNoaWxkUHJvcFZhbHVlXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG4gICAgfVxuICB9XG4gIHJldHVybiB7IC4uLnNsb3RQcm9wcywgLi4ub3ZlcnJpZGVQcm9wcyB9O1xufVxuZnVuY3Rpb24gZ2V0RWxlbWVudFJlZihlbGVtZW50KSB7XG4gIGxldCBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGVsZW1lbnQucHJvcHMsIFwicmVmXCIpPy5nZXQ7XG4gIGxldCBtYXlXYXJuID0gZ2V0dGVyICYmIFwiaXNSZWFjdFdhcm5pbmdcIiBpbiBnZXR0ZXIgJiYgZ2V0dGVyLmlzUmVhY3RXYXJuaW5nO1xuICBpZiAobWF5V2Fybikge1xuICAgIHJldHVybiBlbGVtZW50LnJlZjtcbiAgfVxuICBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGVsZW1lbnQsIFwicmVmXCIpPy5nZXQ7XG4gIG1heVdhcm4gPSBnZXR0ZXIgJiYgXCJpc1JlYWN0V2FybmluZ1wiIGluIGdldHRlciAmJiBnZXR0ZXIuaXNSZWFjdFdhcm5pbmc7XG4gIGlmIChtYXlXYXJuKSB7XG4gICAgcmV0dXJuIGVsZW1lbnQucHJvcHMucmVmO1xuICB9XG4gIHJldHVybiBlbGVtZW50LnByb3BzLnJlZiB8fCBlbGVtZW50LnJlZjtcbn1cbnZhciBSb290ID0gU2xvdDtcbmV4cG9ydCB7XG4gIFJvb3QsXG4gIFNsb3QsXG4gIFNsb3R0YWJsZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCallbackRef: function() { return /* binding */ useCallbackRef; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/use-callback-ref/src/useCallbackRef.tsx\n\nfunction useCallbackRef(callback) {\n  const callbackRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(callback);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (...args) => callbackRef.current?.(...args), []);\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWNhbGxiYWNrLXJlZi9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQytCO0FBQy9CO0FBQ0Esc0JBQXNCLHlDQUFZO0FBQ2xDLEVBQUUsNENBQWU7QUFDakI7QUFDQSxHQUFHO0FBQ0gsU0FBUywwQ0FBYTtBQUN0QjtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9yZWFjdC11c2UtY2FsbGJhY2stcmVmL2Rpc3QvaW5kZXgubWpzPzdhODAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvdXNlLWNhbGxiYWNrLXJlZi9zcmMvdXNlQ2FsbGJhY2tSZWYudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIHVzZUNhbGxiYWNrUmVmKGNhbGxiYWNrKSB7XG4gIGNvbnN0IGNhbGxiYWNrUmVmID0gUmVhY3QudXNlUmVmKGNhbGxiYWNrKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBjYWxsYmFja1JlZi5jdXJyZW50ID0gY2FsbGJhY2s7XG4gIH0pO1xuICByZXR1cm4gUmVhY3QudXNlTWVtbygoKSA9PiAoLi4uYXJncykgPT4gY2FsbGJhY2tSZWYuY3VycmVudD8uKC4uLmFyZ3MpLCBbXSk7XG59XG5leHBvcnQge1xuICB1c2VDYWxsYmFja1JlZlxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLayoutEffect: function() { return /* binding */ useLayoutEffect2; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/use-layout-effect/src/useLayoutEffect.tsx\n\nvar useLayoutEffect2 = Boolean(globalThis?.document) ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : () => {\n};\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWxheW91dC1lZmZlY3QvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUMrQjtBQUMvQix1REFBdUQsa0RBQXFCO0FBQzVFO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXVzZS1sYXlvdXQtZWZmZWN0L2Rpc3QvaW5kZXgubWpzPzhlMDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvdXNlLWxheW91dC1lZmZlY3Qvc3JjL3VzZUxheW91dEVmZmVjdC50c3hcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xudmFyIHVzZUxheW91dEVmZmVjdDIgPSBCb29sZWFuKGdsb2JhbFRoaXM/LmRvY3VtZW50KSA/IFJlYWN0LnVzZUxheW91dEVmZmVjdCA6ICgpID0+IHtcbn07XG5leHBvcnQge1xuICB1c2VMYXlvdXRFZmZlY3QyIGFzIHVzZUxheW91dEVmZmVjdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Component: function() { return /* binding */ Component; },\n/* harmony export */   DOMEvent: function() { return /* binding */ DOMEvent; },\n/* harmony export */   EventsTarget: function() { return /* binding */ EventsTarget; },\n/* harmony export */   Icon$0: function() { return /* binding */ Icon$0; },\n/* harmony export */   Icon$104: function() { return /* binding */ Icon$104; },\n/* harmony export */   Icon$105: function() { return /* binding */ Icon$105; },\n/* harmony export */   Icon$11: function() { return /* binding */ Icon$11; },\n/* harmony export */   Icon$13: function() { return /* binding */ Icon$13; },\n/* harmony export */   Icon$16: function() { return /* binding */ Icon$16; },\n/* harmony export */   Icon$19: function() { return /* binding */ Icon$19; },\n/* harmony export */   Icon$22: function() { return /* binding */ Icon$22; },\n/* harmony export */   Icon$24: function() { return /* binding */ Icon$24; },\n/* harmony export */   Icon$26: function() { return /* binding */ Icon$26; },\n/* harmony export */   Icon$27: function() { return /* binding */ Icon$27; },\n/* harmony export */   Icon$31: function() { return /* binding */ Icon$31; },\n/* harmony export */   Icon$33: function() { return /* binding */ Icon$33; },\n/* harmony export */   Icon$34: function() { return /* binding */ Icon$34; },\n/* harmony export */   Icon$35: function() { return /* binding */ Icon$35; },\n/* harmony export */   Icon$39: function() { return /* binding */ Icon$39; },\n/* harmony export */   Icon$40: function() { return /* binding */ Icon$40; },\n/* harmony export */   Icon$5: function() { return /* binding */ Icon$5; },\n/* harmony export */   Icon$53: function() { return /* binding */ Icon$53; },\n/* harmony export */   Icon$54: function() { return /* binding */ Icon$54; },\n/* harmony export */   Icon$56: function() { return /* binding */ Icon$56; },\n/* harmony export */   Icon$59: function() { return /* binding */ Icon$59; },\n/* harmony export */   Icon$60: function() { return /* binding */ Icon$60; },\n/* harmony export */   Icon$61: function() { return /* binding */ Icon$61; },\n/* harmony export */   Icon$62: function() { return /* binding */ Icon$62; },\n/* harmony export */   Icon$63: function() { return /* binding */ Icon$63; },\n/* harmony export */   Icon$74: function() { return /* binding */ Icon$74; },\n/* harmony export */   Icon$77: function() { return /* binding */ Icon$77; },\n/* harmony export */   Icon$8: function() { return /* binding */ Icon$8; },\n/* harmony export */   Icon$81: function() { return /* binding */ Icon$81; },\n/* harmony export */   Icon$88: function() { return /* binding */ Icon$88; },\n/* harmony export */   State: function() { return /* binding */ State; },\n/* harmony export */   ViewController: function() { return /* binding */ ViewController; },\n/* harmony export */   animationFrameThrottle: function() { return /* binding */ animationFrameThrottle; },\n/* harmony export */   appendTriggerEvent: function() { return /* binding */ appendTriggerEvent; },\n/* harmony export */   ariaBool: function() { return /* binding */ ariaBool; },\n/* harmony export */   camelToKebabCase: function() { return /* binding */ camelToKebabCase; },\n/* harmony export */   chromecast: function() { return /* binding */ chromecast; },\n/* harmony export */   composeRefs: function() { return /* binding */ composeRefs; },\n/* harmony export */   computed: function() { return /* binding */ computed; },\n/* harmony export */   createContext: function() { return /* binding */ createContext; },\n/* harmony export */   createDisposalBin: function() { return /* binding */ createDisposalBin; },\n/* harmony export */   createReactComponent: function() { return /* binding */ createReactComponent; },\n/* harmony export */   createScope: function() { return /* binding */ createScope; },\n/* harmony export */   deferredPromise: function() { return /* binding */ deferredPromise; },\n/* harmony export */   effect: function() { return /* binding */ effect; },\n/* harmony export */   findTriggerEvent: function() { return /* binding */ findTriggerEvent; },\n/* harmony export */   fscreen: function() { return /* binding */ fscreen; },\n/* harmony export */   functionDebounce: function() { return /* binding */ functionDebounce; },\n/* harmony export */   functionThrottle: function() { return /* binding */ functionThrottle; },\n/* harmony export */   getScope: function() { return /* binding */ getScope; },\n/* harmony export */   hasProvidedContext: function() { return /* binding */ hasProvidedContext; },\n/* harmony export */   hasTriggerEvent: function() { return /* binding */ hasTriggerEvent; },\n/* harmony export */   isArray: function() { return /* binding */ isArray; },\n/* harmony export */   isBoolean: function() { return /* binding */ isBoolean; },\n/* harmony export */   isDOMNode: function() { return /* binding */ isDOMNode; },\n/* harmony export */   isFunction: function() { return /* binding */ isFunction; },\n/* harmony export */   isKeyboardClick: function() { return /* binding */ isKeyboardClick; },\n/* harmony export */   isKeyboardEvent: function() { return /* binding */ isKeyboardEvent; },\n/* harmony export */   isMouseEvent: function() { return /* binding */ isMouseEvent; },\n/* harmony export */   isNil: function() { return /* binding */ isNil; },\n/* harmony export */   isNull: function() { return /* binding */ isNull; },\n/* harmony export */   isNumber: function() { return /* binding */ isNumber; },\n/* harmony export */   isObject: function() { return /* binding */ isObject; },\n/* harmony export */   isPointerEvent: function() { return /* binding */ isPointerEvent; },\n/* harmony export */   isString: function() { return /* binding */ isString; },\n/* harmony export */   isTouchEvent: function() { return /* binding */ isTouchEvent; },\n/* harmony export */   isUndefined: function() { return /* binding */ isUndefined; },\n/* harmony export */   isWriteSignal: function() { return /* binding */ isWriteSignal; },\n/* harmony export */   kebabToCamelCase: function() { return /* binding */ kebabToCamelCase; },\n/* harmony export */   keysOf: function() { return /* binding */ keysOf; },\n/* harmony export */   listenEvent: function() { return /* binding */ listenEvent; },\n/* harmony export */   method: function() { return /* binding */ method; },\n/* harmony export */   noop: function() { return /* binding */ noop; },\n/* harmony export */   onDispose: function() { return /* binding */ onDispose; },\n/* harmony export */   peek: function() { return /* binding */ peek; },\n/* harmony export */   prop: function() { return /* binding */ prop; },\n/* harmony export */   provideContext: function() { return /* binding */ provideContext; },\n/* harmony export */   r: function() { return /* binding */ r; },\n/* harmony export */   scoped: function() { return /* binding */ scoped; },\n/* harmony export */   setAttribute: function() { return /* binding */ setAttribute; },\n/* harmony export */   setStyle: function() { return /* binding */ setStyle; },\n/* harmony export */   signal: function() { return /* binding */ signal; },\n/* harmony export */   tick: function() { return /* binding */ tick; },\n/* harmony export */   toggleClass: function() { return /* binding */ toggleClass; },\n/* harmony export */   untrack: function() { return /* binding */ untrack; },\n/* harmony export */   uppercaseFirstChar: function() { return /* binding */ uppercaseFirstChar; },\n/* harmony export */   useContext: function() { return /* binding */ useContext; },\n/* harmony export */   useDisposalBin: function() { return /* binding */ useDisposalBin; },\n/* harmony export */   useReactContext: function() { return /* binding */ useReactContext; },\n/* harmony export */   useReactScope: function() { return /* binding */ useReactScope; },\n/* harmony export */   useSignal: function() { return /* binding */ useSignal; },\n/* harmony export */   useSignalRecord: function() { return /* binding */ useSignalRecord; },\n/* harmony export */   useState: function() { return /* binding */ useState; },\n/* harmony export */   useStateContext: function() { return /* binding */ useStateContext; },\n/* harmony export */   waitIdlePeriod: function() { return /* binding */ waitIdlePeriod; },\n/* harmony export */   waitTimeout: function() { return /* binding */ waitTimeout; },\n/* harmony export */   walkTriggerEventChain: function() { return /* binding */ walkTriggerEventChain; },\n/* harmony export */   wasEnterKeyPressed: function() { return /* binding */ wasEnterKeyPressed; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/* __next_internal_client_entry_do_not_use__ Component,DOMEvent,EventsTarget,Icon$0,Icon$104,Icon$105,Icon$11,Icon$13,Icon$16,Icon$19,Icon$22,Icon$24,Icon$26,Icon$27,Icon$31,Icon$33,Icon$34,Icon$35,Icon$39,Icon$40,Icon$5,Icon$53,Icon$54,Icon$56,Icon$59,Icon$60,Icon$61,Icon$62,Icon$63,Icon$74,Icon$77,Icon$8,Icon$81,Icon$88,State,ViewController,animationFrameThrottle,appendTriggerEvent,ariaBool,camelToKebabCase,chromecast,composeRefs,computed,createContext,createDisposalBin,createReactComponent,createScope,deferredPromise,effect,findTriggerEvent,fscreen,functionDebounce,functionThrottle,getScope,hasProvidedContext,hasTriggerEvent,isArray,isBoolean,isDOMNode,isFunction,isKeyboardClick,isKeyboardEvent,isMouseEvent,isNil,isNull,isNumber,isObject,isPointerEvent,isString,isTouchEvent,isUndefined,isWriteSignal,kebabToCamelCase,keysOf,listenEvent,method,noop,onDispose,peek,prop,provideContext,r,scoped,setAttribute,setStyle,signal,tick,toggleClass,untrack,uppercaseFirstChar,useContext,useDisposalBin,useReactContext,useReactScope,useSignal,useSignalRecord,useState,useStateContext,waitIdlePeriod,waitTimeout,walkTriggerEventChain,wasEnterKeyPressed auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$();\n\nconst IS_SERVER = typeof document === \"undefined\";\nconst SCOPE = Symbol(\"SCOPE\");\nlet scheduledEffects = false, runningEffects = false, currentScope = null, currentObserver = null, currentObservers = null, currentObserversIndex = 0, effects = [], defaultContext = {};\nconst NOOP = ()=>{}, STATE_CLEAN = 0, STATE_CHECK = 1, STATE_DIRTY = 2, STATE_DISPOSED = 3;\nfunction flushEffects() {\n    scheduledEffects = true;\n    queueMicrotask(runEffects);\n}\nfunction runEffects() {\n    if (!effects.length) {\n        scheduledEffects = false;\n        return;\n    }\n    runningEffects = true;\n    for(let i = 0; i < effects.length; i++){\n        if (effects[i]._state !== STATE_CLEAN) runTop(effects[i]);\n    }\n    effects = [];\n    scheduledEffects = false;\n    runningEffects = false;\n}\nfunction runTop(node) {\n    let ancestors = [\n        node\n    ];\n    while(node = node[SCOPE]){\n        if (node._effect && node._state !== STATE_CLEAN) ancestors.push(node);\n    }\n    for(let i = ancestors.length - 1; i >= 0; i--){\n        updateCheck(ancestors[i]);\n    }\n}\nfunction root(init) {\n    const scope = createScope();\n    return compute(scope, !init.length ? init : init.bind(null, dispose.bind(scope)), null);\n}\nfunction peek(fn) {\n    return compute(currentScope, fn, null);\n}\nfunction untrack(fn) {\n    return compute(null, fn, null);\n}\nfunction tick() {\n    if (!runningEffects) runEffects();\n}\nfunction getScope() {\n    return currentScope;\n}\nfunction scoped(run2, scope) {\n    try {\n        return compute(scope, run2, null);\n    } catch (error) {\n        handleError(scope, error);\n        return;\n    }\n}\nfunction getContext(key) {\n    let scope = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : currentScope;\n    return scope === null || scope === void 0 ? void 0 : scope._context[key];\n}\nfunction setContext(key, value) {\n    let scope = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : currentScope;\n    if (scope) scope._context = {\n        ...scope._context,\n        [key]: value\n    };\n}\nfunction onDispose(disposable) {\n    if (!disposable || !currentScope) return disposable || NOOP;\n    const node = currentScope;\n    if (!node._disposal) {\n        node._disposal = disposable;\n    } else if (Array.isArray(node._disposal)) {\n        node._disposal.push(disposable);\n    } else {\n        node._disposal = [\n            node._disposal,\n            disposable\n        ];\n    }\n    return function removeDispose() {\n        if (node._state === STATE_DISPOSED) return;\n        disposable.call(null);\n        if (isFunction$1(node._disposal)) {\n            node._disposal = null;\n        } else if (Array.isArray(node._disposal)) {\n            node._disposal.splice(node._disposal.indexOf(disposable), 1);\n        }\n    };\n}\nfunction dispose() {\n    let self = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n    if (this._state === STATE_DISPOSED) return;\n    if (this._children) {\n        if (Array.isArray(this._children)) {\n            for(let i = this._children.length - 1; i >= 0; i--){\n                dispose.call(this._children[i]);\n            }\n        } else {\n            dispose.call(this._children);\n        }\n    }\n    if (self) {\n        const parent = this[SCOPE];\n        if (parent) {\n            if (Array.isArray(parent._children)) {\n                parent._children.splice(parent._children.indexOf(this), 1);\n            } else {\n                parent._children = null;\n            }\n        }\n        disposeNode(this);\n    }\n}\nfunction disposeNode(node) {\n    node._state = STATE_DISPOSED;\n    if (node._disposal) emptyDisposal(node);\n    if (node._sources) removeSourceObservers(node, 0);\n    node[SCOPE] = null;\n    node._sources = null;\n    node._observers = null;\n    node._children = null;\n    node._context = defaultContext;\n    node._handlers = null;\n}\nfunction emptyDisposal(scope) {\n    try {\n        if (Array.isArray(scope._disposal)) {\n            for(let i = scope._disposal.length - 1; i >= 0; i--){\n                const callable = scope._disposal[i];\n                callable.call(callable);\n            }\n        } else {\n            scope._disposal.call(scope._disposal);\n        }\n        scope._disposal = null;\n    } catch (error) {\n        handleError(scope, error);\n    }\n}\nfunction compute(scope, compute2, observer) {\n    const prevScope = currentScope, prevObserver = currentObserver;\n    currentScope = scope;\n    currentObserver = observer;\n    try {\n        return compute2.call(scope);\n    } finally{\n        currentScope = prevScope;\n        currentObserver = prevObserver;\n    }\n}\nfunction handleError(scope, error) {\n    if (!scope || !scope._handlers) throw error;\n    let i = 0, len = scope._handlers.length, currentError = error;\n    for(i = 0; i < len; i++){\n        try {\n            scope._handlers[i](currentError);\n            break;\n        } catch (error2) {\n            currentError = error2;\n        }\n    }\n    if (i === len) throw currentError;\n}\nfunction read() {\n    if (this._state === STATE_DISPOSED) return this._value;\n    if (currentObserver && !this._effect) {\n        if (!currentObservers && currentObserver._sources && currentObserver._sources[currentObserversIndex] == this) {\n            currentObserversIndex++;\n        } else if (!currentObservers) currentObservers = [\n            this\n        ];\n        else currentObservers.push(this);\n    }\n    if (this._compute) updateCheck(this);\n    return this._value;\n}\nfunction write(newValue) {\n    const value = isFunction$1(newValue) ? newValue(this._value) : newValue;\n    if (this._changed(this._value, value)) {\n        this._value = value;\n        if (this._observers) {\n            for(let i = 0; i < this._observers.length; i++){\n                notify(this._observers[i], STATE_DIRTY);\n            }\n        }\n    }\n    return this._value;\n}\nconst ScopeNode = function Scope() {\n    this[SCOPE] = null;\n    this._children = null;\n    if (currentScope) currentScope.append(this);\n};\n_c = ScopeNode;\nconst ScopeProto = ScopeNode.prototype;\nScopeProto._context = defaultContext;\nScopeProto._handlers = null;\nScopeProto._compute = null;\nScopeProto._disposal = null;\nScopeProto.append = function(child) {\n    child[SCOPE] = this;\n    if (!this._children) {\n        this._children = child;\n    } else if (Array.isArray(this._children)) {\n        this._children.push(child);\n    } else {\n        this._children = [\n            this._children,\n            child\n        ];\n    }\n    child._context = child._context === defaultContext ? this._context : {\n        ...this._context,\n        ...child._context\n    };\n    if (this._handlers) {\n        child._handlers = !child._handlers ? this._handlers : [\n            ...child._handlers,\n            ...this._handlers\n        ];\n    }\n};\nScopeProto.dispose = function() {\n    dispose.call(this);\n};\nfunction createScope() {\n    return new ScopeNode();\n}\nconst ComputeNode = function Computation(initialValue, compute2, options) {\n    ScopeNode.call(this);\n    this._state = compute2 ? STATE_DIRTY : STATE_CLEAN;\n    this._init = false;\n    this._effect = false;\n    this._sources = null;\n    this._observers = null;\n    this._value = initialValue;\n    var _options_id;\n    this.id = (_options_id = options === null || options === void 0 ? void 0 : options.id) !== null && _options_id !== void 0 ? _options_id : this._compute ? \"computed\" : \"signal\";\n    if (compute2) this._compute = compute2;\n    if (options && options.dirty) this._changed = options.dirty;\n};\n_c1 = ComputeNode;\nconst ComputeProto = ComputeNode.prototype;\nObject.setPrototypeOf(ComputeProto, ScopeProto);\nComputeProto._changed = isNotEqual;\nComputeProto.call = read;\nfunction createComputation(initialValue, compute2, options) {\n    return new ComputeNode(initialValue, compute2, options);\n}\nfunction isNotEqual(a, b) {\n    return a !== b;\n}\nfunction isFunction$1(value) {\n    return typeof value === \"function\";\n}\nfunction updateCheck(node) {\n    if (node._state === STATE_CHECK) {\n        for(let i = 0; i < node._sources.length; i++){\n            updateCheck(node._sources[i]);\n            if (node._state === STATE_DIRTY) {\n                break;\n            }\n        }\n    }\n    if (node._state === STATE_DIRTY) update(node);\n    else node._state = STATE_CLEAN;\n}\nfunction cleanup(node) {\n    if (node._children) dispose.call(node, false);\n    if (node._disposal) emptyDisposal(node);\n    node._handlers = node[SCOPE] ? node[SCOPE]._handlers : null;\n}\nfunction update(node) {\n    let prevObservers = currentObservers, prevObserversIndex = currentObserversIndex;\n    currentObservers = null;\n    currentObserversIndex = 0;\n    try {\n        cleanup(node);\n        const result = compute(node, node._compute, node);\n        updateObservers(node);\n        if (!node._effect && node._init) {\n            write.call(node, result);\n        } else {\n            node._value = result;\n            node._init = true;\n        }\n    } catch (error) {\n        if (!node._init && typeof node._value === \"undefined\") {\n            console.error(\"computed `\".concat(node.id, \"` threw error during first run, this can be fatal.\\n\\nSolutions:\\n\\n1. Set the `initial` option to silence this error\"), \"\\n2. Or, use an `effect` if the return value is not being used\", \"\\n\\n\", error);\n        }\n        updateObservers(node);\n        handleError(node, error);\n    } finally{\n        currentObservers = prevObservers;\n        currentObserversIndex = prevObserversIndex;\n        node._state = STATE_CLEAN;\n    }\n}\nfunction updateObservers(node) {\n    if (currentObservers) {\n        if (node._sources) removeSourceObservers(node, currentObserversIndex);\n        if (node._sources && currentObserversIndex > 0) {\n            node._sources.length = currentObserversIndex + currentObservers.length;\n            for(let i = 0; i < currentObservers.length; i++){\n                node._sources[currentObserversIndex + i] = currentObservers[i];\n            }\n        } else {\n            node._sources = currentObservers;\n        }\n        let source;\n        for(let i = currentObserversIndex; i < node._sources.length; i++){\n            source = node._sources[i];\n            if (!source._observers) source._observers = [\n                node\n            ];\n            else source._observers.push(node);\n        }\n    } else if (node._sources && currentObserversIndex < node._sources.length) {\n        removeSourceObservers(node, currentObserversIndex);\n        node._sources.length = currentObserversIndex;\n    }\n}\nfunction notify(node, state) {\n    if (node._state >= state) return;\n    if (node._effect && node._state === STATE_CLEAN) {\n        effects.push(node);\n        if (!scheduledEffects) flushEffects();\n    }\n    node._state = state;\n    if (node._observers) {\n        for(let i = 0; i < node._observers.length; i++){\n            notify(node._observers[i], STATE_CHECK);\n        }\n    }\n}\nfunction removeSourceObservers(node, index) {\n    let source, swap;\n    for(let i = index; i < node._sources.length; i++){\n        source = node._sources[i];\n        if (source._observers) {\n            swap = source._observers.indexOf(node);\n            source._observers[swap] = source._observers[source._observers.length - 1];\n            source._observers.pop();\n        }\n    }\n}\nfunction signal(initialValue, options) {\n    const node = createComputation(initialValue, null, options), signal2 = read.bind(node);\n    signal2.node = node;\n    signal2[SCOPE] = true;\n    signal2.set = write.bind(node);\n    return signal2;\n}\nfunction isReadSignal(fn) {\n    return isFunction$1(fn) && SCOPE in fn;\n}\nfunction computed(compute2, options) {\n    const node = createComputation(options === null || options === void 0 ? void 0 : options.initial, compute2, options), signal2 = read.bind(node);\n    signal2[SCOPE] = true;\n    signal2.node = node;\n    return signal2;\n}\nfunction effect$1(effect2, options) {\n    var _options_id;\n    const signal2 = createComputation(null, function runEffect() {\n        let effectResult = effect2();\n        isFunction$1(effectResult) && onDispose(effectResult);\n        return null;\n    }, {\n        id: (_options_id = options === null || options === void 0 ? void 0 : options.id) !== null && _options_id !== void 0 ? _options_id : \"effect\"\n    });\n    signal2._effect = true;\n    update(signal2);\n    {\n        return function stopEffect() {\n            dispose.call(signal2, true);\n        };\n    }\n}\nfunction isWriteSignal(fn) {\n    return isReadSignal(fn) && \"set\" in fn;\n}\nfunction noop() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n}\nfunction isNull(value) {\n    return value === null;\n}\nfunction isUndefined(value) {\n    return typeof value === \"undefined\";\n}\nfunction isNil(value) {\n    return isNull(value) || isUndefined(value);\n}\nfunction isObject(value) {\n    return (value === null || value === void 0 ? void 0 : value.constructor) === Object;\n}\nfunction isNumber(value) {\n    return typeof value === \"number\" && !Number.isNaN(value);\n}\nfunction isString(value) {\n    return typeof value === \"string\";\n}\nfunction isBoolean(value) {\n    return typeof value === \"boolean\";\n}\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\nfunction isArray(value) {\n    return Array.isArray(value);\n}\nconst effect = IS_SERVER ? serverEffect : effect$1;\nfunction serverEffect(effect2, options) {\n    var _process_env;\n    if (typeof process !== \"undefined\" && ((_process_env = process.env) === null || _process_env === void 0 ? void 0 : \"development\") === \"test\") {\n        return effect$1(effect2, options);\n    }\n    return noop;\n}\nvar _a$1;\nconst EVENT = IS_SERVER ? class Event2 {\n} : Event, DOM_EVENT = Symbol(\"DOM_EVENT\");\nclass DOMEvent extends EVENT {\n    /**\n   * The preceding event that was responsible for this event being fired.\n   */ get trigger() {\n        return this.triggers.source;\n    }\n    /**\n   * The origin event that lead to this event being fired.\n   */ get originEvent() {\n        return this.triggers.origin;\n    }\n    /**\n   * Whether the origin event was triggered by the user.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/isTrusted}\n   */ get isOriginTrusted() {\n        var _this_triggers_origin;\n        var _this_triggers_origin_isTrusted;\n        return (_this_triggers_origin_isTrusted = (_this_triggers_origin = this.triggers.origin) === null || _this_triggers_origin === void 0 ? void 0 : _this_triggers_origin.isTrusted) !== null && _this_triggers_origin_isTrusted !== void 0 ? _this_triggers_origin_isTrusted : false;\n    }\n    constructor(type, ...init){\n        var _init_, _init_1;\n        super(type, init[0]);\n        this[_a$1] = true;\n        this.triggers = new EventTriggers();\n        this.detail = (_init_ = init[0]) === null || _init_ === void 0 ? void 0 : _init_.detail;\n        const trigger = (_init_1 = init[0]) === null || _init_1 === void 0 ? void 0 : _init_1.trigger;\n        if (trigger) this.triggers.add(trigger);\n    }\n}\n_a$1 = DOM_EVENT;\nclass EventTriggers {\n    get source() {\n        return this.chain[0];\n    }\n    get origin() {\n        return this.chain[this.chain.length - 1];\n    }\n    /**\n   * Appends the event to the end of the chain.\n   */ add(event) {\n        this.chain.push(event);\n        if (isDOMEvent(event)) {\n            this.chain.push(...event.triggers);\n        }\n    }\n    /**\n   * Removes the event from the chain and returns it (if found).\n   */ remove(event) {\n        return this.chain.splice(this.chain.indexOf(event), 1)[0];\n    }\n    /**\n   * Returns whether the chain contains the given `event`.\n   */ has(event) {\n        return this.chain.some((e)=>e === event);\n    }\n    /**\n   * Returns whether the chain contains the given event type.\n   */ hasType(type) {\n        return !!this.findType(type);\n    }\n    /**\n   * Returns the first event with the given `type` found in the chain.\n   */ findType(type) {\n        return this.chain.find((e)=>e.type === type);\n    }\n    /**\n   * Walks an event chain on a given `event`, and invokes the given `callback` for each trigger event.\n   */ walk(callback) {\n        for (const event of this.chain){\n            const returnValue = callback(event);\n            if (returnValue) return [\n                event,\n                returnValue\n            ];\n        }\n    }\n    [Symbol.iterator]() {\n        return this.chain.values();\n    }\n    constructor(){\n        this.chain = [];\n    }\n}\nfunction isDOMEvent(event) {\n    return !!(event === null || event === void 0 ? void 0 : event[DOM_EVENT]);\n}\nfunction walkTriggerEventChain(event, callback) {\n    if (!isDOMEvent(event)) return;\n    return event.triggers.walk(callback);\n}\nfunction findTriggerEvent(event, type) {\n    return isDOMEvent(event) ? event.triggers.findType(type) : void 0;\n}\nfunction hasTriggerEvent(event, type) {\n    return !!findTriggerEvent(event, type);\n}\nfunction appendTriggerEvent(event, trigger) {\n    if (trigger) event.triggers.add(trigger);\n}\nclass EventsTarget extends EventTarget {\n    addEventListener(type, callback, options) {\n        return super.addEventListener(type, callback, options);\n    }\n    removeEventListener(type, callback, options) {\n        return super.removeEventListener(type, callback, options);\n    }\n}\nfunction listenEvent(target, type, handler1, options) {\n    if (IS_SERVER) return noop;\n    target.addEventListener(type, handler1, options);\n    return onDispose(()=>target.removeEventListener(type, handler1, options));\n}\nfunction isPointerEvent(event) {\n    return !!(event === null || event === void 0 ? void 0 : event.type.startsWith(\"pointer\"));\n}\nfunction isTouchEvent(event) {\n    return !!(event === null || event === void 0 ? void 0 : event.type.startsWith(\"touch\"));\n}\nfunction isMouseEvent(event) {\n    var _event_type;\n    return /^(click|mouse)/.test((_event_type = event === null || event === void 0 ? void 0 : event.type) !== null && _event_type !== void 0 ? _event_type : \"\");\n}\nfunction isKeyboardEvent(event) {\n    return !!(event === null || event === void 0 ? void 0 : event.type.startsWith(\"key\"));\n}\nfunction wasEnterKeyPressed(event) {\n    return isKeyboardEvent(event) && event.key === \"Enter\";\n}\nfunction isKeyboardClick(event) {\n    return isKeyboardEvent(event) && (event.key === \"Enter\" || event.key === \" \");\n}\nfunction isDOMNode(node) {\n    return node instanceof Node;\n}\nfunction setAttribute(host, name, value) {\n    if (!host) return;\n    else if (!value && value !== \"\" && value !== 0) {\n        host.removeAttribute(name);\n    } else {\n        const attrValue = value === true ? \"\" : value + \"\";\n        if (host.getAttribute(name) !== attrValue) {\n            host.setAttribute(name, attrValue);\n        }\n    }\n}\nfunction setStyle(host, property, value) {\n    if (!host) return;\n    else if (!value && value !== 0) {\n        host.style.removeProperty(property);\n    } else {\n        host.style.setProperty(property, value + \"\");\n    }\n}\nfunction toggleClass(host, name, value) {\n    host.classList[value ? \"add\" : \"remove\"](name);\n}\nfunction unwrapDeep(fn) {\n    let value = fn;\n    while(typeof value === \"function\")value = value.call(this);\n    return value;\n}\nfunction createContext(provide) {\n    return {\n        id: Symbol(),\n        provide\n    };\n}\nfunction provideContext(context, value) {\n    let scope = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : getScope();\n    var _context_provide;\n    if (!scope) {\n        throw Error(\"[maverick] attempting to provide context outside root\");\n    }\n    const hasProvidedValue = !isUndefined(value);\n    if (!hasProvidedValue && !context.provide) {\n        throw Error(\"[maverick] context can not be provided without a value or `provide` function\");\n    }\n    setContext(context.id, hasProvidedValue ? value : (_context_provide = context.provide) === null || _context_provide === void 0 ? void 0 : _context_provide.call(context), scope);\n}\nfunction useContext(context) {\n    const value = getContext(context.id);\n    if (isUndefined(value)) {\n        throw Error(\"[maverick] attempting to use context without providing first\");\n    }\n    return value;\n}\nfunction hasProvidedContext(context) {\n    return !isUndefined(getContext(context.id));\n}\nconst PROPS = /* @__PURE__ */ Symbol(\"PROPS\");\nconst METHODS = /* @__PURE__ */ Symbol(\"METHODS\");\nconst ON_DISPATCH = /* @__PURE__ */ Symbol(\"ON_DISPATCH\");\nvar _a;\nconst EMPTY_PROPS = {};\nclass Instance {\n    _setup() {\n        scoped(()=>{\n            for (const callback of this._setupCallbacks)callback();\n        }, this._scope);\n    }\n    _attach(el) {\n        if (this._el) return;\n        this._el = el;\n        this.$el.set(el);\n        {\n            var _this__component;\n            el.$$COMPONENT_NAME = (_this__component = this._component) === null || _this__component === void 0 ? void 0 : _this__component.constructor.name;\n        }\n        scoped(()=>{\n            this._attachScope = createScope();\n            scoped(()=>{\n                for (const callback of this._attachCallbacks)callback(this._el);\n                this._attachAttrs();\n                this._attachStyles();\n            }, this._attachScope);\n        }, this._scope);\n        el.dispatchEvent(new Event(\"attached\"));\n    }\n    _detach() {\n        var _this__attachScope;\n        (_this__attachScope = this._attachScope) === null || _this__attachScope === void 0 ? void 0 : _this__attachScope.dispose();\n        this._attachScope = null;\n        this._connectScope = null;\n        if (this._el) {\n            this._el.$$COMPONENT_NAME = null;\n        }\n        this._el = null;\n        this.$el.set(null);\n    }\n    _connect() {\n        if (!this._el || !this._attachScope || !this._connectCallbacks.length) return;\n        scoped(()=>{\n            this._connectScope = createScope();\n            scoped(()=>{\n                for (const callback of this._connectCallbacks)callback(this._el);\n            }, this._connectScope);\n        }, this._attachScope);\n    }\n    _disconnect() {\n        var _this__connectScope;\n        (_this__connectScope = this._connectScope) === null || _this__connectScope === void 0 ? void 0 : _this__connectScope.dispose();\n        this._connectScope = null;\n    }\n    _destroy() {\n        if (this._destroyed) return;\n        this._destroyed = true;\n        scoped(()=>{\n            for (const callback of this._destroyCallbacks)callback(this._el);\n        }, this._scope);\n        const el = this._el;\n        this._detach();\n        this._scope.dispose();\n        this._setupCallbacks.length = 0;\n        this._attachCallbacks.length = 0;\n        this._connectCallbacks.length = 0;\n        this._destroyCallbacks.length = 0;\n        this._component = null;\n        this._attrs = null;\n        this._styles = null;\n        this._props = EMPTY_PROPS;\n        this._scope = null;\n        this._state = EMPTY_PROPS;\n        this._$state = null;\n        if (el) delete el.$;\n    }\n    _addHooks(target) {\n        if (target.onSetup) this._setupCallbacks.push(target.onSetup.bind(target));\n        if (target.onAttach) this._attachCallbacks.push(target.onAttach.bind(target));\n        if (target.onConnect) this._connectCallbacks.push(target.onConnect.bind(target));\n        if (target.onDestroy) this._destroyCallbacks.push(target.onDestroy.bind(target));\n    }\n    _attachAttrs() {\n        if (!this._attrs) return;\n        for (const name of Object.keys(this._attrs)){\n            if (IS_SERVER) {\n                setAttribute(this._el, name, unwrapDeep.call(this._component, this._attrs[name]));\n            } else if (isFunction(this._attrs[name])) {\n                effect(this._setAttr.bind(this, name));\n            } else {\n                setAttribute(this._el, name, this._attrs[name]);\n            }\n        }\n    }\n    _attachStyles() {\n        if (!this._styles) return;\n        for (const name of Object.keys(this._styles)){\n            if (IS_SERVER) {\n                setStyle(this._el, name, unwrapDeep.call(this._component, this._styles[name]));\n            } else if (isFunction(this._styles[name])) {\n                effect(this._setStyle.bind(this, name));\n            } else {\n                setStyle(this._el, name, this._styles[name]);\n            }\n        }\n    }\n    _setAttr(name) {\n        setAttribute(this._el, name, this._attrs[name].call(this._component));\n    }\n    _setStyle(name) {\n        setStyle(this._el, name, this._styles[name].call(this._component));\n    }\n    constructor(Component2, scope, init){\n        this[_a] = null;\n        this.$el = signal(null);\n        this._el = null;\n        this._scope = null;\n        this._attachScope = null;\n        this._connectScope = null;\n        this._component = null;\n        this._destroyed = false;\n        this._props = EMPTY_PROPS;\n        this._attrs = null;\n        this._styles = null;\n        this._setupCallbacks = [];\n        this._attachCallbacks = [];\n        this._connectCallbacks = [];\n        this._destroyCallbacks = [];\n        this._scope = scope;\n        if (init === null || init === void 0 ? void 0 : init.scope) init.scope.append(scope);\n        let stateFactory = Component2.state, props = Component2.props;\n        if (stateFactory) {\n            this._$state = stateFactory.create();\n            this._state = new Proxy(this._$state, {\n                get: (_, prop2)=>this._$state[prop2]()\n            });\n            provideContext(stateFactory, this._$state);\n        }\n        if (props) {\n            this._props = createInstanceProps(props);\n            if (init === null || init === void 0 ? void 0 : init.props) {\n                for (const prop2 of Object.keys(init.props)){\n                    var _this__props_prop2;\n                    (_this__props_prop2 = this._props[prop2]) === null || _this__props_prop2 === void 0 ? void 0 : _this__props_prop2.set(init.props[prop2]);\n                }\n            }\n        }\n        onDispose(this._destroy.bind(this));\n    }\n}\n_a = ON_DISPATCH;\nfunction createInstanceProps(props) {\n    const $props = {};\n    for (const name of Object.keys(props)){\n        const def = props[name];\n        $props[name] = signal(def, def);\n    }\n    return $props;\n}\nlet currentInstance = {\n    $$: null\n};\nfunction createComponent(Component2, init) {\n    return root(()=>{\n        currentInstance.$$ = new Instance(Component2, getScope(), init);\n        const component = new Component2();\n        currentInstance.$$._component = component;\n        currentInstance.$$ = null;\n        return component;\n    });\n}\nclass ViewController extends EventTarget {\n    get el() {\n        return this.$$._el;\n    }\n    get $el() {\n        return this.$$.$el();\n    }\n    get scope() {\n        return this.$$._scope;\n    }\n    get attachScope() {\n        return this.$$._attachScope;\n    }\n    get connectScope() {\n        return this.$$._connectScope;\n    }\n    /** @internal */ get $props() {\n        return this.$$._props;\n    }\n    /** @internal */ get $state() {\n        return this.$$._$state;\n    }\n    get state() {\n        return this.$$._state;\n    }\n    attach(param) {\n        let { $$ } = param;\n        this.$$ = $$;\n        $$._addHooks(this);\n        return this;\n    }\n    addEventListener(type, callback, options) {\n        if (!this.el) {\n            const name = this.constructor.name;\n            console.warn(\"[maverick] adding event listener to `\".concat(name, \"` before element is attached\"));\n        }\n        this.listen(type, callback, options);\n    }\n    removeEventListener(type, callback, options) {\n        var _this_el;\n        (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.removeEventListener(type, callback, options);\n    }\n    /**\n   * This method can be used to specify attributes that should be set on the host element. Any\n   * attributes that are assigned to a function will be considered a signal and updated accordingly.\n   */ setAttributes(attributes) {\n        if (!this.$$._attrs) this.$$._attrs = {};\n        Object.assign(this.$$._attrs, attributes);\n    }\n    /**\n   * This method can be used to specify styles that should set be set on the host element. Any\n   * styles that are assigned to a function will be considered a signal and updated accordingly.\n   */ setStyles(styles) {\n        if (!this.$$._styles) this.$$._styles = {};\n        Object.assign(this.$$._styles, styles);\n    }\n    /**\n   * This method is used to satisfy the CSS variables contract specified on the current\n   * component. Other CSS variables can be set via the `setStyles` method.\n   */ setCSSVars(vars) {\n        this.setStyles(vars);\n    }\n    /**\n   * Type-safe utility for creating component DOM events.\n   */ createEvent(type) {\n        for(var _len = arguments.length, init = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n            init[_key - 1] = arguments[_key];\n        }\n        return new DOMEvent(type, init[0]);\n    }\n    /**\n   * Creates a `DOMEvent` and dispatches it from the host element. This method is typed to\n   * match all component events.\n   */ dispatch(type) {\n        for(var _len = arguments.length, init = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n            init[_key - 1] = arguments[_key];\n        }\n        if (IS_SERVER || !this.el) return false;\n        const event = type instanceof Event ? type : new DOMEvent(type, init[0]);\n        Object.defineProperty(event, \"target\", {\n            get: ()=>this.$$._component\n        });\n        return untrack(()=>{\n            var _this_$$_ON_DISPATCH, _this_$$;\n            (_this_$$_ON_DISPATCH = (_this_$$ = this.$$)[ON_DISPATCH]) === null || _this_$$_ON_DISPATCH === void 0 ? void 0 : _this_$$_ON_DISPATCH.call(_this_$$, event);\n            return this.el.dispatchEvent(event);\n        });\n    }\n    dispatchEvent(event) {\n        return this.dispatch(event);\n    }\n    /**\n   * Adds an event listener for the given `type` and returns a function which can be invoked to\n   * remove the event listener.\n   *\n   * - The listener is removed if the current scope is disposed.\n   * - This method is safe to use on the server (noop).\n   */ listen(type, handler1, options) {\n        if (IS_SERVER || !this.el) return noop;\n        return listenEvent(this.el, type, handler1, options);\n    }\n    constructor(){\n        super();\n        if (currentInstance.$$) this.attach(currentInstance);\n    }\n}\nclass Component extends ViewController {\n    subscribe(callback) {\n        if (!this.state) {\n            const name = this.constructor.name;\n            throw Error(\"[maverick] component `\".concat(name, \"` can not be subscribed to because it has no internal state\"));\n        }\n        return scoped(()=>effect(()=>callback(this.state)), this.$$._scope);\n    }\n    destroy() {\n        this.$$._destroy();\n    }\n}\nfunction prop(target, propertyKey, descriptor) {\n    if (!target[PROPS]) target[PROPS] = /* @__PURE__ */ new Set();\n    target[PROPS].add(propertyKey);\n}\nfunction method(target, propertyKey, descriptor) {\n    if (!target[METHODS]) target[METHODS] = /* @__PURE__ */ new Set();\n    target[METHODS].add(propertyKey);\n}\nclass State {\n    create() {\n        const store = {}, state = new Proxy(store, {\n            get: (_, prop2)=>store[prop2]()\n        });\n        for (const name of Object.keys(this.record)){\n            const getter = this._descriptors[name].get;\n            store[name] = getter ? computed(getter.bind(state)) : signal(this.record[name]);\n        }\n        return store;\n    }\n    reset(record, filter) {\n        for (const name of Object.keys(record)){\n            if (!this._descriptors[name].get && (!filter || filter(name))) {\n                record[name].set(this.record[name]);\n            }\n        }\n    }\n    constructor(record){\n        this.id = Symbol(\"STATE\");\n        this.record = record;\n        this._descriptors = Object.getOwnPropertyDescriptors(record);\n    }\n}\nfunction useState(state) {\n    _s();\n    return useContext(state);\n}\n_s(useState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction camelToKebabCase(str) {\n    return str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\nfunction kebabToCamelCase(str) {\n    return str.replace(/-./g, (x)=>x[1].toUpperCase());\n}\nfunction kebabToPascalCase(str) {\n    return kebabToTitleCase(str).replace(/\\s/g, \"\");\n}\nfunction kebabToTitleCase(str) {\n    return uppercaseFirstChar(str.replace(/-./g, (x)=>\" \" + x[1].toUpperCase()));\n}\nfunction uppercaseFirstChar(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst ReactScopeContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n    current: null\n});\nReactScopeContext.displayName = \"Scope\";\nfunction WithScope(scope) {\n    for(var _len = arguments.length, children = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        children[_key - 1] = arguments[_key];\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ReactScopeContext.Provider, {\n        value: scope\n    }, ...children);\n}\n_c2 = WithScope;\nfunction useReactScope() {\n    _s1();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useContext(ReactScopeContext).current;\n}\n_s1(useReactScope, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction useReactContext(context) {\n    _s2();\n    const scope = useReactScope();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>getContext(context.id, scope), [\n        scope\n    ]);\n}\n_s2(useReactContext, \"C2hUPm8MfGsyNyd8w4BbPKPAfkg=\", false, function() {\n    return [\n        useReactScope\n    ];\n});\nconst _ScopeProvider = class _ScopeProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    render() {\n        var _this_props;\n        return WithScope(this._scope, (_this_props = this.props) === null || _this_props === void 0 ? void 0 : _this_props.children);\n    }\n    constructor(props, context){\n        var _Ctor__provide;\n        super(props);\n        this._scope = {\n            current: createScope()\n        };\n        if (context) context.append(this._scope.current);\n        const Ctor = this.constructor;\n        if (Ctor._context) provideContext(Ctor._context, (_Ctor__provide = Ctor._provide) === null || _Ctor__provide === void 0 ? void 0 : _Ctor__provide.call(Ctor), this._scope.current);\n    }\n};\n_ScopeProvider.contextType = ReactScopeContext;\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction composeRefs() {\n    for(var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++){\n        refs[_key] = arguments[_key];\n    }\n    return (node)=>refs.forEach((ref)=>setRef(ref, node));\n}\nfunction createClientComponent(Component2, options) {\n    var _s = $RefreshSig$();\n    const forwardComponent = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s((props, forwardRef)=>{\n        _s();\n        let parentScopeRef = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ReactScopeContext), scopeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), stateRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n        if (!stateRef.current) {\n            const state2 = createInternalState(), component = initComponent(Component2, state2, props, parentScopeRef.current);\n            state2._component = component;\n            stateRef.current = state2;\n            scopeRef.current = component.scope;\n        }\n        function onAttach() {\n            let state2 = stateRef.current, scope = parentScopeRef.current;\n            window.cancelAnimationFrame(state2._destroyId);\n            state2._destroyId = -1;\n            if (state2._component.$$._destroyed) {\n                const component = initComponent(Component2, state2, props, scope);\n                state2._component = component;\n                state2._attached = false;\n                state2._forwardedRef = false;\n                scopeRef.current = component.scope;\n            }\n            if (state2._el) {\n                attachToHost(state2, state2._el);\n            }\n            if (!state2._forwardedRef) {\n                setRef(forwardRef, state2._component);\n                state2._forwardedRef = true;\n            }\n            return ()=>detachFromHost(state2);\n        }\n        function onRefChange(el) {\n            const state2 = stateRef.current;\n            if (!state2._forwardedRef) {\n                state2._el = el;\n                return;\n            }\n            window.cancelAnimationFrame(state2._refChangeId);\n            state2._refChangeId = window.requestAnimationFrame(()=>{\n                const state3 = stateRef.current;\n                state3._refChangeId = -1;\n                if (state3._el === el) return;\n                detachFromHost(state3);\n                if (el) attachToHost(state3, el);\n                state3._el = el;\n            });\n        }\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n            const state2 = stateRef.current;\n            window.cancelAnimationFrame(state2._destroyId);\n            state2._destroyId = -1;\n            return function onDestroy() {\n                if (!isFunction(props.children)) return;\n                window.cancelAnimationFrame(state2._refChangeId);\n                state2._refChangeId = -1;\n                window.cancelAnimationFrame(state2._connectId);\n                state2._connectId = -1;\n                window.cancelAnimationFrame(state2._destroyId);\n                state2._destroyId = window.requestAnimationFrame(()=>{\n                    state2._destroyId = -1;\n                    detachFromHost(state2);\n                    state2._component.$$._destroy();\n                    state2._component.$$[ON_DISPATCH] = null;\n                    state2._callbacks = {};\n                    state2._domCallbacks = {};\n                    scopeRef.current = null;\n                });\n            };\n        }, []);\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect(tick);\n        let state = stateRef.current, { children, ...__props } = props, attrs = {}, prevPropNames = state._prevProps, newPropNames = Object.keys(__props);\n        state._callbacks = {};\n        for (const name of [\n            ...prevPropNames,\n            ...newPropNames\n        ]){\n            var _options_events, _options_eventsRE, _options_domEvents, _options_domEventsRE;\n            if (options.props.has(name)) {\n                var _Component2_props;\n                state._component.$props[name].set(// If the prop was removed we'll use the default value provided on Component creation.\n                isUndefined(__props[name]) ? (_Component2_props = Component2.props) === null || _Component2_props === void 0 ? void 0 : _Component2_props[name] : __props[name]);\n            } else if (((_options_events = options.events) === null || _options_events === void 0 ? void 0 : _options_events.has(name)) || ((_options_eventsRE = options.eventsRE) === null || _options_eventsRE === void 0 ? void 0 : _options_eventsRE.test(name))) {\n                state._callbacks[name] = __props[name];\n            } else if (((_options_domEvents = options.domEvents) === null || _options_domEvents === void 0 ? void 0 : _options_domEvents.has(name)) || ((_options_domEventsRE = options.domEventsRE) === null || _options_domEventsRE === void 0 ? void 0 : _options_domEventsRE.test(name))) {\n                var _state__listening;\n                let type = camelToKebabCase(name.slice(2));\n                state._domCallbacks[type] = __props[name];\n                if (!newPropNames.includes(name)) {\n                    var _state__el, _state__listening1;\n                    (_state__el = state._el) === null || _state__el === void 0 ? void 0 : _state__el.removeEventListener(type, state._onDOMEvent);\n                    (_state__listening1 = state._listening) === null || _state__listening1 === void 0 ? void 0 : _state__listening1.delete(type);\n                } else if (state._el && !((_state__listening = state._listening) === null || _state__listening === void 0 ? void 0 : _state__listening.has(type))) {\n                    if (!state._listening) state._listening = /* @__PURE__ */ new Set();\n                    state._listening.add(type);\n                    state._el.addEventListener(type, state._onDOMEvent);\n                }\n            } else {\n                attrs[name] = __props[name];\n            }\n        }\n        state._prevProps = newPropNames;\n        return WithScope(scopeRef, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AttachEffect, {\n            effect: onAttach\n        }), isFunction(children) ? children === null || children === void 0 ? void 0 : children({\n            ...attrs,\n            suppressHydrationWarning: true,\n            ref: onRefChange\n        }, state._component) : children);\n    }, \"cEv7MpsnvUlx1g4VlHX0pe62t70=\"));\n    forwardComponent.displayName = Component2.name + \"Bridge\";\n    return forwardComponent;\n}\nfunction AttachEffect(param) {\n    let { effect: effect2 } = param;\n    _s3();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(effect2, []);\n    return null;\n}\n_s3(AttachEffect, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = AttachEffect;\nconst eventTypeToCallbackName = /* @__PURE__ */ new Map();\nfunction createInternalState() {\n    const state = {\n        _el: null,\n        _prevProps: [],\n        _callbacks: {},\n        _domCallbacks: {},\n        _refChangeId: -1,\n        _connectId: -1,\n        _destroyId: -1,\n        _attached: false,\n        _forwardedRef: false,\n        _listening: null,\n        _onDOMEvent (event) {\n            var _state__domCallbacks_event_type, _state__domCallbacks;\n            const args = !isUndefined(event.detail) ? [\n                event.detail,\n                event\n            ] : [\n                event\n            ];\n            (_state__domCallbacks_event_type = (_state__domCallbacks = state._domCallbacks)[event.type]) === null || _state__domCallbacks_event_type === void 0 ? void 0 : _state__domCallbacks_event_type.call(_state__domCallbacks, ...args);\n        }\n    };\n    return state;\n}\nfunction attachToHost(state, el) {\n    if (state._el === el && state._attached) return;\n    else if (state._attached) detachFromHost(state);\n    if (state._domCallbacks) {\n        if (!state._listening) state._listening = /* @__PURE__ */ new Set();\n        for (const type of Object.keys(state._domCallbacks)){\n            if (state._listening.has(type)) continue;\n            el.addEventListener(type, state._onDOMEvent);\n            state._listening.add(type);\n        }\n    }\n    state._component.$$._attach(el);\n    state._connectId = window.requestAnimationFrame(()=>{\n        state._component.$$._connect();\n        state._connectId = -1;\n    });\n    state._attached = true;\n}\nfunction detachFromHost(state) {\n    if (!state._attached) return;\n    window.cancelAnimationFrame(state._connectId);\n    state._connectId = -1;\n    state._component.$$._detach();\n    state._attached = false;\n    if (state._el && state._listening) {\n        for (const type of state._listening){\n            state._el.removeEventListener(type, state._onDOMEvent);\n        }\n        state._listening.clear();\n    }\n}\nfunction onDispatch(event) {\n    var _this__callbacks_callbackProp, _this__callbacks;\n    let callbackProp = eventTypeToCallbackName.get(event.type), args = !isUndefined(event.detail) ? [\n        event.detail,\n        event\n    ] : [\n        event\n    ];\n    if (!callbackProp) {\n        eventTypeToCallbackName.set(event.type, callbackProp = \"on\".concat(kebabToPascalCase(event.type)));\n    }\n    (_this__callbacks_callbackProp = (_this__callbacks = this._callbacks)[callbackProp]) === null || _this__callbacks_callbackProp === void 0 ? void 0 : _this__callbacks_callbackProp.call(_this__callbacks, ...args);\n}\nfunction initComponent(Component2, state, props, scope) {\n    const component = createComponent(Component2, {\n        props,\n        scope\n    });\n    component.$$[ON_DISPATCH] = onDispatch.bind(state);\n    component.$$._setup();\n    return component;\n}\nfunction escape(value) {\n    let isAttr = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    const type = typeof value;\n    if (type !== \"string\") {\n        if (!isAttr && type === \"function\") return escape(value());\n        if (isAttr && type === \"boolean\") return value + \"\";\n        return value;\n    }\n    const delimeter = isAttr ? '\"' : \"<\", escapeDelimeter = isAttr ? \"&quot;\" : \"&lt;\";\n    let iDelimeter = value.indexOf(delimeter), isAmpersand = value.indexOf(\"&\");\n    if (iDelimeter < 0 && isAmpersand < 0) return value;\n    let left = 0, out = \"\";\n    while(iDelimeter >= 0 && isAmpersand >= 0){\n        if (iDelimeter < isAmpersand) {\n            if (left < iDelimeter) out += value.substring(left, iDelimeter);\n            out += escapeDelimeter;\n            left = iDelimeter + 1;\n            iDelimeter = value.indexOf(delimeter, left);\n        } else {\n            if (left < isAmpersand) out += value.substring(left, isAmpersand);\n            out += \"&amp;\";\n            left = isAmpersand + 1;\n            isAmpersand = value.indexOf(\"&\", left);\n        }\n    }\n    if (iDelimeter >= 0) {\n        do {\n            if (left < iDelimeter) out += value.substring(left, iDelimeter);\n            out += escapeDelimeter;\n            left = iDelimeter + 1;\n            iDelimeter = value.indexOf(delimeter, left);\n        }while (iDelimeter >= 0);\n    } else while(isAmpersand >= 0){\n        if (left < isAmpersand) out += value.substring(left, isAmpersand);\n        out += \"&amp;\";\n        left = isAmpersand + 1;\n        isAmpersand = value.indexOf(\"&\", left);\n    }\n    return left < value.length ? out + value.substring(left) : out;\n}\nconst SETUP = /* @__PURE__ */ Symbol(\"SETUP\");\nconst classSplitRE = /\\s+/;\nfunction parseClassAttr(tokens, attrValue) {\n    const classes = attrValue.trim().split(classSplitRE);\n    for (const token of classes)tokens.add(token);\n}\nconst styleSplitRE = /\\s*:\\s*/;\nconst stylesDelimeterRE = /\\s*;\\s*/;\nfunction parseStyleAttr(tokens, attrValue) {\n    const styles = attrValue.trim().split(stylesDelimeterRE);\n    for(let i = 0; i < styles.length; i++){\n        if (styles[i] === \"\") continue;\n        const [name, value] = styles[i].split(styleSplitRE);\n        tokens.set(name, value);\n    }\n}\nclass MaverickServerElement {\n    get $props() {\n        return this.$.$$._props;\n    }\n    get $state() {\n        return this.$.$$._$state;\n    }\n    get state() {\n        return this.$.state;\n    }\n    setup() {\n        const instance = this.$.$$;\n        scoped(()=>{\n            if (this.hasAttribute(\"class\")) {\n                parseClassAttr(this.classList.tokens, this.getAttribute(\"class\"));\n            }\n            if (this.hasAttribute(\"style\")) {\n                parseStyleAttr(this.style.tokens, this.getAttribute(\"style\"));\n            }\n            instance._setup();\n            instance._attach(this);\n            if (this.classList.length > 0) {\n                this.setAttribute(\"class\", this.classList.toString());\n            }\n            if (this.style.length > 0) {\n                this.setAttribute(\"style\", this.style.toString());\n            }\n            if (this.keepAlive) {\n                this.setAttribute(\"keep-alive\", \"\");\n            }\n        }, instance._scope);\n    }\n    getAttribute(name) {\n        return this.attributes.getAttribute(name);\n    }\n    setAttribute(name, value) {\n        this.attributes.setAttribute(name, value);\n    }\n    hasAttribute(name) {\n        return this.attributes.hasAttribute(name);\n    }\n    removeAttribute(name) {\n        return this.attributes.removeAttribute(name);\n    }\n    [SETUP]() {}\n    addEventListener() {}\n    removeEventListener() {}\n    dispatchEvent() {\n        return false;\n    }\n    subscribe() {\n        return noop;\n    }\n    destroy() {\n        this.$.destroy();\n    }\n    constructor(component){\n        this.keepAlive = false;\n        this.forwardKeepAlive = true;\n        this.attributes = new ServerAttributes();\n        this.style = new ServerStyle();\n        this.classList = new ServerClassList();\n        this.$ = component;\n    }\n}\nclass ServerAttributes {\n    get length() {\n        return this._tokens.size;\n    }\n    get tokens() {\n        return this._tokens;\n    }\n    getAttribute(name) {\n        var _this__tokens_get;\n        return (_this__tokens_get = this._tokens.get(name)) !== null && _this__tokens_get !== void 0 ? _this__tokens_get : null;\n    }\n    hasAttribute(name) {\n        return this._tokens.has(name);\n    }\n    setAttribute(name, value) {\n        this._tokens.set(name, value + \"\");\n    }\n    removeAttribute(name) {\n        this._tokens.delete(name);\n    }\n    toString() {\n        if (this._tokens.size === 0) return \"\";\n        let result = \"\";\n        for (const [name, value] of this._tokens){\n            result += \" \".concat(name, '=\"').concat(escape(value, true), '\"');\n        }\n        return result;\n    }\n    constructor(){\n        this._tokens = /* @__PURE__ */ new Map();\n    }\n}\nclass ServerStyle {\n    get length() {\n        return this._tokens.size;\n    }\n    get tokens() {\n        return this._tokens;\n    }\n    getPropertyValue(prop2) {\n        var _this__tokens_get;\n        return (_this__tokens_get = this._tokens.get(prop2)) !== null && _this__tokens_get !== void 0 ? _this__tokens_get : \"\";\n    }\n    setProperty(prop2, value) {\n        this._tokens.set(prop2, value !== null && value !== void 0 ? value : \"\");\n    }\n    removeProperty(prop2) {\n        const value = this._tokens.get(prop2);\n        this._tokens.delete(prop2);\n        return value !== null && value !== void 0 ? value : \"\";\n    }\n    toString() {\n        if (this._tokens.size === 0) return \"\";\n        let result = \"\";\n        for (const [name, value] of this._tokens){\n            result += \"\".concat(name, \": \").concat(value, \";\");\n        }\n        return result;\n    }\n    constructor(){\n        this._tokens = /* @__PURE__ */ new Map();\n    }\n}\nclass ServerClassList {\n    get length() {\n        return this._tokens.size;\n    }\n    get tokens() {\n        return this._tokens;\n    }\n    add() {\n        for(var _len = arguments.length, tokens = new Array(_len), _key = 0; _key < _len; _key++){\n            tokens[_key] = arguments[_key];\n        }\n        for (const token of tokens){\n            this._tokens.add(token);\n        }\n    }\n    contains(token) {\n        return this._tokens.has(token);\n    }\n    remove(token) {\n        this._tokens.delete(token);\n    }\n    replace(token, newToken) {\n        if (!this._tokens.has(token)) return false;\n        this._tokens.delete(token);\n        this._tokens.add(newToken);\n        return true;\n    }\n    toggle(token, force) {\n        if (force !== true && (this._tokens.has(token) || force === false)) {\n            this._tokens.delete(token);\n            return false;\n        } else {\n            this._tokens.add(token);\n            return true;\n        }\n    }\n    toString() {\n        return Array.from(this._tokens).join(\" \");\n    }\n    constructor(){\n        this._tokens = /* @__PURE__ */ new Set();\n    }\n}\nconst attrsToProps = {\n    acceptcharset: \"acceptCharset\",\n    \"accept-charset\": \"acceptCharset\",\n    accesskey: \"accessKey\",\n    allowfullscreen: \"allowFullScreen\",\n    autocapitalize: \"autoCapitalize\",\n    autocomplete: \"autoComplete\",\n    autocorrect: \"autoCorrect\",\n    autofocus: \"autoFocus\",\n    autoplay: \"autoPlay\",\n    autosave: \"autoSave\",\n    cellpadding: \"cellPadding\",\n    cellspacing: \"cellSpacing\",\n    charset: \"charSet\",\n    class: \"className\",\n    classid: \"classID\",\n    classname: \"className\",\n    colspan: \"colSpan\",\n    contenteditable: \"contentEditable\",\n    contextmenu: \"contextMenu\",\n    controlslist: \"controlsList\",\n    crossorigin: \"crossOrigin\",\n    dangerouslysetinnerhtml: \"dangerouslySetInnerHTML\",\n    datetime: \"dateTime\",\n    defaultchecked: \"defaultChecked\",\n    defaultvalue: \"defaultValue\",\n    disablepictureinpicture: \"disablePictureInPicture\",\n    disableremoteplayback: \"disableRemotePlayback\",\n    enctype: \"encType\",\n    enterkeyhint: \"enterKeyHint\",\n    fetchpriority: \"fetchPriority\",\n    for: \"htmlFor\",\n    formmethod: \"formMethod\",\n    formaction: \"formAction\",\n    formenctype: \"formEncType\",\n    formnovalidate: \"formNoValidate\",\n    formtarget: \"formTarget\",\n    frameborder: \"frameBorder\",\n    hreflang: \"hrefLang\",\n    htmlfor: \"htmlFor\",\n    httpequiv: \"httpEquiv\",\n    \"http-equiv\": \"httpEquiv\",\n    imagesizes: \"imageSizes\",\n    imagesrcset: \"imageSrcSet\",\n    innerhtml: \"innerHTML\",\n    inputmode: \"inputMode\",\n    itemid: \"itemID\",\n    itemprop: \"itemProp\",\n    itemref: \"itemRef\",\n    itemscope: \"itemScope\",\n    itemtype: \"itemType\",\n    keyparams: \"keyParams\",\n    keytype: \"keyType\",\n    marginwidth: \"marginWidth\",\n    marginheight: \"marginHeight\",\n    maxlength: \"maxLength\",\n    mediagroup: \"mediaGroup\",\n    minlength: \"minLength\",\n    nomodule: \"noModule\",\n    novalidate: \"noValidate\",\n    playsinline: \"playsInline\",\n    radiogroup: \"radioGroup\",\n    readonly: \"readOnly\",\n    referrerpolicy: \"referrerPolicy\",\n    rowspan: \"rowSpan\",\n    spellcheck: \"spellCheck\",\n    srcdoc: \"srcDoc\",\n    srclang: \"srcLang\",\n    srcset: \"srcSet\",\n    tabindex: \"tabIndex\",\n    usemap: \"useMap\"\n};\nfunction createServerComponent(Component2, options) {\n    var _s = $RefreshSig$();\n    function ServerComponent(props) {\n        _s();\n        let scope = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ReactScopeContext), component = createComponent(Component2, {\n            props,\n            scope: scope.current\n        }), host = new MaverickServerElement(component), attrs = {}, { style = {}, children, forwardRef, ...__props } = props;\n        if (options.props.size) {\n            for (const prop2 of Object.keys(__props)){\n                if (!options.props.has(prop2)) attrs[prop2] = __props[prop2];\n            }\n        } else {\n            attrs = __props;\n        }\n        host.setup();\n        if (host.hasAttribute(\"style\")) {\n            for (const [name, value] of host.style.tokens){\n                style[name.startsWith(\"--\") ? name : kebabToCamelCase(name)] = value;\n            }\n            host.removeAttribute(\"style\");\n        }\n        for (const [attrName, attrValue] of host.attributes.tokens){\n            const propName = attrsToProps[attrName];\n            if (propName) {\n                if (!(propName in attrs)) {\n                    attrs[propName] = attrValue;\n                }\n                host.removeAttribute(attrName);\n            }\n        }\n        return WithScope({\n            current: component.$$._scope\n        }, isFunction(children) ? children === null || children === void 0 ? void 0 : children({\n            ...Object.fromEntries(host.attributes.tokens),\n            ...attrs,\n            style\n        }, component) : children, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(()=>{\n            host.destroy();\n            return null;\n        }));\n    }\n    _s(ServerComponent, \"uSSrm4kRrDEQViVV4MWnAgoDBdw=\");\n    ServerComponent.displayName = Component2.name + \"Bridge\";\n    return ServerComponent;\n}\nfunction useStateContext(state) {\n    _s4();\n    return useReactContext(state);\n}\n_s4(useStateContext, \"33lq/yWn43NnofIEum2odi1mkoM=\", false, function() {\n    return [\n        useReactContext\n    ];\n});\nfunction useSignal(signal2, key) {\n    _s5();\n    const [, scheduleReactUpdate] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        return effect$1(()=>{\n            signal2();\n            scheduleReactUpdate({});\n        });\n    }, [\n        key !== null && key !== void 0 ? key : signal2\n    ]);\n    return signal2();\n}\n_s5(useSignal, \"YbVbKtM4rv59JfSay8WbMz64Mhs=\");\nfunction ariaBool(value) {\n    return value ? \"true\" : \"false\";\n}\nfunction createDisposalBin() {\n    const disposal = /* @__PURE__ */ new Set();\n    return {\n        add () {\n            for(var _len = arguments.length, callbacks = new Array(_len), _key = 0; _key < _len; _key++){\n                callbacks[_key] = arguments[_key];\n            }\n            for (const callback of callbacks)disposal.add(callback);\n        },\n        empty () {\n            for (const callback of disposal)callback();\n            disposal.clear();\n        }\n    };\n}\nfunction useDisposalBin() {\n    const disposal = createDisposalBin();\n    onDispose(disposal.empty);\n    return disposal;\n}\nfunction keysOf(obj) {\n    return Object.keys(obj);\n}\nfunction deferredPromise() {\n    let resolve, reject;\n    const promise = new Promise((res, rej)=>{\n        resolve = res;\n        reject = rej;\n    });\n    return {\n        promise,\n        resolve,\n        reject\n    };\n}\nfunction waitTimeout(delay) {\n    return new Promise((resolve)=>setTimeout(resolve, delay));\n}\nfunction animationFrameThrottle(func) {\n    if (IS_SERVER) return noop;\n    let id = -1, lastArgs;\n    function throttle() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        lastArgs = args;\n        if (id >= 0) return;\n        id = window.requestAnimationFrame(()=>{\n            func.apply(this, lastArgs);\n            id = -1;\n            lastArgs = void 0;\n        });\n    }\n    return throttle;\n}\nconst requestIdleCallback = IS_SERVER ? noop : typeof window !== \"undefined\" ? \"requestIdleCallback\" in window ? window.requestIdleCallback : (cb)=>window.setTimeout(cb, 1) : noop;\nfunction waitIdlePeriod(callback, options) {\n    if (IS_SERVER) return Promise.resolve();\n    return new Promise((resolve)=>{\n        requestIdleCallback((deadline)=>{\n            callback === null || callback === void 0 ? void 0 : callback(deadline);\n            resolve();\n        }, options);\n    });\n}\nfunction useSignalRecord($state) {\n    _s6();\n    const [, scheduleReactUpdate] = react__WEBPACK_IMPORTED_MODULE_0__.useState(), tracking = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    if (tracking.current == null) {\n        tracking.current = {\n            state: {},\n            $update: signal({}),\n            props: /* @__PURE__ */ new Set()\n        };\n    }\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        let { state, $update, props } = tracking.current;\n        return effect(()=>{\n            for (const prop2 of props){\n                const value = $state[prop2]();\n                state[prop2] = isArray(value) ? [\n                    ...value\n                ] : value;\n            }\n            $update();\n            scheduleReactUpdate({});\n        });\n    }, [\n        $state\n    ]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        let { state, $update, props } = tracking.current, scheduledUpdate = false;\n        props.clear();\n        return new Proxy(state, {\n            get (_, prop2) {\n                if (!props.has(prop2) && prop2 in $state) {\n                    props.add(prop2);\n                    const value = $state[prop2]();\n                    state[prop2] = isArray(value) ? [\n                        ...value\n                    ] : value;\n                    if (!scheduledUpdate) {\n                        $update.set({});\n                        scheduledUpdate = true;\n                        queueMicrotask(()=>scheduledUpdate = false);\n                    }\n                }\n                return state[prop2];\n            },\n            set (_, prop2, newValue) {\n                if (!(prop2 in $state)) state[prop2] = newValue;\n                return true;\n            }\n        });\n    }, [\n        $state\n    ]);\n}\n_s6(useSignalRecord, \"uhCTmb+zxYU3IzpHW6Y/iZQJAoo=\");\nfunction createReactComponent(Component2, options) {\n    if (IS_SERVER) {\n        return createServerComponent(Component2, {\n            props: new Set(Object.keys(Component2.props || {}))\n        });\n    } else {\n        return createClientComponent(Component2, {\n            props: new Set(Object.keys(Component2.props || {})),\n            events: new Set(options === null || options === void 0 ? void 0 : options.events),\n            eventsRE: options === null || options === void 0 ? void 0 : options.eventsRegex,\n            domEvents: options === null || options === void 0 ? void 0 : options.domEvents,\n            domEventsRE: options === null || options === void 0 ? void 0 : options.domEventsRegex\n        });\n    }\n}\nvar key = {\n    fullscreenEnabled: 0,\n    fullscreenElement: 1,\n    requestFullscreen: 2,\n    exitFullscreen: 3,\n    fullscreenchange: 4,\n    fullscreenerror: 5,\n    fullscreen: 6\n};\nvar webkit = [\n    \"webkitFullscreenEnabled\",\n    \"webkitFullscreenElement\",\n    \"webkitRequestFullscreen\",\n    \"webkitExitFullscreen\",\n    \"webkitfullscreenchange\",\n    \"webkitfullscreenerror\",\n    \"-webkit-full-screen\"\n];\nvar moz = [\n    \"mozFullScreenEnabled\",\n    \"mozFullScreenElement\",\n    \"mozRequestFullScreen\",\n    \"mozCancelFullScreen\",\n    \"mozfullscreenchange\",\n    \"mozfullscreenerror\",\n    \"-moz-full-screen\"\n];\nvar ms = [\n    \"msFullscreenEnabled\",\n    \"msFullscreenElement\",\n    \"msRequestFullscreen\",\n    \"msExitFullscreen\",\n    \"MSFullscreenChange\",\n    \"MSFullscreenError\",\n    \"-ms-fullscreen\"\n];\nvar document$1 = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" ? window.document : {};\nvar vendor = \"fullscreenEnabled\" in document$1 && Object.keys(key) || webkit[0] in document$1 && webkit || moz[0] in document$1 && moz || ms[0] in document$1 && ms || [];\nvar fscreen = {\n    requestFullscreen: function(element) {\n        return element[vendor[key.requestFullscreen]]();\n    },\n    requestFullscreenFunction: function(element) {\n        return element[vendor[key.requestFullscreen]];\n    },\n    get exitFullscreen () {\n        return document$1[vendor[key.exitFullscreen]].bind(document$1);\n    },\n    get fullscreenPseudoClass () {\n        return \":\" + vendor[key.fullscreen];\n    },\n    addEventListener: function(type, handler1, options) {\n        return document$1.addEventListener(vendor[key[type]], handler1, options);\n    },\n    removeEventListener: function(type, handler1, options) {\n        return document$1.removeEventListener(vendor[key[type]], handler1, options);\n    },\n    get fullscreenEnabled () {\n        return Boolean(document$1[vendor[key.fullscreenEnabled]]);\n    },\n    set fullscreenEnabled (val){},\n    get fullscreenElement () {\n        return document$1[vendor[key.fullscreenElement]];\n    },\n    set fullscreenElement (val){},\n    get onfullscreenchange () {\n        return document$1[(\"on\" + vendor[key.fullscreenchange]).toLowerCase()];\n    },\n    set onfullscreenchange (handler){\n        return document$1[(\"on\" + vendor[key.fullscreenchange]).toLowerCase()] = handler;\n    },\n    get onfullscreenerror () {\n        return document$1[(\"on\" + vendor[key.fullscreenerror]).toLowerCase()];\n    },\n    set onfullscreenerror (handler){\n        return document$1[(\"on\" + vendor[key.fullscreenerror]).toLowerCase()] = handler;\n    }\n};\nvar functionThrottle = throttle;\nfunction throttle(fn, interval, options) {\n    var timeoutId = null;\n    var throttledFn = null;\n    var leading = options && options.leading;\n    var trailing = options && options.trailing;\n    if (leading == null) {\n        leading = true; // default\n    }\n    if (trailing == null) {\n        trailing = !leading; //default\n    }\n    if (leading == true) {\n        trailing = false; // forced because there should be invocation per call\n    }\n    var cancel = function() {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n            timeoutId = null;\n        }\n    };\n    var flush = function() {\n        var call = throttledFn;\n        cancel();\n        if (call) {\n            call();\n        }\n    };\n    var throttleWrapper = function() {\n        var callNow = leading && !timeoutId;\n        var context = this;\n        var args = arguments;\n        throttledFn = function() {\n            return fn.apply(context, args);\n        };\n        if (!timeoutId) {\n            timeoutId = setTimeout(function() {\n                timeoutId = null;\n                if (trailing) {\n                    return throttledFn();\n                }\n            }, interval);\n        }\n        if (callNow) {\n            callNow = false;\n            return throttledFn();\n        }\n    };\n    throttleWrapper.cancel = cancel;\n    throttleWrapper.flush = flush;\n    return throttleWrapper;\n}\nvar functionDebounce = debounce;\nfunction debounce(fn, wait, callFirst) {\n    var timeout = null;\n    var debouncedFn = null;\n    var clear = function() {\n        if (timeout) {\n            clearTimeout(timeout);\n            debouncedFn = null;\n            timeout = null;\n        }\n    };\n    var flush = function() {\n        var call = debouncedFn;\n        clear();\n        if (call) {\n            call();\n        }\n    };\n    var debounceWrapper = function() {\n        if (!wait) {\n            return fn.apply(this, arguments);\n        }\n        var context = this;\n        var args = arguments;\n        var callNow = callFirst && !timeout;\n        clear();\n        debouncedFn = function() {\n            fn.apply(context, args);\n        };\n        timeout = setTimeout(function() {\n            timeout = null;\n            if (!callNow) {\n                var call = debouncedFn;\n                debouncedFn = null;\n                return call();\n            }\n        }, wait);\n        if (callNow) {\n            return debouncedFn();\n        }\n    };\n    debounceWrapper.cancel = clear;\n    debounceWrapper.flush = flush;\n    return debounceWrapper;\n}\nconst t = (t2)=>\"object\" == typeof t2 && null != t2 && 1 === t2.nodeType, e = (t2, e2)=>(!e2 || \"hidden\" !== t2) && \"visible\" !== t2 && \"clip\" !== t2, n = (t2, n2)=>{\n    if (t2.clientHeight < t2.scrollHeight || t2.clientWidth < t2.scrollWidth) {\n        const o2 = getComputedStyle(t2, null);\n        return e(o2.overflowY, n2) || e(o2.overflowX, n2) || ((t3)=>{\n            const e2 = ((t4)=>{\n                if (!t4.ownerDocument || !t4.ownerDocument.defaultView) return null;\n                try {\n                    return t4.ownerDocument.defaultView.frameElement;\n                } catch (t5) {\n                    return null;\n                }\n            })(t3);\n            return !!e2 && (e2.clientHeight < t3.scrollHeight || e2.clientWidth < t3.scrollWidth);\n        })(t2);\n    }\n    return false;\n}, o = (t2, e2, n2, o2, l2, r2, i, s)=>r2 < t2 && i > e2 || r2 > t2 && i < e2 ? 0 : r2 <= t2 && s <= n2 || i >= e2 && s >= n2 ? r2 - t2 - o2 : i > e2 && s < n2 || r2 < t2 && s > n2 ? i - e2 + l2 : 0, l = (t2)=>{\n    const e2 = t2.parentElement;\n    return null == e2 ? t2.getRootNode().host || null : e2;\n}, r = (e2, r2)=>{\n    var i, s, d, h;\n    if (\"undefined\" == typeof document) return [];\n    const { scrollMode: c, block: f, inline: u, boundary: a, skipOverflowHiddenElements: g } = r2, p = \"function\" == typeof a ? a : (t2)=>t2 !== a;\n    if (!t(e2)) throw new TypeError(\"Invalid target\");\n    const m = document.scrollingElement || document.documentElement, w = [];\n    let W = e2;\n    for(; t(W) && p(W);){\n        if (W = l(W), W === m) {\n            w.push(W);\n            break;\n        }\n        null != W && W === document.body && n(W) && !n(document.documentElement) || null != W && n(W, g) && w.push(W);\n    }\n    const b = null != (s = null == (i = window.visualViewport) ? void 0 : i.width) ? s : innerWidth, H = null != (h = null == (d = window.visualViewport) ? void 0 : d.height) ? h : innerHeight, { scrollX: y, scrollY: M } = window, { height: v, width: E, top: x, right: C, bottom: I, left: R } = e2.getBoundingClientRect(), { top: T, right: B, bottom: F, left: V } = ((t2)=>{\n        const e3 = window.getComputedStyle(t2);\n        return {\n            top: parseFloat(e3.scrollMarginTop) || 0,\n            right: parseFloat(e3.scrollMarginRight) || 0,\n            bottom: parseFloat(e3.scrollMarginBottom) || 0,\n            left: parseFloat(e3.scrollMarginLeft) || 0\n        };\n    })(e2);\n    let k = \"start\" === f || \"nearest\" === f ? x - T : \"end\" === f ? I + F : x + v / 2 - T + F, D = \"center\" === u ? R + E / 2 - V + B : \"end\" === u ? C + B : R - V;\n    const L = [];\n    for(let t2 = 0; t2 < w.length; t2++){\n        const e3 = w[t2], { height: n2, width: l2, top: r3, right: i2, bottom: s2, left: d2 } = e3.getBoundingClientRect();\n        if (\"if-needed\" === c && x >= 0 && R >= 0 && I <= H && C <= b && x >= r3 && I <= s2 && R >= d2 && C <= i2) return L;\n        const h2 = getComputedStyle(e3), a2 = parseInt(h2.borderLeftWidth, 10), g2 = parseInt(h2.borderTopWidth, 10), p2 = parseInt(h2.borderRightWidth, 10), W2 = parseInt(h2.borderBottomWidth, 10);\n        let T2 = 0, B2 = 0;\n        const F2 = \"offsetWidth\" in e3 ? e3.offsetWidth - e3.clientWidth - a2 - p2 : 0, V2 = \"offsetHeight\" in e3 ? e3.offsetHeight - e3.clientHeight - g2 - W2 : 0, S = \"offsetWidth\" in e3 ? 0 === e3.offsetWidth ? 0 : l2 / e3.offsetWidth : 0, X = \"offsetHeight\" in e3 ? 0 === e3.offsetHeight ? 0 : n2 / e3.offsetHeight : 0;\n        if (m === e3) T2 = \"start\" === f ? k : \"end\" === f ? k - H : \"nearest\" === f ? o(M, M + H, H, g2, W2, M + k, M + k + v, v) : k - H / 2, B2 = \"start\" === u ? D : \"center\" === u ? D - b / 2 : \"end\" === u ? D - b : o(y, y + b, b, a2, p2, y + D, y + D + E, E), T2 = Math.max(0, T2 + M), B2 = Math.max(0, B2 + y);\n        else {\n            T2 = \"start\" === f ? k - r3 - g2 : \"end\" === f ? k - s2 + W2 + V2 : \"nearest\" === f ? o(r3, s2, n2, g2, W2 + V2, k, k + v, v) : k - (r3 + n2 / 2) + V2 / 2, B2 = \"start\" === u ? D - d2 - a2 : \"center\" === u ? D - (d2 + l2 / 2) + F2 / 2 : \"end\" === u ? D - i2 + p2 + F2 : o(d2, i2, l2, a2, p2 + F2, D, D + E, E);\n            const { scrollLeft: t3, scrollTop: h3 } = e3;\n            T2 = 0 === X ? 0 : Math.max(0, Math.min(h3 + T2 / X, e3.scrollHeight - n2 / X + V2)), B2 = 0 === S ? 0 : Math.max(0, Math.min(t3 + B2 / S, e3.scrollWidth - l2 / S + F2)), k += h3 - T2, D += t3 - B2;\n        }\n        L.push({\n            el: e3,\n            top: T2,\n            left: B2\n        });\n    }\n    return L;\n};\nvar Icon$0 = '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.0007 28.7923C15.0007 29.0152 14.9774 29.096 14.9339 29.1775C14.8903 29.259 14.8263 29.323 14.7449 29.3665C14.6634 29.4101 14.5826 29.4333 14.3597 29.4333H12.575C12.3521 29.4333 12.2713 29.4101 12.1898 29.3665C12.1083 29.323 12.0443 29.259 12.0008 29.1775C11.9572 29.096 11.934 29.0152 11.934 28.7923V12.2993L5.97496 12.3C5.75208 12.3 5.67125 12.2768 5.58977 12.2332C5.50829 12.1896 5.44434 12.1257 5.40077 12.0442C5.35719 11.9627 5.33398 11.8819 5.33398 11.659V9.87429C5.33398 9.65141 5.35719 9.57059 5.40077 9.48911C5.44434 9.40762 5.50829 9.34368 5.58977 9.3001C5.67125 9.25652 5.75208 9.23332 5.97496 9.23332H26.0263C26.2492 9.23332 26.33 9.25652 26.4115 9.3001C26.493 9.34368 26.557 9.40762 26.6005 9.48911C26.6441 9.57059 26.6673 9.65141 26.6673 9.87429V11.659C26.6673 11.8819 26.6441 11.9627 26.6005 12.0442C26.557 12.1257 26.493 12.1896 26.4115 12.2332C26.33 12.2768 26.2492 12.3 26.0263 12.3L20.067 12.2993L20.0673 28.7923C20.0673 29.0152 20.0441 29.096 20.0005 29.1775C19.957 29.259 19.893 29.323 19.8115 29.3665C19.73 29.4101 19.6492 29.4333 19.4263 29.4333H17.6416C17.4187 29.4333 17.3379 29.4101 17.2564 29.3665C17.175 29.323 17.111 29.259 17.0674 29.1775C17.0239 29.096 17.0007 29.0152 17.0007 28.7923L17 22.7663H15L15.0007 28.7923Z\" fill=\"currentColor\"/> <path d=\"M16.0007 7.89998C17.4734 7.89998 18.6673 6.70608 18.6673 5.23332C18.6673 3.76056 17.4734 2.56665 16.0007 2.56665C14.5279 2.56665 13.334 3.76056 13.334 5.23332C13.334 6.70608 14.5279 7.89998 16.0007 7.89998Z\" fill=\"currentColor\"/>';\nvar Icon$5 = '<path d=\"M5.33334 6.00001C5.33334 5.63182 5.63181 5.33334 6 5.33334H26C26.3682 5.33334 26.6667 5.63182 26.6667 6.00001V20.6667C26.6667 21.0349 26.3682 21.3333 26 21.3333H23.7072C23.4956 21.3333 23.2966 21.233 23.171 21.0628L22.1859 19.7295C21.8607 19.2894 22.1749 18.6667 22.7221 18.6667H23.3333C23.7015 18.6667 24 18.3682 24 18V8.66668C24 8.29849 23.7015 8.00001 23.3333 8.00001H8.66667C8.29848 8.00001 8 8.29849 8 8.66668V18C8 18.3682 8.29848 18.6667 8.66667 18.6667H9.29357C9.84072 18.6667 10.1549 19.2894 9.82976 19.7295L8.84467 21.0628C8.71898 21.233 8.52 21.3333 8.30848 21.3333H6C5.63181 21.3333 5.33334 21.0349 5.33334 20.6667V6.00001Z\" fill=\"currentColor\"/> <path d=\"M8.78528 25.6038C8.46013 26.0439 8.77431 26.6667 9.32147 26.6667L22.6785 26.6667C23.2256 26.6667 23.5398 26.0439 23.2146 25.6038L16.5358 16.5653C16.2693 16.2046 15.73 16.2047 15.4635 16.5653L8.78528 25.6038Z\" fill=\"currentColor\"/>';\nvar Icon$8 = '<path d=\"M17.4853 18.9093C17.4853 19.0281 17.6289 19.0875 17.7129 19.0035L22.4185 14.2979C22.6788 14.0376 23.1009 14.0376 23.3613 14.2979L24.7755 15.7122C25.0359 15.9725 25.0359 16.3946 24.7755 16.655L16.2902 25.1403C16.0299 25.4006 15.6078 25.4006 15.3474 25.1403L13.9332 23.726L13.9319 23.7247L6.86189 16.6547C6.60154 16.3944 6.60154 15.9723 6.86189 15.7119L8.2761 14.2977C8.53645 14.0373 8.95856 14.0373 9.21891 14.2977L13.9243 19.0031C14.0083 19.0871 14.1519 19.0276 14.1519 18.9088L14.1519 6.00004C14.1519 5.63185 14.4504 5.33337 14.8186 5.33337L16.8186 5.33337C17.1868 5.33337 17.4853 5.63185 17.4853 6.00004L17.4853 18.9093Z\" fill=\"currentColor\"/>';\nvar Icon$11 = '<path d=\"M13.0908 14.3334C12.972 14.3334 12.9125 14.1898 12.9965 14.1058L17.7021 9.40022C17.9625 9.13987 17.9625 8.71776 17.7021 8.45741L16.2879 7.04319C16.0275 6.78284 15.6054 6.78284 15.3451 7.04319L6.8598 15.5285C6.59945 15.7888 6.59945 16.2109 6.8598 16.4713L8.27401 17.8855L8.27536 17.8868L15.3453 24.9568C15.6057 25.2172 16.0278 25.2172 16.2881 24.9568L17.7024 23.5426C17.9627 23.2822 17.9627 22.8601 17.7024 22.5998L12.9969 17.8944C12.9129 17.8104 12.9724 17.6668 13.0912 17.6668L26 17.6668C26.3682 17.6668 26.6667 17.3683 26.6667 17.0001V15.0001C26.6667 14.6319 26.3682 14.3334 26 14.3334L13.0908 14.3334Z\" fill=\"currentColor\"/>';\nvar Icon$13 = '<path d=\"M14.1521 13.0929C14.1521 12.9741 14.0085 12.9147 13.9245 12.9987L9.21891 17.7043C8.95856 17.9646 8.53645 17.9646 8.2761 17.7043L6.86189 16.29C6.60154 16.0297 6.60154 15.6076 6.86189 15.3472L15.3472 6.86195C15.6075 6.6016 16.0296 6.6016 16.29 6.86195L17.7042 8.27616L17.7055 8.27751L24.7755 15.3475C25.0359 15.6078 25.0359 16.0299 24.7755 16.2903L23.3613 17.7045C23.1009 17.9649 22.6788 17.9649 22.4185 17.7045L17.7131 12.9991C17.6291 12.9151 17.4855 12.9746 17.4855 13.0934V26.0022C17.4855 26.3704 17.187 26.6688 16.8188 26.6688H14.8188C14.4506 26.6688 14.1521 26.3704 14.1521 26.0022L14.1521 13.0929Z\" fill=\"currentColor\"/>';\nvar Icon$16 = '<path d=\"M16.6927 25.3346C16.3245 25.3346 16.026 25.0361 16.026 24.6679L16.026 7.3346C16.026 6.96641 16.3245 6.66794 16.6927 6.66794L18.6927 6.66794C19.0609 6.66794 19.3594 6.96642 19.3594 7.3346L19.3594 24.6679C19.3594 25.0361 19.0609 25.3346 18.6927 25.3346H16.6927Z\" fill=\"currentColor\"/> <path d=\"M24.026 25.3346C23.6578 25.3346 23.3594 25.0361 23.3594 24.6679L23.3594 7.3346C23.3594 6.96641 23.6578 6.66794 24.026 6.66794L26.026 6.66794C26.3942 6.66794 26.6927 6.96642 26.6927 7.3346V24.6679C26.6927 25.0361 26.3942 25.3346 26.026 25.3346H24.026Z\" fill=\"currentColor\"/> <path d=\"M5.48113 23.9407C5.38584 24.2963 5.59689 24.6619 5.95254 24.7572L7.88439 25.2748C8.24003 25.3701 8.60559 25.159 8.70089 24.8034L13.1871 8.06067C13.2824 7.70503 13.0713 7.33947 12.7157 7.24417L10.7838 6.72654C10.4282 6.63124 10.0626 6.8423 9.96733 7.19794L5.48113 23.9407Z\" fill=\"currentColor\"/>';\nvar Icon$19 = '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.9266 7.57992C25.015 7.60672 25.0886 7.64746 25.2462 7.80506L26.956 9.51488C27.1136 9.67248 27.1543 9.74604 27.1811 9.83447C27.2079 9.9229 27.2079 10.0133 27.1811 10.1018C27.1543 10.1902 27.1136 10.2638 26.956 10.4214L13.1822 24.1951C13.0246 24.3527 12.951 24.3935 12.8626 24.4203C12.797 24.4402 12.7304 24.4453 12.6642 24.4357L12.7319 24.4203C12.6435 24.4471 12.553 24.4471 12.4646 24.4203C12.3762 24.3935 12.3026 24.3527 12.145 24.1951L5.04407 17.0942C4.88647 16.9366 4.84573 16.863 4.81893 16.7746C4.79213 16.6862 4.79213 16.5957 4.81893 16.5073C4.84573 16.4189 4.88647 16.3453 5.04407 16.1877L6.7539 14.4779C6.9115 14.3203 6.98506 14.2796 7.07349 14.2528C7.16191 14.226 7.25235 14.226 7.34078 14.2528C7.42921 14.2796 7.50277 14.3203 7.66037 14.4779L12.6628 19.4808L24.3397 7.80506C24.4973 7.64746 24.5709 7.60672 24.6593 7.57992C24.7477 7.55311 24.8382 7.55311 24.9266 7.57992Z\" fill=\"currentColor\"/>';\nvar Icon$22 = '<path d=\"M17.947 16.095C17.999 16.043 17.999 15.9585 17.947 15.9065L11.6295 9.58899C11.3691 9.32864 11.3691 8.90653 11.6295 8.64618L13.2323 7.04341C13.4926 6.78306 13.9147 6.78306 14.1751 7.04341L21.0289 13.8973C21.0392 13.9064 21.0493 13.9158 21.0591 13.9257L22.6619 15.5285C22.9223 15.7888 22.9223 16.2109 22.6619 16.4713L14.1766 24.9565C13.9163 25.2169 13.4942 25.2169 13.2338 24.9565L11.631 23.3538C11.3707 23.0934 11.3707 22.6713 11.631 22.411L17.947 16.095Z\" fill=\"currentColor\"/>';\nvar Icon$24 = '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 7C5.63181 7 5.33333 7.29848 5.33333 7.66667V14.8667C5.33333 14.9403 5.39361 14.9999 5.46724 15.0009C10.8844 15.0719 15.2614 19.449 15.3325 24.8661C15.3334 24.9397 15.393 25 15.4667 25H26C26.3682 25 26.6667 24.7015 26.6667 24.3333V7.66667C26.6667 7.29848 26.3682 7 26 7H6ZM17.0119 22.2294C17.0263 22.29 17.0802 22.3333 17.1425 22.3333H23.3333C23.7015 22.3333 24 22.0349 24 21.6667V10.3333C24 9.96514 23.7015 9.66667 23.3333 9.66667H8.66667C8.29848 9.66667 8 9.96514 8 10.3333V13.1909C8 13.2531 8.04332 13.3071 8.10392 13.3214C12.5063 14.3618 15.9715 17.827 17.0119 22.2294Z\" fill=\"currentColor\"/> <path d=\"M13.2 25C13.2736 25 13.3334 24.9398 13.3322 24.8661C13.2615 20.5544 9.77889 17.0718 5.46718 17.0011C5.39356 16.9999 5.33333 17.0597 5.33333 17.1333V18.8667C5.33333 18.9403 5.39348 18.9999 5.4671 19.0015C8.67465 19.0716 11.2617 21.6587 11.3319 24.8662C11.3335 24.9399 11.393 25 11.4667 25H13.2Z\" fill=\"currentColor\"/> <path d=\"M5.33333 21.1333C5.33333 21.0597 5.39332 20.9998 5.46692 21.0022C7.57033 21.0712 9.26217 22.763 9.33114 24.8664C9.33356 24.94 9.27364 25 9.2 25H6C5.63181 25 5.33333 24.7015 5.33333 24.3333V21.1333Z\" fill=\"currentColor\"/>';\nvar chromecast = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    default: Icon$24\n});\nvar Icon$26 = '<path d=\"M8 28.0003C8 27.6321 8.29848 27.3336 8.66667 27.3336H23.3333C23.7015 27.3336 24 27.6321 24 28.0003V29.3336C24 29.7018 23.7015 30.0003 23.3333 30.0003H8.66667C8.29848 30.0003 8 29.7018 8 29.3336V28.0003Z\" fill=\"currentColor\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.66602 6.66699C4.29783 6.66699 3.99935 6.96547 3.99935 7.33366V24.667C3.99935 25.0352 4.29783 25.3337 4.66602 25.3337H27.3327C27.7009 25.3337 27.9994 25.0352 27.9994 24.667V7.33366C27.9994 6.96547 27.7009 6.66699 27.3327 6.66699H4.66602ZM8.66659 21.3333C8.2984 21.3333 7.99992 21.0349 7.99992 20.6667V11.3333C7.99992 10.9651 8.2984 10.6667 8.66659 10.6667H13.9999C14.3681 10.6667 14.6666 10.9651 14.6666 11.3333V12.6667C14.6666 13.0349 14.3681 13.3333 13.9999 13.3333H10.7999C10.7263 13.3333 10.6666 13.393 10.6666 13.4667V18.5333C10.6666 18.607 10.7263 18.6667 10.7999 18.6667H13.9999C14.3681 18.6667 14.6666 18.9651 14.6666 19.3333V20.6667C14.6666 21.0349 14.3681 21.3333 13.9999 21.3333H8.66659ZM17.9999 21.3333C17.6317 21.3333 17.3333 21.0349 17.3333 20.6667V11.3333C17.3333 10.9651 17.6317 10.6667 17.9999 10.6667H23.3333C23.7014 10.6667 23.9999 10.9651 23.9999 11.3333V12.6667C23.9999 13.0349 23.7014 13.3333 23.3333 13.3333H20.1333C20.0596 13.3333 19.9999 13.393 19.9999 13.4667V18.5333C19.9999 18.607 20.0596 18.6667 20.1333 18.6667H23.3333C23.7014 18.6667 23.9999 18.9651 23.9999 19.3333V20.6667C23.9999 21.0349 23.7014 21.3333 23.3333 21.3333H17.9999Z\" fill=\"currentColor\"/>';\nvar Icon$27 = '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.6661 6.66699C4.29791 6.66699 3.99943 6.96547 3.99943 7.33366V24.667C3.99943 25.0352 4.29791 25.3337 4.6661 25.3337H27.3328C27.701 25.3337 27.9994 25.0352 27.9994 24.667V7.33366C27.9994 6.96547 27.701 6.66699 27.3328 6.66699H4.6661ZM8.66667 21.3333C8.29848 21.3333 8 21.0349 8 20.6667V11.3333C8 10.9651 8.29848 10.6667 8.66667 10.6667H14C14.3682 10.6667 14.6667 10.9651 14.6667 11.3333V12.6667C14.6667 13.0349 14.3682 13.3333 14 13.3333H10.8C10.7264 13.3333 10.6667 13.393 10.6667 13.4667V18.5333C10.6667 18.607 10.7264 18.6667 10.8 18.6667H14C14.3682 18.6667 14.6667 18.9651 14.6667 19.3333V20.6667C14.6667 21.0349 14.3682 21.3333 14 21.3333H8.66667ZM18 21.3333C17.6318 21.3333 17.3333 21.0349 17.3333 20.6667V11.3333C17.3333 10.9651 17.6318 10.6667 18 10.6667H23.3333C23.7015 10.6667 24 10.9651 24 11.3333V12.6667C24 13.0349 23.7015 13.3333 23.3333 13.3333H20.1333C20.0597 13.3333 20 13.393 20 13.4667V18.5333C20 18.607 20.0597 18.6667 20.1333 18.6667H23.3333C23.7015 18.6667 24 18.9651 24 19.3333V20.6667C24 21.0349 23.7015 21.3333 23.3333 21.3333H18Z\" fill=\"currentColor\"/>';\nvar Icon$31 = '<path d=\"M14.2225 13.7867C14.3065 13.8706 14.4501 13.8112 14.4501 13.6924V5.99955C14.4501 5.63136 14.7486 5.33289 15.1167 5.33289H16.8501C17.2183 5.33289 17.5167 5.63136 17.5167 5.99955V13.6916C17.5167 13.8104 17.6604 13.8699 17.7444 13.7859L19.9433 11.5869C20.2037 11.3266 20.6258 11.3266 20.8861 11.5869L22.1118 12.8126C22.3722 13.0729 22.3722 13.4951 22.1118 13.7554L16.4549 19.4123C16.1946 19.6726 15.772 19.6731 15.5116 19.4128L9.85479 13.7559C9.59444 13.4956 9.59444 13.0734 9.85479 12.8131L11.0804 11.5874C11.3408 11.3271 11.7629 11.3271 12.0233 11.5874L14.2225 13.7867Z\" fill=\"currentColor\"/> <path d=\"M5.99998 20.267C5.63179 20.267 5.33331 20.5654 5.33331 20.9336V25.9997C5.33331 26.3678 5.63179 26.6663 5.99998 26.6663H26C26.3682 26.6663 26.6666 26.3678 26.6666 25.9997V20.9336C26.6666 20.5654 26.3682 20.267 26 20.267H24.2666C23.8985 20.267 23.6 20.5654 23.6 20.9336V22.9333C23.6 23.3014 23.3015 23.5999 22.9333 23.5999H9.06638C8.69819 23.5999 8.39972 23.3014 8.39972 22.9333V20.9336C8.39972 20.5654 8.10124 20.267 7.73305 20.267H5.99998Z\" fill=\"currentColor\"/>';\nvar Icon$33 = '<path d=\"M16 20C18.2091 20 20 18.2092 20 16C20 13.7909 18.2091 12 16 12C13.7909 12 12 13.7909 12 16C12 18.2092 13.7909 20 16 20Z\" fill=\"currentColor\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28 16.0058C28 18.671 23.5 25.3334 16 25.3334C8.5 25.3334 4 18.6762 4 16.0058C4 13.3354 8.50447 6.66669 16 6.66669C23.4955 6.66669 28 13.3406 28 16.0058ZM25.3318 15.9934C25.3328 16.0017 25.3328 16.0099 25.3318 16.0182C25.3274 16.0571 25.3108 16.1728 25.2485 16.3708C25.1691 16.6229 25.0352 16.9462 24.8327 17.3216C24.4264 18.0749 23.7969 18.9398 22.9567 19.754C21.2791 21.3798 18.9148 22.6667 16 22.6667C13.0845 22.6667 10.7202 21.3805 9.04298 19.7557C8.20295 18.9419 7.57362 18.0773 7.16745 17.3241C6.96499 16.9486 6.83114 16.6252 6.75172 16.3729C6.67942 16.1431 6.66856 16.0243 6.66695 16.0066L6.66695 16.005C6.66859 15.9871 6.67951 15.8682 6.75188 15.6383C6.83145 15.3854 6.96554 15.0614 7.16831 14.6853C7.57507 13.9306 8.20514 13.0644 9.04577 12.249C10.7245 10.6208 13.0886 9.33335 16 9.33335C18.9108 9.33335 21.2748 10.6215 22.9539 12.2507C23.7947 13.0664 24.4249 13.933 24.8318 14.6877C25.0346 15.0639 25.1688 15.3878 25.2483 15.6404C25.3107 15.8386 25.3274 15.9545 25.3318 15.9934Z\" fill=\"currentColor\"/>';\nvar Icon$34 = '<path d=\"M15.8747 8.11857C16.3148 7.79342 16.9375 8.10759 16.9375 8.65476V14.2575C16.9375 14.3669 17.0621 14.4297 17.1501 14.3647L25.6038 8.11857C26.0439 7.79342 26.6667 8.10759 26.6667 8.65476V23.3451C26.6667 23.8923 26.0439 24.2064 25.6038 23.8813L17.1501 17.6346C17.0621 17.5695 16.9375 17.6324 16.9375 17.7418L16.9375 23.3451C16.9375 23.8923 16.3147 24.2064 15.8747 23.8813L5.93387 16.5358C5.57322 16.2693 5.57323 15.7299 5.93389 15.4634L15.8747 8.11857Z\" fill=\"currentColor\"/>';\nvar Icon$35 = '<path d=\"M16.1253 8.11866C15.6852 7.7935 15.0625 8.10768 15.0625 8.65484V14.2576C15.0625 14.367 14.9379 14.4298 14.8499 14.3648L6.39615 8.11866C5.95607 7.7935 5.33331 8.10768 5.33331 8.65484V23.3452C5.33331 23.8923 5.9561 24.2065 6.39617 23.8813L14.8499 17.6347C14.9379 17.5696 15.0625 17.6325 15.0625 17.7419L15.0625 23.3452C15.0625 23.8923 15.6853 24.2065 16.1253 23.8813L26.0661 16.5358C26.4268 16.2694 26.4268 15.73 26.0661 15.4635L16.1253 8.11866Z\" fill=\"currentColor\"/>';\nvar Icon$39 = '<path d=\"M19.3334 13.3333C18.9652 13.3333 18.6667 13.0349 18.6667 12.6667L18.6667 7.33333C18.6667 6.96514 18.9652 6.66666 19.3334 6.66666H21.3334C21.7015 6.66666 22 6.96514 22 7.33333V9.86666C22 9.9403 22.0597 10 22.1334 10L24.6667 10C25.0349 10 25.3334 10.2985 25.3334 10.6667V12.6667C25.3334 13.0349 25.0349 13.3333 24.6667 13.3333L19.3334 13.3333Z\" fill=\"currentColor\"/> <path d=\"M13.3334 19.3333C13.3334 18.9651 13.0349 18.6667 12.6667 18.6667H7.33335C6.96516 18.6667 6.66669 18.9651 6.66669 19.3333V21.3333C6.66669 21.7015 6.96516 22 7.33335 22H9.86669C9.94032 22 10 22.0597 10 22.1333L10 24.6667C10 25.0349 10.2985 25.3333 10.6667 25.3333H12.6667C13.0349 25.3333 13.3334 25.0349 13.3334 24.6667L13.3334 19.3333Z\" fill=\"currentColor\"/> <path d=\"M18.6667 24.6667C18.6667 25.0349 18.9652 25.3333 19.3334 25.3333H21.3334C21.7015 25.3333 22 25.0349 22 24.6667V22.1333C22 22.0597 22.0597 22 22.1334 22H24.6667C25.0349 22 25.3334 21.7015 25.3334 21.3333V19.3333C25.3334 18.9651 25.0349 18.6667 24.6667 18.6667L19.3334 18.6667C18.9652 18.6667 18.6667 18.9651 18.6667 19.3333L18.6667 24.6667Z\" fill=\"currentColor\"/> <path d=\"M10.6667 13.3333H12.6667C13.0349 13.3333 13.3334 13.0349 13.3334 12.6667L13.3334 10.6667V7.33333C13.3334 6.96514 13.0349 6.66666 12.6667 6.66666H10.6667C10.2985 6.66666 10 6.96514 10 7.33333L10 9.86666C10 9.9403 9.94033 10 9.86669 10L7.33335 10C6.96516 10 6.66669 10.2985 6.66669 10.6667V12.6667C6.66669 13.0349 6.96516 13.3333 7.33335 13.3333L10.6667 13.3333Z\" fill=\"currentColor\"/>';\nvar Icon$40 = '<path d=\"M25.3299 7.26517C25.2958 6.929 25.0119 6.66666 24.6667 6.66666H19.3334C18.9652 6.66666 18.6667 6.96514 18.6667 7.33333V9.33333C18.6667 9.70152 18.9652 10 19.3334 10L21.8667 10C21.9403 10 22 10.0597 22 10.1333V12.6667C22 13.0349 22.2985 13.3333 22.6667 13.3333H24.6667C25.0349 13.3333 25.3334 13.0349 25.3334 12.6667V7.33333C25.3334 7.31032 25.3322 7.28758 25.3299 7.26517Z\" fill=\"currentColor\"/> <path d=\"M22 21.8667C22 21.9403 21.9403 22 21.8667 22L19.3334 22C18.9652 22 18.6667 22.2985 18.6667 22.6667V24.6667C18.6667 25.0349 18.9652 25.3333 19.3334 25.3333L24.6667 25.3333C25.0349 25.3333 25.3334 25.0349 25.3334 24.6667V19.3333C25.3334 18.9651 25.0349 18.6667 24.6667 18.6667H22.6667C22.2985 18.6667 22 18.9651 22 19.3333V21.8667Z\" fill=\"currentColor\"/> <path d=\"M12.6667 22H10.1334C10.0597 22 10 21.9403 10 21.8667V19.3333C10 18.9651 9.70154 18.6667 9.33335 18.6667H7.33335C6.96516 18.6667 6.66669 18.9651 6.66669 19.3333V24.6667C6.66669 25.0349 6.96516 25.3333 7.33335 25.3333H12.6667C13.0349 25.3333 13.3334 25.0349 13.3334 24.6667V22.6667C13.3334 22.2985 13.0349 22 12.6667 22Z\" fill=\"currentColor\"/> <path d=\"M10 12.6667V10.1333C10 10.0597 10.0597 10 10.1334 10L12.6667 10C13.0349 10 13.3334 9.70152 13.3334 9.33333V7.33333C13.3334 6.96514 13.0349 6.66666 12.6667 6.66666H7.33335C6.96516 6.66666 6.66669 6.96514 6.66669 7.33333V12.6667C6.66669 13.0349 6.96516 13.3333 7.33335 13.3333H9.33335C9.70154 13.3333 10 13.0349 10 12.6667Z\" fill=\"currentColor\"/>';\nvar Icon$53 = '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.6667 5.99998C26.6667 5.63179 26.3682 5.33331 26 5.33331H11.3333C10.9651 5.33331 10.6667 5.63179 10.6667 5.99998V17.5714C10.6667 17.6694 10.5644 17.7342 10.4741 17.6962C9.91823 17.4625 9.30754 17.3333 8.66667 17.3333C6.08934 17.3333 4 19.4226 4 22C4 24.5773 6.08934 26.6666 8.66667 26.6666C11.244 26.6666 13.3333 24.5773 13.3333 22V8.66665C13.3333 8.29846 13.6318 7.99998 14 7.99998L23.3333 7.99998C23.7015 7.99998 24 8.29846 24 8.66665V14.9048C24 15.0027 23.8978 15.0675 23.8075 15.0296C23.2516 14.7958 22.6409 14.6666 22 14.6666C19.4227 14.6666 17.3333 16.756 17.3333 19.3333C17.3333 21.9106 19.4227 24 22 24C24.5773 24 26.6667 21.9106 26.6667 19.3333V5.99998ZM22 21.3333C23.1046 21.3333 24 20.4379 24 19.3333C24 18.2287 23.1046 17.3333 22 17.3333C20.8954 17.3333 20 18.2287 20 19.3333C20 20.4379 20.8954 21.3333 22 21.3333ZM8.66667 24C9.77124 24 10.6667 23.1045 10.6667 22C10.6667 20.8954 9.77124 20 8.66667 20C7.5621 20 6.66667 20.8954 6.66667 22C6.66667 23.1045 7.5621 24 8.66667 24Z\" fill=\"currentColor\"/>';\nvar Icon$54 = '<path d=\"M17.5091 24.6594C17.5091 25.2066 16.8864 25.5208 16.4463 25.1956L9.44847 20.0252C9.42553 20.0083 9.39776 19.9991 9.36923 19.9991H4.66667C4.29848 19.9991 4 19.7006 4 19.3325V12.6658C4 12.2976 4.29848 11.9991 4.66667 11.9991H9.37115C9.39967 11.9991 9.42745 11.99 9.45039 11.973L16.4463 6.8036C16.8863 6.47842 17.5091 6.79259 17.5091 7.33977L17.5091 24.6594Z\" fill=\"currentColor\"/> <path d=\"M28.8621 13.6422C29.1225 13.3818 29.1225 12.9597 28.8621 12.6994L27.9193 11.7566C27.659 11.4962 27.2368 11.4962 26.9765 11.7566L24.7134 14.0197C24.6613 14.0717 24.5769 14.0717 24.5248 14.0197L22.262 11.7568C22.0016 11.4964 21.5795 11.4964 21.3191 11.7568L20.3763 12.6996C20.116 12.9599 20.116 13.382 20.3763 13.6424L22.6392 15.9053C22.6913 15.9573 22.6913 16.0418 22.6392 16.0938L20.3768 18.3562C20.1165 18.6166 20.1165 19.0387 20.3768 19.299L21.3196 20.2419C21.58 20.5022 22.0021 20.5022 22.2624 20.2418L24.5248 17.9795C24.5769 17.9274 24.6613 17.9274 24.7134 17.9795L26.976 20.2421C27.2363 20.5024 27.6585 20.5024 27.9188 20.2421L28.8616 19.2992C29.122 19.0389 29.122 18.6168 28.8616 18.3564L26.599 16.0938C26.547 16.0418 26.547 15.9573 26.599 15.9053L28.8621 13.6422Z\" fill=\"currentColor\"/>';\nvar Icon$56 = '<path d=\"M26.6009 16.0725C26.6009 16.424 26.4302 17.1125 25.9409 18.0213C25.4676 18.8976 24.7542 19.8715 23.8182 20.7783C21.9489 22.5905 19.2662 24.0667 15.9342 24.0667C12.6009 24.0667 9.91958 22.5915 8.04891 20.78C7.11424 19.8736 6.40091 18.9 5.92758 18.0236C5.43824 17.1149 5.26758 16.4257 5.26758 16.0725C5.26758 15.7193 5.43824 15.0293 5.92891 14.1193C6.40224 13.2416 7.11558 12.2665 8.05158 11.3587C9.92224 9.54398 12.6049 8.06665 15.9342 8.06665C19.2636 8.06665 21.9449 9.54505 23.8169 11.3604C24.7529 12.2687 25.4662 13.2441 25.9396 14.1216C26.4302 15.0317 26.6009 15.7209 26.6009 16.0725Z\" stroke=\"currentColor\" stroke-width=\"3\"/> <path d=\"M15.9336 20.0667C18.1427 20.0667 19.9336 18.2758 19.9336 16.0667C19.9336 13.8575 18.1427 12.0667 15.9336 12.0667C13.7245 12.0667 11.9336 13.8575 11.9336 16.0667C11.9336 18.2758 13.7245 20.0667 15.9336 20.0667Z\" fill=\"currentColor\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.2323 25.0624L6.93878 4.76886C6.78118 4.61126 6.70762 4.57052 6.61919 4.54372C6.53077 4.51692 6.44033 4.51691 6.3519 4.54372C6.26347 4.57052 6.18991 4.61126 6.03231 4.76886L4.77032 6.03085C4.61272 6.18845 4.57198 6.26201 4.54518 6.35044C4.51838 6.43887 4.51838 6.5293 4.54518 6.61773C4.57198 6.70616 4.61272 6.77972 4.77032 6.93732L25.0639 27.2308C25.2215 27.3884 25.295 27.4292 25.3834 27.456C25.4719 27.4828 25.5623 27.4828 25.6507 27.456C25.7392 27.4292 25.8127 27.3885 25.9703 27.2309L27.2323 25.9689C27.3899 25.8113 27.4307 25.7377 27.4575 25.6493C27.4843 25.5608 27.4843 25.4704 27.4575 25.382C27.4307 25.2935 27.3899 25.22 27.2323 25.0624Z\" fill=\"currentColor\"/>';\nvar Icon$59 = '<path d=\"M8.66667 6.66667C8.29848 6.66667 8 6.96514 8 7.33333V24.6667C8 25.0349 8.29848 25.3333 8.66667 25.3333H12.6667C13.0349 25.3333 13.3333 25.0349 13.3333 24.6667V7.33333C13.3333 6.96514 13.0349 6.66667 12.6667 6.66667H8.66667Z\" fill=\"currentColor\"/> <path d=\"M19.3333 6.66667C18.9651 6.66667 18.6667 6.96514 18.6667 7.33333V24.6667C18.6667 25.0349 18.9651 25.3333 19.3333 25.3333H23.3333C23.7015 25.3333 24 25.0349 24 24.6667V7.33333C24 6.96514 23.7015 6.66667 23.3333 6.66667H19.3333Z\" fill=\"currentColor\"/>';\nvar Icon$60 = '<path d=\"M5.33334 26V19.4667C5.33334 19.393 5.39304 19.3333 5.46668 19.3333H7.86668C7.94031 19.3333 8.00001 19.393 8.00001 19.4667V23.3333C8.00001 23.7015 8.29849 24 8.66668 24H23.3333C23.7015 24 24 23.7015 24 23.3333V8.66666C24 8.29847 23.7015 7.99999 23.3333 7.99999H19.4667C19.393 7.99999 19.3333 7.9403 19.3333 7.86666V5.46666C19.3333 5.39302 19.393 5.33333 19.4667 5.33333H26C26.3682 5.33333 26.6667 5.63181 26.6667 5.99999V26C26.6667 26.3682 26.3682 26.6667 26 26.6667H6.00001C5.63182 26.6667 5.33334 26.3682 5.33334 26Z\" fill=\"currentColor\"/> <path d=\"M14.0098 8.42359H10.806C10.6872 8.42359 10.6277 8.56721 10.7117 8.6512L16.5491 14.4886C16.8094 14.7489 16.8094 15.171 16.5491 15.4314L15.3234 16.657C15.0631 16.9174 14.641 16.9174 14.3806 16.657L8.63739 10.9138C8.55339 10.8298 8.40978 10.8893 8.40978 11.0081V14.0236C8.40978 14.3918 8.1113 14.6903 7.74311 14.6903H6.00978C5.64159 14.6903 5.34311 14.3918 5.34311 14.0236L5.34311 6.02359C5.34311 5.6554 5.64159 5.35692 6.00978 5.35692L14.0098 5.35692C14.378 5.35692 14.6764 5.6554 14.6764 6.02359V7.75692C14.6764 8.12511 14.378 8.42359 14.0098 8.42359Z\" fill=\"currentColor\"/>';\nvar Icon$61 = '<path d=\"M16 15.3333C15.6318 15.3333 15.3333 15.6318 15.3333 16V20C15.3333 20.3682 15.6318 20.6667 16 20.6667H21.3333C21.7015 20.6667 22 20.3682 22 20V16C22 15.6318 21.7015 15.3333 21.3333 15.3333H16Z\" fill=\"currentColor\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.33333 7.33334C5.33333 6.96515 5.63181 6.66667 5.99999 6.66667H26C26.3682 6.66667 26.6667 6.96515 26.6667 7.33334V24.6667C26.6667 25.0349 26.3682 25.3333 26 25.3333H5.99999C5.63181 25.3333 5.33333 25.0349 5.33333 24.6667V7.33334ZM7.99999 10C7.99999 9.63182 8.29847 9.33334 8.66666 9.33334H23.3333C23.7015 9.33334 24 9.63182 24 10V22C24 22.3682 23.7015 22.6667 23.3333 22.6667H8.66666C8.29847 22.6667 7.99999 22.3682 7.99999 22V10Z\" fill=\"currentColor\"/>';\nvar Icon$62 = '<path d=\"M10.6667 6.6548C10.6667 6.10764 11.2894 5.79346 11.7295 6.11862L24.377 15.4634C24.7377 15.7298 24.7377 16.2692 24.3771 16.5357L11.7295 25.8813C11.2895 26.2065 10.6667 25.8923 10.6667 25.3451L10.6667 6.6548Z\" fill=\"currentColor\"/>';\nvar Icon$63 = '<path d=\"M13.9213 5.53573C14.3146 5.45804 14.6666 5.76987 14.6666 6.17079V7.57215C14.6666 7.89777 14.4305 8.17277 14.114 8.24925C12.5981 8.61559 11.2506 9.41368 10.2091 10.506C9.98474 10.7414 9.62903 10.8079 9.34742 10.6453L8.14112 9.94885C7.79394 9.7484 7.69985 9.28777 7.96359 8.98585C9.48505 7.24409 11.5636 6.00143 13.9213 5.53573Z\" fill=\"currentColor\"/> <path d=\"M5.88974 12.5908C6.01805 12.2101 6.46491 12.0603 6.81279 12.2611L8.01201 12.9535C8.29379 13.1162 8.41396 13.4577 8.32238 13.7699C8.11252 14.4854 7.99998 15.2424 7.99998 16.0257C7.99998 16.809 8.11252 17.566 8.32238 18.2814C8.41396 18.5936 8.29378 18.9352 8.01201 19.0979L6.82742 19.7818C6.48051 19.9821 6.03488 19.8337 5.90521 19.4547C5.5345 18.3712 5.33331 17.2091 5.33331 16C5.33331 14.8078 5.5289 13.6613 5.88974 12.5908Z\" fill=\"currentColor\"/> <path d=\"M8.17106 22.0852C7.82291 22.2862 7.72949 22.7486 7.99532 23.0502C9.51387 24.773 11.5799 26.0017 13.9213 26.4642C14.3146 26.5419 14.6666 26.2301 14.6666 25.8291V24.4792C14.6666 24.1536 14.4305 23.8786 14.114 23.8021C12.5981 23.4358 11.2506 22.6377 10.2091 21.5453C9.98474 21.31 9.62903 21.2435 9.34742 21.4061L8.17106 22.0852Z\" fill=\"currentColor\"/> <path d=\"M17.3333 25.8291C17.3333 26.2301 17.6857 26.5418 18.079 26.4641C22.9748 25.4969 26.6666 21.1796 26.6666 16C26.6666 10.8204 22.9748 6.50302 18.079 5.5358C17.6857 5.4581 17.3333 5.76987 17.3333 6.17079V7.57215C17.3333 7.89777 17.5697 8.17282 17.8862 8.24932C21.3942 9.09721 24 12.2572 24 16.0257C24 19.7942 21.3942 22.9542 17.8862 23.802C17.5697 23.8785 17.3333 24.1536 17.3333 24.4792V25.8291Z\" fill=\"currentColor\"/> <path d=\"M14.3961 10.4163C13.9561 10.0911 13.3333 10.4053 13.3333 10.9525L13.3333 21.0474C13.3333 21.5946 13.9561 21.9087 14.3962 21.5836L21.2273 16.5359C21.5879 16.2694 21.5879 15.73 21.2273 15.4635L14.3961 10.4163Z\" fill=\"currentColor\"/>';\nvar Icon$74 = '<path d=\"M15.6038 12.2147C16.0439 12.5399 16.6667 12.2257 16.6667 11.6786V10.1789C16.6667 10.1001 16.7351 10.0384 16.8134 10.0479C20.1116 10.4494 22.6667 13.2593 22.6667 16.6659C22.6667 20.3481 19.6817 23.3332 15.9995 23.3332C12.542 23.3332 9.69927 20.7014 9.36509 17.332C9.32875 16.9655 9.03371 16.6662 8.66548 16.6662L6.66655 16.6666C6.29841 16.6666 5.99769 16.966 6.02187 17.3334C6.36494 22.5454 10.7012 26.6667 16 26.6667C21.5228 26.6667 26 22.1895 26 16.6667C26 11.4103 21.9444 7.10112 16.7916 6.69757C16.7216 6.69209 16.6667 6.63396 16.6667 6.56372V4.98824C16.6667 4.44106 16.0439 4.12689 15.6038 4.45206L11.0765 7.79738C10.7159 8.06387 10.7159 8.60326 11.0766 8.86973L15.6038 12.2147Z\" fill=\"currentColor\"/>';\nvar Icon$77 = '<path d=\"M16.6667 10.3452C16.6667 10.8924 16.0439 11.2066 15.6038 10.8814L11.0766 7.5364C10.7159 7.26993 10.7159 6.73054 11.0766 6.46405L15.6038 3.11873C16.0439 2.79356 16.6667 3.10773 16.6667 3.6549V5.22682C16.6667 5.29746 16.7223 5.35579 16.7927 5.36066C22.6821 5.76757 27.3333 10.674 27.3333 16.6667C27.3333 22.9259 22.2592 28 16 28C9.96483 28 5.03145 23.2827 4.68601 17.3341C4.66466 16.9665 4.96518 16.6673 5.33339 16.6673H7.3334C7.70157 16.6673 7.99714 16.9668 8.02743 17.3337C8.36638 21.4399 11.8064 24.6667 16 24.6667C20.4183 24.6667 24 21.085 24 16.6667C24 12.5225 20.8483 9.11428 16.8113 8.70739C16.7337 8.69957 16.6667 8.76096 16.6667 8.83893V10.3452Z\" fill=\"currentColor\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.0879 19.679C17.4553 19.9195 17.8928 20.0398 18.4004 20.0398C18.9099 20.0398 19.3474 19.9205 19.7129 19.6818C20.0803 19.4413 20.3635 19.0938 20.5623 18.6392C20.7612 18.1847 20.8606 17.6373 20.8606 16.9972C20.8625 16.3608 20.764 15.8192 20.5652 15.3722C20.3663 14.9252 20.0822 14.5853 19.7129 14.3523C19.3455 14.1175 18.908 14 18.4004 14C17.8928 14 17.4553 14.1175 17.0879 14.3523C16.7224 14.5853 16.4402 14.9252 16.2413 15.3722C16.0443 15.8173 15.9449 16.3589 15.943 16.9972C15.9411 17.6354 16.0396 18.1818 16.2385 18.6364C16.4373 19.089 16.7205 19.4366 17.0879 19.679ZM19.1362 18.4262C18.9487 18.7349 18.7034 18.8892 18.4004 18.8892C18.1996 18.8892 18.0226 18.8211 17.8691 18.6847C17.7157 18.5464 17.5964 18.3372 17.5112 18.0568C17.4279 17.7765 17.3871 17.4233 17.389 16.9972C17.3909 16.3684 17.4847 15.9025 17.6703 15.5995C17.8559 15.2945 18.0993 15.1421 18.4004 15.1421C18.603 15.1421 18.7801 15.2093 18.9316 15.3438C19.0832 15.4782 19.2015 15.6828 19.2868 15.9574C19.372 16.2301 19.4146 16.5767 19.4146 16.9972C19.4165 17.6392 19.3237 18.1156 19.1362 18.4262Z\" fill=\"currentColor\"/> <path d=\"M13.7746 19.8978C13.8482 19.8978 13.9079 19.8381 13.9079 19.7644V14.2129C13.9079 14.1393 13.8482 14.0796 13.7746 14.0796H12.642C12.6171 14.0796 12.5927 14.0865 12.5716 14.0997L11.2322 14.9325C11.1931 14.9568 11.1693 14.9996 11.1693 15.0457V15.9497C11.1693 16.0539 11.2833 16.1178 11.3722 16.0635L12.464 15.396C12.4682 15.3934 12.473 15.3921 12.4779 15.3921C12.4926 15.3921 12.5045 15.404 12.5045 15.4187V19.7644C12.5045 19.8381 12.5642 19.8978 12.6378 19.8978H13.7746Z\" fill=\"currentColor\"/>';\nvar Icon$81 = '<path d=\"M15.3333 10.3452C15.3333 10.8924 15.9561 11.2066 16.3962 10.8814L20.9234 7.5364C21.2841 7.26993 21.2841 6.73054 20.9235 6.46405L16.3962 3.11873C15.9561 2.79356 15.3333 3.10773 15.3333 3.6549V5.22682C15.3333 5.29746 15.2778 5.35579 15.2073 5.36066C9.31791 5.76757 4.66667 10.674 4.66667 16.6667C4.66667 22.9259 9.74078 28 16 28C22.0352 28 26.9686 23.2827 27.314 17.3341C27.3354 16.9665 27.0348 16.6673 26.6666 16.6673H24.6666C24.2984 16.6673 24.0029 16.9668 23.9726 17.3337C23.6336 21.4399 20.1937 24.6667 16 24.6667C11.5817 24.6667 8 21.085 8 16.6667C8 12.5225 11.1517 9.11428 15.1887 8.70739C15.2663 8.69957 15.3333 8.76096 15.3333 8.83893V10.3452Z\" fill=\"currentColor\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.0879 19.679C17.4553 19.9195 17.8928 20.0398 18.4004 20.0398C18.9099 20.0398 19.3474 19.9205 19.7129 19.6818C20.0803 19.4413 20.3635 19.0938 20.5623 18.6392C20.7612 18.1847 20.8606 17.6373 20.8606 16.9972C20.8625 16.3608 20.764 15.8192 20.5652 15.3722C20.3663 14.9252 20.0822 14.5853 19.7129 14.3523C19.3455 14.1175 18.908 14 18.4004 14C17.8928 14 17.4553 14.1175 17.0879 14.3523C16.7224 14.5853 16.4402 14.9252 16.2413 15.3722C16.0443 15.8173 15.9449 16.3589 15.943 16.9972C15.9411 17.6354 16.0396 18.1818 16.2385 18.6364C16.4373 19.089 16.7205 19.4366 17.0879 19.679ZM19.1362 18.4262C18.9487 18.7349 18.7034 18.8892 18.4004 18.8892C18.1996 18.8892 18.0225 18.8211 17.8691 18.6847C17.7157 18.5464 17.5964 18.3372 17.5112 18.0568C17.4278 17.7765 17.3871 17.4233 17.389 16.9972C17.3909 16.3684 17.4847 15.9025 17.6703 15.5995C17.8559 15.2945 18.0992 15.1421 18.4004 15.1421C18.603 15.1421 18.7801 15.2093 18.9316 15.3438C19.0831 15.4782 19.2015 15.6828 19.2867 15.9574C19.372 16.2301 19.4146 16.5767 19.4146 16.9972C19.4165 17.6392 19.3237 18.1156 19.1362 18.4262Z\" fill=\"currentColor\"/> <path d=\"M13.7746 19.8978C13.8482 19.8978 13.9079 19.8381 13.9079 19.7644V14.2129C13.9079 14.1393 13.8482 14.0796 13.7746 14.0796H12.642C12.6171 14.0796 12.5927 14.0865 12.5716 14.0997L11.2322 14.9325C11.1931 14.9568 11.1693 14.9996 11.1693 15.0457V15.9497C11.1693 16.0539 11.2833 16.1178 11.3722 16.0635L12.464 15.396C12.4682 15.3934 12.473 15.3921 12.4779 15.3921C12.4926 15.3921 12.5045 15.404 12.5045 15.4187V19.7644C12.5045 19.8381 12.5642 19.8978 12.6378 19.8978H13.7746Z\" fill=\"currentColor\"/>';\nvar Icon$88 = '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.5722 5.33333C13.2429 5.33333 12.9629 5.57382 12.9132 5.89938L12.4063 9.21916C12.4 9.26058 12.3746 9.29655 12.3378 9.31672C12.2387 9.37118 12.1409 9.42779 12.0444 9.48648C12.0086 9.5083 11.9646 9.51242 11.9255 9.49718L8.79572 8.27692C8.48896 8.15732 8.14083 8.27958 7.9762 8.56472L5.5491 12.7686C5.38444 13.0538 5.45271 13.4165 5.70981 13.6223L8.33308 15.7225C8.3658 15.7487 8.38422 15.7887 8.38331 15.8306C8.38209 15.8867 8.38148 15.9429 8.38148 15.9993C8.38148 16.0558 8.3821 16.1121 8.38332 16.1684C8.38423 16.2102 8.36582 16.2503 8.33313 16.2765L5.7103 18.3778C5.45334 18.5836 5.38515 18.9462 5.54978 19.2314L7.97688 23.4352C8.14155 23.7205 8.48981 23.8427 8.79661 23.723L11.926 22.5016C11.9651 22.4864 12.009 22.4905 12.0449 22.5123C12.1412 22.5709 12.2388 22.6274 12.3378 22.6818C12.3745 22.7019 12.4 22.7379 12.4063 22.7793L12.9132 26.0993C12.9629 26.4249 13.2429 26.6654 13.5722 26.6654H18.4264C18.7556 26.6654 19.0356 26.425 19.0854 26.0995L19.5933 22.7801C19.5997 22.7386 19.6252 22.7027 19.6619 22.6825C19.7614 22.6279 19.8596 22.5711 19.9564 22.5121C19.9923 22.4903 20.0362 22.4862 20.0754 22.5015L23.2035 23.7223C23.5103 23.842 23.8585 23.7198 24.0232 23.4346L26.4503 19.2307C26.6149 18.9456 26.5467 18.583 26.2898 18.3771L23.6679 16.2766C23.6352 16.2504 23.6168 16.2104 23.6177 16.1685C23.619 16.1122 23.6196 16.0558 23.6196 15.9993C23.6196 15.9429 23.619 15.8866 23.6177 15.8305C23.6168 15.7886 23.6353 15.7486 23.668 15.7224L26.2903 13.623C26.5474 13.4172 26.6156 13.0544 26.451 12.7692L24.0239 8.56537C23.8592 8.28023 23.5111 8.15797 23.2043 8.27757L20.0758 9.49734C20.0367 9.51258 19.9927 9.50846 19.9569 9.48664C19.8599 9.42762 19.7616 9.37071 19.6618 9.31596C19.6251 9.2958 19.5997 9.25984 19.5933 9.21843L19.0854 5.89915C19.0356 5.57369 18.7556 5.33333 18.4264 5.33333H13.5722ZM16.0001 20.2854C18.3672 20.2854 20.2862 18.3664 20.2862 15.9993C20.2862 13.6322 18.3672 11.7132 16.0001 11.7132C13.6329 11.7132 11.714 13.6322 11.714 15.9993C11.714 18.3664 13.6329 20.2854 16.0001 20.2854Z\" fill=\"currentColor\"/>';\nvar Icon$104 = '<path d=\"M17.5091 24.6595C17.5091 25.2066 16.8864 25.5208 16.4463 25.1956L9.44847 20.0252C9.42553 20.0083 9.39776 19.9992 9.36923 19.9992H4.66667C4.29848 19.9992 4 19.7007 4 19.3325V12.6658C4 12.2976 4.29848 11.9992 4.66667 11.9992H9.37115C9.39967 11.9992 9.42745 11.99 9.45039 11.9731L16.4463 6.80363C16.8863 6.47845 17.5091 6.79262 17.5091 7.3398L17.5091 24.6595Z\" fill=\"currentColor\"/> <path d=\"M27.5091 9.33336C27.8773 9.33336 28.1758 9.63184 28.1758 10V22C28.1758 22.3682 27.8773 22.6667 27.5091 22.6667H26.1758C25.8076 22.6667 25.5091 22.3682 25.5091 22V10C25.5091 9.63184 25.8076 9.33336 26.1758 9.33336L27.5091 9.33336Z\" fill=\"currentColor\"/> <path d=\"M22.1758 12C22.544 12 22.8424 12.2985 22.8424 12.6667V19.3334C22.8424 19.7016 22.544 20 22.1758 20H20.8424C20.4743 20 20.1758 19.7016 20.1758 19.3334V12.6667C20.1758 12.2985 20.4743 12 20.8424 12H22.1758Z\" fill=\"currentColor\"/>';\nvar Icon$105 = '<path d=\"M17.5091 24.6594C17.5091 25.2066 16.8864 25.5207 16.4463 25.1956L9.44847 20.0252C9.42553 20.0083 9.39776 19.9991 9.36923 19.9991H4.66667C4.29848 19.9991 4 19.7006 4 19.3324V12.6658C4 12.2976 4.29848 11.9991 4.66667 11.9991H9.37115C9.39967 11.9991 9.42745 11.99 9.45039 11.973L16.4463 6.80358C16.8863 6.4784 17.5091 6.79258 17.5091 7.33975L17.5091 24.6594Z\" fill=\"currentColor\"/> <path d=\"M22.8424 12.6667C22.8424 12.2985 22.544 12 22.1758 12H20.8424C20.4743 12 20.1758 12.2985 20.1758 12.6667V19.3333C20.1758 19.7015 20.4743 20 20.8424 20H22.1758C22.544 20 22.8424 19.7015 22.8424 19.3333V12.6667Z\" fill=\"currentColor\"/>';\n\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"ScopeNode\");\n$RefreshReg$(_c1, \"ComputeNode\");\n$RefreshReg$(_c2, \"WithScope\");\n$RefreshReg$(_c3, \"AttachEffect\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BOkHoBGu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-BOkHoBGu.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AirPlayButton: function() { return /* binding */ AirPlayButton; },\n/* harmony export */   Button: function() { return /* binding */ Button; },\n/* harmony export */   CaptionButton: function() { return /* binding */ CaptionButton; },\n/* harmony export */   ChapterTitle: function() { return /* binding */ ChapterTitle; },\n/* harmony export */   Chapters: function() { return /* binding */ Chapters; },\n/* harmony export */   FullscreenButton: function() { return /* binding */ FullscreenButton; },\n/* harmony export */   Gesture: function() { return /* binding */ Gesture; },\n/* harmony export */   Img: function() { return /* binding */ Img; },\n/* harmony export */   Item: function() { return /* binding */ Item$1; },\n/* harmony export */   Items: function() { return /* binding */ Items; },\n/* harmony export */   LiveButton: function() { return /* binding */ LiveButton; },\n/* harmony export */   MuteButton: function() { return /* binding */ MuteButton; },\n/* harmony export */   PIPButton: function() { return /* binding */ PIPButton; },\n/* harmony export */   PlayButton: function() { return /* binding */ PlayButton; },\n/* harmony export */   Portal: function() { return /* binding */ Portal; },\n/* harmony export */   Preview: function() { return /* binding */ Preview; },\n/* harmony export */   Progress: function() { return /* binding */ Progress; },\n/* harmony export */   Root: function() { return /* binding */ Root$3; },\n/* harmony export */   Root$1: function() { return /* binding */ Root$2; },\n/* harmony export */   Root$2: function() { return /* binding */ Root; },\n/* harmony export */   Root$3: function() { return /* binding */ Root$1; },\n/* harmony export */   Root$4: function() { return /* binding */ Root$4; },\n/* harmony export */   Root$5: function() { return /* binding */ Root$5; },\n/* harmony export */   SeekButton: function() { return /* binding */ SeekButton; },\n/* harmony export */   Steps: function() { return /* binding */ Steps; },\n/* harmony export */   Thumb: function() { return /* binding */ Thumb; },\n/* harmony export */   Thumbnail: function() { return /* binding */ Thumbnail; },\n/* harmony export */   Time: function() { return /* binding */ Time; },\n/* harmony export */   Track: function() { return /* binding */ Track; },\n/* harmony export */   TrackFill: function() { return /* binding */ TrackFill; },\n/* harmony export */   Value: function() { return /* binding */ Value; },\n/* harmony export */   menu: function() { return /* binding */ menu; },\n/* harmony export */   radioGroup: function() { return /* binding */ radioGroup; },\n/* harmony export */   slider: function() { return /* binding */ slider; },\n/* harmony export */   sliderCallbacks: function() { return /* binding */ sliderCallbacks; },\n/* harmony export */   thumbnail: function() { return /* binding */ thumbnail; },\n/* harmony export */   timeSlider: function() { return /* binding */ timeSlider; },\n/* harmony export */   useAudioOptions: function() { return /* binding */ useAudioOptions; },\n/* harmony export */   useCaptionOptions: function() { return /* binding */ useCaptionOptions; },\n/* harmony export */   useMediaContext: function() { return /* binding */ useMediaContext; },\n/* harmony export */   useMediaPlayer: function() { return /* binding */ useMediaPlayer; },\n/* harmony export */   volumeSlider: function() { return /* binding */ volumeSlider; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* harmony import */ var _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vidstack-Nm9OJy7x.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Nm9OJy7x.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* __next_internal_client_entry_do_not_use__ AirPlayButton,Button,CaptionButton,ChapterTitle,Chapters,FullscreenButton,Gesture,Img,Item,Items,LiveButton,MuteButton,PIPButton,PlayButton,Portal,Preview,Progress,Root,Root$1,Root$2,Root$3,Root$4,Root$5,SeekButton,Steps,Thumb,Thumbnail,Time,Track,TrackFill,Value,menu,radioGroup,slider,sliderCallbacks,thumbnail,timeSlider,useAudioOptions,useCaptionOptions,useMediaContext,useMediaPlayer,volumeSlider auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$();\n\n\n\n\nfunction useMediaContext() {\n    _s();\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useReactContext)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.mediaContext);\n}\n_s(useMediaContext, \"33lq/yWn43NnofIEum2odi1mkoM=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useReactContext\n    ];\n});\nconst AirPlayButtonBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.AirPlayButtonInstance, {\n    domEventsRegex: /^onMedia/\n});\n_c = AirPlayButtonBridge;\nconst AirPlayButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c1 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AirPlayButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c2 = AirPlayButton;\nAirPlayButton.displayName = \"AirPlayButton\";\nconst PlayButtonBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.PlayButtonInstance, {\n    domEventsRegex: /^onMedia/\n});\n_c3 = PlayButtonBridge;\nconst PlayButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c4 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PlayButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c5 = PlayButton;\nPlayButton.displayName = \"PlayButton\";\nconst CaptionButtonBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.CaptionButtonInstance, {\n    domEventsRegex: /^onMedia/\n});\n_c6 = CaptionButtonBridge;\nconst CaptionButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c7 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CaptionButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c8 = CaptionButton;\nCaptionButton.displayName = \"CaptionButton\";\nconst FullscreenButtonBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.FullscreenButtonInstance, {\n    domEventsRegex: /^onMedia/\n});\n_c9 = FullscreenButtonBridge;\nconst FullscreenButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c10 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FullscreenButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c11 = FullscreenButton;\nFullscreenButton.displayName = \"FullscreenButton\";\nconst MuteButtonBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.MuteButtonInstance, {\n    domEventsRegex: /^onMedia/\n});\n_c12 = MuteButtonBridge;\nconst MuteButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c13 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(MuteButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c14 = MuteButton;\nMuteButton.displayName = \"MuteButton\";\nconst PIPButtonBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.PIPButtonInstance, {\n    domEventsRegex: /^onMedia/\n});\n_c15 = PIPButtonBridge;\nconst PIPButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c16 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PIPButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c17 = PIPButton;\nPIPButton.displayName = \"PIPButton\";\nconst SeekButtonBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.SeekButtonInstance, {\n    domEventsRegex: /^onMedia/\n});\n_c18 = SeekButtonBridge;\nconst SeekButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c19 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SeekButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c20 = SeekButton;\nSeekButton.displayName = \"SeekButton\";\nconst LiveButtonBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.LiveButtonInstance, {\n    domEventsRegex: /^onMedia/\n});\n_c21 = LiveButtonBridge;\nconst LiveButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c22 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LiveButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c23 = LiveButton;\nLiveButton.displayName = \"LiveButton\";\nconst sliderCallbacks = [\n    \"onDragStart\",\n    \"onDragEnd\",\n    \"onDragValueChange\",\n    \"onValueChange\",\n    \"onPointerValueChange\"\n];\nconst SliderValueBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.SliderValueInstance);\n_c24 = SliderValueBridge;\nconst SliderBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.SliderInstance, {\n    events: sliderCallbacks\n});\n_c25 = SliderBridge;\nconst Root$5 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c26 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SliderBridge, {\n        ...props,\n        ref: forwardRef\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2\n        }, children));\n});\n_c27 = Root$5;\nRoot$5.displayName = \"Slider\";\nconst Thumb = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c28 = (props, forwardRef)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n        ...props,\n        ref: forwardRef\n    }));\n_c29 = Thumb;\nThumb.displayName = \"SliderThumb\";\nconst Track = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c30 = (props, forwardRef)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n        ...props,\n        ref: forwardRef\n    }));\n_c31 = Track;\nTrack.displayName = \"SliderTrack\";\nconst TrackFill = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c32 = (props, forwardRef)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n        ...props,\n        ref: forwardRef\n    }));\n_c33 = TrackFill;\nTrackFill.displayName = \"SliderTrackFill\";\nconst PreviewBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.SliderPreviewInstance);\n_c34 = PreviewBridge;\nconst Preview = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c35 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PreviewBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c36 = Preview;\nPreview.displayName = \"SliderPreview\";\nconst Value = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c37 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    var _s = $RefreshSig$();\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SliderValueBridge, {\n        ...props\n    }, _s((props2, instance)=>{\n        _s();\n        const $text = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(()=>instance.getValueText(), instance);\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2,\n            ref: forwardRef\n        }, $text, children);\n    }, \"tICwlxBQU3UxC1TDSVeCRywQuRQ=\", false, function() {\n        return [\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal\n        ];\n    }));\n});\n_c38 = Value;\nValue.displayName = \"SliderValue\";\nconst Steps = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c39 = _s1((param, forwardRef)=>{\n    let { children, ...props } = param;\n    _s1();\n    const $min = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState)(\"min\"), $max = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState)(\"max\"), $step = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState)(\"step\"), steps = ($max - $min) / $step;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n        ...props,\n        ref: forwardRef\n    }, Array.from({\n        length: Math.floor(steps) + 1\n    }).map((_, step)=>children(step)));\n}, \"ugP+nbCAcROgi2bVHzXAEuA0NF0=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState\n    ];\n})), \"ugP+nbCAcROgi2bVHzXAEuA0NF0=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useSliderState\n    ];\n});\n_c40 = Steps;\nSteps.displayName = \"SliderSteps\";\nvar slider = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Preview: Preview,\n    Root: Root$5,\n    Steps: Steps,\n    Thumb: Thumb,\n    Track: Track,\n    TrackFill: TrackFill,\n    Value: Value\n});\nconst VolumeSliderBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.VolumeSliderInstance, {\n    events: sliderCallbacks,\n    domEventsRegex: /^onMedia/\n});\n_c41 = VolumeSliderBridge;\nconst Root$4 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c42 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(VolumeSliderBridge, {\n        ...props,\n        ref: forwardRef\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2\n        }, children));\n});\n_c43 = Root$4;\nRoot$4.displayName = \"VolumeSlider\";\nvar volumeSlider = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Preview: Preview,\n    Root: Root$4,\n    Steps: Steps,\n    Thumb: Thumb,\n    Track: Track,\n    TrackFill: TrackFill,\n    Value: Value\n});\nfunction createVTTCue() {\n    let startTime = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, endTime = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, text = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"\";\n    if (_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.IS_SERVER) {\n        return {\n            startTime,\n            endTime,\n            text,\n            addEventListener: _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.noop,\n            removeEventListener: _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.noop,\n            dispatchEvent: _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.noop\n        };\n    }\n    return new window.VTTCue(startTime, endTime, text);\n}\nconst ThumbnailBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.ThumbnailInstance);\n_c44 = ThumbnailBridge;\nconst Root$3 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c45 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThumbnailBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c46 = Root$3;\nRoot$3.displayName = \"Thumbnail\";\nconst Img = /*#__PURE__*/ _s2(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c47 = _s2((param, forwardRef)=>{\n    let { children, ...props } = param;\n    _s2();\n    const { src, img, crossOrigin } = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useStateContext)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.ThumbnailInstance.state), $src = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(src), $crossOrigin = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(crossOrigin);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.img, {\n        crossOrigin: $crossOrigin,\n        ...props,\n        src: $src,\n        ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(img.set, forwardRef)\n    }, children);\n}, \"3rrBFviAScnKGiJGYcXvi/yaCtg=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useStateContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal\n    ];\n})), \"3rrBFviAScnKGiJGYcXvi/yaCtg=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useStateContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal\n    ];\n});\n_c48 = Img;\nImg.displayName = \"ThumbnailImg\";\nvar thumbnail = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Img: Img,\n    Root: Root$3\n});\nconst TimeSliderContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n    $chapters: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.signal)(null)\n});\nTimeSliderContext.displayName = \"TimeSliderContext\";\nconst TimeSliderBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.TimeSliderInstance, {\n    events: sliderCallbacks,\n    domEventsRegex: /^onMedia/\n});\n_c49 = TimeSliderBridge;\nconst Root$2 = /*#__PURE__*/ _s3(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c50 = _s3((param, forwardRef)=>{\n    let { children, ...props } = param;\n    _s3();\n    const $chapters = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.signal)(null), []);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TimeSliderContext.Provider, {\n        value: {\n            $chapters\n        }\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TimeSliderBridge, {\n        ...props,\n        ref: forwardRef\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2\n        }, children)));\n}, \"qIRlzrTktF21OATQU7ctr4Si5Qk=\")), \"qIRlzrTktF21OATQU7ctr4Si5Qk=\");\n_c51 = Root$2;\nRoot$2.displayName = \"TimeSlider\";\nconst SliderChaptersBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.SliderChaptersInstance);\n_c52 = SliderChaptersBridge;\nconst Chapters = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c53 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SliderChaptersBridge, {\n        ...props\n    }, (props2, instance)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ChapterTracks, {\n            instance\n        }, children)));\n});\n_c54 = Chapters;\nChapters.displayName = \"SliderChapters\";\nfunction ChapterTracks(param) {\n    let { instance, children } = param;\n    _s4();\n    const $cues = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(()=>instance.cues, instance), refs = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]), emptyCue = react__WEBPACK_IMPORTED_MODULE_0__.useRef(), { $chapters } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(TimeSliderContext);\n    if (!emptyCue.current) {\n        emptyCue.current = createVTTCue();\n    }\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        $chapters.set(instance);\n        return ()=>void $chapters.set(null);\n    }, [\n        instance\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        instance.setRefs(refs.current);\n    }, [\n        $cues\n    ]);\n    return children($cues.length ? $cues : [\n        emptyCue.current\n    ], (el)=>{\n        if (!el) {\n            refs.current.length = 0;\n            return;\n        }\n        refs.current.push(el);\n    });\n}\n_s4(ChapterTracks, \"hZEzLNoCo6WJL2/sUc3uv+5H1lQ=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal\n    ];\n});\n_c55 = ChapterTracks;\nChapterTracks.displayName = \"SliderChapterTracks\";\nconst ChapterTitle = /*#__PURE__*/ _s5(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c56 = _s5((param, forwardRef)=>{\n    let { children, ...props } = param;\n    _s5();\n    const { $chapters } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(TimeSliderContext), [title, setTitle] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.effect)(()=>{\n            const chapters = $chapters(), cue = (chapters === null || chapters === void 0 ? void 0 : chapters.activePointerCue) || (chapters === null || chapters === void 0 ? void 0 : chapters.activeCue);\n            setTitle((cue === null || cue === void 0 ? void 0 : cue.text) || \"\");\n        });\n    }, []);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n        ...props,\n        ref: forwardRef\n    }, title, children);\n}, \"yqAQfyZNyqXiuMH3dzKnO+mIH3M=\")), \"yqAQfyZNyqXiuMH3dzKnO+mIH3M=\");\n_c57 = ChapterTitle;\nChapterTitle.displayName = \"SliderChapterTitle\";\nconst Progress = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c58 = (props, forwardRef)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n        ...props,\n        ref: forwardRef\n    }));\n_c59 = Progress;\nProgress.displayName = \"SliderProgress\";\nconst SliderThumbnailBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.SliderThumbnailInstance);\n_c60 = SliderThumbnailBridge;\nconst ThumbnailRoot = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c61 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SliderThumbnailBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c62 = ThumbnailRoot;\nThumbnailRoot.displayName = \"SliderThumbnail\";\nconst Thumbnail = {\n    Root: ThumbnailRoot,\n    Img: Img\n};\nconst VideoBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.SliderVideoInstance, {\n    events: [\n        \"onCanPlay\",\n        \"onError\"\n    ]\n});\n_c63 = VideoBridge;\nconst Video = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c64 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(VideoBridge, {\n        ...props\n    }, (props2, instance)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(VideoProvider, {\n            ...props2,\n            instance,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c65 = Video;\nVideo.displayName = \"SliderVideo\";\nconst VideoProvider = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s6((param, forwardRef)=>{\n    let { instance, children, ...props } = param;\n    _s6();\n    const { canLoad } = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useStateContext)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.mediaState), { src, video, crossOrigin } = instance.$state, $src = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(src), $canLoad = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(canLoad), $crossOrigin = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(crossOrigin);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.video, {\n        style: {\n            maxWidth: \"unset\"\n        },\n        ...props,\n        src: $src || void 0,\n        muted: true,\n        playsInline: true,\n        preload: $canLoad ? \"auto\" : \"none\",\n        crossOrigin: $crossOrigin || void 0,\n        ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(video.set, forwardRef)\n    }, children);\n}, \"Ci4uTZl6Nn+aeCAwoSVz077I1s4=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useStateContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useStateContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal\n    ];\n}));\n_c66 = VideoProvider;\nVideoProvider.displayName = \"SliderVideoProvider\";\nvar timeSlider = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    ChapterTitle: ChapterTitle,\n    Chapters: Chapters,\n    Preview: Preview,\n    Progress: Progress,\n    Root: Root$2,\n    Steps: Steps,\n    Thumb: Thumb,\n    Thumbnail: Thumbnail,\n    Track: Track,\n    TrackFill: TrackFill,\n    Value: Value,\n    Video: Video\n});\nconst RadioGroupBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.RadioGroupInstance, {\n    events: [\n        \"onChange\"\n    ]\n});\n_c67 = RadioGroupBridge;\nconst Root$1 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c68 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RadioGroupBridge, {\n        ...props,\n        ref: forwardRef\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2\n        }, children));\n});\n_c69 = Root$1;\nRoot$1.displayName = \"RadioGroup\";\nconst ItemBridge$1 = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.RadioInstance, {\n    events: [\n        \"onChange\",\n        \"onSelect\"\n    ]\n});\n_c70 = ItemBridge$1;\nconst Item$1 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c71 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ItemBridge$1, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c72 = Item$1;\nItem$1.displayName = \"RadioItem\";\nvar radioGroup = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Item: Item$1,\n    Root: Root$1\n});\nconst IS_SERVER = typeof document === \"undefined\";\nconst MenuBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.MenuInstance, {\n    events: [\n        \"onOpen\",\n        \"onClose\"\n    ],\n    domEventsRegex: /^onMedia/\n});\n_c73 = MenuBridge;\nconst Root = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c74 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(MenuBridge, {\n        ...props,\n        ref: forwardRef\n    }, (props2, instance)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2,\n            style: {\n                display: !instance.isSubmenu ? \"contents\" : void 0,\n                ...props2.style\n            }\n        }, children));\n});\n_c75 = Root;\nRoot.displayName = \"Menu\";\nconst ButtonBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.MenuButtonInstance, {\n    events: [\n        \"onSelect\"\n    ]\n});\n_c76 = ButtonBridge;\nconst Button = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c77 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c78 = Button;\nButton.displayName = \"MenuButton\";\nconst Portal = /*#__PURE__*/ _s7(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c79 = _s7((param, forwardRef)=>{\n    let { container = null, disabled = false, children, ...props } = param;\n    _s7();\n    let fullscreen = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useMediaState)(\"fullscreen\"), shouldPortal = disabled === \"fullscreen\" ? !fullscreen : !disabled;\n    const target = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        if (IS_SERVER) return null;\n        const node = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.isString)(container) ? document.querySelector(container) : container;\n        return node !== null && node !== void 0 ? node : document.body;\n    }, [\n        container\n    ]);\n    return !target || !shouldPortal ? children : /*#__PURE__*/ (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n        ...props,\n        style: {\n            display: \"contents\",\n            ...props.style\n        },\n        ref: forwardRef\n    }, children), target);\n}, \"LEzXVi0TYhyao0++aN4qOnVqw1Q=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useMediaState\n    ];\n})), \"LEzXVi0TYhyao0++aN4qOnVqw1Q=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.useMediaState\n    ];\n});\n_c80 = Portal;\nPortal.displayName = \"MenuPortal\";\nconst ItemsBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.MenuItemsInstance);\n_c81 = ItemsBridge;\nconst Items = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c82 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ItemsBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c83 = Items;\nItems.displayName = \"MenuItems\";\nconst ItemBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.MenuItemInstance);\n_c84 = ItemBridge;\nconst Item = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c85 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ItemBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c86 = Item;\nItem.displayName = \"MenuItem\";\nvar menu = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Button: Button,\n    Content: Items,\n    Item: Item,\n    Items: Items,\n    Portal: Portal,\n    Radio: Item$1,\n    RadioGroup: Root$1,\n    Root: Root\n});\nconst GestureBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.GestureInstance, {\n    events: [\n        \"onWillTrigger\",\n        \"onTrigger\"\n    ]\n});\n_c87 = GestureBridge;\nconst Gesture = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c88 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GestureBridge, {\n        ...props,\n        ref: forwardRef\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n            ...props2\n        }, children));\n});\n_c89 = Gesture;\nGesture.displayName = \"Gesture\";\nconst TimeBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.TimeInstance);\n_c90 = TimeBridge;\nconst Time = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c91 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TimeBridge, {\n        ...props\n    }, (props2, instance)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TimeText, {\n            ...props2,\n            instance,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c92 = Time;\nTime.displayName = \"Time\";\nconst TimeText = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s8((param, forwardRef)=>{\n    let { instance, children, ...props } = param;\n    _s8();\n    const { timeText } = instance.$state, $timeText = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(timeText);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.Primitive.div, {\n        ...props,\n        ref: forwardRef\n    }, $timeText, children);\n}, \"YLVTjyLfWhV4oD7bDBy/X7sRM9k=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal\n    ];\n}));\n_c93 = TimeText;\nTimeText.displayName = \"TimeText\";\nfunction useMediaPlayer() {\n    _s9();\n    const context = useMediaContext();\n    if (!context) {\n        throw Error(\"[vidstack] no media context was found - was this called outside of `<MediaPlayer>`?\");\n    }\n    return (context === null || context === void 0 ? void 0 : context.player) || null;\n}\n_s9(useMediaPlayer, \"61zHBllCboujot930sAYm7aY/ks=\", false, function() {\n    return [\n        useMediaContext\n    ];\n});\nfunction useAudioOptions() {\n    _s10();\n    const media = useMediaContext(), { audioTracks, audioTrack } = media.$state, $audioTracks = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(audioTracks);\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(audioTrack);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const options = $audioTracks.map((track)=>({\n                track,\n                label: track.label,\n                value: getTrackValue$1(track),\n                get selected () {\n                    return audioTrack() === track;\n                },\n                select (trigger) {\n                    const index = audioTracks().indexOf(track);\n                    if (index >= 0) media.remote.changeAudioTrack(index, trigger);\n                }\n            }));\n        Object.defineProperty(options, \"disabled\", {\n            get () {\n                return options.length <= 1;\n            }\n        });\n        Object.defineProperty(options, \"selectedTrack\", {\n            get () {\n                return audioTrack();\n            }\n        });\n        Object.defineProperty(options, \"selectedValue\", {\n            get () {\n                const track = audioTrack();\n                return track ? getTrackValue$1(track) : void 0;\n            }\n        });\n        return options;\n    }, [\n        $audioTracks\n    ]);\n}\n_s10(useAudioOptions, \"2eJkEzQ5UNVMd+QYpiYBKatFfcE=\", false, function() {\n    return [\n        useMediaContext,\n        useMediaContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal\n    ];\n});\nfunction getTrackValue$1(track) {\n    return track.label.toLowerCase();\n}\nfunction useCaptionOptions() {\n    let { off = true } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s11();\n    const media = useMediaContext(), { textTracks, textTrack } = media.$state, $textTracks = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(textTracks);\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal)(textTrack);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const captionTracks = $textTracks.filter(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_3__.isTrackCaptionKind), options = captionTracks.map((track)=>({\n                track,\n                label: track.label,\n                value: getTrackValue(track),\n                get selected () {\n                    return textTrack() === track;\n                },\n                select (trigger) {\n                    const index = textTracks().indexOf(track);\n                    if (index >= 0) media.remote.changeTextTrackMode(index, \"showing\", trigger);\n                }\n            }));\n        if (off) {\n            options.unshift({\n                track: null,\n                label: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.isString)(off) ? off : \"Off\",\n                value: \"off\",\n                get selected () {\n                    return !textTrack();\n                },\n                select (trigger) {\n                    media.remote.toggleCaptions(trigger);\n                }\n            });\n        }\n        Object.defineProperty(options, \"disabled\", {\n            get () {\n                return !captionTracks.length;\n            }\n        });\n        Object.defineProperty(options, \"selectedTrack\", {\n            get () {\n                return textTrack();\n            }\n        });\n        Object.defineProperty(options, \"selectedValue\", {\n            get () {\n                const track = textTrack();\n                return track ? getTrackValue(track) : \"off\";\n            }\n        });\n        return options;\n    }, [\n        $textTracks\n    ]);\n}\n_s11(useCaptionOptions, \"cI4eH5BEogLBZtW5uMCVC5mNCqg=\", false, function() {\n    return [\n        useMediaContext,\n        useMediaContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.useSignal\n    ];\n});\nfunction getTrackValue(track) {\n    return track.id + \":\" + track.kind + \"-\" + track.label.toLowerCase();\n}\n\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40, _c41, _c42, _c43, _c44, _c45, _c46, _c47, _c48, _c49, _c50, _c51, _c52, _c53, _c54, _c55, _c56, _c57, _c58, _c59, _c60, _c61, _c62, _c63, _c64, _c65, _c66, _c67, _c68, _c69, _c70, _c71, _c72, _c73, _c74, _c75, _c76, _c77, _c78, _c79, _c80, _c81, _c82, _c83, _c84, _c85, _c86, _c87, _c88, _c89, _c90, _c91, _c92, _c93;\n$RefreshReg$(_c, \"AirPlayButtonBridge\");\n$RefreshReg$(_c1, \"AirPlayButton$React.forwardRef\");\n$RefreshReg$(_c2, \"AirPlayButton\");\n$RefreshReg$(_c3, \"PlayButtonBridge\");\n$RefreshReg$(_c4, \"PlayButton$React.forwardRef\");\n$RefreshReg$(_c5, \"PlayButton\");\n$RefreshReg$(_c6, \"CaptionButtonBridge\");\n$RefreshReg$(_c7, \"CaptionButton$React.forwardRef\");\n$RefreshReg$(_c8, \"CaptionButton\");\n$RefreshReg$(_c9, \"FullscreenButtonBridge\");\n$RefreshReg$(_c10, \"FullscreenButton$React.forwardRef\");\n$RefreshReg$(_c11, \"FullscreenButton\");\n$RefreshReg$(_c12, \"MuteButtonBridge\");\n$RefreshReg$(_c13, \"MuteButton$React.forwardRef\");\n$RefreshReg$(_c14, \"MuteButton\");\n$RefreshReg$(_c15, \"PIPButtonBridge\");\n$RefreshReg$(_c16, \"PIPButton$React.forwardRef\");\n$RefreshReg$(_c17, \"PIPButton\");\n$RefreshReg$(_c18, \"SeekButtonBridge\");\n$RefreshReg$(_c19, \"SeekButton$React.forwardRef\");\n$RefreshReg$(_c20, \"SeekButton\");\n$RefreshReg$(_c21, \"LiveButtonBridge\");\n$RefreshReg$(_c22, \"LiveButton$React.forwardRef\");\n$RefreshReg$(_c23, \"LiveButton\");\n$RefreshReg$(_c24, \"SliderValueBridge\");\n$RefreshReg$(_c25, \"SliderBridge\");\n$RefreshReg$(_c26, \"Root$5$React.forwardRef\");\n$RefreshReg$(_c27, \"Root$5\");\n$RefreshReg$(_c28, \"Thumb$React.forwardRef\");\n$RefreshReg$(_c29, \"Thumb\");\n$RefreshReg$(_c30, \"Track$React.forwardRef\");\n$RefreshReg$(_c31, \"Track\");\n$RefreshReg$(_c32, \"TrackFill$React.forwardRef\");\n$RefreshReg$(_c33, \"TrackFill\");\n$RefreshReg$(_c34, \"PreviewBridge\");\n$RefreshReg$(_c35, \"Preview$React.forwardRef\");\n$RefreshReg$(_c36, \"Preview\");\n$RefreshReg$(_c37, \"Value$React.forwardRef\");\n$RefreshReg$(_c38, \"Value\");\n$RefreshReg$(_c39, \"Steps$React.forwardRef\");\n$RefreshReg$(_c40, \"Steps\");\n$RefreshReg$(_c41, \"VolumeSliderBridge\");\n$RefreshReg$(_c42, \"Root$4$React.forwardRef\");\n$RefreshReg$(_c43, \"Root$4\");\n$RefreshReg$(_c44, \"ThumbnailBridge\");\n$RefreshReg$(_c45, \"Root$3$React.forwardRef\");\n$RefreshReg$(_c46, \"Root$3\");\n$RefreshReg$(_c47, \"Img$React.forwardRef\");\n$RefreshReg$(_c48, \"Img\");\n$RefreshReg$(_c49, \"TimeSliderBridge\");\n$RefreshReg$(_c50, \"Root$2$React.forwardRef\");\n$RefreshReg$(_c51, \"Root$2\");\n$RefreshReg$(_c52, \"SliderChaptersBridge\");\n$RefreshReg$(_c53, \"Chapters$React.forwardRef\");\n$RefreshReg$(_c54, \"Chapters\");\n$RefreshReg$(_c55, \"ChapterTracks\");\n$RefreshReg$(_c56, \"ChapterTitle$React.forwardRef\");\n$RefreshReg$(_c57, \"ChapterTitle\");\n$RefreshReg$(_c58, \"Progress$React.forwardRef\");\n$RefreshReg$(_c59, \"Progress\");\n$RefreshReg$(_c60, \"SliderThumbnailBridge\");\n$RefreshReg$(_c61, \"ThumbnailRoot$React.forwardRef\");\n$RefreshReg$(_c62, \"ThumbnailRoot\");\n$RefreshReg$(_c63, \"VideoBridge\");\n$RefreshReg$(_c64, \"Video$React.forwardRef\");\n$RefreshReg$(_c65, \"Video\");\n$RefreshReg$(_c66, \"VideoProvider\");\n$RefreshReg$(_c67, \"RadioGroupBridge\");\n$RefreshReg$(_c68, \"Root$1$React.forwardRef\");\n$RefreshReg$(_c69, \"Root$1\");\n$RefreshReg$(_c70, \"ItemBridge$1\");\n$RefreshReg$(_c71, \"Item$1$React.forwardRef\");\n$RefreshReg$(_c72, \"Item$1\");\n$RefreshReg$(_c73, \"MenuBridge\");\n$RefreshReg$(_c74, \"Root$React.forwardRef\");\n$RefreshReg$(_c75, \"Root\");\n$RefreshReg$(_c76, \"ButtonBridge\");\n$RefreshReg$(_c77, \"Button$React.forwardRef\");\n$RefreshReg$(_c78, \"Button\");\n$RefreshReg$(_c79, \"Portal$React.forwardRef\");\n$RefreshReg$(_c80, \"Portal\");\n$RefreshReg$(_c81, \"ItemsBridge\");\n$RefreshReg$(_c82, \"Items$React.forwardRef\");\n$RefreshReg$(_c83, \"Items\");\n$RefreshReg$(_c84, \"ItemBridge\");\n$RefreshReg$(_c85, \"Item$React.forwardRef\");\n$RefreshReg$(_c86, \"Item\");\n$RefreshReg$(_c87, \"GestureBridge\");\n$RefreshReg$(_c88, \"Gesture$React.forwardRef\");\n$RefreshReg$(_c89, \"Gesture\");\n$RefreshReg$(_c90, \"TimeBridge\");\n$RefreshReg$(_c91, \"Time$React.forwardRef\");\n$RefreshReg$(_c92, \"Time\");\n$RefreshReg$(_c93, \"TimeText\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BOkHoBGu.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BVbKfF2_.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-BVbKfF2_.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemotionPoster: function() { return /* binding */ RemotionPoster; },\n/* harmony export */   RemotionSliderThumbnail: function() { return /* binding */ RemotionSliderThumbnail; },\n/* harmony export */   RemotionThumbnail: function() { return /* binding */ RemotionThumbnail; }\n/* harmony export */ });\n/* harmony import */ var _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* __next_internal_client_entry_do_not_use__ RemotionPoster,RemotionSliderThumbnail,RemotionThumbnail auto */ \nconst RemotionThumbnail = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__.signal)(null);\nconst RemotionSliderThumbnail = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__.signal)(null);\nconst RemotionPoster = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__.signal)(null);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L2NodW5rcy92aWRzdGFjay1CVmJLZkYyXy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OzhHQUVnRDtBQUVoRCxNQUFNQyxvQkFBb0JELDREQUFNQSxDQUM5QjtBQUVGLE1BQU1FLDBCQUEwQkYsNERBQU1BLENBQUM7QUFDdkMsTUFBTUcsaUJBQWlCSCw0REFBTUEsQ0FDM0I7QUFHb0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B2aWRzdGFjay9yZWFjdC9kZXYvY2h1bmtzL3ZpZHN0YWNrLUJWYktmRjJfLmpzP2NlMWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuaW1wb3J0IHsgc2lnbmFsIH0gZnJvbSAnLi92aWRzdGFjay0zaHMzLThpXy5qcyc7XG5cbmNvbnN0IFJlbW90aW9uVGh1bWJuYWlsID0gc2lnbmFsKFxuICBudWxsXG4pO1xuY29uc3QgUmVtb3Rpb25TbGlkZXJUaHVtYm5haWwgPSBzaWduYWwobnVsbCk7XG5jb25zdCBSZW1vdGlvblBvc3RlciA9IHNpZ25hbChcbiAgbnVsbFxuKTtcblxuZXhwb3J0IHsgUmVtb3Rpb25Qb3N0ZXIsIFJlbW90aW9uU2xpZGVyVGh1bWJuYWlsLCBSZW1vdGlvblRodW1ibmFpbCB9O1xuIl0sIm5hbWVzIjpbInNpZ25hbCIsIlJlbW90aW9uVGh1bWJuYWlsIiwiUmVtb3Rpb25TbGlkZXJUaHVtYm5haWwiLCJSZW1vdGlvblBvc3RlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BVbKfF2_.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-CBF7iUqu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-CBF7iUqu.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Icon: function() { return /* binding */ Icon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* __next_internal_client_entry_do_not_use__ Icon auto */ \nconst Icon = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = (props, ref)=>{\n    const { width, height, size = null, paths, ...restProps } = props;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        viewBox: \"0 0 32 32\",\n        ...restProps,\n        width: width !== null && width !== void 0 ? width : size,\n        height: height !== null && height !== void 0 ? height : size,\n        fill: \"none\",\n        \"aria-hidden\": \"true\",\n        focusable: \"false\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        ref,\n        dangerouslySetInnerHTML: {\n            __html: paths\n        }\n    });\n});\n_c1 = Icon;\nIcon.displayName = \"VidstackIcon\";\n\nvar _c, _c1;\n$RefreshReg$(_c, \"Icon$React.forwardRef\");\n$RefreshReg$(_c1, \"Icon\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L2NodW5rcy92aWRzdGFjay1DQkY3aVVxdS5qcyIsIm1hcHBpbmdzIjoiOzs7OzswREFFK0I7QUFFL0IsTUFBTUMsT0FBTyxhQUFhLGlCQUFHRCw2Q0FBZ0IsTUFBQyxDQUFDRyxPQUFPQztJQUNwRCxNQUFNLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFQyxPQUFPLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUdDLFdBQVcsR0FBR047SUFDNUQscUJBQU9ILGdEQUFtQixDQUFDLE9BQU87UUFDaENXLFNBQVM7UUFDVCxHQUFHRixTQUFTO1FBQ1pKLE9BQU9BLGtCQUFBQSxtQkFBQUEsUUFBU0U7UUFDaEJELFFBQVFBLG1CQUFBQSxvQkFBQUEsU0FBVUM7UUFDbEJLLE1BQU07UUFDTixlQUFlO1FBQ2ZDLFdBQVc7UUFDWEMsT0FBTztRQUNQVjtRQUNBVyx5QkFBeUI7WUFBRUMsUUFBUVI7UUFBTTtJQUMzQztBQUNGOztBQUNBUCxLQUFLZ0IsV0FBVyxHQUFHO0FBRUgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B2aWRzdGFjay9yZWFjdC9kZXYvY2h1bmtzL3ZpZHN0YWNrLUNCRjdpVXF1LmpzP2Q5ZjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jb25zdCBJY29uID0gLyogQF9fUFVSRV9fICovIFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCByZWYpID0+IHtcbiAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0LCBzaXplID0gbnVsbCwgcGF0aHMsIC4uLnJlc3RQcm9wcyB9ID0gcHJvcHM7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIHtcbiAgICB2aWV3Qm94OiBcIjAgMCAzMiAzMlwiLFxuICAgIC4uLnJlc3RQcm9wcyxcbiAgICB3aWR0aDogd2lkdGggPz8gc2l6ZSxcbiAgICBoZWlnaHQ6IGhlaWdodCA/PyBzaXplLFxuICAgIGZpbGw6IFwibm9uZVwiLFxuICAgIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIsXG4gICAgZm9jdXNhYmxlOiBcImZhbHNlXCIsXG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICByZWYsXG4gICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHsgX19odG1sOiBwYXRocyB9XG4gIH0pO1xufSk7XG5JY29uLmRpc3BsYXlOYW1lID0gXCJWaWRzdGFja0ljb25cIjtcblxuZXhwb3J0IHsgSWNvbiB9O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiSWNvbiIsImZvcndhcmRSZWYiLCJwcm9wcyIsInJlZiIsIndpZHRoIiwiaGVpZ2h0Iiwic2l6ZSIsInBhdGhzIiwicmVzdFByb3BzIiwiY3JlYXRlRWxlbWVudCIsInZpZXdCb3giLCJmaWxsIiwiZm9jdXNhYmxlIiwieG1sbnMiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-CBF7iUqu.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-CSU4W5Sm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-CSU4W5Sm.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultAudioLayout: function() { return /* binding */ DefaultAudioLayout; },\n/* harmony export */   DefaultBufferingIndicator: function() { return /* binding */ DefaultBufferingIndicator; },\n/* harmony export */   DefaultKeyboardDisplay: function() { return /* binding */ DefaultKeyboardDisplay; },\n/* harmony export */   DefaultLayoutContext: function() { return /* binding */ DefaultLayoutContext; },\n/* harmony export */   DefaultMenuButton: function() { return /* binding */ DefaultMenuButton; },\n/* harmony export */   DefaultMenuCheckbox: function() { return /* binding */ DefaultMenuCheckbox; },\n/* harmony export */   DefaultMenuItem: function() { return /* binding */ DefaultMenuItem; },\n/* harmony export */   DefaultMenuRadioGroup: function() { return /* binding */ DefaultMenuRadioGroup; },\n/* harmony export */   DefaultMenuSection: function() { return /* binding */ DefaultMenuSection; },\n/* harmony export */   DefaultMenuSliderItem: function() { return /* binding */ DefaultMenuSliderItem; },\n/* harmony export */   DefaultSliderParts: function() { return /* binding */ DefaultSliderParts; },\n/* harmony export */   DefaultSliderSteps: function() { return /* binding */ DefaultSliderSteps; },\n/* harmony export */   DefaultTooltip: function() { return /* binding */ DefaultTooltip; },\n/* harmony export */   DefaultVideoGestures: function() { return /* binding */ DefaultVideoGestures; },\n/* harmony export */   DefaultVideoLargeLayout: function() { return /* binding */ DefaultVideoLargeLayout; },\n/* harmony export */   DefaultVideoLayout: function() { return /* binding */ DefaultVideoLayout; },\n/* harmony export */   DefaultVideoSmallLayout: function() { return /* binding */ DefaultVideoSmallLayout; },\n/* harmony export */   createRadioOptions: function() { return /* binding */ createRadioOptions; },\n/* harmony export */   i18n: function() { return /* binding */ i18n; },\n/* harmony export */   useDefaultLayoutContext: function() { return /* binding */ useDefaultLayoutContext; },\n/* harmony export */   useDefaultLayoutWord: function() { return /* binding */ useDefaultLayoutWord; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* harmony import */ var _vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./vidstack-DcX2JzmB.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-DcX2JzmB.js\");\n/* harmony import */ var _vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vidstack-Wdd6fBp8.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Wdd6fBp8.js\");\n/* harmony import */ var _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vidstack-BOkHoBGu.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BOkHoBGu.js\");\n/* harmony import */ var _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./vidstack-Nm9OJy7x.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Nm9OJy7x.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _vidstack_BVbKfF2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./vidstack-BVbKfF2_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BVbKfF2_.js\");\n/* __next_internal_client_entry_do_not_use__ DefaultAudioLayout,DefaultBufferingIndicator,DefaultKeyboardDisplay,DefaultLayoutContext,DefaultMenuButton,DefaultMenuCheckbox,DefaultMenuItem,DefaultMenuRadioGroup,DefaultMenuSection,DefaultMenuSliderItem,DefaultSliderParts,DefaultSliderSteps,DefaultTooltip,DefaultVideoGestures,DefaultVideoLargeLayout,DefaultVideoLayout,DefaultVideoSmallLayout,createRadioOptions,i18n,useDefaultLayoutContext,useDefaultLayoutWord auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$(), _s13 = $RefreshSig$(), _s14 = $RefreshSig$(), _s15 = $RefreshSig$(), _s16 = $RefreshSig$(), _s17 = $RefreshSig$(), _s18 = $RefreshSig$(), _s19 = $RefreshSig$(), _s20 = $RefreshSig$(), _s21 = $RefreshSig$(), _s22 = $RefreshSig$(), _s23 = $RefreshSig$(), _s24 = $RefreshSig$(), _s25 = $RefreshSig$(), _s26 = $RefreshSig$(), _s27 = $RefreshSig$(), _s28 = $RefreshSig$(), _s29 = $RefreshSig$(), _s30 = $RefreshSig$(), _s31 = $RefreshSig$(), _s32 = $RefreshSig$(), _s33 = $RefreshSig$(), _s34 = $RefreshSig$(), _s35 = $RefreshSig$(), _s36 = $RefreshSig$(), _s37 = $RefreshSig$(), _s38 = $RefreshSig$(), _s39 = $RefreshSig$(), _s40 = $RefreshSig$(), _s41 = $RefreshSig$(), _s42 = $RefreshSig$(), _s43 = $RefreshSig$(), _s44 = $RefreshSig$(), _s45 = $RefreshSig$(), _s46 = $RefreshSig$(), _s47 = $RefreshSig$(), _s48 = $RefreshSig$(), _s49 = $RefreshSig$(), _s50 = $RefreshSig$(), _s51 = $RefreshSig$(), _s52 = $RefreshSig$(), _s53 = $RefreshSig$(), _s54 = $RefreshSig$(), _s55 = $RefreshSig$(), _s56 = $RefreshSig$(), _s57 = $RefreshSig$(), _s58 = $RefreshSig$(), _s59 = $RefreshSig$(), _s60 = $RefreshSig$(), _s61 = $RefreshSig$(), _s62 = $RefreshSig$(), _s63 = $RefreshSig$(), _s64 = $RefreshSig$(), _s65 = $RefreshSig$(), _s66 = $RefreshSig$(), _s67 = $RefreshSig$(), _s68 = $RefreshSig$(), _s69 = $RefreshSig$(), _s70 = $RefreshSig$(), _s71 = $RefreshSig$(), _s72 = $RefreshSig$(), _s73 = $RefreshSig$(), _s74 = $RefreshSig$(), _s75 = $RefreshSig$(), _s76 = $RefreshSig$(), _s77 = $RefreshSig$(), _s78 = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst DefaultLayoutContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext({});\nDefaultLayoutContext.displayName = \"DefaultLayoutContext\";\nfunction useDefaultLayoutContext() {\n    _s();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useContext(DefaultLayoutContext);\n}\n_s(useDefaultLayoutContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction useDefaultLayoutWord(word) {\n    _s1();\n    const { translations } = useDefaultLayoutContext();\n    return i18n(translations, word);\n}\n_s1(useDefaultLayoutWord, \"qDWmuJPzDOZ75BxQMN0Fmz9Kn7o=\", false, function() {\n    return [\n        useDefaultLayoutContext\n    ];\n});\nfunction i18n(translations, word) {\n    var _translations_word;\n    return (_translations_word = translations === null || translations === void 0 ? void 0 : translations[word]) !== null && _translations_word !== void 0 ? _translations_word : word;\n}\nfunction useColorSchemeClass(colorScheme) {\n    _s2();\n    const systemColorPreference = (0,_vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useColorSchemePreference)();\n    if (colorScheme === \"default\") {\n        return null;\n    } else if (colorScheme === \"system\") {\n        return systemColorPreference;\n    } else {\n        return colorScheme;\n    }\n}\n_s2(useColorSchemeClass, \"De6i+YajJ8QCzYxNqf58Dh8+g0A=\", false, function() {\n    return [\n        _vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useColorSchemePreference\n    ];\n});\nfunction createDefaultMediaLayout(param) {\n    let { type, smLayoutWhen, renderLayout } = param;\n    var _s = $RefreshSig$();\n    const Layout = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s((param, forwardRef)=>{\n        let { children, className, disableTimeSlider = false, hideQualityBitrate = false, icons, colorScheme = \"system\", download = null, menuContainer = null, menuGroup = \"bottom\", noAudioGain = false, audioGains = {\n            min: 0,\n            max: 300,\n            step: 25\n        }, noGestures = false, noKeyboardAnimations = false, noModal = false, noScrubGesture, playbackRates = {\n            min: 0,\n            max: 2,\n            step: 0.25\n        }, seekStep = 10, showMenuDelay, showTooltipDelay = 700, sliderChaptersMinWidth = 325, slots, smallLayoutWhen = smLayoutWhen, thumbnails = null, translations, ...props } = param;\n        _s();\n        const media = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext)(), $load = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)(media.$props.load), $canLoad = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"canLoad\"), $viewType = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"viewType\"), $streamType = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"streamType\"), $smallWhen = (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.createComputed)(()=>{\n            return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isBoolean)(smallLayoutWhen) ? smallLayoutWhen : smallLayoutWhen(media.player.state);\n        }, [\n            smallLayoutWhen\n        ]), userPrefersAnnouncements = (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.createSignal)(true), userPrefersKeyboardAnimations = (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.createSignal)(true), isMatch = $viewType === type, isSmallLayout = $smallWhen(), isForcedLayout = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isBoolean)(smallLayoutWhen), isLoadLayout = $load === \"play\" && !$canLoad, canRender = $canLoad || isForcedLayout || isLoadLayout, colorSchemeClass = useColorSchemeClass(colorScheme), layoutEl = (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.createSignal)(null);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)($smallWhen);\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            ...props,\n            className: \"vds-\".concat(type, \"-layout\") + (colorSchemeClass ? \" \".concat(colorSchemeClass) : \"\") + (className ? \" \".concat(className) : \"\"),\n            \"data-match\": isMatch ? \"\" : null,\n            \"data-sm\": isSmallLayout ? \"\" : null,\n            \"data-lg\": !isSmallLayout ? \"\" : null,\n            \"data-size\": isSmallLayout ? \"sm\" : \"lg\",\n            \"data-no-scrub-gesture\": noScrubGesture ? \"\" : null,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.composeRefs)(layoutEl.set, forwardRef)\n        }, canRender && isMatch ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultLayoutContext.Provider, {\n            value: {\n                disableTimeSlider,\n                hideQualityBitrate,\n                icons,\n                colorScheme,\n                download,\n                isSmallLayout,\n                menuContainer,\n                menuGroup,\n                noAudioGain,\n                audioGains,\n                layoutEl,\n                noGestures,\n                noKeyboardAnimations,\n                noModal,\n                noScrubGesture,\n                showMenuDelay,\n                showTooltipDelay,\n                sliderChaptersMinWidth,\n                slots,\n                seekStep,\n                playbackRates,\n                thumbnails,\n                translations,\n                userPrefersAnnouncements,\n                userPrefersKeyboardAnimations\n            }\n        }, renderLayout({\n            streamType: $streamType,\n            isSmallLayout,\n            isLoadLayout\n        }), children) : null);\n    }, \"byC2tj7KBDuvaHG8h44246VO+d4=\", false, function() {\n        return [\n            _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            useColorSchemeClass,\n            _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            useColorSchemeClass,\n            _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            useColorSchemeClass,\n            _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            useColorSchemeClass,\n            _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            useColorSchemeClass,\n            _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            useColorSchemeClass,\n            _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            useColorSchemeClass,\n            _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            useColorSchemeClass,\n            useColorSchemeClass,\n            _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n            useColorSchemeClass,\n            _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal\n        ];\n    }));\n    Layout.displayName = \"DefaultMediaLayout\";\n    return Layout;\n}\nfunction useDefaultAudioLayoutSlots() {\n    _s3();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useContext(DefaultLayoutContext).slots;\n}\n_s3(useDefaultAudioLayoutSlots, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction useDefaultVideoLayoutSlots() {\n    _s4();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useContext(DefaultLayoutContext).slots;\n}\n_s4(useDefaultVideoLayoutSlots, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction slot(slots, name, defaultValue) {\n    const slot2 = slots === null || slots === void 0 ? void 0 : slots[name], capitalizedName = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.uppercaseFirstChar)(name);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, slots === null || slots === void 0 ? void 0 : slots[\"before\".concat(capitalizedName)], (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(slot2) ? defaultValue : slot2, slots === null || slots === void 0 ? void 0 : slots[\"after\".concat(capitalizedName)]);\n}\nfunction DefaultAnnouncer() {\n    _s5();\n    const { userPrefersAnnouncements, translations } = useDefaultLayoutContext(), $userPrefersAnnouncements = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)(userPrefersAnnouncements);\n    if (!$userPrefersAnnouncements) return null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.MediaAnnouncer, {\n        translations\n    });\n}\n_s5(DefaultAnnouncer, \"ryXin4NOpAK5KE9Cqh8G/wTU+Ks=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal\n    ];\n});\n_c = DefaultAnnouncer;\nDefaultAnnouncer.displayName = \"DefaultAnnouncer\";\nfunction DefaultTooltip(param) {\n    let { content, placement, children } = param;\n    _s6();\n    const { showTooltipDelay } = useDefaultLayoutContext();\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Root, {\n        showDelay: showTooltipDelay\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Trigger, {\n        asChild: true\n    }, children), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Content, {\n        className: \"vds-tooltip-content\",\n        placement\n    }, content));\n}\n_s6(DefaultTooltip, \"hmRlg9PiUXyyzFkGm59V+olrlW8=\", false, function() {\n    return [\n        useDefaultLayoutContext\n    ];\n});\n_c1 = DefaultTooltip;\nDefaultTooltip.displayName = \"DefaultTooltip\";\nfunction DefaultPlayButton(param) {\n    let { tooltip } = param;\n    _s7();\n    const { icons: Icons } = useDefaultLayoutContext(), playText = useDefaultLayoutWord(\"Play\"), pauseText = useDefaultLayoutWord(\"Pause\"), $paused = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"paused\"), $ended = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"ended\");\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: $paused ? playText : pauseText,\n        placement: tooltip\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.PlayButton, {\n        className: \"vds-play-button vds-button\",\n        \"aria-label\": playText\n    }, $ended ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.PlayButton.Replay, {\n        className: \"vds-icon\"\n    }) : $paused ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.PlayButton.Play, {\n        className: \"vds-icon\"\n    }) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.PlayButton.Pause, {\n        className: \"vds-icon\"\n    })));\n}\n_s7(DefaultPlayButton, \"1O91IIZZdoCLlDDD1eKjN3mllpY=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState\n    ];\n});\n_c2 = DefaultPlayButton;\nDefaultPlayButton.displayName = \"DefaultPlayButton\";\nconst DefaultMuteButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s8((param, forwardRef)=>{\n    let { tooltip } = param;\n    _s8();\n    const { icons: Icons } = useDefaultLayoutContext(), muteText = useDefaultLayoutWord(\"Mute\"), unmuteText = useDefaultLayoutWord(\"Unmute\"), $muted = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"muted\"), $volume = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"volume\");\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: $muted ? unmuteText : muteText,\n        placement: tooltip\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.MuteButton, {\n        className: \"vds-mute-button vds-button\",\n        \"aria-label\": muteText,\n        ref: forwardRef\n    }, $muted || $volume == 0 ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.MuteButton.Mute, {\n        className: \"vds-icon\"\n    }) : $volume < 0.5 ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.MuteButton.VolumeLow, {\n        className: \"vds-icon\"\n    }) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.MuteButton.VolumeHigh, {\n        className: \"vds-icon\"\n    })));\n}, \"8Md4dnzKU4ryP4sAESmgryEs2FQ=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState\n    ];\n}));\n_c3 = DefaultMuteButton;\nDefaultMuteButton.displayName = \"DefaultMuteButton\";\nfunction DefaultCaptionButton(param) {\n    let { tooltip } = param;\n    _s9();\n    const { icons: Icons } = useDefaultLayoutContext(), captionsText = useDefaultLayoutWord(\"Captions\"), onText = useDefaultLayoutWord(\"Closed-Captions On\"), offText = useDefaultLayoutWord(\"Closed-Captions Off\"), $track = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"textTrack\"), isOn = $track && (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.isTrackCaptionKind)($track);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: isOn ? onText : offText,\n        placement: tooltip\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.CaptionButton, {\n        className: \"vds-caption-button vds-button\",\n        \"aria-label\": captionsText\n    }, isOn ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.CaptionButton.On, {\n        className: \"vds-icon\"\n    }) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.CaptionButton.Off, {\n        className: \"vds-icon\"\n    })));\n}\n_s9(DefaultCaptionButton, \"wDOIJ+eeD+4dD+eN6kdrSP2iLa4=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState\n    ];\n});\n_c4 = DefaultCaptionButton;\nDefaultCaptionButton.displayName = \"DefaultCaptionButton\";\nfunction DefaultPIPButton(param) {\n    let { tooltip } = param;\n    _s10();\n    const { icons: Icons } = useDefaultLayoutContext(), pipText = useDefaultLayoutWord(\"PiP\"), enterText = useDefaultLayoutWord(\"Enter PiP\"), exitText = useDefaultLayoutWord(\"Exit PiP\"), $pip = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"pictureInPicture\");\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: $pip ? exitText : enterText,\n        placement: tooltip\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.PIPButton, {\n        className: \"vds-pip-button vds-button\",\n        \"aria-label\": pipText\n    }, $pip ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.PIPButton.Exit, {\n        className: \"vds-icon\"\n    }) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.PIPButton.Enter, {\n        className: \"vds-icon\"\n    })));\n}\n_s10(DefaultPIPButton, \"jQKJEKOHrBulXgVej6JjNAbI2k0=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState\n    ];\n});\n_c5 = DefaultPIPButton;\nDefaultPIPButton.displayName = \"DefaultPIPButton\";\nfunction DefaultFullscreenButton(param) {\n    let { tooltip } = param;\n    _s11();\n    const { icons: Icons } = useDefaultLayoutContext(), fullscreenText = useDefaultLayoutWord(\"Fullscreen\"), enterText = useDefaultLayoutWord(\"Enter Fullscreen\"), exitText = useDefaultLayoutWord(\"Exit Fullscreen\"), $fullscreen = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"fullscreen\");\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: $fullscreen ? exitText : enterText,\n        placement: tooltip\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.FullscreenButton, {\n        className: \"vds-fullscreen-button vds-button\",\n        \"aria-label\": fullscreenText\n    }, $fullscreen ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.FullscreenButton.Exit, {\n        className: \"vds-icon\"\n    }) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.FullscreenButton.Enter, {\n        className: \"vds-icon\"\n    })));\n}\n_s11(DefaultFullscreenButton, \"oOpe4iMw+8yBJr5UedzkchAHJ7M=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState\n    ];\n});\n_c6 = DefaultFullscreenButton;\nDefaultFullscreenButton.displayName = \"DefaultFullscreenButton\";\nfunction DefaultSeekButton(param) {\n    let { backward, tooltip } = param;\n    _s12();\n    const { icons: Icons, seekStep } = useDefaultLayoutContext(), seekForwardText = useDefaultLayoutWord(\"Seek Forward\"), seekBackwardText = useDefaultLayoutWord(\"Seek Backward\"), seconds = (backward ? -1 : 1) * seekStep, label = seconds >= 0 ? seekForwardText : seekBackwardText;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: label,\n        placement: tooltip\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.SeekButton, {\n        className: \"vds-seek-button vds-button\",\n        seconds,\n        \"aria-label\": label\n    }, seconds >= 0 ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.SeekButton.Forward, {\n        className: \"vds-icon\"\n    }) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.SeekButton.Backward, {\n        className: \"vds-icon\"\n    })));\n}\n_s12(DefaultSeekButton, \"W92n45Uz84YXef+1DrSfCjxF8JM=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord\n    ];\n});\n_c7 = DefaultSeekButton;\nDefaultSeekButton.displayName = \"DefaultSeekButton\";\nfunction DefaultAirPlayButton(param) {\n    let { tooltip } = param;\n    _s13();\n    var _ref;\n    const { icons: Icons } = useDefaultLayoutContext(), airPlayText = useDefaultLayoutWord(\"AirPlay\"), $state = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"remotePlaybackState\"), stateText = useDefaultLayoutWord((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.uppercaseFirstChar)($state)), label = \"\".concat(airPlayText, \" \").concat(stateText), Icon = (_ref = $state === \"connecting\" ? Icons.AirPlayButton.Connecting : $state === \"connected\" ? Icons.AirPlayButton.Connected : null) !== null && _ref !== void 0 ? _ref : Icons.AirPlayButton.Default;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: airPlayText,\n        placement: tooltip\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.AirPlayButton, {\n        className: \"vds-airplay-button vds-button\",\n        \"aria-label\": label\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icon, {\n        className: \"vds-icon\"\n    })));\n}\n_s13(DefaultAirPlayButton, \"nPF1QZQsjPlwrlOf00afqd8fYO8=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord\n    ];\n});\n_c8 = DefaultAirPlayButton;\nDefaultAirPlayButton.displayName = \"DefaultAirPlayButton\";\nfunction DefaultGoogleCastButton(param) {\n    let { tooltip } = param;\n    _s14();\n    var _ref;\n    const { icons: Icons } = useDefaultLayoutContext(), googleCastText = useDefaultLayoutWord(\"Google Cast\"), $state = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"remotePlaybackState\"), stateText = useDefaultLayoutWord((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.uppercaseFirstChar)($state)), label = \"\".concat(googleCastText, \" \").concat(stateText), Icon = (_ref = $state === \"connecting\" ? Icons.GoogleCastButton.Connecting : $state === \"connected\" ? Icons.GoogleCastButton.Connected : null) !== null && _ref !== void 0 ? _ref : Icons.GoogleCastButton.Default;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: googleCastText,\n        placement: tooltip\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.GoogleCastButton, {\n        className: \"vds-google-cast-button vds-button\",\n        \"aria-label\": label\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icon, {\n        className: \"vds-icon\"\n    })));\n}\n_s14(DefaultGoogleCastButton, \"qcuxvsXHgRE0wAUj2Jckz4aD4k8=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord\n    ];\n});\n_c9 = DefaultGoogleCastButton;\nDefaultGoogleCastButton.displayName = \"DefaultGoogleCastButton\";\nfunction DefaultLiveButton() {\n    _s15();\n    const $live = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"live\"), label = useDefaultLayoutWord(\"Skip To Live\"), liveText = useDefaultLayoutWord(\"LIVE\");\n    return $live ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.LiveButton, {\n        className: \"vds-live-button\",\n        \"aria-label\": label\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"vds-live-button-text\"\n    }, liveText)) : null;\n}\n_s15(DefaultLiveButton, \"qhbdHbYqjltcu4opUgTb8jj3jBw=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord\n    ];\n});\n_c10 = DefaultLiveButton;\nDefaultLiveButton.displayName = \"DefaultLiveButton\";\nfunction DefaultDownloadButton() {\n    _s16();\n    const { download, icons: Icons } = useDefaultLayoutContext(), $src = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"source\"), $title = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"title\"), file = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.getDownloadFile)({\n        title: $title,\n        src: $src,\n        download\n    }), downloadText = useDefaultLayoutWord(\"Download\");\n    return file ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: downloadText,\n        placement: \"top\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", {\n        role: \"button\",\n        className: \"vds-download-button vds-button\",\n        \"aria-label\": downloadText,\n        href: file.url + \"?download=\".concat(file.name),\n        download: file.name,\n        target: \"_blank\"\n    }, Icons.DownloadButton ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.DownloadButton.Default, {\n        className: \"vds-icon\"\n    }) : null)) : null;\n}\n_s16(DefaultDownloadButton, \"jhlDgOWkVuQ0TLyjo5bgAEslprw=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord\n    ];\n});\n_c11 = DefaultDownloadButton;\nDefaultDownloadButton.displayName = \"DefaultDownloadButton\";\nfunction DefaultCaptions() {\n    _s17();\n    const exampleText = useDefaultLayoutWord(\"Captions look like this\");\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Captions, {\n        className: \"vds-captions\",\n        exampleText\n    });\n}\n_s17(DefaultCaptions, \"SP0BXHzUGNJCBBlOxdQi3veeDNY=\", false, function() {\n    return [\n        useDefaultLayoutWord\n    ];\n});\n_c12 = DefaultCaptions;\nDefaultCaptions.displayName = \"DefaultCaptions\";\nfunction DefaultControlsSpacer() {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-controls-spacer\"\n    });\n}\n_c13 = DefaultControlsSpacer;\nDefaultControlsSpacer.displayName = \"DefaultControlsSpacer\";\nfunction useParentDialogEl() {\n    _s18();\n    const { layoutEl } = useDefaultLayoutContext(), $layoutEl = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)(layoutEl);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>$layoutEl === null || $layoutEl === void 0 ? void 0 : $layoutEl.closest(\"dialog\"), [\n        $layoutEl\n    ]);\n}\n_s18(useParentDialogEl, \"+j3q+s2bbYE6NYMQY7/YVJGZF7I=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal\n    ];\n});\nfunction DefaultChaptersMenu(param) {\n    let { tooltip, placement, portalClass = \"\" } = param;\n    _s19();\n    const { showMenuDelay, noModal, isSmallLayout, icons: Icons, menuGroup, menuContainer, colorScheme } = useDefaultLayoutContext(), chaptersText = useDefaultLayoutWord(\"Chapters\"), options = (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useChapterOptions)(), disabled = !options.length, { thumbnails } = useDefaultLayoutContext(), $src = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"currentSrc\"), $viewType = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"viewType\"), $offset = !isSmallLayout && menuGroup === \"bottom\" && $viewType === \"video\" ? 26 : 0, $RemotionThumbnail = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)(_vidstack_BVbKfF2_js__WEBPACK_IMPORTED_MODULE_7__.RemotionThumbnail), colorSchemeClass = useColorSchemeClass(colorScheme), [isOpen, setIsOpen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false), dialogEl = useParentDialogEl();\n    if (disabled) return null;\n    function onOpen() {\n        (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync)(()=>{\n            setIsOpen(true);\n        });\n    }\n    function onClose() {\n        setIsOpen(false);\n    }\n    const Content = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Items, {\n        className: \"vds-chapters-menu-items vds-menu-items\",\n        placement,\n        offset: $offset\n    }, isOpen ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$3, {\n        className: \"vds-chapters-radio-group vds-radio-group\",\n        value: options.selectedValue,\n        \"data-thumbnails\": thumbnails ? \"\" : null\n    }, options.map((param)=>{\n        let { cue, label, value, startTimeText, durationText, select, setProgressVar } = param;\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Item, {\n            className: \"vds-chapter-radio vds-radio\",\n            value,\n            key: value,\n            onSelect: select,\n            ref: setProgressVar\n        }, thumbnails ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root, {\n            src: thumbnails,\n            className: \"vds-thumbnail\",\n            time: cue.startTime\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Img, null)) : $RemotionThumbnail && (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.isRemotionSrc)($src) ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement($RemotionThumbnail, {\n            className: \"vds-thumbnail\",\n            frame: cue.startTime * $src.fps\n        }) : null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"vds-chapter-radio-content\"\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: \"vds-chapter-radio-label\"\n        }, label), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: \"vds-chapter-radio-start-time\"\n        }, startTimeText), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: \"vds-chapter-radio-duration\"\n        }, durationText)));\n    })) : null);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$2, {\n        className: \"vds-chapters-menu vds-menu\",\n        showDelay: showMenuDelay,\n        onOpen,\n        onClose\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: chaptersText,\n        placement: tooltip\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Button, {\n        className: \"vds-menu-button vds-button\",\n        disabled,\n        \"aria-label\": chaptersText\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.Menu.Chapters, {\n        className: \"vds-icon\"\n    }))), noModal || !isSmallLayout ? Content : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Portal, {\n        container: menuContainer !== null && menuContainer !== void 0 ? menuContainer : dialogEl,\n        className: portalClass + (colorSchemeClass ? \" \".concat(colorSchemeClass) : \"\"),\n        disabled: \"fullscreen\",\n        \"data-sm\": isSmallLayout ? \"\" : null,\n        \"data-lg\": !isSmallLayout ? \"\" : null,\n        \"data-size\": isSmallLayout ? \"sm\" : \"lg\"\n    }, Content));\n}\n_s19(DefaultChaptersMenu, \"rQZ/SHp3r7jhSwBB3tpOwWzTB7M=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useChapterOptions,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useChapterOptions,\n        useDefaultLayoutContext,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        useColorSchemeClass,\n        useParentDialogEl,\n        useDefaultLayoutContext,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useChapterOptions,\n        useDefaultLayoutContext,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        useColorSchemeClass,\n        useParentDialogEl,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        useColorSchemeClass,\n        useParentDialogEl\n    ];\n});\n_c14 = DefaultChaptersMenu;\nDefaultChaptersMenu.displayName = \"DefaultChaptersMenu\";\nconst FONT_COLOR_OPTION = {\n    type: \"color\"\n};\nconst FONT_FAMILY_OPTION = {\n    type: \"radio\",\n    values: {\n        \"Monospaced Serif\": \"mono-serif\",\n        \"Proportional Serif\": \"pro-serif\",\n        \"Monospaced Sans-Serif\": \"mono-sans\",\n        \"Proportional Sans-Serif\": \"pro-sans\",\n        Casual: \"casual\",\n        Cursive: \"cursive\",\n        \"Small Capitals\": \"capitals\"\n    }\n};\nconst FONT_SIZE_OPTION = {\n    type: \"slider\",\n    min: 0,\n    max: 400,\n    step: 25,\n    upIcon: null,\n    downIcon: null\n};\nconst FONT_OPACITY_OPTION = {\n    type: \"slider\",\n    min: 0,\n    max: 100,\n    step: 5,\n    upIcon: null,\n    downIcon: null\n};\nconst FONT_TEXT_SHADOW_OPTION = {\n    type: \"radio\",\n    values: [\n        \"None\",\n        \"Drop Shadow\",\n        \"Raised\",\n        \"Depressed\",\n        \"Outline\"\n    ]\n};\nconst FONT_DEFAULTS = {\n    fontFamily: \"pro-sans\",\n    fontSize: \"100%\",\n    textColor: \"#ffffff\",\n    textOpacity: \"100%\",\n    textShadow: \"none\",\n    textBg: \"#000000\",\n    textBgOpacity: \"100%\",\n    displayBg: \"#000000\",\n    displayBgOpacity: \"0%\"\n};\nconst FONT_SIGNALS = Object.keys(FONT_DEFAULTS).reduce(_c15 = (prev, type)=>({\n        ...prev,\n        [type]: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.signal)(FONT_DEFAULTS[type])\n    }), {});\n_c16 = FONT_SIGNALS;\nif (!_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.IS_SERVER) {\n    for (const type of Object.keys(FONT_SIGNALS)){\n        const value = localStorage.getItem(\"vds-player:\".concat((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.camelToKebabCase)(type)));\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isString)(value)) FONT_SIGNALS[type].set(value);\n    }\n}\nfunction onFontReset() {\n    for (const type of Object.keys(FONT_SIGNALS)){\n        const defaultValue = FONT_DEFAULTS[type];\n        FONT_SIGNALS[type].set(defaultValue);\n    }\n}\nfunction hexToRgb(hex) {\n    const { style } = new Option();\n    style.color = hex;\n    return style.color.match(/\\((.*?)\\)/)[1].replace(/,/g, \" \");\n}\nlet isWatchingVars = false, players = /* @__PURE__ */ new Set();\nfunction updateFontCssVars() {\n    _s20();\n    if (_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.IS_SERVER) return;\n    const { player } = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaContext)();\n    players.add(player);\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.onDispose)(()=>players.delete(player));\n    if (!isWatchingVars) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.scoped)(()=>{\n            for (const type of (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.keysOf)(FONT_SIGNALS)){\n                const $value = FONT_SIGNALS[type], defaultValue = FONT_DEFAULTS[type], varName = \"--media-user-\".concat((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.camelToKebabCase)(type)), storageKey = \"vds-player:\".concat((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.camelToKebabCase)(type));\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.effect)(()=>{\n                    const value = $value(), isDefaultVarValue = value === defaultValue, varValue = !isDefaultVarValue ? getCssVarValue(player, type, value) : null;\n                    for (const player2 of players){\n                        var _player2_el;\n                        (_player2_el = player2.el) === null || _player2_el === void 0 ? void 0 : _player2_el.style.setProperty(varName, varValue);\n                    }\n                    if (isDefaultVarValue) {\n                        localStorage.removeItem(storageKey);\n                    } else {\n                        localStorage.setItem(storageKey, value);\n                    }\n                });\n            }\n        }, null);\n        isWatchingVars = true;\n    }\n}\n_s20(updateFontCssVars, \"VRlzltyh3IAlW4OSBN43sP+Z2HU=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaContext\n    ];\n});\nfunction getCssVarValue(player, type, value) {\n    switch(type){\n        case \"fontFamily\":\n            var _player_el;\n            const fontVariant = value === \"capitals\" ? \"small-caps\" : \"\";\n            (_player_el = player.el) === null || _player_el === void 0 ? void 0 : _player_el.style.setProperty(\"--media-user-font-variant\", fontVariant);\n            return getFontFamilyCSSVarValue(value);\n        case \"fontSize\":\n        case \"textOpacity\":\n        case \"textBgOpacity\":\n        case \"displayBgOpacity\":\n            return percentToRatio(value);\n        case \"textColor\":\n            return \"rgb(\".concat(hexToRgb(value), \" / var(--media-user-text-opacity, 1))\");\n        case \"textShadow\":\n            return getTextShadowCssVarValue(value);\n        case \"textBg\":\n            return \"rgb(\".concat(hexToRgb(value), \" / var(--media-user-text-bg-opacity, 1))\");\n        case \"displayBg\":\n            return \"rgb(\".concat(hexToRgb(value), \" / var(--media-user-display-bg-opacity, 1))\");\n    }\n}\nfunction percentToRatio(value) {\n    return (parseInt(value) / 100).toString();\n}\nfunction getFontFamilyCSSVarValue(value) {\n    switch(value){\n        case \"mono-serif\":\n            return '\"Courier New\", Courier, \"Nimbus Mono L\", \"Cutive Mono\", monospace';\n        case \"mono-sans\":\n            return '\"Deja Vu Sans Mono\", \"Lucida Console\", Monaco, Consolas, \"PT Mono\", monospace';\n        case \"pro-sans\":\n            return 'Roboto, \"Arial Unicode Ms\", Arial, Helvetica, Verdana, \"PT Sans Caption\", sans-serif';\n        case \"casual\":\n            return '\"Comic Sans MS\", Impact, Handlee, fantasy';\n        case \"cursive\":\n            return '\"Monotype Corsiva\", \"URW Chancery L\", \"Apple Chancery\", \"Dancing Script\", cursive';\n        case \"capitals\":\n            return '\"Arial Unicode Ms\", Arial, Helvetica, Verdana, \"Marcellus SC\", sans-serif + font-variant=small-caps';\n        default:\n            return '\"Times New Roman\", Times, Georgia, Cambria, \"PT Serif Caption\", serif';\n    }\n}\nfunction getTextShadowCssVarValue(value) {\n    switch(value){\n        case \"drop shadow\":\n            return \"rgb(34, 34, 34) 1.86389px 1.86389px 2.79583px, rgb(34, 34, 34) 1.86389px 1.86389px 3.72778px, rgb(34, 34, 34) 1.86389px 1.86389px 4.65972px\";\n        case \"raised\":\n            return \"rgb(34, 34, 34) 1px 1px, rgb(34, 34, 34) 2px 2px\";\n        case \"depressed\":\n            return \"rgb(204, 204, 204) 1px 1px, rgb(34, 34, 34) -1px -1px\";\n        case \"outline\":\n            return \"rgb(34, 34, 34) 0px 0px 1.86389px, rgb(34, 34, 34) 0px 0px 1.86389px, rgb(34, 34, 34) 0px 0px 1.86389px, rgb(34, 34, 34) 0px 0px 1.86389px, rgb(34, 34, 34) 0px 0px 1.86389px\";\n        default:\n            return \"\";\n    }\n}\nfunction DefaultMenuSection(param) {\n    let { label, value, children } = param;\n    _s21();\n    const id = react__WEBPACK_IMPORTED_MODULE_0__.useId();\n    if (!label) {\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"vds-menu-section\"\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"vds-menu-section-body\"\n        }, children));\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"section\", {\n        className: \"vds-menu-section\",\n        role: \"group\",\n        \"aria-labelledby\": id\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-menu-section-title\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"header\", {\n        id\n    }, label), value ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-menu-section-value\"\n    }, value) : null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-menu-section-body\"\n    }, children));\n}\n_s21(DefaultMenuSection, \"WhsuKpSQZEWeFcB7gWlfDRQktoQ=\");\n_c17 = DefaultMenuSection;\nDefaultMenuSection.displayName = \"DefaultMenuSection\";\nfunction DefaultMenuButton(param) {\n    let { label, hint = \"\", Icon, disabled = false } = param;\n    _s22();\n    const { icons: Icons } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DefaultLayoutContext);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Button, {\n        className: \"vds-menu-item\",\n        disabled\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.Menu.ArrowLeft, {\n        className: \"vds-menu-close-icon vds-icon\"\n    }), Icon ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icon, {\n        className: \"vds-menu-item-icon vds-icon\"\n    }) : null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"vds-menu-item-label\"\n    }, label), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"vds-menu-item-hint\"\n    }, hint), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.Menu.ArrowRight, {\n        className: \"vds-menu-open-icon vds-icon\"\n    }));\n}\n_s22(DefaultMenuButton, \"QFQyNbvOkR/URfq1FoBsLovCfXc=\");\n_c18 = DefaultMenuButton;\nDefaultMenuButton.displayName = \"DefaultMenuButton\";\nfunction DefaultMenuItem(param) {\n    let { label, children } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-menu-item\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-menu-item-label\"\n    }, label), children);\n}\n_c19 = DefaultMenuItem;\nDefaultMenuItem.displayName = \"DefaultMenuItem\";\nfunction DefaultMenuRadioGroup(param) {\n    let { value, options, onChange } = param;\n    _s23();\n    const { icons: Icons } = useDefaultLayoutContext();\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$3, {\n        className: \"vds-radio-group\",\n        value,\n        onChange\n    }, options.map((option)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Item, {\n            className: \"vds-radio\",\n            value: option.value,\n            key: option.value\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.Menu.RadioCheck, {\n            className: \"vds-icon\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: \"vds-radio-label\",\n            \"data-part\": \"label\"\n        }, option.label))));\n}\n_s23(DefaultMenuRadioGroup, \"LALl+OGH+gsha072PZ2Lw0Qs0as=\", false, function() {\n    return [\n        useDefaultLayoutContext\n    ];\n});\n_c20 = DefaultMenuRadioGroup;\nDefaultMenuRadioGroup.displayName = \"DefaultMenuRadioGroup\";\nfunction createRadioOptions(entries) {\n    _s24();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isArray)(entries) ? entries.map((entry)=>({\n                label: entry,\n                value: entry.toLowerCase()\n            })) : Object.keys(entries).map((label)=>({\n                label,\n                value: entries[label]\n            })), [\n        entries\n    ]);\n}\n_s24(createRadioOptions, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nfunction DefaultMenuSliderItem(param) {\n    let { label, value, UpIcon, DownIcon, children, isMin, isMax } = param;\n    const hasTitle = label || value, Content = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, DownIcon ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DownIcon, {\n        className: \"vds-icon down\"\n    }) : null, children, UpIcon ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(UpIcon, {\n        className: \"vds-icon up\"\n    }) : null);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-menu-item vds-menu-slider-item\".concat(hasTitle ? \" group\" : \"\"),\n        \"data-min\": isMin ? \"\" : null,\n        \"data-max\": isMax ? \"\" : null\n    }, hasTitle ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-menu-slider-title\"\n    }, label ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, label) : null, value ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, value) : null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-menu-slider-body\"\n    }, Content)) : Content);\n}\n_c21 = DefaultMenuSliderItem;\nDefaultMenuSliderItem.displayName = \"DefaultMenuSliderItem\";\nfunction DefaultSliderParts() {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Track, {\n        className: \"vds-slider-track\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.TrackFill, {\n        className: \"vds-slider-track-fill vds-slider-track\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Thumb, {\n        className: \"vds-slider-thumb\"\n    }));\n}\n_c22 = DefaultSliderParts;\nDefaultSliderParts.displayName = \"DefaultSliderParts\";\nfunction DefaultSliderSteps() {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Steps, {\n        className: \"vds-slider-steps\"\n    }, (step)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"vds-slider-step\",\n            key: String(step)\n        }));\n}\n_c23 = DefaultSliderSteps;\nDefaultSliderSteps.displayName = \"DefaultSliderSteps\";\nfunction DefaultFontMenu() {\n    _s25();\n    const label = useDefaultLayoutWord(\"Caption Styles\"), $hasCaptions = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"hasCaptions\"), fontSectionLabel = useDefaultLayoutWord(\"Font\"), textSectionLabel = useDefaultLayoutWord(\"Text\"), textBgSectionLabel = useDefaultLayoutWord(\"Text Background\"), displayBgSectionLabel = useDefaultLayoutWord(\"Display Background\");\n    if (!$hasCaptions) return null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$2, {\n        className: \"vds-font-menu vds-menu\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuButton, {\n        label\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Items, {\n        className: \"vds-font-style-items vds-menu-items\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, {\n        label: fontSectionLabel\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontFamilyMenu, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontSizeSlider, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, {\n        label: textSectionLabel\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTextColorInput, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTextShadowMenu, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTextOpacitySlider, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, {\n        label: textBgSectionLabel\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTextBgInput, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTextBgOpacitySlider, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, {\n        label: displayBgSectionLabel\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultDisplayBgInput, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultDisplayBgOpacitySlider, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultResetMenuItem, null))));\n}\n_s25(DefaultFontMenu, \"qmQ3ub4VIoLZXILy3i3BmKu9FGQ=\", false, function() {\n    return [\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord\n    ];\n});\n_c24 = DefaultFontMenu;\nDefaultFontMenu.displayName = \"DefaultFontMenu\";\nfunction DefaultFontFamilyMenu() {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontSetting, {\n        label: \"Family\",\n        type: \"fontFamily\",\n        option: FONT_FAMILY_OPTION\n    });\n}\n_c25 = DefaultFontFamilyMenu;\nDefaultFontFamilyMenu.displayName = \"DefaultFontFamilyMenu\";\nfunction DefaultFontSizeSlider() {\n    _s26();\n    const { icons: Icons } = useDefaultLayoutContext(), option = {\n        ...FONT_SIZE_OPTION,\n        upIcon: Icons.Menu.FontSizeUp,\n        downIcon: Icons.Menu.FontSizeDown\n    };\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontSetting, {\n        label: \"Size\",\n        type: \"fontSize\",\n        option\n    });\n}\n_s26(DefaultFontSizeSlider, \"xy5Ka+Az1faOzkpRHcNY54oByKE=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\n_c26 = DefaultFontSizeSlider;\nDefaultFontSizeSlider.displayName = \"DefaultFontSizeSlider\";\nfunction DefaultTextColorInput() {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontSetting, {\n        label: \"Color\",\n        type: \"textColor\",\n        option: FONT_COLOR_OPTION\n    });\n}\n_c27 = DefaultTextColorInput;\nDefaultTextColorInput.displayName = \"DefaultTextColorInput\";\nfunction DefaultTextOpacitySlider() {\n    _s27();\n    const { icons: Icons } = useDefaultLayoutContext(), option = {\n        ...FONT_OPACITY_OPTION,\n        upIcon: Icons.Menu.OpacityUp,\n        downIcon: Icons.Menu.OpacityDown\n    };\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontSetting, {\n        label: \"Opacity\",\n        type: \"textOpacity\",\n        option\n    });\n}\n_s27(DefaultTextOpacitySlider, \"xy5Ka+Az1faOzkpRHcNY54oByKE=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\n_c28 = DefaultTextOpacitySlider;\nDefaultTextOpacitySlider.displayName = \"DefaultTextOpacitySlider\";\nfunction DefaultTextShadowMenu() {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontSetting, {\n        label: \"Shadow\",\n        type: \"textShadow\",\n        option: FONT_TEXT_SHADOW_OPTION\n    });\n}\n_c29 = DefaultTextShadowMenu;\nDefaultTextShadowMenu.displayName = \"DefaultTextShadowMenu\";\nfunction DefaultTextBgInput() {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontSetting, {\n        label: \"Color\",\n        type: \"textBg\",\n        option: FONT_COLOR_OPTION\n    });\n}\n_c30 = DefaultTextBgInput;\nDefaultTextBgInput.displayName = \"DefaultTextBgInput\";\nfunction DefaultTextBgOpacitySlider() {\n    _s28();\n    const { icons: Icons } = useDefaultLayoutContext(), option = {\n        ...FONT_OPACITY_OPTION,\n        upIcon: Icons.Menu.OpacityUp,\n        downIcon: Icons.Menu.OpacityDown\n    };\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontSetting, {\n        label: \"Opacity\",\n        type: \"textBgOpacity\",\n        option\n    });\n}\n_s28(DefaultTextBgOpacitySlider, \"xy5Ka+Az1faOzkpRHcNY54oByKE=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\n_c31 = DefaultTextBgOpacitySlider;\nDefaultTextBgOpacitySlider.displayName = \"DefaultTextBgOpacitySlider\";\nfunction DefaultDisplayBgInput() {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontSetting, {\n        label: \"Color\",\n        type: \"displayBg\",\n        option: FONT_COLOR_OPTION\n    });\n}\n_c32 = DefaultDisplayBgInput;\nDefaultDisplayBgInput.displayName = \"DefaultDisplayBgInput\";\nfunction DefaultDisplayBgOpacitySlider() {\n    _s29();\n    const { icons: Icons } = useDefaultLayoutContext(), option = {\n        ...FONT_OPACITY_OPTION,\n        upIcon: Icons.Menu.OpacityUp,\n        downIcon: Icons.Menu.OpacityDown\n    };\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontSetting, {\n        label: \"Opacity\",\n        type: \"displayBgOpacity\",\n        option\n    });\n}\n_s29(DefaultDisplayBgOpacitySlider, \"xy5Ka+Az1faOzkpRHcNY54oByKE=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\n_c33 = DefaultDisplayBgOpacitySlider;\nDefaultDisplayBgOpacitySlider.displayName = \"DefaultDisplayBgOpacitySlider\";\nfunction DefaultFontSetting(param) {\n    let { label, option, type } = param;\n    _s30();\n    const player = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaPlayer)(), $currentValue = FONT_SIGNALS[type], $value = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)($currentValue), translatedLabel = useDefaultLayoutWord(label);\n    const notify = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        player === null || player === void 0 ? void 0 : player.dispatchEvent(new Event(\"vds-font-change\"));\n    }, [\n        player\n    ]);\n    const onChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((newValue)=>{\n        $currentValue.set(newValue);\n        notify();\n    }, [\n        $currentValue,\n        notify\n    ]);\n    if (option.type === \"color\") {\n        let onColorChange2 = function(event) {\n            onChange(event.target.value);\n        };\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuItem, {\n            label: translatedLabel\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n            className: \"vds-color-picker\",\n            type: \"color\",\n            value: $value,\n            onChange: onColorChange2\n        }));\n    }\n    if (option.type === \"slider\") {\n        let onSliderValueChange2 = function(value) {\n            onChange(value + \"%\");\n        };\n        const { min, max, step, upIcon, downIcon } = option;\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSliderItem, {\n            label: translatedLabel,\n            value: $value,\n            UpIcon: upIcon,\n            DownIcon: downIcon,\n            isMin: $value === min + \"%\",\n            isMax: $value === max + \"%\"\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$5, {\n            className: \"vds-slider\",\n            min,\n            max,\n            step,\n            keyStep: step,\n            value: parseInt($value),\n            \"aria-label\": translatedLabel,\n            onValueChange: onSliderValueChange2,\n            onDragValueChange: onSliderValueChange2\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSliderParts, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSliderSteps, null)));\n    }\n    if (option.type === \"radio\") {\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontRadioGroup, {\n            id: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.camelToKebabCase)(type),\n            label: translatedLabel,\n            value: $value,\n            values: option.values,\n            onChange\n        });\n    }\n    return null;\n}\n_s30(DefaultFontSetting, \"5onKOmVpBLu7EmqRY2JvdQeJdSU=\", false, function() {\n    return [\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaPlayer,\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaPlayer,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        useDefaultLayoutWord,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        useDefaultLayoutWord\n    ];\n});\n_c34 = DefaultFontSetting;\nDefaultFontSetting.displayName = \"DefaultFontSetting\";\nfunction DefaultFontRadioGroup(param) {\n    let { id, label, value, values, onChange } = param;\n    _s31();\n    const radioOptions = createRadioOptions(values), { translations } = useDefaultLayoutContext(), hint = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        var _radioOptions_find;\n        const label2 = ((_radioOptions_find = radioOptions.find((radio)=>radio.value === value)) === null || _radioOptions_find === void 0 ? void 0 : _radioOptions_find.label) || \"\";\n        return i18n(translations, label2);\n    }, [\n        value,\n        radioOptions\n    ]);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$2, {\n        className: \"vds-\".concat(id, \"-menu vds-menu\")\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuButton, {\n        label,\n        hint\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Items, {\n        className: \"vds-menu-items\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuRadioGroup, {\n        value,\n        options: radioOptions,\n        onChange\n    })));\n}\n_s31(DefaultFontRadioGroup, \"X36WPySh6T4MKXvy+AaWts1yxrc=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\n_c35 = DefaultFontRadioGroup;\nDefaultFontRadioGroup.displayName = \"DefaultFontRadioGroup\";\nfunction DefaultResetMenuItem() {\n    _s32();\n    const resetText = useDefaultLayoutWord(\"Reset\");\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        className: \"vds-menu-item\",\n        role: \"menuitem\",\n        onClick: onFontReset\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"vds-menu-item-label\"\n    }, resetText));\n}\n_s32(DefaultResetMenuItem, \"ScuZGw9nguUCFg4rZxCf5KwtExY=\", false, function() {\n    return [\n        useDefaultLayoutWord\n    ];\n});\n_c36 = DefaultResetMenuItem;\nDefaultResetMenuItem.displayName = \"DefaultResetMenuItem\";\nfunction DefaultMenuCheckbox(param) {\n    let { label, checked, storageKey, defaultChecked = false, onChange } = param;\n    _s33();\n    const [isChecked, setIsChecked] = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultChecked), [isActive, setIsActive] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const savedValue = storageKey ? localStorage.getItem(storageKey) : null, checked2 = !!(savedValue !== null && savedValue !== void 0 ? savedValue : defaultChecked);\n        setIsChecked(checked2);\n        onChange === null || onChange === void 0 ? void 0 : onChange(checked2);\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isBoolean)(checked)) setIsChecked(checked);\n    }, [\n        checked\n    ]);\n    function onPress(event) {\n        if (event && \"button\" in event && (event === null || event === void 0 ? void 0 : event.button) === 1) return;\n        const toggledCheck = !isChecked;\n        setIsChecked(toggledCheck);\n        if (storageKey) localStorage.setItem(storageKey, toggledCheck ? \"1\" : \"\");\n        onChange === null || onChange === void 0 ? void 0 : onChange(toggledCheck, event === null || event === void 0 ? void 0 : event.nativeEvent);\n        setIsActive(false);\n    }\n    function onActive(event) {\n        if (event.button !== 0) return;\n        setIsActive(true);\n    }\n    function onKeyDown(event) {\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isKeyboardClick)(event.nativeEvent)) onPress();\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-menu-checkbox\",\n        role: \"menuitemcheckbox\",\n        tabIndex: 0,\n        \"aria-label\": label,\n        \"aria-checked\": isChecked ? \"true\" : \"false\",\n        \"data-active\": isActive ? \"\" : null,\n        onPointerUp: onPress,\n        onPointerDown: onActive,\n        onKeyDown\n    });\n}\n_s33(DefaultMenuCheckbox, \"SLEevq4jIqxGkLW+7eSlQMsNevI=\");\n_c37 = DefaultMenuCheckbox;\nDefaultMenuCheckbox.displayName = \"DefaultMenuCheckbox\";\nfunction DefaultAccessibilityMenu(param) {\n    let { slots } = param;\n    _s34();\n    const label = useDefaultLayoutWord(\"Accessibility\"), { icons: Icons } = useDefaultLayoutContext();\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$2, {\n        className: \"vds-accessibility-menu vds-menu\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuButton, {\n        label,\n        Icon: Icons.Menu.Accessibility\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Items, {\n        className: \"vds-menu-items\"\n    }, slot(slots, \"accessibilityMenuItemsStart\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAnnouncementsMenuCheckbox, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultKeyboardAnimationsMenuCheckbox, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFontMenu, null)), slot(slots, \"accessibilityMenuItemsEnd\", null)));\n}\n_s34(DefaultAccessibilityMenu, \"CuMgT8jgUyqXQ0AThcbXyMglmyE=\", false, function() {\n    return [\n        useDefaultLayoutWord,\n        useDefaultLayoutContext\n    ];\n});\n_c38 = DefaultAccessibilityMenu;\nDefaultAccessibilityMenu.displayName = \"DefaultAccessibilityMenu\";\nfunction DefaultAnnouncementsMenuCheckbox() {\n    _s35();\n    const { userPrefersAnnouncements } = useDefaultLayoutContext(), label = useDefaultLayoutWord(\"Announcements\");\n    function onChange(checked) {\n        userPrefersAnnouncements.set(checked);\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuItem, {\n        label\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuCheckbox, {\n        label,\n        defaultChecked: true,\n        storageKey: \"vds-player::announcements\",\n        onChange\n    }));\n}\n_s35(DefaultAnnouncementsMenuCheckbox, \"KVd3gHPR7gVH5dOLOGjcqeFBbdw=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord\n    ];\n});\n_c39 = DefaultAnnouncementsMenuCheckbox;\nDefaultAnnouncementsMenuCheckbox.displayName = \"DefaultAnnouncementsMenuCheckbox\";\nfunction DefaultKeyboardAnimationsMenuCheckbox() {\n    _s36();\n    const $viewType = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"viewType\"), { userPrefersKeyboardAnimations, noKeyboardAnimations } = useDefaultLayoutContext(), label = useDefaultLayoutWord(\"Keyboard Animations\");\n    if ($viewType !== \"video\" || noKeyboardAnimations) return null;\n    function onChange(checked) {\n        userPrefersKeyboardAnimations.set(checked);\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuItem, {\n        label\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuCheckbox, {\n        label,\n        defaultChecked: true,\n        storageKey: \"vds-player::keyboard-animations\",\n        onChange\n    }));\n}\n_s36(DefaultKeyboardAnimationsMenuCheckbox, \"jsqHrvA3CXlyBZAOqlJ7puVGH34=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord\n    ];\n});\n_c40 = DefaultKeyboardAnimationsMenuCheckbox;\nDefaultKeyboardAnimationsMenuCheckbox.displayName = \"DefaultKeyboardAnimationsMenuCheckbox\";\nfunction DefaultAudioMenu(param) {\n    let { slots } = param;\n    _s37();\n    const label = useDefaultLayoutWord(\"Audio\"), $canSetAudioGain = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"canSetAudioGain\"), $audioTracks = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"audioTracks\"), { noAudioGain, icons: Icons } = useDefaultLayoutContext(), hasGainSlider = $canSetAudioGain && !noAudioGain, $disabled = !hasGainSlider && $audioTracks.length <= 1;\n    if ($disabled) return null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$2, {\n        className: \"vds-audio-menu vds-menu\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuButton, {\n        label,\n        Icon: Icons.Menu.Audio\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Items, {\n        className: \"vds-menu-items\"\n    }, slot(slots, \"audioMenuItemsStart\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAudioTracksMenu, null), hasGainSlider ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAudioBoostMenuSection, null) : null, slot(slots, \"audioMenuItemsEnd\", null)));\n}\n_s37(DefaultAudioMenu, \"qGys09I+m/ZLO6vne3Bgv1/EA2I=\", false, function() {\n    return [\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext\n    ];\n});\n_c41 = DefaultAudioMenu;\nDefaultAudioMenu.displayName = \"DefaultAudioMenu\";\nfunction DefaultAudioBoostMenuSection() {\n    _s38();\n    const $audioGain = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"audioGain\"), label = useDefaultLayoutWord(\"Boost\"), value = Math.round((($audioGain !== null && $audioGain !== void 0 ? $audioGain : 1) - 1) * 100) + \"%\", $canSetAudioGain = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"canSetAudioGain\"), { noAudioGain, icons: Icons } = useDefaultLayoutContext(), $disabled = !$canSetAudioGain || noAudioGain, min = useGainMin(), max = useGainMax();\n    if ($disabled) return null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, {\n        label,\n        value\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSliderItem, {\n        UpIcon: Icons.Menu.AudioBoostUp,\n        DownIcon: Icons.Menu.AudioBoostDown,\n        isMin: (($audioGain !== null && $audioGain !== void 0 ? $audioGain : 1) - 1) * 100 <= min,\n        isMax: (($audioGain !== null && $audioGain !== void 0 ? $audioGain : 1) - 1) * 100 === max\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAudioGainSlider, null)));\n}\n_s38(DefaultAudioBoostMenuSection, \"ZpB0C+YLBIoXJlEfx/xuV2dVrP8=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        useGainMin,\n        useGainMax,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        useGainMin,\n        useGainMax,\n        useGainMin,\n        useGainMax\n    ];\n});\n_c42 = DefaultAudioBoostMenuSection;\nDefaultAudioBoostMenuSection.displayName = \"DefaultAudioBoostMenuSection\";\nfunction useGainMin() {\n    _s39();\n    const { audioGains } = useDefaultLayoutContext(), min = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isArray)(audioGains) ? audioGains[0] : audioGains === null || audioGains === void 0 ? void 0 : audioGains.min;\n    return min !== null && min !== void 0 ? min : 0;\n}\n_s39(useGainMin, \"WS+EEUaDbx9a23CF5MXYlsotRuU=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\nfunction useGainMax() {\n    _s40();\n    const { audioGains } = useDefaultLayoutContext(), max = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isArray)(audioGains) ? audioGains[audioGains.length - 1] : audioGains === null || audioGains === void 0 ? void 0 : audioGains.max;\n    return max !== null && max !== void 0 ? max : 300;\n}\n_s40(useGainMax, \"WS+EEUaDbx9a23CF5MXYlsotRuU=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\nfunction useGainStep() {\n    _s41();\n    const { audioGains } = useDefaultLayoutContext(), step = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isArray)(audioGains) ? audioGains[1] - audioGains[0] : audioGains === null || audioGains === void 0 ? void 0 : audioGains.step;\n    return step || 25;\n}\n_s41(useGainStep, \"WS+EEUaDbx9a23CF5MXYlsotRuU=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\nfunction DefaultAudioGainSlider() {\n    _s42();\n    const label = useDefaultLayoutWord(\"Audio Boost\"), min = useGainMin(), max = useGainMax(), step = useGainStep();\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Root$1, {\n        className: \"vds-audio-gain-slider vds-slider\",\n        \"aria-label\": label,\n        min,\n        max,\n        step,\n        keyStep: step\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSliderParts, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSliderSteps, null));\n}\n_s42(DefaultAudioGainSlider, \"Pb9IFkR36bpz9klqEdoMUPhTiWM=\", false, function() {\n    return [\n        useDefaultLayoutWord,\n        useGainMin,\n        useGainMax,\n        useGainStep\n    ];\n});\n_c43 = DefaultAudioGainSlider;\nDefaultAudioGainSlider.displayName = \"DefaultAudioGainSlider\";\nfunction DefaultAudioTracksMenu() {\n    _s43();\n    const { icons: Icons } = useDefaultLayoutContext(), label = useDefaultLayoutWord(\"Track\"), defaultText = useDefaultLayoutWord(\"Default\"), $track = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"audioTrack\"), options = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useAudioOptions)();\n    if (options.disabled) return null;\n    var _$track_label;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$2, {\n        className: \"vds-audio-track-menu vds-menu\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuButton, {\n        label,\n        hint: (_$track_label = $track === null || $track === void 0 ? void 0 : $track.label) !== null && _$track_label !== void 0 ? _$track_label : defaultText,\n        disabled: options.disabled,\n        Icon: Icons.Menu.Audio\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Items, {\n        className: \"vds-menu-items\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$3, {\n        className: \"vds-audio-radio-group vds-radio-group\",\n        value: options.selectedValue\n    }, options.map((param)=>{\n        let { label: label2, value, select } = param;\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Item, {\n            className: \"vds-audio-radio vds-radio\",\n            value,\n            onSelect: select,\n            key: value\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.Menu.RadioCheck, {\n            className: \"vds-icon\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: \"vds-radio-label\"\n        }, label2));\n    }))));\n}\n_s43(DefaultAudioTracksMenu, \"/Sc1qTtST/R3Jr+PRb7ZnSCzknQ=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useAudioOptions\n    ];\n});\n_c44 = DefaultAudioTracksMenu;\nDefaultAudioTracksMenu.displayName = \"DefaultAudioTracksMenu\";\nfunction DefaultCaptionMenu(param) {\n    let { slots } = param;\n    var _options_selectedTrack;\n    _s44();\n    var _options_selectedTrack_label;\n    const { icons: Icons } = useDefaultLayoutContext(), label = useDefaultLayoutWord(\"Captions\"), offText = useDefaultLayoutWord(\"Off\"), options = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useCaptionOptions)({\n        off: offText\n    }), hint = (_options_selectedTrack_label = (_options_selectedTrack = options.selectedTrack) === null || _options_selectedTrack === void 0 ? void 0 : _options_selectedTrack.label) !== null && _options_selectedTrack_label !== void 0 ? _options_selectedTrack_label : offText;\n    if (options.disabled) return null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$2, {\n        className: \"vds-captions-menu vds-menu\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuButton, {\n        label,\n        hint,\n        disabled: options.disabled,\n        Icon: Icons.Menu.Captions\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Items, {\n        className: \"vds-menu-items\"\n    }, slot(slots, \"captionsMenuItemsStart\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$3, {\n        className: \"vds-captions-radio-group vds-radio-group\",\n        value: options.selectedValue\n    }, options.map((param)=>{\n        let { label: label2, value, select } = param;\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Item, {\n            className: \"vds-caption-radio vds-radio\",\n            value,\n            onSelect: select,\n            key: value\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.Menu.RadioCheck, {\n            className: \"vds-icon\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: \"vds-radio-label\"\n        }, label2));\n    })), slot(slots, \"captionsMenuItemsEnd\", null)));\n}\n_s44(DefaultCaptionMenu, \"XWUMyHVLWdQdvEPWI1qoFw7MZaY=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useCaptionOptions,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useCaptionOptions\n    ];\n});\n_c45 = DefaultCaptionMenu;\nDefaultCaptionMenu.displayName = \"DefaultCaptionMenu\";\nfunction DefaultPlaybackMenu(param) {\n    let { slots } = param;\n    _s45();\n    const label = useDefaultLayoutWord(\"Playback\"), { icons: Icons } = useDefaultLayoutContext();\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$2, {\n        className: \"vds-playback-menu vds-menu\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuButton, {\n        label,\n        Icon: Icons.Menu.Playback\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Items, {\n        className: \"vds-menu-items\"\n    }, slot(slots, \"playbackMenuItemsStart\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, null, slot(slots, \"playbackMenuLoop\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultLoopMenuCheckbox, null))), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSpeedMenuSection, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultQualityMenuSection, null), slot(slots, \"playbackMenuItemsEnd\", null)));\n}\n_s45(DefaultPlaybackMenu, \"CuMgT8jgUyqXQ0AThcbXyMglmyE=\", false, function() {\n    return [\n        useDefaultLayoutWord,\n        useDefaultLayoutContext\n    ];\n});\n_c46 = DefaultPlaybackMenu;\nDefaultPlaybackMenu.displayName = \"DefaultPlaybackMenu\";\nfunction DefaultLoopMenuCheckbox() {\n    _s46();\n    const { remote } = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext)(), label = useDefaultLayoutWord(\"Loop\");\n    function onChange(checked, trigger) {\n        remote.userPrefersLoopChange(checked, trigger);\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuItem, {\n        label\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuCheckbox, {\n        label,\n        storageKey: \"vds-player::user-loop\",\n        onChange\n    }));\n}\n_s46(DefaultLoopMenuCheckbox, \"LTgpYMzIRG4uASMR/bMXwcdEHcQ=\", false, function() {\n    return [\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n        useDefaultLayoutWord\n    ];\n});\n_c47 = DefaultLoopMenuCheckbox;\nDefaultLoopMenuCheckbox.displayName = \"DefaultLoopMenuCheckbox\";\nfunction DefaultAutoQualityMenuCheckbox() {\n    _s47();\n    const { remote, qualities } = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext)(), $autoQuality = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"autoQuality\"), label = useDefaultLayoutWord(\"Auto\");\n    function onChange(checked, trigger) {\n        if (checked) {\n            remote.requestAutoQuality(trigger);\n        } else {\n            remote.changeQuality(qualities.selectedIndex, trigger);\n        }\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuItem, {\n        label\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuCheckbox, {\n        label,\n        checked: $autoQuality,\n        onChange,\n        defaultChecked: $autoQuality\n    }));\n}\n_s47(DefaultAutoQualityMenuCheckbox, \"Xskt9aticEzOJKyBN7B0iq5EFLU=\", false, function() {\n    return [\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord\n    ];\n});\n_c48 = DefaultAutoQualityMenuCheckbox;\nDefaultAutoQualityMenuCheckbox.displayName = \"DefaultAutoQualityMenuCheckbox\";\nfunction DefaultQualityMenuSection() {\n    _s48();\n    const { hideQualityBitrate, icons: Icons } = useDefaultLayoutContext(), $canSetQuality = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"canSetQuality\"), $qualities = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"qualities\"), $quality = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"quality\"), label = useDefaultLayoutWord(\"Quality\"), autoText = useDefaultLayoutWord(\"Auto\"), sortedQualities = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.sortVideoQualities)($qualities), [\n        $qualities\n    ]);\n    if (!$canSetQuality || $qualities.length <= 1) return null;\n    const height = $quality === null || $quality === void 0 ? void 0 : $quality.height, bitrate = !hideQualityBitrate ? $quality === null || $quality === void 0 ? void 0 : $quality.bitrate : null, bitrateText = bitrate && bitrate > 0 ? \"\".concat((bitrate / 1e6).toFixed(2), \" Mbps\") : null, value = height ? \"\".concat(height, \"p\").concat(bitrateText ? \" (\".concat(bitrateText, \")\") : \"\") : autoText, isMin = sortedQualities[0] === $quality, isMax = sortedQualities.at(-1) === $quality;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, {\n        label,\n        value\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSliderItem, {\n        UpIcon: Icons.Menu.QualityUp,\n        DownIcon: Icons.Menu.QualityDown,\n        isMin,\n        isMax\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultQualitySlider, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAutoQualityMenuCheckbox, null));\n}\n_s48(DefaultQualityMenuSection, \"Yu/L8qvDmjGftETrX0enDxf1Hgw=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord\n    ];\n});\n_c49 = DefaultQualityMenuSection;\nDefaultQualityMenuSection.displayName = \"DefaultQualityMenuSection\";\nfunction DefaultQualitySlider() {\n    _s49();\n    const label = useDefaultLayoutWord(\"Quality\");\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Root$2, {\n        className: \"vds-quality-slider vds-slider\",\n        \"aria-label\": label\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSliderParts, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSliderSteps, null));\n}\n_s49(DefaultQualitySlider, \"SpQnZLNxiYNrnl4a484RkzSKSYA=\", false, function() {\n    return [\n        useDefaultLayoutWord\n    ];\n});\n_c50 = DefaultQualitySlider;\nDefaultQualitySlider.displayName = \"DefaultQualitySlider\";\nfunction DefaultSpeedMenuSection() {\n    _s50();\n    const { icons: Icons } = useDefaultLayoutContext(), $playbackRate = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"playbackRate\"), $canSetPlaybackRate = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"canSetPlaybackRate\"), label = useDefaultLayoutWord(\"Speed\"), normalText = useDefaultLayoutWord(\"Normal\"), min = useSpeedMin(), max = useSpeedMax(), value = $playbackRate === 1 ? normalText : $playbackRate + \"x\";\n    if (!$canSetPlaybackRate) return null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSection, {\n        label,\n        value\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMenuSliderItem, {\n        UpIcon: Icons.Menu.SpeedUp,\n        DownIcon: Icons.Menu.SpeedDown,\n        isMin: $playbackRate === min,\n        isMax: $playbackRate === max\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSpeedSlider, null)));\n}\n_s50(DefaultSpeedMenuSection, \"/umK04S+lIw59/56o3FXW72BzIk=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        useSpeedMin,\n        useSpeedMax,\n        useDefaultLayoutContext,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutWord,\n        useDefaultLayoutWord,\n        useSpeedMin,\n        useSpeedMax\n    ];\n});\n_c51 = DefaultSpeedMenuSection;\nfunction useSpeedMin() {\n    _s51();\n    const { playbackRates } = useDefaultLayoutContext(), rates = playbackRates;\n    var _ref;\n    return (_ref = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isArray)(rates) ? rates[0] : rates === null || rates === void 0 ? void 0 : rates.min) !== null && _ref !== void 0 ? _ref : 0;\n}\n_s51(useSpeedMin, \"NGLdr/laJYCs/7qmJV2t464hS4k=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\nfunction useSpeedMax() {\n    _s52();\n    const { playbackRates } = useDefaultLayoutContext(), rates = playbackRates;\n    var _ref;\n    return (_ref = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isArray)(rates) ? rates[rates.length - 1] : rates === null || rates === void 0 ? void 0 : rates.max) !== null && _ref !== void 0 ? _ref : 2;\n}\n_s52(useSpeedMax, \"NGLdr/laJYCs/7qmJV2t464hS4k=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\nfunction useSpeedStep() {\n    _s53();\n    const { playbackRates } = useDefaultLayoutContext(), rates = playbackRates;\n    return ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.isArray)(rates) ? rates[1] - rates[0] : rates === null || rates === void 0 ? void 0 : rates.step) || 0.25;\n}\n_s53(useSpeedStep, \"NGLdr/laJYCs/7qmJV2t464hS4k=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\nfunction DefaultSpeedSlider() {\n    _s54();\n    const label = useDefaultLayoutWord(\"Speed\"), min = useSpeedMin(), max = useSpeedMax(), step = useSpeedStep();\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Root$3, {\n        className: \"vds-speed-slider vds-slider\",\n        \"aria-label\": label,\n        min,\n        max,\n        step,\n        keyStep: step\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSliderParts, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSliderSteps, null));\n}\n_s54(DefaultSpeedSlider, \"xvy1m92rJOktUnWYrmXUwUtb4Mo=\", false, function() {\n    return [\n        useDefaultLayoutWord,\n        useSpeedMin,\n        useSpeedMax,\n        useSpeedStep\n    ];\n});\n_c52 = DefaultSpeedSlider;\nDefaultSpeedSlider.displayName = \"DefaultSpeedSlider\";\nfunction DefaultSettingsMenu(param) {\n    let { tooltip, placement, portalClass = \"\", slots } = param;\n    _s55();\n    const { showMenuDelay, icons: Icons, isSmallLayout, menuContainer, menuGroup, noModal, colorScheme } = useDefaultLayoutContext(), settingsText = useDefaultLayoutWord(\"Settings\"), $viewType = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"viewType\"), $offset = !isSmallLayout && menuGroup === \"bottom\" && $viewType === \"video\" ? 26 : 0, colorSchemeClass = useColorSchemeClass(colorScheme), [isOpen, setIsOpen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false), dialogEl = useParentDialogEl();\n    (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useScoped)(updateFontCssVars);\n    function onOpen() {\n        (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync)(()=>{\n            setIsOpen(true);\n        });\n    }\n    function onClose() {\n        setIsOpen(false);\n    }\n    const Content = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Items, {\n        className: \"vds-settings-menu-items vds-menu-items\",\n        placement,\n        offset: $offset\n    }, isOpen ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, slot(slots, \"settingsMenuItemsStart\", null), slot(slots, \"settingsMenuStartItems\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultPlaybackMenu, {\n        slots\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAccessibilityMenu, {\n        slots\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAudioMenu, {\n        slots\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultCaptionMenu, {\n        slots\n    }), slot(slots, \"settingsMenuEndItems\", null), slot(slots, \"settingsMenuItemsEnd\", null)) : null);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$2, {\n        className: \"vds-settings-menu vds-menu\",\n        showDelay: showMenuDelay,\n        onOpen,\n        onClose\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTooltip, {\n        content: settingsText,\n        placement: tooltip\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Button, {\n        className: \"vds-menu-button vds-button\",\n        \"aria-label\": settingsText\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icons.Menu.Settings, {\n        className: \"vds-icon vds-rotate-icon\"\n    }))), noModal || !isSmallLayout ? Content : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Portal, {\n        className: portalClass + (colorSchemeClass ? \" \".concat(colorSchemeClass) : \"\"),\n        container: menuContainer !== null && menuContainer !== void 0 ? menuContainer : dialogEl,\n        disabled: \"fullscreen\",\n        \"data-sm\": isSmallLayout ? \"\" : null,\n        \"data-lg\": !isSmallLayout ? \"\" : null,\n        \"data-size\": isSmallLayout ? \"sm\" : \"lg\",\n        \"data-view-type\": $viewType\n    }, Content));\n}\n_s55(DefaultSettingsMenu, \"cRiGO14XV9QuALxesUfreoaHQyA=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useColorSchemeClass,\n        useParentDialogEl,\n        useColorSchemeClass,\n        useParentDialogEl,\n        _vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useScoped\n    ];\n});\n_c53 = DefaultSettingsMenu;\nDefaultSettingsMenu.displayName = \"DefaultSettingsMenu\";\nfunction DefaultVolumePopup(param) {\n    let { tooltip, orientation, slots } = param;\n    _s56();\n    const $pointer = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"pointer\"), $muted = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"muted\"), $canSetVolume = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"canSetVolume\"), [rootEl, setRootEl] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null), isRootActive = (0,_vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useActive)(rootEl), muteButton = slot(slots, \"muteButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultMuteButton, {\n        tooltip\n    }));\n    if (!$canSetVolume) {\n        return muteButton;\n    }\n    return $pointer === \"coarse\" && !$muted ? null : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-volume\",\n        \"data-active\": isRootActive ? \"\" : null,\n        ref: setRootEl\n    }, muteButton, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-volume-popup\"\n    }, slot(slots, \"volumeSlider\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVolumeSlider, {\n        orientation\n    }))));\n}\n_s56(DefaultVolumePopup, \"HdiTN06UCSGPx0TGHV5C957uGTg=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useActive,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useActive\n    ];\n});\n_c54 = DefaultVolumePopup;\nDefaultVolumePopup.displayName = \"DefaultVolumePopup\";\nfunction DefaultVolumeSlider(props) {\n    _s57();\n    const label = useDefaultLayoutWord(\"Volume\");\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$4, {\n        className: \"vds-volume-slider vds-slider\",\n        \"aria-label\": label,\n        ...props\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Track, {\n        className: \"vds-slider-track\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.TrackFill, {\n        className: \"vds-slider-track-fill vds-slider-track\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Thumb, {\n        className: \"vds-slider-thumb\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Preview, {\n        className: \"vds-slider-preview\",\n        noClamp: true\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Value, {\n        className: \"vds-slider-value\"\n    })));\n}\n_s57(DefaultVolumeSlider, \"SpQnZLNxiYNrnl4a484RkzSKSYA=\", false, function() {\n    return [\n        useDefaultLayoutWord\n    ];\n});\n_c55 = DefaultVolumeSlider;\nDefaultVolumeSlider.displayName = \"DefaultVolumeSlider\";\nfunction DefaultTimeSlider() {\n    _s58();\n    const [instance, setInstance] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null), [width, setWidth] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0), $src = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"currentSrc\"), { thumbnails, sliderChaptersMinWidth, disableTimeSlider, seekStep, noScrubGesture } = useDefaultLayoutContext(), label = useDefaultLayoutWord(\"Seek\"), $RemotionSliderThumbnail = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)(_vidstack_BVbKfF2_js__WEBPACK_IMPORTED_MODULE_7__.RemotionSliderThumbnail);\n    const onResize = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        const el = instance === null || instance === void 0 ? void 0 : instance.el;\n        el && setWidth(el.clientWidth);\n    }, [\n        instance\n    ]);\n    (0,_vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useResizeObserver)(instance === null || instance === void 0 ? void 0 : instance.el, onResize);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Root$1, {\n        className: \"vds-time-slider vds-slider\",\n        \"aria-label\": label,\n        disabled: disableTimeSlider,\n        noSwipeGesture: noScrubGesture,\n        keyStep: seekStep,\n        ref: setInstance\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Chapters, {\n        className: \"vds-slider-chapters\",\n        disabled: width < sliderChaptersMinWidth\n    }, (cues, forwardRef)=>cues.map((cue)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n                className: \"vds-slider-chapter\",\n                key: cue.startTime,\n                ref: forwardRef\n            }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Track, {\n                className: \"vds-slider-track\"\n            }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.TrackFill, {\n                className: \"vds-slider-track-fill vds-slider-track\"\n            }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Progress, {\n                className: \"vds-slider-progress vds-slider-track\"\n            })))), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Thumb, {\n        className: \"vds-slider-thumb\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Preview, {\n        className: \"vds-slider-preview\"\n    }, thumbnails ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Thumbnail.Root, {\n        src: thumbnails,\n        className: \"vds-slider-thumbnail vds-thumbnail\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Thumbnail.Img, null)) : $RemotionSliderThumbnail && (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.isRemotionSrc)($src) ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement($RemotionSliderThumbnail, {\n        className: \"vds-slider-thumbnail vds-thumbnail\"\n    }) : null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.ChapterTitle, {\n        className: \"vds-slider-chapter-title\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Value, {\n        className: \"vds-slider-value\"\n    })));\n}\n_s58(DefaultTimeSlider, \"4kiKyxRrXd6A+QPYJ11dQRCGoeY=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        useDefaultLayoutContext,\n        useDefaultLayoutWord,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        _vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useResizeObserver\n    ];\n});\n_c56 = DefaultTimeSlider;\nDefaultTimeSlider.displayName = \"DefaultTimeSlider\";\nfunction DefaultTimeGroup(param) {\n    let { slots } = param;\n    _s59();\n    const $duration = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"duration\");\n    if (!$duration) return null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-time-group\"\n    }, slot(slots, \"currentTime\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Time, {\n        className: \"vds-time\",\n        type: \"current\"\n    })), slot(slots, \"timeSeparator\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-time-divider\"\n    }, \"/\")), slot(slots, \"endTime\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Time, {\n        className: \"vds-time\",\n        type: \"duration\"\n    })));\n}\n_s59(DefaultTimeGroup, \"tv6/tYKlCKPkL2tpbbg8Y3gqdqc=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState\n    ];\n});\n_c57 = DefaultTimeGroup;\nDefaultTimeGroup.displayName = \"DefaultTimeGroup\";\nfunction DefaultTimeInfo(param) {\n    let { slots } = param;\n    _s60();\n    const $live = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"live\");\n    return $live ? slot(slots, \"liveButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultLiveButton, null)) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTimeGroup, {\n        slots\n    });\n}\n_s60(DefaultTimeInfo, \"Rz4gmPdzQNIHtLFZSrahpoYRorg=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState\n    ];\n});\n_c58 = DefaultTimeInfo;\nDefaultTimeInfo.displayName = \"DefaultTimeInfo\";\nfunction DefaultTimeInvert(param) {\n    let { slots } = param;\n    _s61();\n    const $live = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"live\"), $duration = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"duration\");\n    return $live ? slot(slots, \"liveButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultLiveButton, null)) : slot(slots, \"endTime\", $duration ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Time, {\n        className: \"vds-time\",\n        type: \"current\",\n        toggle: true,\n        remainder: true\n    }) : null);\n}\n_s61(DefaultTimeInvert, \"kOnTtaipUx4+4JK73W1o9fewVCU=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState\n    ];\n});\n_c59 = DefaultTimeInvert;\nDefaultTimeInvert.displayName = \"DefaultTimeInvert\";\nconst MediaLayout$1 = createDefaultMediaLayout({\n    type: \"audio\",\n    smLayoutWhen (param) {\n        let { width } = param;\n        return width < 576;\n    },\n    renderLayout: ()=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AudioLayout, null)\n});\n_c60 = MediaLayout$1;\nfunction DefaultAudioLayout(props) {\n    _s62();\n    const [scrubbing, setScrubbing] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false), $pointer = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"pointer\");\n    const onStartScrubbing = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        const { target } = event, hasTimeSlider = !!(target instanceof HTMLElement && target.closest(\".vds-time-slider\"));\n        if (!hasTimeSlider) return;\n        event.nativeEvent.stopImmediatePropagation();\n        setScrubbing(true);\n    }, []);\n    const onStopScrubbing = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        setScrubbing(false);\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (scrubbing) return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.listenEvent)(window, \"pointerdown\", onStopScrubbing);\n    }, [\n        scrubbing,\n        onStopScrubbing\n    ]);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(MediaLayout$1, {\n        ...props,\n        \"data-scrubbing\": scrubbing ? \"\" : null,\n        onPointerDown: scrubbing ? (e)=>e.stopPropagation() : void 0,\n        onPointerDownCapture: $pointer === \"coarse\" && !scrubbing ? onStartScrubbing : void 0\n    });\n}\n_s62(DefaultAudioLayout, \"PcudIc5gNrbX8RdRTL5Rs3MnaWI=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState\n    ];\n});\n_c61 = DefaultAudioLayout;\nDefaultAudioLayout.displayName = \"DefaultAudioLayout\";\nfunction AudioLayout() {\n    _s63();\n    const slots = useDefaultAudioLayoutSlots();\n    (0,_vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useLayoutName)(\"audio\");\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAnnouncer, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultCaptions, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Root$4, {\n        className: \"vds-controls\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Group, {\n        className: \"vds-controls-group\"\n    }, slot(slots, \"seekBackwardButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSeekButton, {\n        backward: true,\n        tooltip: \"top start\"\n    })), slot(slots, \"playButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultPlayButton, {\n        tooltip: \"top center\"\n    })), slot(slots, \"seekForwardButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSeekButton, {\n        tooltip: \"top center\"\n    })), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAudioTitle, null), slot(slots, \"timeSlider\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTimeSlider, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTimeInvert, {\n        slots\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVolumePopup, {\n        orientation: \"vertical\",\n        tooltip: \"top\",\n        slots\n    }), slot(slots, \"captionButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultCaptionButton, {\n        tooltip: \"top center\"\n    })), slot(slots, \"downloadButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultDownloadButton, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAudioMenus, {\n        slots\n    }))));\n}\n_s63(AudioLayout, \"0NQKSuYkmMM9eGohHJG1F3UjJoc=\", false, function() {\n    return [\n        useDefaultAudioLayoutSlots,\n        _vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useLayoutName\n    ];\n});\n_c62 = AudioLayout;\nAudioLayout.displayName = \"AudioLayout\";\nfunction DefaultAudioMenus(param) {\n    let { slots } = param;\n    _s64();\n    const { isSmallLayout, noModal } = useDefaultLayoutContext(), placement = noModal ? \"top end\" : !isSmallLayout ? \"top end\" : null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, slot(slots, \"chaptersMenu\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultChaptersMenu, {\n        tooltip: \"top\",\n        placement,\n        portalClass: \"vds-audio-layout\"\n    })), slot(slots, \"settingsMenu\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSettingsMenu, {\n        tooltip: \"top end\",\n        placement,\n        portalClass: \"vds-audio-layout\",\n        slots\n    })));\n}\n_s64(DefaultAudioMenus, \"6NS3Y3k7jR6Gwwcizt9vOh9mt5E=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\n_c63 = DefaultAudioMenus;\nDefaultAudioMenus.displayName = \"DefaultAudioMenus\";\nfunction DefaultAudioTitle() {\n    _s65();\n    const [rootEl, setRootEl] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null), media = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext)(), { translations } = useDefaultLayoutContext(), [isTextOverflowing, setIsTextOverflowing] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const isContinued = (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.createComputed)(()=>{\n        const { started, currentTime } = media.$state;\n        return started() || currentTime() > 0;\n    });\n    const $title = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)((0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.createComputed)(()=>{\n        const { title, ended } = media.$state;\n        if (!title()) return \"\";\n        const word = ended() ? \"Replay\" : isContinued() ? \"Continue\" : \"Play\";\n        return \"\".concat(i18n(translations, word), \": \").concat(title());\n    }));\n    const chapterTitle = (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useChapterTitle)(), $isContinued = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)(isContinued), $chapterTitle = $isContinued ? chapterTitle : \"\", isTransitionActive = (0,_vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useTransitionActive)(rootEl);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (isTransitionActive && document.activeElement === document.body) {\n            var _media_player_el;\n            (_media_player_el = media.player.el) === null || _media_player_el === void 0 ? void 0 : _media_player_el.focus();\n        }\n    }, []);\n    const onResize = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        const el = rootEl, isOverflowing = !!el && !isTransitionActive && el.clientWidth < el.children[0].clientWidth;\n        if (el) (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.toggleClass)(el, \"vds-marquee\", isOverflowing);\n        setIsTextOverflowing(isOverflowing);\n    }, [\n        rootEl,\n        isTransitionActive\n    ]);\n    (0,_vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useResizeObserver)(rootEl, onResize);\n    return $title ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"vds-title\",\n        title: $title,\n        ref: setRootEl\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AudioTitle, {\n        title: $title,\n        chapterTitle: $chapterTitle\n    }), isTextOverflowing && !isTransitionActive ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AudioTitle, {\n        title: $title,\n        chapterTitle: $chapterTitle\n    }) : null) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null);\n}\n_s65(DefaultAudioTitle, \"rG6NpjlQp2hfe+gqg3FQv1oVsuc=\", false, function() {\n    return [\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n        useDefaultLayoutContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        _vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useChapterTitle,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        _vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useChapterTitle,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        _vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useTransitionActive,\n        _vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useTransitionActive,\n        _vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useResizeObserver\n    ];\n});\n_c64 = DefaultAudioTitle;\nDefaultAudioTitle.displayName = \"DefaultAudioTitle\";\nfunction AudioTitle(param) {\n    let { title, chapterTitle } = param;\n    _s66();\n    const slots = useDefaultAudioLayoutSlots();\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"vds-title-text\"\n    }, slot(slots, \"title\", title), slot(slots, \"chapterTitle\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"vds-chapter-title\"\n    }, chapterTitle)));\n}\n_s66(AudioTitle, \"R5oEO/0Vtg54Dtv34I2rEr8uQQ0=\", false, function() {\n    return [\n        useDefaultAudioLayoutSlots\n    ];\n});\n_c65 = AudioTitle;\nAudioTitle.displayName = \"AudioTitle\";\nconst DefaultKeyboardDisplay = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s67((param, forwardRef)=>{\n    let { icons: Icons, ...props } = param;\n    _s67();\n    const [visible, setVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false), [Icon, setIcon] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null), [count, setCount] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0), $lastKeyboardAction = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"lastKeyboardAction\");\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        setCount((n)=>n + 1);\n    }, [\n        $lastKeyboardAction\n    ]);\n    const actionDataAttr = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const action = $lastKeyboardAction === null || $lastKeyboardAction === void 0 ? void 0 : $lastKeyboardAction.action;\n        return action && visible ? (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.camelToKebabCase)(action) : null;\n    }, [\n        visible,\n        $lastKeyboardAction\n    ]);\n    const className = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>\"vds-kb-action\".concat(!visible ? \" hidden\" : \"\").concat(props.className ? \" \".concat(props.className) : \"\"), [\n        visible\n    ]);\n    const $$text = (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.createComputed)(getText), $text = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)($$text);\n    (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.createEffect)(()=>{\n        const Icon2 = getIcon(Icons);\n        setIcon(()=>Icon2);\n    }, [\n        Icons\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        setVisible(!!$lastKeyboardAction);\n        const id = setTimeout(()=>setVisible(false), 500);\n        return ()=>{\n            setVisible(false);\n            window.clearTimeout(id);\n        };\n    }, [\n        $lastKeyboardAction\n    ]);\n    return Icon ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.Primitive.div, {\n        ...props,\n        className,\n        \"data-action\": actionDataAttr,\n        ref: forwardRef\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-kb-text-wrapper\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-kb-text\"\n    }, $text)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-kb-bezel\",\n        key: count\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-kb-icon\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icon, null)))) : null;\n}, \"VYSTRRJu0yutFLL3L8SzC8ILJoM=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal\n    ];\n}));\n_c66 = DefaultKeyboardDisplay;\nDefaultKeyboardDisplay.displayName = \"DefaultKeyboardDisplay\";\nfunction getText() {\n    var _$state_lastKeyboardAction;\n    _s68();\n    var _$state_audioGain;\n    const { $state } = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useContext)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.mediaContext), action = (_$state_lastKeyboardAction = $state.lastKeyboardAction()) === null || _$state_lastKeyboardAction === void 0 ? void 0 : _$state_lastKeyboardAction.action, audioGain = (_$state_audioGain = $state.audioGain()) !== null && _$state_audioGain !== void 0 ? _$state_audioGain : 1;\n    switch(action){\n        case \"toggleMuted\":\n            return $state.muted() ? \"0%\" : getVolumeText($state.volume(), audioGain);\n        case \"volumeUp\":\n        case \"volumeDown\":\n            return getVolumeText($state.volume(), audioGain);\n        default:\n            return \"\";\n    }\n}\n_s68(getText, \"7QxH4B2V2CK+14wYpVL0VCN2sDw=\");\nfunction getVolumeText(volume, gain) {\n    return \"\".concat(Math.round(volume * gain * 100), \"%\");\n}\nfunction getIcon(Icons) {\n    var _$state_lastKeyboardAction;\n    _s69();\n    const { $state } = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useContext)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.mediaContext), action = (_$state_lastKeyboardAction = $state.lastKeyboardAction()) === null || _$state_lastKeyboardAction === void 0 ? void 0 : _$state_lastKeyboardAction.action;\n    switch(action){\n        case \"togglePaused\":\n            return !$state.paused() ? Icons.Play : Icons.Pause;\n        case \"toggleMuted\":\n            return $state.muted() || $state.volume() === 0 ? Icons.Mute : $state.volume() >= 0.5 ? Icons.VolumeUp : Icons.VolumeDown;\n        case \"toggleFullscreen\":\n            return $state.fullscreen() ? Icons.EnterFullscreen : Icons.ExitFullscreen;\n        case \"togglePictureInPicture\":\n            return $state.pictureInPicture() ? Icons.EnterPiP : Icons.ExitPiP;\n        case \"toggleCaptions\":\n            return $state.hasCaptions() ? $state.textTrack() ? Icons.CaptionsOn : Icons.CaptionsOff : null;\n        case \"volumeUp\":\n            return Icons.VolumeUp;\n        case \"volumeDown\":\n            return Icons.VolumeDown;\n        case \"seekForward\":\n            return Icons.SeekForward;\n        case \"seekBackward\":\n            return Icons.SeekBackward;\n        default:\n            return null;\n    }\n}\n_s69(getIcon, \"pEGJdNrdRjByekcZWzkqFeRCfHQ=\");\nfunction DefaultTitle() {\n    _s70();\n    const $started = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"started\"), $title = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"title\"), $hasChapters = (0,_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useActiveTextTrack)(\"chapters\");\n    return $hasChapters && ($started || !$title) ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.ChapterTitle, {\n        className: \"vds-chapter-title\"\n    }) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Title, {\n        className: \"vds-chapter-title\"\n    });\n}\n_s70(DefaultTitle, \"IXkTwse714EDmejJXVsMKumr4AI=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState,\n        _vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.useActiveTextTrack\n    ];\n});\n_c67 = DefaultTitle;\nDefaultTitle.displayName = \"DefaultTitle\";\nconst MediaLayout = createDefaultMediaLayout({\n    type: \"video\",\n    smLayoutWhen (param) {\n        let { width, height } = param;\n        return width < 576 || height < 380;\n    },\n    renderLayout (props) {\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(VideoLayout, {\n            ...props\n        });\n    }\n});\n_c68 = MediaLayout;\nfunction DefaultVideoLayout(props) {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(MediaLayout, {\n        ...props\n    });\n}\n_c69 = DefaultVideoLayout;\nDefaultVideoLayout.displayName = \"DefaultVideoLayout\";\nfunction VideoLayout(param) {\n    let { streamType, isLoadLayout, isSmallLayout } = param;\n    _s71();\n    (0,_vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useLayoutName)(\"video\");\n    return isLoadLayout ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoLoadLayout, null) : streamType === \"unknown\" ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultBufferingIndicator, null) : isSmallLayout ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoSmallLayout, null) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoLargeLayout, null);\n}\n_s71(VideoLayout, \"sAmIICRMU9kLLTSSAwmRSlpqRgM=\", false, function() {\n    return [\n        _vidstack_Wdd6fBp8_js__WEBPACK_IMPORTED_MODULE_2__.useLayoutName\n    ];\n});\n_c70 = VideoLayout;\nVideoLayout.displayName = \"VideoLayout\";\nfunction DefaultVideoLargeLayout() {\n    _s72();\n    const { menuGroup } = useDefaultLayoutContext(), baseSlots = useDefaultVideoLayoutSlots(), slots = {\n        ...baseSlots,\n        ...baseSlots === null || baseSlots === void 0 ? void 0 : baseSlots.largeLayout\n    };\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAnnouncer, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoGestures, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoKeyboardDisplay, null), slot(slots, \"bufferingIndicator\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultBufferingIndicator, null)), slot(slots, \"captions\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultCaptions, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Root$4, {\n        className: \"vds-controls\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Group, {\n        className: \"vds-controls-group\"\n    }, slot(slots, \"topControlsGroupStart\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), slot(slots, \"topControlsGroupCenter\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), slot(slots, \"topControlsGroupEnd\", null), menuGroup === \"top\" && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoMenus, {\n        slots\n    })), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Group, {\n        className: \"vds-controls-group\"\n    }, slot(slots, \"centerControlsGroupStart\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), slot(slots, \"centerControlsGroupCenter\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), slot(slots, \"centerControlsGroupEnd\", null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Group, {\n        className: \"vds-controls-group\"\n    }, slot(slots, \"timeSlider\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTimeSlider, null))), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Group, {\n        className: \"vds-controls-group\"\n    }, slot(slots, \"playButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultPlayButton, {\n        tooltip: \"top start\"\n    })), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVolumePopup, {\n        orientation: \"horizontal\",\n        tooltip: \"top\",\n        slots\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTimeInfo, {\n        slots\n    }), slot(slots, \"chapterTitle\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTitle, null)), slot(slots, \"captionButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultCaptionButton, {\n        tooltip: \"top\"\n    })), menuGroup === \"bottom\" && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoMenus, {\n        slots\n    }), slot(slots, \"airPlayButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAirPlayButton, {\n        tooltip: \"top\"\n    })), slot(slots, \"googleCastButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultGoogleCastButton, {\n        tooltip: \"top\"\n    })), slot(slots, \"downloadButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultDownloadButton, null)), slot(slots, \"pipButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultPIPButton, {\n        tooltip: \"top\"\n    })), slot(slots, \"fullscreenButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFullscreenButton, {\n        tooltip: \"top end\"\n    })))));\n}\n_s72(DefaultVideoLargeLayout, \"J6/ieiI7gpeuzuSu9WT5Ccx+hb4=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultVideoLayoutSlots,\n        useDefaultLayoutContext,\n        useDefaultVideoLayoutSlots\n    ];\n});\n_c71 = DefaultVideoLargeLayout;\nDefaultVideoLargeLayout.displayName = \"DefaultVideoLargeLayout\";\nfunction DefaultVideoSmallLayout() {\n    _s73();\n    const baseSlots = useDefaultVideoLayoutSlots(), slots = {\n        ...baseSlots,\n        ...baseSlots === null || baseSlots === void 0 ? void 0 : baseSlots.smallLayout\n    };\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAnnouncer, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoGestures, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoKeyboardDisplay, null), slot(slots, \"bufferingIndicator\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultBufferingIndicator, null)), slot(slots, \"captions\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultCaptions, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Root$4, {\n        className: \"vds-controls\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Group, {\n        className: \"vds-controls-group\"\n    }, slot(slots, \"topControlsGroupStart\", null), slot(slots, \"airPlayButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultAirPlayButton, {\n        tooltip: \"top start\"\n    })), slot(slots, \"googleCastButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultGoogleCastButton, {\n        tooltip: \"top start\"\n    })), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), slot(slots, \"topControlsGroupCenter\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), slot(slots, \"captionButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultCaptionButton, {\n        tooltip: \"bottom\"\n    })), slot(slots, \"downloadButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultDownloadButton, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoMenus, {\n        slots\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVolumePopup, {\n        orientation: \"vertical\",\n        tooltip: \"bottom end\",\n        slots\n    }), slot(slots, \"topControlsGroupEnd\", null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Group, {\n        className: \"vds-controls-group\",\n        style: {\n            pointerEvents: \"none\"\n        }\n    }, slot(slots, \"centerControlsGroupStart\", null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), slot(slots, \"centerControlsGroupCenter\", null), slot(slots, \"playButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultPlayButton, {\n        tooltip: \"top\"\n    })), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), slot(slots, \"centerControlsGroupEnd\", null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultControlsSpacer, null), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Group, {\n        className: \"vds-controls-group\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTimeInfo, {\n        slots\n    }), slot(slots, \"chapterTitle\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTitle, null)), slot(slots, \"fullscreenButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultFullscreenButton, {\n        tooltip: \"top end\"\n    }))), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Group, {\n        className: \"vds-controls-group\"\n    }, slot(slots, \"timeSlider\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultTimeSlider, null)))), slot(slots, \"startDuration\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultVideoStartDuration, null)));\n}\n_s73(DefaultVideoSmallLayout, \"7TIIzOtvQufWk5l2imuGW1E10oE=\", false, function() {\n    return [\n        useDefaultVideoLayoutSlots,\n        useDefaultVideoLayoutSlots\n    ];\n});\n_c72 = DefaultVideoSmallLayout;\nDefaultVideoSmallLayout.displayName = \"DefaultVideoSmallLayout\";\nfunction DefaultVideoStartDuration() {\n    _s74();\n    const $duration = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState)(\"duration\");\n    if ($duration === 0) return null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-start-duration\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Time, {\n        className: \"vds-time\",\n        type: \"duration\"\n    }));\n}\n_s74(DefaultVideoStartDuration, \"tv6/tYKlCKPkL2tpbbg8Y3gqdqc=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_5__.useMediaState\n    ];\n});\n_c73 = DefaultVideoStartDuration;\nDefaultVideoStartDuration.displayName = \"DefaultVideoStartDuration\";\nfunction DefaultVideoGestures() {\n    _s75();\n    const { noGestures } = useDefaultLayoutContext();\n    if (noGestures) return null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-gestures\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Gesture, {\n        className: \"vds-gesture\",\n        event: \"pointerup\",\n        action: \"toggle:paused\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Gesture, {\n        className: \"vds-gesture\",\n        event: \"pointerup\",\n        action: \"toggle:controls\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Gesture, {\n        className: \"vds-gesture\",\n        event: \"dblpointerup\",\n        action: \"toggle:fullscreen\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Gesture, {\n        className: \"vds-gesture\",\n        event: \"dblpointerup\",\n        action: \"seek:-10\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Gesture, {\n        className: \"vds-gesture\",\n        event: \"dblpointerup\",\n        action: \"seek:10\"\n    }));\n}\n_s75(DefaultVideoGestures, \"4RiHDwlsKAXzJ1Dzr0F8KYJgkMA=\", false, function() {\n    return [\n        useDefaultLayoutContext\n    ];\n});\n_c74 = DefaultVideoGestures;\nDefaultVideoGestures.displayName = \"DefaultVideoGestures\";\nfunction DefaultBufferingIndicator() {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-buffering-indicator\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Root$5, {\n        className: \"vds-buffering-spinner\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.Track, {\n        className: \"vds-buffering-track\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_6__.TrackFill, {\n        className: \"vds-buffering-track-fill\"\n    })));\n}\n_c75 = DefaultBufferingIndicator;\nDefaultBufferingIndicator.displayName = \"DefaultBufferingIndicator\";\nfunction DefaultVideoMenus(param) {\n    let { slots } = param;\n    _s76();\n    const { isSmallLayout, noModal, menuGroup } = useDefaultLayoutContext(), side = menuGroup === \"top\" || isSmallLayout ? \"bottom\" : \"top\", tooltip = \"\".concat(side, \" end\"), placement = noModal ? \"\".concat(side, \" end\") : !isSmallLayout ? \"\".concat(side, \" end\") : null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, slot(slots, \"chaptersMenu\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultChaptersMenu, {\n        tooltip,\n        placement,\n        portalClass: \"vds-video-layout\"\n    })), slot(slots, \"settingsMenu\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultSettingsMenu, {\n        tooltip,\n        placement,\n        portalClass: \"vds-video-layout\",\n        slots\n    })));\n}\n_s76(DefaultVideoMenus, \"2CFtZaHJnt2nEeFYiZXHnUkrv2A=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultLayoutContext,\n        useDefaultLayoutContext,\n        useDefaultLayoutContext\n    ];\n});\n_c76 = DefaultVideoMenus;\nDefaultVideoMenus.displayName = \"DefaultVideoMenus\";\nfunction DefaultVideoLoadLayout() {\n    _s77();\n    const { isSmallLayout } = useDefaultLayoutContext(), baseSlots = useDefaultVideoLayoutSlots(), slots = {\n        ...baseSlots,\n        ...baseSlots === null || baseSlots === void 0 ? void 0 : baseSlots[isSmallLayout ? \"smallLayout\" : \"largeLayout\"]\n    };\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"vds-load-container\"\n    }, slot(slots, \"bufferingIndicator\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultBufferingIndicator, null)), slot(slots, \"loadButton\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultPlayButton, {\n        tooltip: \"top\"\n    })));\n}\n_s77(DefaultVideoLoadLayout, \"/qWdKMjOgg34qgR3IC6m4ay11WU=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        useDefaultVideoLayoutSlots,\n        useDefaultLayoutContext,\n        useDefaultVideoLayoutSlots\n    ];\n});\n_c77 = DefaultVideoLoadLayout;\nDefaultVideoLoadLayout.displayName = \"DefaultVideoLoadLayout\";\nfunction DefaultVideoKeyboardDisplay() {\n    _s78();\n    const { noKeyboardAnimations, icons, userPrefersKeyboardAnimations } = useDefaultLayoutContext(), $userPrefersKeyboardAnimations = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal)(userPrefersKeyboardAnimations), disabled = noKeyboardAnimations || !$userPrefersKeyboardAnimations;\n    if (disabled || !icons.KeyboardDisplay) return null;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultKeyboardDisplay, {\n        icons: icons.KeyboardDisplay\n    });\n}\n_s78(DefaultVideoKeyboardDisplay, \"uvjr4Da8RUYJROtpkvL9qxrIa+A=\", false, function() {\n    return [\n        useDefaultLayoutContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal,\n        useDefaultLayoutContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_4__.useSignal\n    ];\n});\n_c78 = DefaultVideoKeyboardDisplay;\nDefaultVideoKeyboardDisplay.displayName = \"DefaultVideoKeyboardDisplay\";\n\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40, _c41, _c42, _c43, _c44, _c45, _c46, _c47, _c48, _c49, _c50, _c51, _c52, _c53, _c54, _c55, _c56, _c57, _c58, _c59, _c60, _c61, _c62, _c63, _c64, _c65, _c66, _c67, _c68, _c69, _c70, _c71, _c72, _c73, _c74, _c75, _c76, _c77, _c78;\n$RefreshReg$(_c, \"DefaultAnnouncer\");\n$RefreshReg$(_c1, \"DefaultTooltip\");\n$RefreshReg$(_c2, \"DefaultPlayButton\");\n$RefreshReg$(_c3, \"DefaultMuteButton\");\n$RefreshReg$(_c4, \"DefaultCaptionButton\");\n$RefreshReg$(_c5, \"DefaultPIPButton\");\n$RefreshReg$(_c6, \"DefaultFullscreenButton\");\n$RefreshReg$(_c7, \"DefaultSeekButton\");\n$RefreshReg$(_c8, \"DefaultAirPlayButton\");\n$RefreshReg$(_c9, \"DefaultGoogleCastButton\");\n$RefreshReg$(_c10, \"DefaultLiveButton\");\n$RefreshReg$(_c11, \"DefaultDownloadButton\");\n$RefreshReg$(_c12, \"DefaultCaptions\");\n$RefreshReg$(_c13, \"DefaultControlsSpacer\");\n$RefreshReg$(_c14, \"DefaultChaptersMenu\");\n$RefreshReg$(_c15, \"FONT_SIGNALS$Object.keys(FONT_DEFAULTS).reduce\");\n$RefreshReg$(_c16, \"FONT_SIGNALS\");\n$RefreshReg$(_c17, \"DefaultMenuSection\");\n$RefreshReg$(_c18, \"DefaultMenuButton\");\n$RefreshReg$(_c19, \"DefaultMenuItem\");\n$RefreshReg$(_c20, \"DefaultMenuRadioGroup\");\n$RefreshReg$(_c21, \"DefaultMenuSliderItem\");\n$RefreshReg$(_c22, \"DefaultSliderParts\");\n$RefreshReg$(_c23, \"DefaultSliderSteps\");\n$RefreshReg$(_c24, \"DefaultFontMenu\");\n$RefreshReg$(_c25, \"DefaultFontFamilyMenu\");\n$RefreshReg$(_c26, \"DefaultFontSizeSlider\");\n$RefreshReg$(_c27, \"DefaultTextColorInput\");\n$RefreshReg$(_c28, \"DefaultTextOpacitySlider\");\n$RefreshReg$(_c29, \"DefaultTextShadowMenu\");\n$RefreshReg$(_c30, \"DefaultTextBgInput\");\n$RefreshReg$(_c31, \"DefaultTextBgOpacitySlider\");\n$RefreshReg$(_c32, \"DefaultDisplayBgInput\");\n$RefreshReg$(_c33, \"DefaultDisplayBgOpacitySlider\");\n$RefreshReg$(_c34, \"DefaultFontSetting\");\n$RefreshReg$(_c35, \"DefaultFontRadioGroup\");\n$RefreshReg$(_c36, \"DefaultResetMenuItem\");\n$RefreshReg$(_c37, \"DefaultMenuCheckbox\");\n$RefreshReg$(_c38, \"DefaultAccessibilityMenu\");\n$RefreshReg$(_c39, \"DefaultAnnouncementsMenuCheckbox\");\n$RefreshReg$(_c40, \"DefaultKeyboardAnimationsMenuCheckbox\");\n$RefreshReg$(_c41, \"DefaultAudioMenu\");\n$RefreshReg$(_c42, \"DefaultAudioBoostMenuSection\");\n$RefreshReg$(_c43, \"DefaultAudioGainSlider\");\n$RefreshReg$(_c44, \"DefaultAudioTracksMenu\");\n$RefreshReg$(_c45, \"DefaultCaptionMenu\");\n$RefreshReg$(_c46, \"DefaultPlaybackMenu\");\n$RefreshReg$(_c47, \"DefaultLoopMenuCheckbox\");\n$RefreshReg$(_c48, \"DefaultAutoQualityMenuCheckbox\");\n$RefreshReg$(_c49, \"DefaultQualityMenuSection\");\n$RefreshReg$(_c50, \"DefaultQualitySlider\");\n$RefreshReg$(_c51, \"DefaultSpeedMenuSection\");\n$RefreshReg$(_c52, \"DefaultSpeedSlider\");\n$RefreshReg$(_c53, \"DefaultSettingsMenu\");\n$RefreshReg$(_c54, \"DefaultVolumePopup\");\n$RefreshReg$(_c55, \"DefaultVolumeSlider\");\n$RefreshReg$(_c56, \"DefaultTimeSlider\");\n$RefreshReg$(_c57, \"DefaultTimeGroup\");\n$RefreshReg$(_c58, \"DefaultTimeInfo\");\n$RefreshReg$(_c59, \"DefaultTimeInvert\");\n$RefreshReg$(_c60, \"MediaLayout$1\");\n$RefreshReg$(_c61, \"DefaultAudioLayout\");\n$RefreshReg$(_c62, \"AudioLayout\");\n$RefreshReg$(_c63, \"DefaultAudioMenus\");\n$RefreshReg$(_c64, \"DefaultAudioTitle\");\n$RefreshReg$(_c65, \"AudioTitle\");\n$RefreshReg$(_c66, \"DefaultKeyboardDisplay\");\n$RefreshReg$(_c67, \"DefaultTitle\");\n$RefreshReg$(_c68, \"MediaLayout\");\n$RefreshReg$(_c69, \"DefaultVideoLayout\");\n$RefreshReg$(_c70, \"VideoLayout\");\n$RefreshReg$(_c71, \"DefaultVideoLargeLayout\");\n$RefreshReg$(_c72, \"DefaultVideoSmallLayout\");\n$RefreshReg$(_c73, \"DefaultVideoStartDuration\");\n$RefreshReg$(_c74, \"DefaultVideoGestures\");\n$RefreshReg$(_c75, \"DefaultBufferingIndicator\");\n$RefreshReg$(_c76, \"DefaultVideoMenus\");\n$RefreshReg$(_c77, \"DefaultVideoLoadLayout\");\n$RefreshReg$(_c78, \"DefaultVideoKeyboardDisplay\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-CSU4W5Sm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-D3MJ0cre.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-D3MJ0cre.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMediaRemote: function() { return /* binding */ useMediaRemote; },\n/* harmony export */   usePlaybackRateOptions: function() { return /* binding */ usePlaybackRateOptions; },\n/* harmony export */   useVideoQualityOptions: function() { return /* binding */ useVideoQualityOptions; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vidstack-Nm9OJy7x.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Nm9OJy7x.js\");\n/* harmony import */ var _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vidstack-BOkHoBGu.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BOkHoBGu.js\");\n/* harmony import */ var _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* __next_internal_client_entry_do_not_use__ useMediaRemote,usePlaybackRateOptions,useVideoQualityOptions auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\n\n\n\nfunction useMediaRemote(target) {\n    _s();\n    const media = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_1__.useMediaContext)(), remote = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    if (!remote.current) {\n        remote.current = new _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.MediaRemoteControl();\n    }\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const ref = target && \"current\" in target ? target.current : target, isPlayerRef = ref instanceof _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.MediaPlayerInstance, player = isPlayerRef ? ref : media === null || media === void 0 ? void 0 : media.player;\n        remote.current.setPlayer(player !== null && player !== void 0 ? player : null);\n        remote.current.setTarget(ref !== null && ref !== void 0 ? ref : null);\n    }, [\n        media,\n        target && \"current\" in target ? target.current : target\n    ]);\n    return remote.current;\n}\n_s(useMediaRemote, \"AMwd5aMh2pLLXqeTIBJ7zbNbfQg=\", false, function() {\n    return [\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_1__.useMediaContext\n    ];\n});\nfunction useVideoQualityOptions() {\n    let { auto = true, sort = \"descending\" } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s1();\n    const media = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_1__.useMediaContext)(), { qualities, quality, autoQuality, canSetQuality } = media.$state, $qualities = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal)(qualities);\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal)(quality);\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal)(autoQuality);\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal)(canSetQuality);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const sortedQualities = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.sortVideoQualities)($qualities, sort === \"descending\"), options = sortedQualities.map((_quality)=>{\n            return {\n                quality: _quality,\n                label: _quality.height + \"p\",\n                value: getQualityValue(_quality),\n                bitrateText: _quality.bitrate && _quality.bitrate > 0 ? \"\".concat((_quality.bitrate / 1e6).toFixed(2), \" Mbps\") : null,\n                get selected () {\n                    return _quality === quality();\n                },\n                get autoSelected () {\n                    return autoQuality();\n                },\n                select (trigger) {\n                    const index = qualities().indexOf(_quality);\n                    if (index >= 0) media.remote.changeQuality(index, trigger);\n                }\n            };\n        });\n        if (auto) {\n            options.unshift({\n                quality: null,\n                label: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.isString)(auto) ? auto : \"Auto\",\n                value: \"auto\",\n                bitrateText: null,\n                get selected () {\n                    return autoQuality();\n                },\n                get autoSelected () {\n                    return autoQuality();\n                },\n                select (trigger) {\n                    media.remote.requestAutoQuality(trigger);\n                }\n            });\n        }\n        Object.defineProperty(options, \"disabled\", {\n            get () {\n                return !canSetQuality() || $qualities.length <= 1;\n            }\n        });\n        Object.defineProperty(options, \"selectedQuality\", {\n            get () {\n                return quality();\n            }\n        });\n        Object.defineProperty(options, \"selectedValue\", {\n            get () {\n                const $quality = quality();\n                return !autoQuality() && $quality ? getQualityValue($quality) : \"auto\";\n            }\n        });\n        return options;\n    }, [\n        $qualities,\n        sort\n    ]);\n}\n_s1(useVideoQualityOptions, \"UxCS3TlLuE+EgfAhzxDJ7ZhsY2k=\", false, function() {\n    return [\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_1__.useMediaContext,\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_1__.useMediaContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal\n    ];\n});\nfunction getQualityValue(quality) {\n    return quality.height + \"_\" + quality.bitrate;\n}\nfunction usePlaybackRateOptions() {\n    let { rates = _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_PLAYBACK_RATES, normalLabel = \"Normal\" } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s2();\n    const media = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_1__.useMediaContext)(), { playbackRate, canSetPlaybackRate } = media.$state;\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal)(playbackRate);\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal)(canSetPlaybackRate);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const options = rates.map((opt)=>{\n            const label = typeof opt === \"number\" ? opt === 1 && normalLabel ? normalLabel : opt + \"x\" : opt.label, rate = typeof opt === \"number\" ? opt : opt.rate;\n            return {\n                label,\n                value: rate.toString(),\n                rate,\n                get selected () {\n                    return playbackRate() === rate;\n                },\n                select (trigger) {\n                    media.remote.changePlaybackRate(rate, trigger);\n                }\n            };\n        });\n        Object.defineProperty(options, \"disabled\", {\n            get () {\n                return !canSetPlaybackRate() || !options.length;\n            }\n        });\n        Object.defineProperty(options, \"selectedValue\", {\n            get () {\n                return playbackRate().toString();\n            }\n        });\n        return options;\n    }, [\n        rates\n    ]);\n}\n_s2(usePlaybackRateOptions, \"DbgXejgFLTnOOI2u9scYJ+dercA=\", false, function() {\n    return [\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_1__.useMediaContext,\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_1__.useMediaContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.useSignal\n    ];\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-D3MJ0cre.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-DcX2JzmB.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-DcX2JzmB.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Captions: function() { return /* binding */ Captions; },\n/* harmony export */   ChapterTitle: function() { return /* binding */ ChapterTitle; },\n/* harmony export */   Content: function() { return /* binding */ Content; },\n/* harmony export */   GoogleCastButton: function() { return /* binding */ GoogleCastButton; },\n/* harmony export */   Group: function() { return /* binding */ Group; },\n/* harmony export */   MediaAnnouncer: function() { return /* binding */ MediaAnnouncer; },\n/* harmony export */   Root: function() { return /* binding */ Root$4; },\n/* harmony export */   Root$1: function() { return /* binding */ Root$2; },\n/* harmony export */   Root$2: function() { return /* binding */ Root$3; },\n/* harmony export */   Root$3: function() { return /* binding */ Root$1; },\n/* harmony export */   Root$4: function() { return /* binding */ Root$5; },\n/* harmony export */   Root$5: function() { return /* binding */ Root; },\n/* harmony export */   Title: function() { return /* binding */ Title; },\n/* harmony export */   Track: function() { return /* binding */ Track; },\n/* harmony export */   TrackFill: function() { return /* binding */ TrackFill; },\n/* harmony export */   Trigger: function() { return /* binding */ Trigger; },\n/* harmony export */   audioGainSlider: function() { return /* binding */ audioGainSlider; },\n/* harmony export */   controls: function() { return /* binding */ controls; },\n/* harmony export */   createComputed: function() { return /* binding */ createComputed; },\n/* harmony export */   createEffect: function() { return /* binding */ createEffect; },\n/* harmony export */   createSignal: function() { return /* binding */ createSignal; },\n/* harmony export */   qualitySlider: function() { return /* binding */ qualitySlider; },\n/* harmony export */   speedSlider: function() { return /* binding */ speedSlider; },\n/* harmony export */   spinner: function() { return /* binding */ spinner; },\n/* harmony export */   tooltip: function() { return /* binding */ tooltip; },\n/* harmony export */   useActiveTextCues: function() { return /* binding */ useActiveTextCues; },\n/* harmony export */   useActiveTextTrack: function() { return /* binding */ useActiveTextTrack; },\n/* harmony export */   useChapterOptions: function() { return /* binding */ useChapterOptions; },\n/* harmony export */   useChapterTitle: function() { return /* binding */ useChapterTitle; },\n/* harmony export */   useScoped: function() { return /* binding */ useScoped; },\n/* harmony export */   useTextCues: function() { return /* binding */ useTextCues; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* harmony import */ var _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vidstack-Nm9OJy7x.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Nm9OJy7x.js\");\n/* harmony import */ var _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vidstack-BOkHoBGu.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BOkHoBGu.js\");\n/* __next_internal_client_entry_do_not_use__ Captions,ChapterTitle,Content,GoogleCastButton,Group,MediaAnnouncer,Root,Root$1,Root$2,Root$3,Root$4,Root$5,Title,Track,TrackFill,Trigger,audioGainSlider,controls,createComputed,createEffect,createSignal,qualitySlider,speedSlider,spinner,tooltip,useActiveTextCues,useActiveTextTrack,useChapterOptions,useChapterTitle,useScoped,useTextCues auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$();\n\n\n\n\nconst MediaAnnouncerBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.MediaAnnouncerInstance, {\n    events: [\n        \"onChange\"\n    ]\n});\n_c = MediaAnnouncerBridge;\nconst MediaAnnouncer = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c1 = (param, forwardRef)=>{\n    let { style, children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(MediaAnnouncerBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.div, {\n            ...props2,\n            style: {\n                display: \"contents\",\n                ...style\n            },\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c2 = MediaAnnouncer;\nMediaAnnouncer.displayName = \"MediaAnnouncer\";\nconst ControlsBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.ControlsInstance);\n_c3 = ControlsBridge;\nconst Root$5 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c4 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ControlsBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.div, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c5 = Root$5;\nRoot$5.displayName = \"Controls\";\nconst ControlsGroupBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.ControlsGroupInstance);\n_c6 = ControlsGroupBridge;\nconst Group = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c7 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ControlsGroupBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.div, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c8 = Group;\nGroup.displayName = \"ControlsGroup\";\nvar controls = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Group: Group,\n    Root: Root$5\n});\nconst TooltipBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.TooltipInstance);\n_c9 = TooltipBridge;\nfunction Root$4(param) {\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TooltipBridge, {\n        ...props\n    }, children);\n}\n_c10 = Root$4;\nRoot$4.displayName = \"Tooltip\";\nconst TriggerBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.TooltipTriggerInstance);\n_c11 = TriggerBridge;\nconst Trigger = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c12 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TriggerBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c13 = Trigger;\nTrigger.displayName = \"TooltipTrigger\";\nconst ContentBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.TooltipContentInstance);\n_c14 = ContentBridge;\nconst Content = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c15 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ContentBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.div, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c16 = Content;\nContent.displayName = \"TooltipContent\";\nvar tooltip = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Content: Content,\n    Root: Root$4,\n    Trigger: Trigger\n});\nconst GoogleCastButtonBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.GoogleCastButtonInstance, {\n    domEventsRegex: /^onMedia/\n});\n_c17 = GoogleCastButtonBridge;\nconst GoogleCastButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c18 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GoogleCastButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.button, {\n            ...props2,\n            ref: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c19 = GoogleCastButton;\nGoogleCastButton.displayName = \"GoogleCastButton\";\nconst QualitySliderBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.QualitySliderInstance, {\n    events: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.sliderCallbacks,\n    domEventsRegex: /^onMedia/\n});\n_c20 = QualitySliderBridge;\nconst Root$3 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c21 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(QualitySliderBridge, {\n        ...props,\n        ref: forwardRef\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.div, {\n            ...props2\n        }, children));\n});\n_c22 = Root$3;\nRoot$3.displayName = \"QualitySlider\";\nvar qualitySlider = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Preview: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Preview,\n    Root: Root$3,\n    Steps: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Steps,\n    Thumb: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Thumb,\n    Track: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Track,\n    TrackFill: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.TrackFill,\n    Value: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Value\n});\nconst AudioGainSliderBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.AudioGainSliderInstance, {\n    events: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.sliderCallbacks,\n    domEventsRegex: /^onMedia/\n});\n_c23 = AudioGainSliderBridge;\nconst Root$2 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c24 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AudioGainSliderBridge, {\n        ...props,\n        ref: forwardRef\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.div, {\n            ...props2\n        }, children));\n});\n_c25 = Root$2;\nRoot$2.displayName = \"AudioGainSlider\";\nvar audioGainSlider = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Preview: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Preview,\n    Root: Root$2,\n    Steps: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Steps,\n    Thumb: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Thumb,\n    Track: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Track,\n    TrackFill: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.TrackFill,\n    Value: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Value\n});\nconst SpeedSliderBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.SpeedSliderInstance, {\n    events: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.sliderCallbacks,\n    domEventsRegex: /^onMedia/\n});\n_c26 = SpeedSliderBridge;\nconst Root$1 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c27 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SpeedSliderBridge, {\n        ...props,\n        ref: forwardRef\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.div, {\n            ...props2\n        }, children));\n});\n_c28 = Root$1;\nRoot$1.displayName = \"SpeedSlider\";\nvar speedSlider = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Preview: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Preview,\n    Root: Root$1,\n    Steps: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Steps,\n    Thumb: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Thumb,\n    Track: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Track,\n    TrackFill: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.TrackFill,\n    Value: _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.Value\n});\nconst Title = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c29 = _s((param, forwardRef)=>{\n    let { children, ...props } = param;\n    _s();\n    const $title = (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.useMediaState)(\"title\");\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.span, {\n        ...props,\n        ref: forwardRef\n    }, $title, children);\n}, \"/5yTlmpYkBttLXSOaO7ZGrGk3CA=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.useMediaState\n    ];\n})), \"/5yTlmpYkBttLXSOaO7ZGrGk3CA=\", false, function() {\n    return [\n        _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.useMediaState\n    ];\n});\n_c30 = Title;\nTitle.displayName = \"Title\";\nfunction useActiveTextCues(track) {\n    _s1();\n    const [activeCues, setActiveCues] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!track) {\n            setActiveCues([]);\n            return;\n        }\n        function onCuesChange() {\n            setActiveCues(track.activeCues);\n        }\n        onCuesChange();\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"cue-change\", onCuesChange);\n    }, [\n        track\n    ]);\n    return activeCues;\n}\n_s1(useActiveTextCues, \"aNcZrdcq1/m31NJ1JMXVgbXgwrU=\");\nfunction useActiveTextTrack(kind) {\n    _s2();\n    const media = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext)(), [track, setTrack] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        return (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.watchActiveTextTrack)(media.textTracks, kind, setTrack);\n    }, [\n        kind\n    ]);\n    return track;\n}\n_s2(useActiveTextTrack, \"1N0FDEmYJIAR+VsNrtrGrcQBq9c=\", false, function() {\n    return [\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext\n    ];\n});\nfunction useChapterTitle() {\n    var _$cues_;\n    _s3();\n    const $track = useActiveTextTrack(\"chapters\"), $cues = useActiveTextCues($track);\n    return ((_$cues_ = $cues[0]) === null || _$cues_ === void 0 ? void 0 : _$cues_.text) || \"\";\n}\n_s3(useChapterTitle, \"c0fEC7PFJd6suz9/8/VpesSAvFA=\", false, function() {\n    return [\n        useActiveTextTrack,\n        useActiveTextCues\n    ];\n});\nconst ChapterTitle = /*#__PURE__*/ _s4(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c31 = _s4((param, forwardRef)=>{\n    let { defaultText = \"\", children, ...props } = param;\n    _s4();\n    const $chapterTitle = useChapterTitle();\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.span, {\n        ...props,\n        ref: forwardRef\n    }, $chapterTitle || defaultText, children);\n}, \"EecUlGBpiNtiEVWRNPd+lJKc2hU=\", false, function() {\n    return [\n        useChapterTitle\n    ];\n})), \"EecUlGBpiNtiEVWRNPd+lJKc2hU=\", false, function() {\n    return [\n        useChapterTitle\n    ];\n});\n_c32 = ChapterTitle;\nChapterTitle.displayName = \"ChapterTitle\";\nconst CaptionsBridge = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.CaptionsInstance);\n_c33 = CaptionsBridge;\nconst Captions = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c34 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CaptionsBridge, {\n        ...props,\n        ref: forwardRef\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.Primitive.div, {\n            ...props2\n        }, children));\n});\n_c35 = Captions;\nCaptions.displayName = \"Captions\";\nconst Root = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c36 = (param, forwardRef)=>{\n    let { size = 96, children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        width: size,\n        height: size,\n        fill: \"none\",\n        viewBox: \"0 0 120 120\",\n        \"aria-hidden\": \"true\",\n        \"data-part\": \"root\",\n        ...props,\n        ref: forwardRef\n    }, children);\n});\n_c37 = Root;\nconst Track = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c38 = (param, ref)=>{\n    let { width = 8, children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"circle\", {\n        cx: \"60\",\n        cy: \"60\",\n        r: \"54\",\n        stroke: \"currentColor\",\n        strokeWidth: width,\n        \"data-part\": \"track\",\n        ...props,\n        ref\n    }, children);\n});\n_c39 = Track;\nconst TrackFill = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c40 = (param, ref)=>{\n    let { width = 8, fillPercent = 50, children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"circle\", {\n        cx: \"60\",\n        cy: \"60\",\n        r: \"54\",\n        stroke: \"currentColor\",\n        pathLength: \"100\",\n        strokeWidth: width,\n        strokeDasharray: 100,\n        strokeDashoffset: 100 - fillPercent,\n        \"data-part\": \"track-fill\",\n        ...props,\n        ref\n    }, children);\n});\n_c41 = TrackFill;\nvar spinner = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Root: Root,\n    Track: Track,\n    TrackFill: TrackFill\n});\nfunction createSignal(initialValue) {\n    let deps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n    _s5();\n    const scope = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope)();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.scoped)(()=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(initialValue), scope), [\n        scope,\n        ...deps\n    ]);\n}\n_s5(createSignal, \"C2hUPm8MfGsyNyd8w4BbPKPAfkg=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope\n    ];\n});\nfunction createComputed(compute) {\n    let deps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n    _s6();\n    const scope = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope)();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.scoped)(()=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.computed)(compute), scope), [\n        scope,\n        ...deps\n    ]);\n}\n_s6(createComputed, \"C2hUPm8MfGsyNyd8w4BbPKPAfkg=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope\n    ];\n});\nfunction createEffect(compute) {\n    let deps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n    _s7();\n    const scope = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope)();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.scoped)(()=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(compute), scope), [\n        scope,\n        ...deps\n    ]);\n}\n_s7(createEffect, \"DhNRUcHH+92Ky4tZQGW5tDA+ORA=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope\n    ];\n});\nfunction useScoped(compute) {\n    _s8();\n    const scope = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope)();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.scoped)(compute, scope), [\n        scope\n    ]);\n}\n_s8(useScoped, \"C2hUPm8MfGsyNyd8w4BbPKPAfkg=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope\n    ];\n});\nfunction useTextCues(track) {\n    _s9();\n    const [cues, setCues] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!track) return;\n        function onCuesChange(track2) {\n            setCues([\n                ...track2.cues\n            ]);\n        }\n        const disposal = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createDisposalBin)();\n        disposal.add((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"add-cue\", ()=>onCuesChange(track)), (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"remove-cue\", ()=>onCuesChange(track)));\n        onCuesChange(track);\n        return ()=>{\n            disposal.empty();\n            setCues([]);\n        };\n    }, [\n        track\n    ]);\n    return cues;\n}\n_s9(useTextCues, \"pDlUmnMr/VmtW7Zv+msn34HEvoM=\");\nfunction useChapterOptions() {\n    _s10();\n    const media = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext)(), track = useActiveTextTrack(\"chapters\"), cues = useTextCues(track), $startTime = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(media.$state.clipStartTime), $endTime = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(media.$state.clipEndTime) || Infinity;\n    useActiveTextCues(track);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const options = track ? cues.filter((cue)=>cue.startTime <= $endTime && cue.endTime >= $startTime).map((cue, i)=>{\n            let currentRef = null, stopProgressEffect;\n            return {\n                cue,\n                label: cue.text,\n                value: i.toString(),\n                startTimeText: (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.formatTime)(Math.max(0, cue.startTime - $startTime)),\n                durationText: (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.formatSpokenTime)(Math.min($endTime, cue.endTime) - Math.max($startTime, cue.startTime)),\n                get selected () {\n                    return cue === track.activeCues[0];\n                },\n                setProgressVar (ref) {\n                    if (!ref || cue !== track.activeCues[0]) {\n                        stopProgressEffect === null || stopProgressEffect === void 0 ? void 0 : stopProgressEffect();\n                        stopProgressEffect = void 0;\n                        ref === null || ref === void 0 ? void 0 : ref.style.setProperty(\"--progress\", \"0%\");\n                        currentRef = null;\n                        return;\n                    }\n                    if (currentRef === ref) return;\n                    currentRef = ref;\n                    stopProgressEffect === null || stopProgressEffect === void 0 ? void 0 : stopProgressEffect();\n                    stopProgressEffect = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n                        const { realCurrentTime } = media.$state, time = realCurrentTime(), cueStartTime = Math.max($startTime, cue.startTime), duration = Math.min($endTime, cue.endTime) - cueStartTime, progress = Math.max(0, time - cueStartTime) / duration * 100;\n                        ref.style.setProperty(\"--progress\", progress.toFixed(3) + \"%\");\n                    });\n                },\n                select (trigger) {\n                    media.remote.seek(cue.startTime - $startTime, trigger);\n                }\n            };\n        }) : [];\n        Object.defineProperty(options, \"selectedValue\", {\n            get () {\n                const index = options.findIndex((option)=>option.selected);\n                return (index >= 0 ? index : 0).toString();\n            }\n        });\n        return options;\n    }, [\n        cues,\n        $startTime,\n        $endTime\n    ]);\n}\n_s10(useChapterOptions, \"y7iTvc4d2ZgL/7Q1onoQd2oegrk=\", false, function() {\n    return [\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n        useActiveTextTrack,\n        useTextCues,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_3__.useMediaContext,\n        useActiveTextTrack,\n        useTextCues,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        useActiveTextCues\n    ];\n});\n\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40, _c41;\n$RefreshReg$(_c, \"MediaAnnouncerBridge\");\n$RefreshReg$(_c1, \"MediaAnnouncer$React.forwardRef\");\n$RefreshReg$(_c2, \"MediaAnnouncer\");\n$RefreshReg$(_c3, \"ControlsBridge\");\n$RefreshReg$(_c4, \"Root$5$React.forwardRef\");\n$RefreshReg$(_c5, \"Root$5\");\n$RefreshReg$(_c6, \"ControlsGroupBridge\");\n$RefreshReg$(_c7, \"Group$React.forwardRef\");\n$RefreshReg$(_c8, \"Group\");\n$RefreshReg$(_c9, \"TooltipBridge\");\n$RefreshReg$(_c10, \"Root$4\");\n$RefreshReg$(_c11, \"TriggerBridge\");\n$RefreshReg$(_c12, \"Trigger$React.forwardRef\");\n$RefreshReg$(_c13, \"Trigger\");\n$RefreshReg$(_c14, \"ContentBridge\");\n$RefreshReg$(_c15, \"Content$React.forwardRef\");\n$RefreshReg$(_c16, \"Content\");\n$RefreshReg$(_c17, \"GoogleCastButtonBridge\");\n$RefreshReg$(_c18, \"GoogleCastButton$React.forwardRef\");\n$RefreshReg$(_c19, \"GoogleCastButton\");\n$RefreshReg$(_c20, \"QualitySliderBridge\");\n$RefreshReg$(_c21, \"Root$3$React.forwardRef\");\n$RefreshReg$(_c22, \"Root$3\");\n$RefreshReg$(_c23, \"AudioGainSliderBridge\");\n$RefreshReg$(_c24, \"Root$2$React.forwardRef\");\n$RefreshReg$(_c25, \"Root$2\");\n$RefreshReg$(_c26, \"SpeedSliderBridge\");\n$RefreshReg$(_c27, \"Root$1$React.forwardRef\");\n$RefreshReg$(_c28, \"Root$1\");\n$RefreshReg$(_c29, \"Title$React.forwardRef\");\n$RefreshReg$(_c30, \"Title\");\n$RefreshReg$(_c31, \"ChapterTitle$React.forwardRef\");\n$RefreshReg$(_c32, \"ChapterTitle\");\n$RefreshReg$(_c33, \"CaptionsBridge\");\n$RefreshReg$(_c34, \"Captions$React.forwardRef\");\n$RefreshReg$(_c35, \"Captions\");\n$RefreshReg$(_c36, \"Root$React.forwardRef\");\n$RefreshReg$(_c37, \"Root\");\n$RefreshReg$(_c38, \"Track$React.forwardRef\");\n$RefreshReg$(_c39, \"Track\");\n$RefreshReg$(_c40, \"TrackFill$React.forwardRef\");\n$RefreshReg$(_c41, \"TrackFill\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L2NodW5rcy92aWRzdGFjay1EY1gySnptQi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFK0I7QUFDd0k7QUFDa007QUFDck47QUFFcEosTUFBTXFDLHVCQUF1QnBDLDBFQUFvQkEsQ0FBQ1cseUVBQXNCQSxFQUFFO0lBQ3hFMEIsUUFBUTtRQUFDO0tBQVc7QUFDdEI7S0FGTUQ7QUFHTixNQUFNRSwrQkFBaUJ2Qyw2Q0FBZ0IsT0FDckMsUUFBZ0N3QztRQUEvQixFQUFFQyxLQUFLLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxPQUFPO0lBQzVCLE9BQU8sYUFBYSxpQkFBRzNDLGdEQUFtQixDQUFDcUMsc0JBQXNCO1FBQUUsR0FBR00sS0FBSztJQUFDLEdBQUcsQ0FBQ0UsU0FBVyxhQUFhLGlCQUFHN0MsZ0RBQW1CLENBQzVIVyw0REFBU0EsQ0FBQ21DLEdBQUcsRUFDYjtZQUNFLEdBQUdELE1BQU07WUFDVEosT0FBTztnQkFBRU0sU0FBUztnQkFBWSxHQUFHTixLQUFLO1lBQUM7WUFDdkNPLEtBQUs5QyxpRUFBV0EsQ0FBQzJDLE9BQU9HLEdBQUcsRUFBRVI7UUFDL0IsR0FDQUU7QUFFSjs7QUFFRkgsZUFBZVUsV0FBVyxHQUFHO0FBRTdCLE1BQU1DLGlCQUFpQmpELDBFQUFvQkEsQ0FBQ1ksbUVBQWdCQTtNQUF0RHFDO0FBQ04sTUFBTUMsdUJBQVNuRCw2Q0FBZ0IsT0FBQyxRQUF5QndDO1FBQXhCLEVBQUVFLFFBQVEsRUFBRSxHQUFHQyxPQUFPO0lBQ3JELE9BQU8sYUFBYSxpQkFBRzNDLGdEQUFtQixDQUFDa0QsZ0JBQWdCO1FBQUUsR0FBR1AsS0FBSztJQUFDLEdBQUcsQ0FBQ0UsU0FBVyxhQUFhLGlCQUFHN0MsZ0RBQW1CLENBQ3RIVyw0REFBU0EsQ0FBQ21DLEdBQUcsRUFDYjtZQUNFLEdBQUdELE1BQU07WUFDVEcsS0FBSzlDLGlFQUFXQSxDQUFDMkMsT0FBT0csR0FBRyxFQUFFUjtRQUMvQixHQUNBRTtBQUVKOztBQUNBUyxPQUFPRixXQUFXLEdBQUc7QUFDckIsTUFBTUcsc0JBQXNCbkQsMEVBQW9CQSxDQUFDYSx3RUFBcUJBO01BQWhFc0M7QUFDTixNQUFNQyxzQkFBUXJELDZDQUFnQixPQUFDLFFBQXlCd0M7UUFBeEIsRUFBRUUsUUFBUSxFQUFFLEdBQUdDLE9BQU87SUFDcEQsT0FBTyxhQUFhLGlCQUFHM0MsZ0RBQW1CLENBQUNvRCxxQkFBcUI7UUFBRSxHQUFHVCxLQUFLO0lBQUMsR0FBRyxDQUFDRSxTQUFXLGFBQWEsaUJBQUc3QyxnREFBbUIsQ0FDM0hXLDREQUFTQSxDQUFDbUMsR0FBRyxFQUNiO1lBQ0UsR0FBR0QsTUFBTTtZQUNURyxLQUFLOUMsaUVBQVdBLENBQUMyQyxPQUFPRyxHQUFHLEVBQUVSO1FBQy9CLEdBQ0FFO0FBRUo7O0FBQ0FXLE1BQU1KLFdBQVcsR0FBRztBQUVwQixJQUFJSyxXQUFXLFdBQVcsR0FBRUMsT0FBT0MsTUFBTSxDQUFDO0lBQ3hDQyxXQUFXO0lBQ1hKLE9BQU9BO0lBQ1BLLE1BQU1QO0FBQ1I7QUFFQSxNQUFNUSxnQkFBZ0IxRCwwRUFBb0JBLENBQUNjLGtFQUFlQTtNQUFwRDRDO0FBQ04sU0FBU0MsT0FBTyxLQUFzQjtRQUF0QixFQUFFbEIsUUFBUSxFQUFFLEdBQUdDLE9BQU8sR0FBdEI7SUFDZCxPQUFPLGFBQWEsaUJBQUczQyxnREFBbUIsQ0FBQzJELGVBQWU7UUFBRSxHQUFHaEIsS0FBSztJQUFDLEdBQUdEO0FBQzFFO09BRlNrQjtBQUdUQSxPQUFPWCxXQUFXLEdBQUc7QUFDckIsTUFBTVksZ0JBQWdCNUQsMEVBQW9CQSxDQUFDZSx5RUFBc0JBO09BQTNENkM7QUFDTixNQUFNQyx3QkFBVTlELDZDQUFnQixRQUM5QixRQUF5QndDO1FBQXhCLEVBQUVFLFFBQVEsRUFBRSxHQUFHQyxPQUFPO0lBQ3JCLE9BQU8sYUFBYSxpQkFBRzNDLGdEQUFtQixDQUFDNkQsZUFBZTtRQUFFLEdBQUdsQixLQUFLO0lBQUMsR0FBRyxDQUFDRSxTQUFXLGFBQWEsaUJBQUc3QyxnREFBbUIsQ0FDckhXLDREQUFTQSxDQUFDb0QsTUFBTSxFQUNoQjtZQUNFLEdBQUdsQixNQUFNO1lBQ1RHLEtBQUs5QyxpRUFBV0EsQ0FBQzJDLE9BQU9HLEdBQUcsRUFBRVI7UUFDL0IsR0FDQUU7QUFFSjs7QUFFRm9CLFFBQVFiLFdBQVcsR0FBRztBQUN0QixNQUFNZSxnQkFBZ0IvRCwwRUFBb0JBLENBQUNnQix5RUFBc0JBO09BQTNEK0M7QUFDTixNQUFNQyx3QkFBVWpFLDZDQUFnQixRQUM5QixRQUF5QndDO1FBQXhCLEVBQUVFLFFBQVEsRUFBRSxHQUFHQyxPQUFPO0lBQ3JCLE9BQU8sYUFBYSxpQkFBRzNDLGdEQUFtQixDQUFDZ0UsZUFBZTtRQUFFLEdBQUdyQixLQUFLO0lBQUMsR0FBRyxDQUFDRSxTQUFXLGFBQWEsaUJBQUc3QyxnREFBbUIsQ0FDckhXLDREQUFTQSxDQUFDbUMsR0FBRyxFQUNiO1lBQ0UsR0FBR0QsTUFBTTtZQUNURyxLQUFLOUMsaUVBQVdBLENBQUMyQyxPQUFPRyxHQUFHLEVBQUVSO1FBQy9CLEdBQ0FFO0FBRUo7O0FBRUZ1QixRQUFRaEIsV0FBVyxHQUFHO0FBRXRCLElBQUlpQixVQUFVLFdBQVcsR0FBRVgsT0FBT0MsTUFBTSxDQUFDO0lBQ3ZDQyxXQUFXO0lBQ1hRLFNBQVNBO0lBQ1RQLE1BQU1FO0lBQ05FLFNBQVNBO0FBQ1g7QUFFQSxNQUFNSyx5QkFBeUJsRSwwRUFBb0JBLENBQUNpQiwyRUFBd0JBLEVBQUU7SUFDNUVrRCxnQkFBZ0I7QUFDbEI7T0FGTUQ7QUFHTixNQUFNRSxpQ0FBbUJyRSw2Q0FBZ0IsUUFDdkMsUUFBeUJ3QztRQUF4QixFQUFFRSxRQUFRLEVBQUUsR0FBR0MsT0FBTztJQUNyQixPQUFPLGFBQWEsaUJBQUczQyxnREFBbUIsQ0FBQ21FLHdCQUF3QjtRQUFFLEdBQUd4QixLQUFLO0lBQUMsR0FBRyxDQUFDRSxTQUFXLGFBQWEsaUJBQUc3QyxnREFBbUIsQ0FDOUhXLDREQUFTQSxDQUFDb0QsTUFBTSxFQUNoQjtZQUNFLEdBQUdsQixNQUFNO1lBQ1RHLEtBQUs5QyxpRUFBV0EsQ0FBQzJDLE9BQU9HLEdBQUcsRUFBRVI7UUFDL0IsR0FDQUU7QUFFSjs7QUFFRjJCLGlCQUFpQnBCLFdBQVcsR0FBRztBQUUvQixNQUFNcUIsc0JBQXNCckUsMEVBQW9CQSxDQUFDa0Isd0VBQXFCQSxFQUFFO0lBQ3RFbUIsUUFBUVgsa0VBQWVBO0lBQ3ZCeUMsZ0JBQWdCO0FBQ2xCO09BSE1FO0FBSU4sTUFBTUMsdUJBQVN2RSw2Q0FBZ0IsUUFDN0IsUUFBeUJ3QztRQUF4QixFQUFFRSxRQUFRLEVBQUUsR0FBR0MsT0FBTztJQUNyQixPQUFPLGFBQWEsaUJBQUczQyxnREFBbUIsQ0FBQ3NFLHFCQUFxQjtRQUFFLEdBQUczQixLQUFLO1FBQUVLLEtBQUtSO0lBQVcsR0FBRyxDQUFDSyxTQUFXLGFBQWEsaUJBQUc3QyxnREFBbUIsQ0FBQ1csNERBQVNBLENBQUNtQyxHQUFHLEVBQUU7WUFBRSxHQUFHRCxNQUFNO1FBQUMsR0FBR0g7QUFDL0s7O0FBRUY2QixPQUFPdEIsV0FBVyxHQUFHO0FBRXJCLElBQUl1QixnQkFBZ0IsV0FBVyxHQUFFakIsT0FBT0MsTUFBTSxDQUFDO0lBQzdDQyxXQUFXO0lBQ1g3QixTQUFTQSwwREFBT0E7SUFDaEI4QixNQUFNYTtJQUNOMUMsT0FBT0Esd0RBQUtBO0lBQ1pDLE9BQU9BLHdEQUFLQTtJQUNaQyxPQUFPQyx3REFBT0E7SUFDZEMsV0FBV0MsNERBQVdBO0lBQ3RCQyxPQUFPQSx3REFBS0E7QUFDZDtBQUVBLE1BQU1zQyx3QkFBd0J4RSwwRUFBb0JBLENBQUNtQiwwRUFBdUJBLEVBQUU7SUFDMUVrQixRQUFRWCxrRUFBZUE7SUFDdkJ5QyxnQkFBZ0I7QUFDbEI7T0FITUs7QUFJTixNQUFNQyx1QkFBUzFFLDZDQUFnQixRQUM3QixRQUF5QndDO1FBQXhCLEVBQUVFLFFBQVEsRUFBRSxHQUFHQyxPQUFPO0lBQ3JCLE9BQU8sYUFBYSxpQkFBRzNDLGdEQUFtQixDQUFDeUUsdUJBQXVCO1FBQUUsR0FBRzlCLEtBQUs7UUFBRUssS0FBS1I7SUFBVyxHQUFHLENBQUNLLFNBQVcsYUFBYSxpQkFBRzdDLGdEQUFtQixDQUFDVyw0REFBU0EsQ0FBQ21DLEdBQUcsRUFBRTtZQUFFLEdBQUdELE1BQU07UUFBQyxHQUFHSDtBQUNqTDs7QUFFRmdDLE9BQU96QixXQUFXLEdBQUc7QUFFckIsSUFBSTBCLGtCQUFrQixXQUFXLEdBQUVwQixPQUFPQyxNQUFNLENBQUM7SUFDL0NDLFdBQVc7SUFDWDdCLFNBQVNBLDBEQUFPQTtJQUNoQjhCLE1BQU1nQjtJQUNON0MsT0FBT0Esd0RBQUtBO0lBQ1pDLE9BQU9BLHdEQUFLQTtJQUNaQyxPQUFPQyx3REFBT0E7SUFDZEMsV0FBV0MsNERBQVdBO0lBQ3RCQyxPQUFPQSx3REFBS0E7QUFDZDtBQUVBLE1BQU15QyxvQkFBb0IzRSwwRUFBb0JBLENBQUNvQixzRUFBbUJBLEVBQUU7SUFDbEVpQixRQUFRWCxrRUFBZUE7SUFDdkJ5QyxnQkFBZ0I7QUFDbEI7T0FITVE7QUFJTixNQUFNQyx1QkFBUzdFLDZDQUFnQixRQUM3QixRQUF5QndDO1FBQXhCLEVBQUVFLFFBQVEsRUFBRSxHQUFHQyxPQUFPO0lBQ3JCLE9BQU8sYUFBYSxpQkFBRzNDLGdEQUFtQixDQUFDNEUsbUJBQW1CO1FBQUUsR0FBR2pDLEtBQUs7UUFBRUssS0FBS1I7SUFBVyxHQUFHLENBQUNLLFNBQVcsYUFBYSxpQkFBRzdDLGdEQUFtQixDQUFDVyw0REFBU0EsQ0FBQ21DLEdBQUcsRUFBRTtZQUFFLEdBQUdELE1BQU07UUFBQyxHQUFHSDtBQUM3Szs7QUFFRm1DLE9BQU81QixXQUFXLEdBQUc7QUFFckIsSUFBSTZCLGNBQWMsV0FBVyxHQUFFdkIsT0FBT0MsTUFBTSxDQUFDO0lBQzNDQyxXQUFXO0lBQ1g3QixTQUFTQSwwREFBT0E7SUFDaEI4QixNQUFNbUI7SUFDTmhELE9BQU9BLHdEQUFLQTtJQUNaQyxPQUFPQSx3REFBS0E7SUFDWkMsT0FBT0Msd0RBQU9BO0lBQ2RDLFdBQVdDLDREQUFXQTtJQUN0QkMsT0FBT0Esd0RBQUtBO0FBQ2Q7QUFFQSxNQUFNNEMsc0JBQVEvRSxHQUFBQSw2Q0FBZ0IsV0FBQyxRQUF5QndDO1FBQXhCLEVBQUVFLFFBQVEsRUFBRSxHQUFHQyxPQUFPOztJQUNwRCxNQUFNcUMsU0FBUzFELG9FQUFhQSxDQUFDO0lBQzdCLE9BQU8sYUFBYSxpQkFBR3RCLGdEQUFtQixDQUFDVyw0REFBU0EsQ0FBQ3NFLElBQUksRUFBRTtRQUFFLEdBQUd0QyxLQUFLO1FBQUVLLEtBQUtSO0lBQVcsR0FBR3dDLFFBQVF0QztBQUNwRzs7UUFGaUJwQixnRUFBYUE7Ozs7UUFBYkEsZ0VBQWFBOzs7O0FBRzlCeUQsTUFBTTlCLFdBQVcsR0FBRztBQUVwQixTQUFTaUMsa0JBQWtCQyxLQUFLOztJQUM5QixNQUFNLENBQUNDLFlBQVlDLGNBQWMsR0FBR3JGLDJDQUFjLENBQUMsRUFBRTtJQUNyREEsNENBQWUsQ0FBQztRQUNkLElBQUksQ0FBQ21GLE9BQU87WUFDVkUsY0FBYyxFQUFFO1lBQ2hCO1FBQ0Y7UUFDQSxTQUFTRztZQUNQSCxjQUFjRixNQUFNQyxVQUFVO1FBQ2hDO1FBQ0FJO1FBQ0EsT0FBT3JGLGlFQUFXQSxDQUFDZ0YsT0FBTyxjQUFjSztJQUMxQyxHQUFHO1FBQUNMO0tBQU07SUFDVixPQUFPQztBQUNUO0lBZFNGO0FBZ0JULFNBQVNPLG1CQUFtQkMsSUFBSTs7SUFDOUIsTUFBTUMsUUFBUXZELHNFQUFlQSxJQUFJLENBQUMrQyxPQUFPUyxTQUFTLEdBQUc1RiwyQ0FBYyxDQUFDO0lBQ3BFQSw0Q0FBZSxDQUFDO1FBQ2QsT0FBT3VCLDJFQUFvQkEsQ0FBQ29FLE1BQU1FLFVBQVUsRUFBRUgsTUFBTUU7SUFDdEQsR0FBRztRQUFDRjtLQUFLO0lBQ1QsT0FBT1A7QUFDVDtJQU5TTTs7UUFDT3JELGtFQUFlQTs7O0FBTy9CLFNBQVMwRDtRQUVBQzs7SUFEUCxNQUFNQyxTQUFTUCxtQkFBbUIsYUFBYU0sUUFBUWIsa0JBQWtCYztJQUN6RSxPQUFPRCxFQUFBQSxVQUFBQSxLQUFLLENBQUMsRUFBRSxjQUFSQSw4QkFBQUEsUUFBVUUsSUFBSSxLQUFJO0FBQzNCO0lBSFNIOztRQUNRTDtRQUF3Q1A7OztBQUl6RCxNQUFNZ0IsNkJBQWVsRyxJQUFBQSw2Q0FBZ0IsWUFDbkMsUUFBMkN3QztRQUExQyxFQUFFMkQsY0FBYyxFQUFFLEVBQUV6RCxRQUFRLEVBQUUsR0FBR0MsT0FBTzs7SUFDdkMsTUFBTXlELGdCQUFnQk47SUFDdEIsT0FBTyxhQUFhLGlCQUFHOUYsZ0RBQW1CLENBQUNXLDREQUFTQSxDQUFDc0UsSUFBSSxFQUFFO1FBQUUsR0FBR3RDLEtBQUs7UUFBRUssS0FBS1I7SUFBVyxHQUFHNEQsaUJBQWlCRCxhQUFhekQ7QUFDMUg7O1FBRndCb0Q7Ozs7UUFBQUE7Ozs7QUFJMUJJLGFBQWFqRCxXQUFXLEdBQUc7QUFFM0IsTUFBTW9ELGlCQUFpQnBHLDBFQUFvQkEsQ0FBQ3VCLG1FQUFnQkE7T0FBdEQ2RTtBQUNOLE1BQU1DLHlCQUFXdEcsNkNBQWdCLFFBQy9CLFFBQXlCd0M7UUFBeEIsRUFBRUUsUUFBUSxFQUFFLEdBQUdDLE9BQU87SUFDckIsT0FBTyxhQUFhLGlCQUFHM0MsZ0RBQW1CLENBQUNxRyxnQkFBZ0I7UUFBRSxHQUFHMUQsS0FBSztRQUFFSyxLQUFLUjtJQUFXLEdBQUcsQ0FBQ0ssU0FBVyxhQUFhLGlCQUFHN0MsZ0RBQW1CLENBQUNXLDREQUFTQSxDQUFDbUMsR0FBRyxFQUFFO1lBQUUsR0FBR0QsTUFBTTtRQUFDLEdBQUdIO0FBQzFLOztBQUVGNEQsU0FBU3JELFdBQVcsR0FBRztBQUV2QixNQUFNUyxxQkFBTzFELDZDQUFnQixRQUMzQixRQUFvQ3dDO1FBQW5DLEVBQUUrRCxPQUFPLEVBQUUsRUFBRTdELFFBQVEsRUFBRSxHQUFHQyxPQUFPO0lBQ2hDLE9BQU8sYUFBYSxpQkFBRzNDLGdEQUFtQixDQUN4QyxPQUNBO1FBQ0V3RyxPQUFPRDtRQUNQRSxRQUFRRjtRQUNSRyxNQUFNO1FBQ05DLFNBQVM7UUFDVCxlQUFlO1FBQ2YsYUFBYTtRQUNiLEdBQUdoRSxLQUFLO1FBQ1JLLEtBQUtSO0lBQ1AsR0FDQUU7QUFFSjs7QUFFRixNQUFNWCxzQkFBUS9CLDZDQUFnQixRQUM1QixRQUFvQ2dEO1FBQW5DLEVBQUV3RCxRQUFRLENBQUMsRUFBRTlELFFBQVEsRUFBRSxHQUFHQyxPQUFPO1dBQVUsYUFBYSxpQkFBRzNDLGdEQUFtQixDQUM3RSxVQUNBO1FBQ0U0RyxJQUFJO1FBQ0pDLElBQUk7UUFDSkMsR0FBRztRQUNIQyxRQUFRO1FBQ1JDLGFBQWFSO1FBQ2IsYUFBYTtRQUNiLEdBQUc3RCxLQUFLO1FBQ1JLO0lBQ0YsR0FDQU47OztBQUdKLE1BQU1ULDBCQUFZakMsNkNBQWdCLFFBQ2hDLFFBQXNEZ0Q7UUFBckQsRUFBRXdELFFBQVEsQ0FBQyxFQUFFUyxjQUFjLEVBQUUsRUFBRXZFLFFBQVEsRUFBRSxHQUFHQyxPQUFPO1dBQVUsYUFBYSxpQkFBRzNDLGdEQUFtQixDQUMvRixVQUNBO1FBQ0U0RyxJQUFJO1FBQ0pDLElBQUk7UUFDSkMsR0FBRztRQUNIQyxRQUFRO1FBQ1JHLFlBQVk7UUFDWkYsYUFBYVI7UUFDYlcsaUJBQWlCO1FBQ2pCQyxrQkFBa0IsTUFBTUg7UUFDeEIsYUFBYTtRQUNiLEdBQUd0RSxLQUFLO1FBQ1JLO0lBQ0YsR0FDQU47OztBQUlKLElBQUkyRSxVQUFVLFdBQVcsR0FBRTlELE9BQU9DLE1BQU0sQ0FBQztJQUN2Q0MsV0FBVztJQUNYQyxNQUFNQTtJQUNOM0IsT0FBT0E7SUFDUEUsV0FBV0E7QUFDYjtBQUVBLFNBQVNxRixhQUFhQyxZQUFZO1FBQUVDLE9BQUFBLGlFQUFPLEVBQUU7O0lBQzNDLE1BQU1DLFFBQVFySCxtRUFBYUE7SUFDM0IsT0FBT0osMENBQWEsQ0FBQyxJQUFNSyw0REFBTUEsQ0FBQyxJQUFNQyw0REFBTUEsQ0FBQ2lILGVBQWVFLFFBQVE7UUFBQ0E7V0FBVUQ7S0FBSztBQUN4RjtJQUhTRjs7UUFDT2xILCtEQUFhQTs7O0FBRzdCLFNBQVN1SCxlQUFlQyxPQUFPO1FBQUVKLE9BQUFBLGlFQUFPLEVBQUU7O0lBQ3hDLE1BQU1DLFFBQVFySCxtRUFBYUE7SUFDM0IsT0FBT0osMENBQWEsQ0FBQyxJQUFNSyw0REFBTUEsQ0FBQyxJQUFNRSw4REFBUUEsQ0FBQ3FILFVBQVVILFFBQVE7UUFBQ0E7V0FBVUQ7S0FBSztBQUNyRjtJQUhTRzs7UUFDT3ZILCtEQUFhQTs7O0FBRzdCLFNBQVN5SCxhQUFhRCxPQUFPO1FBQUVKLE9BQUFBLGlFQUFPLEVBQUU7O0lBQ3RDLE1BQU1DLFFBQVFySCxtRUFBYUE7SUFDM0JKLDRDQUFlLENBQUMsSUFBTUssNERBQU1BLENBQUMsSUFBTUcsNERBQU1BLENBQUNvSCxVQUFVSCxRQUFRO1FBQUNBO1dBQVVEO0tBQUs7QUFDOUU7SUFIU0s7O1FBQ096SCwrREFBYUE7OztBQUc3QixTQUFTMEgsVUFBVUYsT0FBTzs7SUFDeEIsTUFBTUgsUUFBUXJILG1FQUFhQTtJQUMzQixPQUFPSiwwQ0FBYSxDQUFDLElBQU1LLDREQUFNQSxDQUFDdUgsU0FBU0gsUUFBUTtRQUFDQTtLQUFNO0FBQzVEO0lBSFNLOztRQUNPMUgsK0RBQWFBOzs7QUFJN0IsU0FBUzJILFlBQVk1QyxLQUFLOztJQUN4QixNQUFNLENBQUM2QyxNQUFNQyxRQUFRLEdBQUdqSSwyQ0FBYyxDQUFDLEVBQUU7SUFDekNBLDRDQUFlLENBQUM7UUFDZCxJQUFJLENBQUNtRixPQUFPO1FBQ1osU0FBU0ssYUFBYTBDLE1BQU07WUFDMUJELFFBQVE7bUJBQUlDLE9BQU9GLElBQUk7YUFBQztRQUMxQjtRQUNBLE1BQU1HLFdBQVcxSCx1RUFBaUJBO1FBQ2xDMEgsU0FBU0MsR0FBRyxDQUNWakksaUVBQVdBLENBQUNnRixPQUFPLFdBQVcsSUFBTUssYUFBYUwsU0FDakRoRixpRUFBV0EsQ0FBQ2dGLE9BQU8sY0FBYyxJQUFNSyxhQUFhTDtRQUV0REssYUFBYUw7UUFDYixPQUFPO1lBQ0xnRCxTQUFTRSxLQUFLO1lBQ2RKLFFBQVEsRUFBRTtRQUNaO0lBQ0YsR0FBRztRQUFDOUM7S0FBTTtJQUNWLE9BQU82QztBQUNUO0lBbkJTRDtBQXFCVCxTQUFTTzs7SUFDUCxNQUFNM0MsUUFBUXZELHNFQUFlQSxJQUFJK0MsUUFBUU0sbUJBQW1CLGFBQWF1QyxPQUFPRCxZQUFZNUMsUUFBUW9ELGFBQWE3SCwrREFBU0EsQ0FBQ2lGLE1BQU02QyxNQUFNLENBQUNDLGFBQWEsR0FBR0MsV0FBV2hJLCtEQUFTQSxDQUFDaUYsTUFBTTZDLE1BQU0sQ0FBQ0csV0FBVyxLQUFLQztJQUMxTTFELGtCQUFrQkM7SUFDbEIsT0FBT25GLDBDQUFhLENBQUM7UUFDbkIsTUFBTTZJLFVBQVUxRCxRQUFRNkMsS0FBS2MsTUFBTSxDQUFDLENBQUNDLE1BQVFBLElBQUlDLFNBQVMsSUFBSU4sWUFBWUssSUFBSUUsT0FBTyxJQUFJVixZQUFZVyxHQUFHLENBQUMsQ0FBQ0gsS0FBS0k7WUFDN0csSUFBSUMsYUFBYSxNQUFNQztZQUN2QixPQUFPO2dCQUNMTjtnQkFDQU8sT0FBT1AsSUFBSTlDLElBQUk7Z0JBQ2ZzRCxPQUFPSixFQUFFSyxRQUFRO2dCQUNqQkMsZUFBZWhJLGlFQUFVQSxDQUFDaUksS0FBS0MsR0FBRyxDQUFDLEdBQUdaLElBQUlDLFNBQVMsR0FBR1Q7Z0JBQ3REcUIsY0FBY2xJLHVFQUFnQkEsQ0FDNUJnSSxLQUFLRyxHQUFHLENBQUNuQixVQUFVSyxJQUFJRSxPQUFPLElBQUlTLEtBQUtDLEdBQUcsQ0FBQ3BCLFlBQVlRLElBQUlDLFNBQVM7Z0JBRXRFLElBQUljLFlBQVc7b0JBQ2IsT0FBT2YsUUFBUTVELE1BQU1DLFVBQVUsQ0FBQyxFQUFFO2dCQUNwQztnQkFDQTJFLGdCQUFlL0csR0FBRztvQkFDaEIsSUFBSSxDQUFDQSxPQUFPK0YsUUFBUTVELE1BQU1DLFVBQVUsQ0FBQyxFQUFFLEVBQUU7d0JBQ3ZDaUUsK0JBQUFBLHlDQUFBQTt3QkFDQUEscUJBQXFCLEtBQUs7d0JBQzFCckcsZ0JBQUFBLDBCQUFBQSxJQUFLUCxLQUFLLENBQUN1SCxXQUFXLENBQUMsY0FBYzt3QkFDckNaLGFBQWE7d0JBQ2I7b0JBQ0Y7b0JBQ0EsSUFBSUEsZUFBZXBHLEtBQUs7b0JBQ3hCb0csYUFBYXBHO29CQUNicUcsK0JBQUFBLHlDQUFBQTtvQkFDQUEscUJBQXFCN0ksNERBQU1BLENBQUM7d0JBQzFCLE1BQU0sRUFBRXlKLGVBQWUsRUFBRSxHQUFHdEUsTUFBTTZDLE1BQU0sRUFBRTBCLE9BQU9ELG1CQUFtQkUsZUFBZVQsS0FBS0MsR0FBRyxDQUFDcEIsWUFBWVEsSUFBSUMsU0FBUyxHQUFHb0IsV0FBV1YsS0FBS0csR0FBRyxDQUFDbkIsVUFBVUssSUFBSUUsT0FBTyxJQUFJa0IsY0FBY0UsV0FBV1gsS0FBS0MsR0FBRyxDQUFDLEdBQUdPLE9BQU9DLGdCQUFnQkMsV0FBVzt3QkFDNU9wSCxJQUFJUCxLQUFLLENBQUN1SCxXQUFXLENBQUMsY0FBY0ssU0FBU0MsT0FBTyxDQUFDLEtBQUs7b0JBQzVEO2dCQUNGO2dCQUNBQyxRQUFPQyxPQUFPO29CQUNaN0UsTUFBTThFLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDM0IsSUFBSUMsU0FBUyxHQUFHVCxZQUFZaUM7Z0JBQ2hEO1lBQ0Y7UUFDRixLQUFLLEVBQUU7UUFDUGpILE9BQU9vSCxjQUFjLENBQUM5QixTQUFTLGlCQUFpQjtZQUM5QytCO2dCQUNFLE1BQU1DLFFBQVFoQyxRQUFRaUMsU0FBUyxDQUFDLENBQUNDLFNBQVdBLE9BQU9qQixRQUFRO2dCQUMzRCxPQUFPLENBQUNlLFNBQVMsSUFBSUEsUUFBUSxHQUFHckIsUUFBUTtZQUMxQztRQUNGO1FBQ0EsT0FBT1g7SUFDVCxHQUFHO1FBQUNiO1FBQU1PO1FBQVlHO0tBQVM7QUFDakM7S0E5Q1NKOztRQUNPbEcsa0VBQWVBO1FBQVlxRDtRQUF1Q3NDO1FBQWlDckgsMkRBQVNBO1FBQTVHMEIsa0VBQWVBO1FBQVlxRDtRQUF1Q3NDO1FBQWlDckgsMkRBQVNBO1FBQXlDQSwyREFBU0E7UUFDNUt3RTs7O0FBOENvYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHZpZHN0YWNrL3JlYWN0L2Rldi9jaHVua3Mvdmlkc3RhY2stRGNYMkp6bUIuanM/MzI1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVSZWFjdENvbXBvbmVudCwgY29tcG9zZVJlZnMsIGxpc3RlbkV2ZW50LCB1c2VSZWFjdFNjb3BlLCBzY29wZWQsIHNpZ25hbCwgY29tcHV0ZWQsIGVmZmVjdCwgY3JlYXRlRGlzcG9zYWxCaW4sIHVzZVNpZ25hbCB9IGZyb20gJy4vdmlkc3RhY2stM2hzMy04aV8uanMnO1xuaW1wb3J0IHsgUHJpbWl0aXZlLCBNZWRpYUFubm91bmNlckluc3RhbmNlLCBDb250cm9sc0luc3RhbmNlLCBDb250cm9sc0dyb3VwSW5zdGFuY2UsIFRvb2x0aXBJbnN0YW5jZSwgVG9vbHRpcFRyaWdnZXJJbnN0YW5jZSwgVG9vbHRpcENvbnRlbnRJbnN0YW5jZSwgR29vZ2xlQ2FzdEJ1dHRvbkluc3RhbmNlLCBRdWFsaXR5U2xpZGVySW5zdGFuY2UsIEF1ZGlvR2FpblNsaWRlckluc3RhbmNlLCBTcGVlZFNsaWRlckluc3RhbmNlLCB1c2VNZWRpYVN0YXRlLCB3YXRjaEFjdGl2ZVRleHRUcmFjaywgQ2FwdGlvbnNJbnN0YW5jZSwgZm9ybWF0VGltZSwgZm9ybWF0U3Bva2VuVGltZSB9IGZyb20gJy4vdmlkc3RhY2stTm05T0p5N3guanMnO1xuaW1wb3J0IHsgc2xpZGVyQ2FsbGJhY2tzLCBQcmV2aWV3LCBTdGVwcywgVGh1bWIsIFRyYWNrIGFzIFRyYWNrJDEsIFRyYWNrRmlsbCBhcyBUcmFja0ZpbGwkMSwgVmFsdWUsIHVzZU1lZGlhQ29udGV4dCB9IGZyb20gJy4vdmlkc3RhY2stQk9rSG9CR3UuanMnO1xuXG5jb25zdCBNZWRpYUFubm91bmNlckJyaWRnZSA9IGNyZWF0ZVJlYWN0Q29tcG9uZW50KE1lZGlhQW5ub3VuY2VySW5zdGFuY2UsIHtcbiAgZXZlbnRzOiBbXCJvbkNoYW5nZVwiXVxufSk7XG5jb25zdCBNZWRpYUFubm91bmNlciA9IFJlYWN0LmZvcndhcmRSZWYoXG4gICh7IHN0eWxlLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgZm9yd2FyZFJlZikgPT4ge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChNZWRpYUFubm91bmNlckJyaWRnZSwgeyAuLi5wcm9wcyB9LCAocHJvcHMyKSA9PiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFByaW1pdGl2ZS5kaXYsXG4gICAgICB7XG4gICAgICAgIC4uLnByb3BzMixcbiAgICAgICAgc3R5bGU6IHsgZGlzcGxheTogXCJjb250ZW50c1wiLCAuLi5zdHlsZSB9LFxuICAgICAgICByZWY6IGNvbXBvc2VSZWZzKHByb3BzMi5yZWYsIGZvcndhcmRSZWYpXG4gICAgICB9LFxuICAgICAgY2hpbGRyZW5cbiAgICApKTtcbiAgfVxuKTtcbk1lZGlhQW5ub3VuY2VyLmRpc3BsYXlOYW1lID0gXCJNZWRpYUFubm91bmNlclwiO1xuXG5jb25zdCBDb250cm9sc0JyaWRnZSA9IGNyZWF0ZVJlYWN0Q29tcG9uZW50KENvbnRyb2xzSW5zdGFuY2UpO1xuY29uc3QgUm9vdCQ1ID0gUmVhY3QuZm9yd2FyZFJlZigoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgZm9yd2FyZFJlZikgPT4ge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udHJvbHNCcmlkZ2UsIHsgLi4ucHJvcHMgfSwgKHByb3BzMikgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgUHJpbWl0aXZlLmRpdixcbiAgICB7XG4gICAgICAuLi5wcm9wczIsXG4gICAgICByZWY6IGNvbXBvc2VSZWZzKHByb3BzMi5yZWYsIGZvcndhcmRSZWYpXG4gICAgfSxcbiAgICBjaGlsZHJlblxuICApKTtcbn0pO1xuUm9vdCQ1LmRpc3BsYXlOYW1lID0gXCJDb250cm9sc1wiO1xuY29uc3QgQ29udHJvbHNHcm91cEJyaWRnZSA9IGNyZWF0ZVJlYWN0Q29tcG9uZW50KENvbnRyb2xzR3JvdXBJbnN0YW5jZSk7XG5jb25zdCBHcm91cCA9IFJlYWN0LmZvcndhcmRSZWYoKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0sIGZvcndhcmRSZWYpID0+IHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRyb2xzR3JvdXBCcmlkZ2UsIHsgLi4ucHJvcHMgfSwgKHByb3BzMikgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgUHJpbWl0aXZlLmRpdixcbiAgICB7XG4gICAgICAuLi5wcm9wczIsXG4gICAgICByZWY6IGNvbXBvc2VSZWZzKHByb3BzMi5yZWYsIGZvcndhcmRSZWYpXG4gICAgfSxcbiAgICBjaGlsZHJlblxuICApKTtcbn0pO1xuR3JvdXAuZGlzcGxheU5hbWUgPSBcIkNvbnRyb2xzR3JvdXBcIjtcblxudmFyIGNvbnRyb2xzID0gLyojX19QVVJFX18qL09iamVjdC5mcmVlemUoe1xuICBfX3Byb3RvX186IG51bGwsXG4gIEdyb3VwOiBHcm91cCxcbiAgUm9vdDogUm9vdCQ1XG59KTtcblxuY29uc3QgVG9vbHRpcEJyaWRnZSA9IGNyZWF0ZVJlYWN0Q29tcG9uZW50KFRvb2x0aXBJbnN0YW5jZSk7XG5mdW5jdGlvbiBSb290JDQoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSkge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVG9vbHRpcEJyaWRnZSwgeyAuLi5wcm9wcyB9LCBjaGlsZHJlbik7XG59XG5Sb290JDQuZGlzcGxheU5hbWUgPSBcIlRvb2x0aXBcIjtcbmNvbnN0IFRyaWdnZXJCcmlkZ2UgPSBjcmVhdGVSZWFjdENvbXBvbmVudChUb29sdGlwVHJpZ2dlckluc3RhbmNlKTtcbmNvbnN0IFRyaWdnZXIgPSBSZWFjdC5mb3J3YXJkUmVmKFxuICAoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgZm9yd2FyZFJlZikgPT4ge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChUcmlnZ2VyQnJpZGdlLCB7IC4uLnByb3BzIH0sIChwcm9wczIpID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgUHJpbWl0aXZlLmJ1dHRvbixcbiAgICAgIHtcbiAgICAgICAgLi4ucHJvcHMyLFxuICAgICAgICByZWY6IGNvbXBvc2VSZWZzKHByb3BzMi5yZWYsIGZvcndhcmRSZWYpXG4gICAgICB9LFxuICAgICAgY2hpbGRyZW5cbiAgICApKTtcbiAgfVxuKTtcblRyaWdnZXIuZGlzcGxheU5hbWUgPSBcIlRvb2x0aXBUcmlnZ2VyXCI7XG5jb25zdCBDb250ZW50QnJpZGdlID0gY3JlYXRlUmVhY3RDb21wb25lbnQoVG9vbHRpcENvbnRlbnRJbnN0YW5jZSk7XG5jb25zdCBDb250ZW50ID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0sIGZvcndhcmRSZWYpID0+IHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGVudEJyaWRnZSwgeyAuLi5wcm9wcyB9LCAocHJvcHMyKSA9PiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFByaW1pdGl2ZS5kaXYsXG4gICAgICB7XG4gICAgICAgIC4uLnByb3BzMixcbiAgICAgICAgcmVmOiBjb21wb3NlUmVmcyhwcm9wczIucmVmLCBmb3J3YXJkUmVmKVxuICAgICAgfSxcbiAgICAgIGNoaWxkcmVuXG4gICAgKSk7XG4gIH1cbik7XG5Db250ZW50LmRpc3BsYXlOYW1lID0gXCJUb29sdGlwQ29udGVudFwiO1xuXG52YXIgdG9vbHRpcCA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBDb250ZW50OiBDb250ZW50LFxuICBSb290OiBSb290JDQsXG4gIFRyaWdnZXI6IFRyaWdnZXJcbn0pO1xuXG5jb25zdCBHb29nbGVDYXN0QnV0dG9uQnJpZGdlID0gY3JlYXRlUmVhY3RDb21wb25lbnQoR29vZ2xlQ2FzdEJ1dHRvbkluc3RhbmNlLCB7XG4gIGRvbUV2ZW50c1JlZ2V4OiAvXm9uTWVkaWEvXG59KTtcbmNvbnN0IEdvb2dsZUNhc3RCdXR0b24gPSBSZWFjdC5mb3J3YXJkUmVmKFxuICAoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgZm9yd2FyZFJlZikgPT4ge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChHb29nbGVDYXN0QnV0dG9uQnJpZGdlLCB7IC4uLnByb3BzIH0sIChwcm9wczIpID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgUHJpbWl0aXZlLmJ1dHRvbixcbiAgICAgIHtcbiAgICAgICAgLi4ucHJvcHMyLFxuICAgICAgICByZWY6IGNvbXBvc2VSZWZzKHByb3BzMi5yZWYsIGZvcndhcmRSZWYpXG4gICAgICB9LFxuICAgICAgY2hpbGRyZW5cbiAgICApKTtcbiAgfVxuKTtcbkdvb2dsZUNhc3RCdXR0b24uZGlzcGxheU5hbWUgPSBcIkdvb2dsZUNhc3RCdXR0b25cIjtcblxuY29uc3QgUXVhbGl0eVNsaWRlckJyaWRnZSA9IGNyZWF0ZVJlYWN0Q29tcG9uZW50KFF1YWxpdHlTbGlkZXJJbnN0YW5jZSwge1xuICBldmVudHM6IHNsaWRlckNhbGxiYWNrcyxcbiAgZG9tRXZlbnRzUmVnZXg6IC9eb25NZWRpYS9cbn0pO1xuY29uc3QgUm9vdCQzID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0sIGZvcndhcmRSZWYpID0+IHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUXVhbGl0eVNsaWRlckJyaWRnZSwgeyAuLi5wcm9wcywgcmVmOiBmb3J3YXJkUmVmIH0sIChwcm9wczIpID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFByaW1pdGl2ZS5kaXYsIHsgLi4ucHJvcHMyIH0sIGNoaWxkcmVuKSk7XG4gIH1cbik7XG5Sb290JDMuZGlzcGxheU5hbWUgPSBcIlF1YWxpdHlTbGlkZXJcIjtcblxudmFyIHF1YWxpdHlTbGlkZXIgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIF9fcHJvdG9fXzogbnVsbCxcbiAgUHJldmlldzogUHJldmlldyxcbiAgUm9vdDogUm9vdCQzLFxuICBTdGVwczogU3RlcHMsXG4gIFRodW1iOiBUaHVtYixcbiAgVHJhY2s6IFRyYWNrJDEsXG4gIFRyYWNrRmlsbDogVHJhY2tGaWxsJDEsXG4gIFZhbHVlOiBWYWx1ZVxufSk7XG5cbmNvbnN0IEF1ZGlvR2FpblNsaWRlckJyaWRnZSA9IGNyZWF0ZVJlYWN0Q29tcG9uZW50KEF1ZGlvR2FpblNsaWRlckluc3RhbmNlLCB7XG4gIGV2ZW50czogc2xpZGVyQ2FsbGJhY2tzLFxuICBkb21FdmVudHNSZWdleDogL15vbk1lZGlhL1xufSk7XG5jb25zdCBSb290JDIgPSBSZWFjdC5mb3J3YXJkUmVmKFxuICAoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgZm9yd2FyZFJlZikgPT4ge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChBdWRpb0dhaW5TbGlkZXJCcmlkZ2UsIHsgLi4ucHJvcHMsIHJlZjogZm9yd2FyZFJlZiB9LCAocHJvcHMyKSA9PiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChQcmltaXRpdmUuZGl2LCB7IC4uLnByb3BzMiB9LCBjaGlsZHJlbikpO1xuICB9XG4pO1xuUm9vdCQyLmRpc3BsYXlOYW1lID0gXCJBdWRpb0dhaW5TbGlkZXJcIjtcblxudmFyIGF1ZGlvR2FpblNsaWRlciA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBQcmV2aWV3OiBQcmV2aWV3LFxuICBSb290OiBSb290JDIsXG4gIFN0ZXBzOiBTdGVwcyxcbiAgVGh1bWI6IFRodW1iLFxuICBUcmFjazogVHJhY2skMSxcbiAgVHJhY2tGaWxsOiBUcmFja0ZpbGwkMSxcbiAgVmFsdWU6IFZhbHVlXG59KTtcblxuY29uc3QgU3BlZWRTbGlkZXJCcmlkZ2UgPSBjcmVhdGVSZWFjdENvbXBvbmVudChTcGVlZFNsaWRlckluc3RhbmNlLCB7XG4gIGV2ZW50czogc2xpZGVyQ2FsbGJhY2tzLFxuICBkb21FdmVudHNSZWdleDogL15vbk1lZGlhL1xufSk7XG5jb25zdCBSb290JDEgPSBSZWFjdC5mb3J3YXJkUmVmKFxuICAoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgZm9yd2FyZFJlZikgPT4ge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChTcGVlZFNsaWRlckJyaWRnZSwgeyAuLi5wcm9wcywgcmVmOiBmb3J3YXJkUmVmIH0sIChwcm9wczIpID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFByaW1pdGl2ZS5kaXYsIHsgLi4ucHJvcHMyIH0sIGNoaWxkcmVuKSk7XG4gIH1cbik7XG5Sb290JDEuZGlzcGxheU5hbWUgPSBcIlNwZWVkU2xpZGVyXCI7XG5cbnZhciBzcGVlZFNsaWRlciA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBQcmV2aWV3OiBQcmV2aWV3LFxuICBSb290OiBSb290JDEsXG4gIFN0ZXBzOiBTdGVwcyxcbiAgVGh1bWI6IFRodW1iLFxuICBUcmFjazogVHJhY2skMSxcbiAgVHJhY2tGaWxsOiBUcmFja0ZpbGwkMSxcbiAgVmFsdWU6IFZhbHVlXG59KTtcblxuY29uc3QgVGl0bGUgPSBSZWFjdC5mb3J3YXJkUmVmKCh7IGNoaWxkcmVuLCAuLi5wcm9wcyB9LCBmb3J3YXJkUmVmKSA9PiB7XG4gIGNvbnN0ICR0aXRsZSA9IHVzZU1lZGlhU3RhdGUoXCJ0aXRsZVwiKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFByaW1pdGl2ZS5zcGFuLCB7IC4uLnByb3BzLCByZWY6IGZvcndhcmRSZWYgfSwgJHRpdGxlLCBjaGlsZHJlbik7XG59KTtcblRpdGxlLmRpc3BsYXlOYW1lID0gXCJUaXRsZVwiO1xuXG5mdW5jdGlvbiB1c2VBY3RpdmVUZXh0Q3Vlcyh0cmFjaykge1xuICBjb25zdCBbYWN0aXZlQ3Vlcywgc2V0QWN0aXZlQ3Vlc10gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCF0cmFjaykge1xuICAgICAgc2V0QWN0aXZlQ3VlcyhbXSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uQ3Vlc0NoYW5nZSgpIHtcbiAgICAgIHNldEFjdGl2ZUN1ZXModHJhY2suYWN0aXZlQ3Vlcyk7XG4gICAgfVxuICAgIG9uQ3Vlc0NoYW5nZSgpO1xuICAgIHJldHVybiBsaXN0ZW5FdmVudCh0cmFjaywgXCJjdWUtY2hhbmdlXCIsIG9uQ3Vlc0NoYW5nZSk7XG4gIH0sIFt0cmFja10pO1xuICByZXR1cm4gYWN0aXZlQ3Vlcztcbn1cblxuZnVuY3Rpb24gdXNlQWN0aXZlVGV4dFRyYWNrKGtpbmQpIHtcbiAgY29uc3QgbWVkaWEgPSB1c2VNZWRpYUNvbnRleHQoKSwgW3RyYWNrLCBzZXRUcmFja10gPSBSZWFjdC51c2VTdGF0ZShudWxsKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICByZXR1cm4gd2F0Y2hBY3RpdmVUZXh0VHJhY2sobWVkaWEudGV4dFRyYWNrcywga2luZCwgc2V0VHJhY2spO1xuICB9LCBba2luZF0pO1xuICByZXR1cm4gdHJhY2s7XG59XG5cbmZ1bmN0aW9uIHVzZUNoYXB0ZXJUaXRsZSgpIHtcbiAgY29uc3QgJHRyYWNrID0gdXNlQWN0aXZlVGV4dFRyYWNrKFwiY2hhcHRlcnNcIiksICRjdWVzID0gdXNlQWN0aXZlVGV4dEN1ZXMoJHRyYWNrKTtcbiAgcmV0dXJuICRjdWVzWzBdPy50ZXh0IHx8IFwiXCI7XG59XG5cbmNvbnN0IENoYXB0ZXJUaXRsZSA9IFJlYWN0LmZvcndhcmRSZWYoXG4gICh7IGRlZmF1bHRUZXh0ID0gXCJcIiwgY2hpbGRyZW4sIC4uLnByb3BzIH0sIGZvcndhcmRSZWYpID0+IHtcbiAgICBjb25zdCAkY2hhcHRlclRpdGxlID0gdXNlQ2hhcHRlclRpdGxlKCk7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFByaW1pdGl2ZS5zcGFuLCB7IC4uLnByb3BzLCByZWY6IGZvcndhcmRSZWYgfSwgJGNoYXB0ZXJUaXRsZSB8fCBkZWZhdWx0VGV4dCwgY2hpbGRyZW4pO1xuICB9XG4pO1xuQ2hhcHRlclRpdGxlLmRpc3BsYXlOYW1lID0gXCJDaGFwdGVyVGl0bGVcIjtcblxuY29uc3QgQ2FwdGlvbnNCcmlkZ2UgPSBjcmVhdGVSZWFjdENvbXBvbmVudChDYXB0aW9uc0luc3RhbmNlKTtcbmNvbnN0IENhcHRpb25zID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0sIGZvcndhcmRSZWYpID0+IHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2FwdGlvbnNCcmlkZ2UsIHsgLi4ucHJvcHMsIHJlZjogZm9yd2FyZFJlZiB9LCAocHJvcHMyKSA9PiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChQcmltaXRpdmUuZGl2LCB7IC4uLnByb3BzMiB9LCBjaGlsZHJlbikpO1xuICB9XG4pO1xuQ2FwdGlvbnMuZGlzcGxheU5hbWUgPSBcIkNhcHRpb25zXCI7XG5cbmNvbnN0IFJvb3QgPSBSZWFjdC5mb3J3YXJkUmVmKFxuICAoeyBzaXplID0gOTYsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCBmb3J3YXJkUmVmKSA9PiB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgXCJzdmdcIixcbiAgICAgIHtcbiAgICAgICAgd2lkdGg6IHNpemUsXG4gICAgICAgIGhlaWdodDogc2l6ZSxcbiAgICAgICAgZmlsbDogXCJub25lXCIsXG4gICAgICAgIHZpZXdCb3g6IFwiMCAwIDEyMCAxMjBcIixcbiAgICAgICAgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIixcbiAgICAgICAgXCJkYXRhLXBhcnRcIjogXCJyb290XCIsXG4gICAgICAgIC4uLnByb3BzLFxuICAgICAgICByZWY6IGZvcndhcmRSZWZcbiAgICAgIH0sXG4gICAgICBjaGlsZHJlblxuICAgICk7XG4gIH1cbik7XG5jb25zdCBUcmFjayA9IFJlYWN0LmZvcndhcmRSZWYoXG4gICh7IHdpZHRoID0gOCwgY2hpbGRyZW4sIC4uLnByb3BzIH0sIHJlZikgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgXCJjaXJjbGVcIixcbiAgICB7XG4gICAgICBjeDogXCI2MFwiLFxuICAgICAgY3k6IFwiNjBcIixcbiAgICAgIHI6IFwiNTRcIixcbiAgICAgIHN0cm9rZTogXCJjdXJyZW50Q29sb3JcIixcbiAgICAgIHN0cm9rZVdpZHRoOiB3aWR0aCxcbiAgICAgIFwiZGF0YS1wYXJ0XCI6IFwidHJhY2tcIixcbiAgICAgIC4uLnByb3BzLFxuICAgICAgcmVmXG4gICAgfSxcbiAgICBjaGlsZHJlblxuICApXG4pO1xuY29uc3QgVHJhY2tGaWxsID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHsgd2lkdGggPSA4LCBmaWxsUGVyY2VudCA9IDUwLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgcmVmKSA9PiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBcImNpcmNsZVwiLFxuICAgIHtcbiAgICAgIGN4OiBcIjYwXCIsXG4gICAgICBjeTogXCI2MFwiLFxuICAgICAgcjogXCI1NFwiLFxuICAgICAgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiLFxuICAgICAgcGF0aExlbmd0aDogXCIxMDBcIixcbiAgICAgIHN0cm9rZVdpZHRoOiB3aWR0aCxcbiAgICAgIHN0cm9rZURhc2hhcnJheTogMTAwLFxuICAgICAgc3Ryb2tlRGFzaG9mZnNldDogMTAwIC0gZmlsbFBlcmNlbnQsXG4gICAgICBcImRhdGEtcGFydFwiOiBcInRyYWNrLWZpbGxcIixcbiAgICAgIC4uLnByb3BzLFxuICAgICAgcmVmXG4gICAgfSxcbiAgICBjaGlsZHJlblxuICApXG4pO1xuXG52YXIgc3Bpbm5lciA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBSb290OiBSb290LFxuICBUcmFjazogVHJhY2ssXG4gIFRyYWNrRmlsbDogVHJhY2tGaWxsXG59KTtcblxuZnVuY3Rpb24gY3JlYXRlU2lnbmFsKGluaXRpYWxWYWx1ZSwgZGVwcyA9IFtdKSB7XG4gIGNvbnN0IHNjb3BlID0gdXNlUmVhY3RTY29wZSgpO1xuICByZXR1cm4gUmVhY3QudXNlTWVtbygoKSA9PiBzY29wZWQoKCkgPT4gc2lnbmFsKGluaXRpYWxWYWx1ZSksIHNjb3BlKSwgW3Njb3BlLCAuLi5kZXBzXSk7XG59XG5mdW5jdGlvbiBjcmVhdGVDb21wdXRlZChjb21wdXRlLCBkZXBzID0gW10pIHtcbiAgY29uc3Qgc2NvcGUgPSB1c2VSZWFjdFNjb3BlKCk7XG4gIHJldHVybiBSZWFjdC51c2VNZW1vKCgpID0+IHNjb3BlZCgoKSA9PiBjb21wdXRlZChjb21wdXRlKSwgc2NvcGUpLCBbc2NvcGUsIC4uLmRlcHNdKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUVmZmVjdChjb21wdXRlLCBkZXBzID0gW10pIHtcbiAgY29uc3Qgc2NvcGUgPSB1c2VSZWFjdFNjb3BlKCk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiBzY29wZWQoKCkgPT4gZWZmZWN0KGNvbXB1dGUpLCBzY29wZSksIFtzY29wZSwgLi4uZGVwc10pO1xufVxuZnVuY3Rpb24gdXNlU2NvcGVkKGNvbXB1dGUpIHtcbiAgY29uc3Qgc2NvcGUgPSB1c2VSZWFjdFNjb3BlKCk7XG4gIHJldHVybiBSZWFjdC51c2VNZW1vKCgpID0+IHNjb3BlZChjb21wdXRlLCBzY29wZSksIFtzY29wZV0pO1xufVxuXG5mdW5jdGlvbiB1c2VUZXh0Q3Vlcyh0cmFjaykge1xuICBjb25zdCBbY3Vlcywgc2V0Q3Vlc10gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCF0cmFjaykgcmV0dXJuO1xuICAgIGZ1bmN0aW9uIG9uQ3Vlc0NoYW5nZSh0cmFjazIpIHtcbiAgICAgIHNldEN1ZXMoWy4uLnRyYWNrMi5jdWVzXSk7XG4gICAgfVxuICAgIGNvbnN0IGRpc3Bvc2FsID0gY3JlYXRlRGlzcG9zYWxCaW4oKTtcbiAgICBkaXNwb3NhbC5hZGQoXG4gICAgICBsaXN0ZW5FdmVudCh0cmFjaywgXCJhZGQtY3VlXCIsICgpID0+IG9uQ3Vlc0NoYW5nZSh0cmFjaykpLFxuICAgICAgbGlzdGVuRXZlbnQodHJhY2ssIFwicmVtb3ZlLWN1ZVwiLCAoKSA9PiBvbkN1ZXNDaGFuZ2UodHJhY2spKVxuICAgICk7XG4gICAgb25DdWVzQ2hhbmdlKHRyYWNrKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZGlzcG9zYWwuZW1wdHkoKTtcbiAgICAgIHNldEN1ZXMoW10pO1xuICAgIH07XG4gIH0sIFt0cmFja10pO1xuICByZXR1cm4gY3Vlcztcbn1cblxuZnVuY3Rpb24gdXNlQ2hhcHRlck9wdGlvbnMoKSB7XG4gIGNvbnN0IG1lZGlhID0gdXNlTWVkaWFDb250ZXh0KCksIHRyYWNrID0gdXNlQWN0aXZlVGV4dFRyYWNrKFwiY2hhcHRlcnNcIiksIGN1ZXMgPSB1c2VUZXh0Q3Vlcyh0cmFjayksICRzdGFydFRpbWUgPSB1c2VTaWduYWwobWVkaWEuJHN0YXRlLmNsaXBTdGFydFRpbWUpLCAkZW5kVGltZSA9IHVzZVNpZ25hbChtZWRpYS4kc3RhdGUuY2xpcEVuZFRpbWUpIHx8IEluZmluaXR5O1xuICB1c2VBY3RpdmVUZXh0Q3Vlcyh0cmFjayk7XG4gIHJldHVybiBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCBvcHRpb25zID0gdHJhY2sgPyBjdWVzLmZpbHRlcigoY3VlKSA9PiBjdWUuc3RhcnRUaW1lIDw9ICRlbmRUaW1lICYmIGN1ZS5lbmRUaW1lID49ICRzdGFydFRpbWUpLm1hcCgoY3VlLCBpKSA9PiB7XG4gICAgICBsZXQgY3VycmVudFJlZiA9IG51bGwsIHN0b3BQcm9ncmVzc0VmZmVjdDtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGN1ZSxcbiAgICAgICAgbGFiZWw6IGN1ZS50ZXh0LFxuICAgICAgICB2YWx1ZTogaS50b1N0cmluZygpLFxuICAgICAgICBzdGFydFRpbWVUZXh0OiBmb3JtYXRUaW1lKE1hdGgubWF4KDAsIGN1ZS5zdGFydFRpbWUgLSAkc3RhcnRUaW1lKSksXG4gICAgICAgIGR1cmF0aW9uVGV4dDogZm9ybWF0U3Bva2VuVGltZShcbiAgICAgICAgICBNYXRoLm1pbigkZW5kVGltZSwgY3VlLmVuZFRpbWUpIC0gTWF0aC5tYXgoJHN0YXJ0VGltZSwgY3VlLnN0YXJ0VGltZSlcbiAgICAgICAgKSxcbiAgICAgICAgZ2V0IHNlbGVjdGVkKCkge1xuICAgICAgICAgIHJldHVybiBjdWUgPT09IHRyYWNrLmFjdGl2ZUN1ZXNbMF07XG4gICAgICAgIH0sXG4gICAgICAgIHNldFByb2dyZXNzVmFyKHJlZikge1xuICAgICAgICAgIGlmICghcmVmIHx8IGN1ZSAhPT0gdHJhY2suYWN0aXZlQ3Vlc1swXSkge1xuICAgICAgICAgICAgc3RvcFByb2dyZXNzRWZmZWN0Py4oKTtcbiAgICAgICAgICAgIHN0b3BQcm9ncmVzc0VmZmVjdCA9IHZvaWQgMDtcbiAgICAgICAgICAgIHJlZj8uc3R5bGUuc2V0UHJvcGVydHkoXCItLXByb2dyZXNzXCIsIFwiMCVcIik7XG4gICAgICAgICAgICBjdXJyZW50UmVmID0gbnVsbDtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGN1cnJlbnRSZWYgPT09IHJlZikgcmV0dXJuO1xuICAgICAgICAgIGN1cnJlbnRSZWYgPSByZWY7XG4gICAgICAgICAgc3RvcFByb2dyZXNzRWZmZWN0Py4oKTtcbiAgICAgICAgICBzdG9wUHJvZ3Jlc3NFZmZlY3QgPSBlZmZlY3QoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyByZWFsQ3VycmVudFRpbWUgfSA9IG1lZGlhLiRzdGF0ZSwgdGltZSA9IHJlYWxDdXJyZW50VGltZSgpLCBjdWVTdGFydFRpbWUgPSBNYXRoLm1heCgkc3RhcnRUaW1lLCBjdWUuc3RhcnRUaW1lKSwgZHVyYXRpb24gPSBNYXRoLm1pbigkZW5kVGltZSwgY3VlLmVuZFRpbWUpIC0gY3VlU3RhcnRUaW1lLCBwcm9ncmVzcyA9IE1hdGgubWF4KDAsIHRpbWUgLSBjdWVTdGFydFRpbWUpIC8gZHVyYXRpb24gKiAxMDA7XG4gICAgICAgICAgICByZWYuc3R5bGUuc2V0UHJvcGVydHkoXCItLXByb2dyZXNzXCIsIHByb2dyZXNzLnRvRml4ZWQoMykgKyBcIiVcIik7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHNlbGVjdCh0cmlnZ2VyKSB7XG4gICAgICAgICAgbWVkaWEucmVtb3RlLnNlZWsoY3VlLnN0YXJ0VGltZSAtICRzdGFydFRpbWUsIHRyaWdnZXIpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0pIDogW107XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9wdGlvbnMsIFwic2VsZWN0ZWRWYWx1ZVwiLCB7XG4gICAgICBnZXQoKSB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gb3B0aW9ucy5maW5kSW5kZXgoKG9wdGlvbikgPT4gb3B0aW9uLnNlbGVjdGVkKTtcbiAgICAgICAgcmV0dXJuIChpbmRleCA+PSAwID8gaW5kZXggOiAwKS50b1N0cmluZygpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBvcHRpb25zO1xuICB9LCBbY3VlcywgJHN0YXJ0VGltZSwgJGVuZFRpbWVdKTtcbn1cblxuZXhwb3J0IHsgQ2FwdGlvbnMsIENoYXB0ZXJUaXRsZSwgQ29udGVudCwgR29vZ2xlQ2FzdEJ1dHRvbiwgR3JvdXAsIE1lZGlhQW5ub3VuY2VyLCBSb290JDQgYXMgUm9vdCwgUm9vdCQyIGFzIFJvb3QkMSwgUm9vdCQzIGFzIFJvb3QkMiwgUm9vdCQxIGFzIFJvb3QkMywgUm9vdCQ1IGFzIFJvb3QkNCwgUm9vdCBhcyBSb290JDUsIFRpdGxlLCBUcmFjaywgVHJhY2tGaWxsLCBUcmlnZ2VyLCBhdWRpb0dhaW5TbGlkZXIsIGNvbnRyb2xzLCBjcmVhdGVDb21wdXRlZCwgY3JlYXRlRWZmZWN0LCBjcmVhdGVTaWduYWwsIHF1YWxpdHlTbGlkZXIsIHNwZWVkU2xpZGVyLCBzcGlubmVyLCB0b29sdGlwLCB1c2VBY3RpdmVUZXh0Q3VlcywgdXNlQWN0aXZlVGV4dFRyYWNrLCB1c2VDaGFwdGVyT3B0aW9ucywgdXNlQ2hhcHRlclRpdGxlLCB1c2VTY29wZWQsIHVzZVRleHRDdWVzIH07XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVSZWFjdENvbXBvbmVudCIsImNvbXBvc2VSZWZzIiwibGlzdGVuRXZlbnQiLCJ1c2VSZWFjdFNjb3BlIiwic2NvcGVkIiwic2lnbmFsIiwiY29tcHV0ZWQiLCJlZmZlY3QiLCJjcmVhdGVEaXNwb3NhbEJpbiIsInVzZVNpZ25hbCIsIlByaW1pdGl2ZSIsIk1lZGlhQW5ub3VuY2VySW5zdGFuY2UiLCJDb250cm9sc0luc3RhbmNlIiwiQ29udHJvbHNHcm91cEluc3RhbmNlIiwiVG9vbHRpcEluc3RhbmNlIiwiVG9vbHRpcFRyaWdnZXJJbnN0YW5jZSIsIlRvb2x0aXBDb250ZW50SW5zdGFuY2UiLCJHb29nbGVDYXN0QnV0dG9uSW5zdGFuY2UiLCJRdWFsaXR5U2xpZGVySW5zdGFuY2UiLCJBdWRpb0dhaW5TbGlkZXJJbnN0YW5jZSIsIlNwZWVkU2xpZGVySW5zdGFuY2UiLCJ1c2VNZWRpYVN0YXRlIiwid2F0Y2hBY3RpdmVUZXh0VHJhY2siLCJDYXB0aW9uc0luc3RhbmNlIiwiZm9ybWF0VGltZSIsImZvcm1hdFNwb2tlblRpbWUiLCJzbGlkZXJDYWxsYmFja3MiLCJQcmV2aWV3IiwiU3RlcHMiLCJUaHVtYiIsIlRyYWNrIiwiVHJhY2skMSIsIlRyYWNrRmlsbCIsIlRyYWNrRmlsbCQxIiwiVmFsdWUiLCJ1c2VNZWRpYUNvbnRleHQiLCJNZWRpYUFubm91bmNlckJyaWRnZSIsImV2ZW50cyIsIk1lZGlhQW5ub3VuY2VyIiwiZm9yd2FyZFJlZiIsInN0eWxlIiwiY2hpbGRyZW4iLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJwcm9wczIiLCJkaXYiLCJkaXNwbGF5IiwicmVmIiwiZGlzcGxheU5hbWUiLCJDb250cm9sc0JyaWRnZSIsIlJvb3QkNSIsIkNvbnRyb2xzR3JvdXBCcmlkZ2UiLCJHcm91cCIsImNvbnRyb2xzIiwiT2JqZWN0IiwiZnJlZXplIiwiX19wcm90b19fIiwiUm9vdCIsIlRvb2x0aXBCcmlkZ2UiLCJSb290JDQiLCJUcmlnZ2VyQnJpZGdlIiwiVHJpZ2dlciIsImJ1dHRvbiIsIkNvbnRlbnRCcmlkZ2UiLCJDb250ZW50IiwidG9vbHRpcCIsIkdvb2dsZUNhc3RCdXR0b25CcmlkZ2UiLCJkb21FdmVudHNSZWdleCIsIkdvb2dsZUNhc3RCdXR0b24iLCJRdWFsaXR5U2xpZGVyQnJpZGdlIiwiUm9vdCQzIiwicXVhbGl0eVNsaWRlciIsIkF1ZGlvR2FpblNsaWRlckJyaWRnZSIsIlJvb3QkMiIsImF1ZGlvR2FpblNsaWRlciIsIlNwZWVkU2xpZGVyQnJpZGdlIiwiUm9vdCQxIiwic3BlZWRTbGlkZXIiLCJUaXRsZSIsIiR0aXRsZSIsInNwYW4iLCJ1c2VBY3RpdmVUZXh0Q3VlcyIsInRyYWNrIiwiYWN0aXZlQ3VlcyIsInNldEFjdGl2ZUN1ZXMiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIm9uQ3Vlc0NoYW5nZSIsInVzZUFjdGl2ZVRleHRUcmFjayIsImtpbmQiLCJtZWRpYSIsInNldFRyYWNrIiwidGV4dFRyYWNrcyIsInVzZUNoYXB0ZXJUaXRsZSIsIiRjdWVzIiwiJHRyYWNrIiwidGV4dCIsIkNoYXB0ZXJUaXRsZSIsImRlZmF1bHRUZXh0IiwiJGNoYXB0ZXJUaXRsZSIsIkNhcHRpb25zQnJpZGdlIiwiQ2FwdGlvbnMiLCJzaXplIiwid2lkdGgiLCJoZWlnaHQiLCJmaWxsIiwidmlld0JveCIsImN4IiwiY3kiLCJyIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJmaWxsUGVyY2VudCIsInBhdGhMZW5ndGgiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Bpbm5lciIsImNyZWF0ZVNpZ25hbCIsImluaXRpYWxWYWx1ZSIsImRlcHMiLCJzY29wZSIsInVzZU1lbW8iLCJjcmVhdGVDb21wdXRlZCIsImNvbXB1dGUiLCJjcmVhdGVFZmZlY3QiLCJ1c2VTY29wZWQiLCJ1c2VUZXh0Q3VlcyIsImN1ZXMiLCJzZXRDdWVzIiwidHJhY2syIiwiZGlzcG9zYWwiLCJhZGQiLCJlbXB0eSIsInVzZUNoYXB0ZXJPcHRpb25zIiwiJHN0YXJ0VGltZSIsIiRzdGF0ZSIsImNsaXBTdGFydFRpbWUiLCIkZW5kVGltZSIsImNsaXBFbmRUaW1lIiwiSW5maW5pdHkiLCJvcHRpb25zIiwiZmlsdGVyIiwiY3VlIiwic3RhcnRUaW1lIiwiZW5kVGltZSIsIm1hcCIsImkiLCJjdXJyZW50UmVmIiwic3RvcFByb2dyZXNzRWZmZWN0IiwibGFiZWwiLCJ2YWx1ZSIsInRvU3RyaW5nIiwic3RhcnRUaW1lVGV4dCIsIk1hdGgiLCJtYXgiLCJkdXJhdGlvblRleHQiLCJtaW4iLCJzZWxlY3RlZCIsInNldFByb2dyZXNzVmFyIiwic2V0UHJvcGVydHkiLCJyZWFsQ3VycmVudFRpbWUiLCJ0aW1lIiwiY3VlU3RhcnRUaW1lIiwiZHVyYXRpb24iLCJwcm9ncmVzcyIsInRvRml4ZWQiLCJzZWxlY3QiLCJ0cmlnZ2VyIiwicmVtb3RlIiwic2VlayIsImRlZmluZVByb3BlcnR5IiwiZ2V0IiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJvcHRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-DcX2JzmB.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Nm9OJy7x.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-Nm9OJy7x.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ARIAKeyShortcuts: function() { return /* binding */ ARIAKeyShortcuts; },\n/* harmony export */   AUDIO_EXTENSIONS: function() { return /* binding */ AUDIO_EXTENSIONS; },\n/* harmony export */   AUDIO_TYPES: function() { return /* binding */ AUDIO_TYPES; },\n/* harmony export */   AirPlayButtonInstance: function() { return /* binding */ AirPlayButtonInstance; },\n/* harmony export */   AudioGainSliderInstance: function() { return /* binding */ AudioGainSliderInstance; },\n/* harmony export */   AudioProviderLoader: function() { return /* binding */ AudioProviderLoader; },\n/* harmony export */   AudioTrackList: function() { return /* binding */ AudioTrackList; },\n/* harmony export */   CaptionButtonInstance: function() { return /* binding */ CaptionButtonInstance; },\n/* harmony export */   CaptionsInstance: function() { return /* binding */ CaptionsInstance; },\n/* harmony export */   ControlsGroupInstance: function() { return /* binding */ ControlsGroupInstance; },\n/* harmony export */   ControlsInstance: function() { return /* binding */ ControlsInstance; },\n/* harmony export */   DASHProviderLoader: function() { return /* binding */ DASHProviderLoader; },\n/* harmony export */   DASH_VIDEO_EXTENSIONS: function() { return /* binding */ DASH_VIDEO_EXTENSIONS; },\n/* harmony export */   DASH_VIDEO_TYPES: function() { return /* binding */ DASH_VIDEO_TYPES; },\n/* harmony export */   DEFAULT_AUDIO_GAINS: function() { return /* binding */ DEFAULT_AUDIO_GAINS; },\n/* harmony export */   DEFAULT_PLAYBACK_RATES: function() { return /* binding */ DEFAULT_PLAYBACK_RATES; },\n/* harmony export */   FullscreenButtonInstance: function() { return /* binding */ FullscreenButtonInstance; },\n/* harmony export */   FullscreenController: function() { return /* binding */ FullscreenController; },\n/* harmony export */   GestureInstance: function() { return /* binding */ GestureInstance; },\n/* harmony export */   GoogleCastButtonInstance: function() { return /* binding */ GoogleCastButtonInstance; },\n/* harmony export */   HLSProviderLoader: function() { return /* binding */ HLSProviderLoader; },\n/* harmony export */   HLS_VIDEO_EXTENSIONS: function() { return /* binding */ HLS_VIDEO_EXTENSIONS; },\n/* harmony export */   HLS_VIDEO_TYPES: function() { return /* binding */ HLS_VIDEO_TYPES; },\n/* harmony export */   HTMLAirPlayAdapter: function() { return /* binding */ HTMLAirPlayAdapter; },\n/* harmony export */   HTMLMediaProvider: function() { return /* binding */ HTMLMediaProvider; },\n/* harmony export */   IS_CHROME: function() { return /* binding */ IS_CHROME; },\n/* harmony export */   IS_IOS: function() { return /* binding */ IS_IOS; },\n/* harmony export */   IS_SERVER: function() { return /* binding */ IS_SERVER; },\n/* harmony export */   List: function() { return /* binding */ List; },\n/* harmony export */   ListSymbol: function() { return /* binding */ ListSymbol; },\n/* harmony export */   LiveButtonInstance: function() { return /* binding */ LiveButtonInstance; },\n/* harmony export */   LocalMediaStorage: function() { return /* binding */ LocalMediaStorage; },\n/* harmony export */   Logger: function() { return /* binding */ Logger; },\n/* harmony export */   MEDIA_KEY_SHORTCUTS: function() { return /* binding */ MEDIA_KEY_SHORTCUTS; },\n/* harmony export */   MediaAnnouncerInstance: function() { return /* binding */ MediaAnnouncerInstance; },\n/* harmony export */   MediaControls: function() { return /* binding */ MediaControls; },\n/* harmony export */   MediaPlayerInstance: function() { return /* binding */ MediaPlayerInstance; },\n/* harmony export */   MediaProviderInstance: function() { return /* binding */ MediaProviderInstance; },\n/* harmony export */   MediaRemoteControl: function() { return /* binding */ MediaRemoteControl; },\n/* harmony export */   MenuButtonInstance: function() { return /* binding */ MenuButtonInstance; },\n/* harmony export */   MenuInstance: function() { return /* binding */ MenuInstance; },\n/* harmony export */   MenuItemInstance: function() { return /* binding */ MenuItemInstance; },\n/* harmony export */   MenuItemsInstance: function() { return /* binding */ MenuItemsInstance; },\n/* harmony export */   MenuPortalInstance: function() { return /* binding */ MenuPortalInstance; },\n/* harmony export */   MuteButtonInstance: function() { return /* binding */ MuteButtonInstance; },\n/* harmony export */   PIPButtonInstance: function() { return /* binding */ PIPButtonInstance; },\n/* harmony export */   PlayButtonInstance: function() { return /* binding */ PlayButtonInstance; },\n/* harmony export */   PosterInstance: function() { return /* binding */ PosterInstance; },\n/* harmony export */   Primitive: function() { return /* binding */ Primitive; },\n/* harmony export */   QualitySliderInstance: function() { return /* binding */ QualitySliderInstance; },\n/* harmony export */   QualitySymbol: function() { return /* binding */ QualitySymbol; },\n/* harmony export */   RAFLoop: function() { return /* binding */ RAFLoop; },\n/* harmony export */   RadioGroupInstance: function() { return /* binding */ RadioGroupInstance; },\n/* harmony export */   RadioInstance: function() { return /* binding */ RadioInstance; },\n/* harmony export */   ScreenOrientationController: function() { return /* binding */ ScreenOrientationController; },\n/* harmony export */   SeekButtonInstance: function() { return /* binding */ SeekButtonInstance; },\n/* harmony export */   SliderChaptersInstance: function() { return /* binding */ SliderChaptersInstance; },\n/* harmony export */   SliderInstance: function() { return /* binding */ SliderInstance; },\n/* harmony export */   SliderPreviewInstance: function() { return /* binding */ SliderPreviewInstance; },\n/* harmony export */   SliderThumbnailInstance: function() { return /* binding */ SliderThumbnailInstance; },\n/* harmony export */   SliderValueInstance: function() { return /* binding */ SliderValueInstance; },\n/* harmony export */   SliderVideoInstance: function() { return /* binding */ SliderVideoInstance; },\n/* harmony export */   SpeedSliderInstance: function() { return /* binding */ SpeedSliderInstance; },\n/* harmony export */   TextRenderers: function() { return /* binding */ TextRenderers; },\n/* harmony export */   TextTrack: function() { return /* binding */ TextTrack; },\n/* harmony export */   TextTrackList: function() { return /* binding */ TextTrackList; },\n/* harmony export */   TextTrackSymbol: function() { return /* binding */ TextTrackSymbol; },\n/* harmony export */   ThumbnailInstance: function() { return /* binding */ ThumbnailInstance; },\n/* harmony export */   ThumbnailsLoader: function() { return /* binding */ ThumbnailsLoader; },\n/* harmony export */   TimeInstance: function() { return /* binding */ TimeInstance; },\n/* harmony export */   TimeRange: function() { return /* binding */ TimeRange; },\n/* harmony export */   TimeSliderInstance: function() { return /* binding */ TimeSliderInstance; },\n/* harmony export */   ToggleButtonInstance: function() { return /* binding */ ToggleButtonInstance; },\n/* harmony export */   TooltipContentInstance: function() { return /* binding */ TooltipContentInstance; },\n/* harmony export */   TooltipInstance: function() { return /* binding */ TooltipInstance; },\n/* harmony export */   TooltipTriggerInstance: function() { return /* binding */ TooltipTriggerInstance; },\n/* harmony export */   VIDEO_EXTENSIONS: function() { return /* binding */ VIDEO_EXTENSIONS; },\n/* harmony export */   VIDEO_TYPES: function() { return /* binding */ VIDEO_TYPES; },\n/* harmony export */   VideoProvider: function() { return /* binding */ VideoProvider; },\n/* harmony export */   VideoProviderLoader: function() { return /* binding */ VideoProviderLoader; },\n/* harmony export */   VideoQualityList: function() { return /* binding */ VideoQualityList; },\n/* harmony export */   VimeoProviderLoader: function() { return /* binding */ VimeoProviderLoader; },\n/* harmony export */   VolumeSliderInstance: function() { return /* binding */ VolumeSliderInstance; },\n/* harmony export */   YouTubeProviderLoader: function() { return /* binding */ YouTubeProviderLoader; },\n/* harmony export */   appendParamsToURL: function() { return /* binding */ appendParamsToURL; },\n/* harmony export */   canChangeVolume: function() { return /* binding */ canChangeVolume; },\n/* harmony export */   canFullscreen: function() { return /* binding */ canFullscreen; },\n/* harmony export */   canGoogleCastSrc: function() { return /* binding */ canGoogleCastSrc; },\n/* harmony export */   canOrientScreen: function() { return /* binding */ canOrientScreen; },\n/* harmony export */   canPlayHLSNatively: function() { return /* binding */ canPlayHLSNatively; },\n/* harmony export */   canRotateScreen: function() { return /* binding */ canRotateScreen; },\n/* harmony export */   canUsePictureInPicture: function() { return /* binding */ canUsePictureInPicture; },\n/* harmony export */   canUseVideoPresentation: function() { return /* binding */ canUseVideoPresentation; },\n/* harmony export */   coerceToError: function() { return /* binding */ coerceToError; },\n/* harmony export */   findActiveCue: function() { return /* binding */ findActiveCue; },\n/* harmony export */   formatSpokenTime: function() { return /* binding */ formatSpokenTime; },\n/* harmony export */   formatTime: function() { return /* binding */ formatTime; },\n/* harmony export */   getDownloadFile: function() { return /* binding */ getDownloadFile; },\n/* harmony export */   getTimeRangesEnd: function() { return /* binding */ getTimeRangesEnd; },\n/* harmony export */   getTimeRangesStart: function() { return /* binding */ getTimeRangesStart; },\n/* harmony export */   isAudioProvider: function() { return /* binding */ isAudioProvider; },\n/* harmony export */   isAudioSrc: function() { return /* binding */ isAudioSrc; },\n/* harmony export */   isCueActive: function() { return /* binding */ isCueActive; },\n/* harmony export */   isDASHProvider: function() { return /* binding */ isDASHProvider; },\n/* harmony export */   isDASHSrc: function() { return /* binding */ isDASHSrc; },\n/* harmony export */   isGoogleCastProvider: function() { return /* binding */ isGoogleCastProvider; },\n/* harmony export */   isHLSProvider: function() { return /* binding */ isHLSProvider; },\n/* harmony export */   isHLSSrc: function() { return /* binding */ isHLSSrc; },\n/* harmony export */   isHLSSupported: function() { return /* binding */ isHLSSupported; },\n/* harmony export */   isHTMLAudioElement: function() { return /* binding */ isHTMLAudioElement; },\n/* harmony export */   isHTMLIFrameElement: function() { return /* binding */ isHTMLIFrameElement; },\n/* harmony export */   isHTMLMediaElement: function() { return /* binding */ isHTMLMediaElement; },\n/* harmony export */   isHTMLVideoElement: function() { return /* binding */ isHTMLVideoElement; },\n/* harmony export */   isMediaStream: function() { return /* binding */ isMediaStream; },\n/* harmony export */   isRemotionProvider: function() { return /* binding */ isRemotionProvider; },\n/* harmony export */   isRemotionSrc: function() { return /* binding */ isRemotionSrc; },\n/* harmony export */   isTrackCaptionKind: function() { return /* binding */ isTrackCaptionKind; },\n/* harmony export */   isVideoProvider: function() { return /* binding */ isVideoProvider; },\n/* harmony export */   isVideoQualitySrc: function() { return /* binding */ isVideoQualitySrc; },\n/* harmony export */   isVideoSrc: function() { return /* binding */ isVideoSrc; },\n/* harmony export */   isVimeoProvider: function() { return /* binding */ isVimeoProvider; },\n/* harmony export */   isYouTubeProvider: function() { return /* binding */ isYouTubeProvider; },\n/* harmony export */   listen: function() { return /* binding */ listen; },\n/* harmony export */   loadScript: function() { return /* binding */ loadScript; },\n/* harmony export */   mediaContext: function() { return /* binding */ mediaContext; },\n/* harmony export */   mediaState: function() { return /* binding */ mediaState; },\n/* harmony export */   normalizeTimeIntervals: function() { return /* binding */ normalizeTimeIntervals; },\n/* harmony export */   parseJSONCaptionsFile: function() { return /* binding */ parseJSONCaptionsFile; },\n/* harmony export */   preconnect: function() { return /* binding */ preconnect; },\n/* harmony export */   sliderState: function() { return /* binding */ sliderState; },\n/* harmony export */   softResetMediaState: function() { return /* binding */ softResetMediaState; },\n/* harmony export */   sortVideoQualities: function() { return /* binding */ sortVideoQualities; },\n/* harmony export */   updateSliderPreviewPlacement: function() { return /* binding */ updateSliderPreviewPlacement; },\n/* harmony export */   updateTimeIntervals: function() { return /* binding */ updateTimeIntervals; },\n/* harmony export */   useMediaContext: function() { return /* binding */ useMediaContext; },\n/* harmony export */   useMediaState: function() { return /* binding */ useMediaState; },\n/* harmony export */   useMediaStore: function() { return /* binding */ useMediaStore; },\n/* harmony export */   usePlyrLayoutClasses: function() { return /* binding */ usePlyrLayoutClasses; },\n/* harmony export */   useSliderState: function() { return /* binding */ useSliderState; },\n/* harmony export */   useSliderStore: function() { return /* binding */ useSliderStore; },\n/* harmony export */   watchActiveTextTrack: function() { return /* binding */ watchActiveTextTrack; },\n/* harmony export */   watchCueTextChange: function() { return /* binding */ watchCueTextChange; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @floating-ui/dom */ \"(app-pages-browser)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* __next_internal_client_entry_do_not_use__ ARIAKeyShortcuts,AUDIO_EXTENSIONS,AUDIO_TYPES,AirPlayButtonInstance,AudioGainSliderInstance,AudioProviderLoader,AudioTrackList,CaptionButtonInstance,CaptionsInstance,ControlsGroupInstance,ControlsInstance,DASHProviderLoader,DASH_VIDEO_EXTENSIONS,DASH_VIDEO_TYPES,DEFAULT_AUDIO_GAINS,DEFAULT_PLAYBACK_RATES,FullscreenButtonInstance,FullscreenController,GestureInstance,GoogleCastButtonInstance,HLSProviderLoader,HLS_VIDEO_EXTENSIONS,HLS_VIDEO_TYPES,HTMLAirPlayAdapter,HTMLMediaProvider,IS_CHROME,IS_IOS,IS_SERVER,List,ListSymbol,LiveButtonInstance,LocalMediaStorage,Logger,MEDIA_KEY_SHORTCUTS,MediaAnnouncerInstance,MediaControls,MediaPlayerInstance,MediaProviderInstance,MediaRemoteControl,MenuButtonInstance,MenuInstance,MenuItemInstance,MenuItemsInstance,MenuPortalInstance,MuteButtonInstance,PIPButtonInstance,PlayButtonInstance,PosterInstance,Primitive,QualitySliderInstance,QualitySymbol,RAFLoop,RadioGroupInstance,RadioInstance,ScreenOrientationController,SeekButtonInstance,SliderChaptersInstance,SliderInstance,SliderPreviewInstance,SliderThumbnailInstance,SliderValueInstance,SliderVideoInstance,SpeedSliderInstance,TextRenderers,TextTrack,TextTrackList,TextTrackSymbol,ThumbnailInstance,ThumbnailsLoader,TimeInstance,TimeRange,TimeSliderInstance,ToggleButtonInstance,TooltipContentInstance,TooltipInstance,TooltipTriggerInstance,VIDEO_EXTENSIONS,VIDEO_TYPES,VideoProvider,VideoProviderLoader,VideoQualityList,VimeoProviderLoader,VolumeSliderInstance,YouTubeProviderLoader,appendParamsToURL,canChangeVolume,canFullscreen,canGoogleCastSrc,canOrientScreen,canPlayHLSNatively,canRotateScreen,canUsePictureInPicture,canUseVideoPresentation,coerceToError,findActiveCue,formatSpokenTime,formatTime,getDownloadFile,getTimeRangesEnd,getTimeRangesStart,isAudioProvider,isAudioSrc,isCueActive,isDASHProvider,isDASHSrc,isGoogleCastProvider,isHLSProvider,isHLSSrc,isHLSSupported,isHTMLAudioElement,isHTMLIFrameElement,isHTMLMediaElement,isHTMLVideoElement,isMediaStream,isRemotionProvider,isRemotionSrc,isTrackCaptionKind,isVideoProvider,isVideoQualitySrc,isVideoSrc,isVimeoProvider,isYouTubeProvider,listen,loadScript,mediaContext,mediaState,normalizeTimeIntervals,parseJSONCaptionsFile,preconnect,sliderState,softResetMediaState,sortVideoQualities,updateSliderPreviewPlacement,updateTimeIntervals,useMediaContext,useMediaState,useMediaStore,usePlyrLayoutClasses,useSliderState,useSliderStore,watchActiveTextTrack,watchCueTextChange auto */ var _navigator, _navigator1;\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$();\n\n\n\nfunction isVideoQualitySrc(src) {\n    return !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src) && \"width\" in src && \"height\" in src && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(src.width) && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(src.height);\n}\nconst IS_SERVER = typeof document === \"undefined\";\nconst UA = IS_SERVER ? \"\" : ((_navigator = navigator) === null || _navigator === void 0 ? void 0 : _navigator.userAgent.toLowerCase()) || \"\";\nconst IS_IOS = !IS_SERVER && /iphone|ipad|ipod|ios|crios|fxios/i.test(UA);\nconst IS_IPHONE = !IS_SERVER && /(iphone|ipod)/gi.test(((_navigator1 = navigator) === null || _navigator1 === void 0 ? void 0 : _navigator1.platform) || \"\");\nconst IS_CHROME = !IS_SERVER && !!window.chrome;\nconst IS_SAFARI = !IS_SERVER && (!!window.safari || IS_IOS);\nfunction canOrientScreen() {\n    return canRotateScreen() && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(screen.orientation.unlock);\n}\nfunction canRotateScreen() {\n    return !IS_SERVER && !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(window.screen.orientation) && !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(window.screen.orientation.lock);\n}\nfunction canPlayAudioType(audio, type) {\n    if (IS_SERVER) return false;\n    if (!audio) audio = document.createElement(\"audio\");\n    return audio.canPlayType(type).length > 0;\n}\nfunction canPlayVideoType(video, type) {\n    if (IS_SERVER) return false;\n    if (!video) video = document.createElement(\"video\");\n    return video.canPlayType(type).length > 0;\n}\nfunction canPlayHLSNatively(video) {\n    if (IS_SERVER) return false;\n    if (!video) video = document.createElement(\"video\");\n    return video.canPlayType(\"application/vnd.apple.mpegurl\").length > 0;\n}\nfunction canUsePictureInPicture(video) {\n    if (IS_SERVER) return false;\n    return !!document.pictureInPictureEnabled && !(video === null || video === void 0 ? void 0 : video.disablePictureInPicture);\n}\nfunction canUseVideoPresentation(video) {\n    if (IS_SERVER) return false;\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(video === null || video === void 0 ? void 0 : video.webkitSupportsPresentationMode) && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(video === null || video === void 0 ? void 0 : video.webkitSetPresentationMode);\n}\nasync function canChangeVolume() {\n    const video = document.createElement(\"video\");\n    video.volume = 0.5;\n    await (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.waitTimeout)(0);\n    return video.volume === 0.5;\n}\nfunction getMediaSource() {\n    var _window, _window1, _window2;\n    var _window_ManagedMediaSource, _ref;\n    return IS_SERVER ? void 0 : (_ref = (_window_ManagedMediaSource = (_window = window) === null || _window === void 0 ? void 0 : _window.ManagedMediaSource) !== null && _window_ManagedMediaSource !== void 0 ? _window_ManagedMediaSource : (_window1 = window) === null || _window1 === void 0 ? void 0 : _window1.MediaSource) !== null && _ref !== void 0 ? _ref : (_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.WebKitMediaSource;\n}\nfunction getSourceBuffer() {\n    var _window, _window1;\n    var _window_SourceBuffer;\n    return IS_SERVER ? void 0 : (_window_SourceBuffer = (_window = window) === null || _window === void 0 ? void 0 : _window.SourceBuffer) !== null && _window_SourceBuffer !== void 0 ? _window_SourceBuffer : (_window1 = window) === null || _window1 === void 0 ? void 0 : _window1.WebKitSourceBuffer;\n}\nfunction isHLSSupported() {\n    if (IS_SERVER) return false;\n    const MediaSource = getMediaSource();\n    if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(MediaSource)) return false;\n    const isTypeSupported = MediaSource && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(MediaSource.isTypeSupported) && MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n    const SourceBuffer = getSourceBuffer();\n    const isSourceBufferValid = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(SourceBuffer) || !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(SourceBuffer.prototype) && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(SourceBuffer.prototype.appendBuffer) && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(SourceBuffer.prototype.remove);\n    return !!isTypeSupported && !!isSourceBufferValid;\n}\nfunction isDASHSupported() {\n    return isHLSSupported();\n}\nclass TimeRange {\n    get length() {\n        return this._ranges.length;\n    }\n    start(index) {\n        throwIfEmpty(this._ranges.length);\n        throwIfOutOfRange(\"start\", index, this._ranges.length - 1);\n        var _this__ranges_index_;\n        return (_this__ranges_index_ = this._ranges[index][0]) !== null && _this__ranges_index_ !== void 0 ? _this__ranges_index_ : Infinity;\n    }\n    end(index) {\n        throwIfEmpty(this._ranges.length);\n        throwIfOutOfRange(\"end\", index, this._ranges.length - 1);\n        var _this__ranges_index_;\n        return (_this__ranges_index_ = this._ranges[index][1]) !== null && _this__ranges_index_ !== void 0 ? _this__ranges_index_ : Infinity;\n    }\n    constructor(start, end){\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(start)) {\n            this._ranges = start;\n        } else if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(start) && !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(end)) {\n            this._ranges = [\n                [\n                    start,\n                    end\n                ]\n            ];\n        } else {\n            this._ranges = [];\n        }\n    }\n}\nfunction getTimeRangesStart(range) {\n    if (!range.length) return null;\n    let min = range.start(0);\n    for(let i = 1; i < range.length; i++){\n        const value = range.start(i);\n        if (value < min) min = value;\n    }\n    return min;\n}\nfunction getTimeRangesEnd(range) {\n    if (!range.length) return null;\n    let max = range.end(0);\n    for(let i = 1; i < range.length; i++){\n        const value = range.end(i);\n        if (value > max) max = value;\n    }\n    return max;\n}\nfunction throwIfEmpty(length) {\n    if (!length) throw new Error(\"`TimeRanges` object is empty.\");\n}\nfunction throwIfOutOfRange(fnName, index, end) {\n    if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(index) || index < 0 || index > end) {\n        throw new Error(\"Failed to execute '\".concat(fnName, \"' on 'TimeRanges': The index provided (\").concat(index, \") is non-numeric or out of bounds (0-\").concat(end, \").\"));\n    }\n}\nfunction normalizeTimeIntervals(intervals) {\n    if (intervals.length <= 1) {\n        return intervals;\n    }\n    intervals.sort((a, b)=>a[0] - b[0]);\n    let normalized = [], current = intervals[0];\n    for(let i = 1; i < intervals.length; i++){\n        const next = intervals[i];\n        if (current[1] >= next[0] - 1) {\n            current = [\n                current[0],\n                Math.max(current[1], next[1])\n            ];\n        } else {\n            normalized.push(current);\n            current = next;\n        }\n    }\n    normalized.push(current);\n    return normalized;\n}\nfunction updateTimeIntervals(intervals, interval, value) {\n    let start = interval[0], end = interval[1];\n    if (value < start) {\n        return [\n            value,\n            -1\n        ];\n    } else if (value === start) {\n        return interval;\n    } else if (start === -1) {\n        interval[0] = value;\n        return interval;\n    } else if (value > start) {\n        interval[1] = value;\n        if (end === -1) intervals.push(interval);\n    }\n    normalizeTimeIntervals(intervals);\n    return interval;\n}\nconst AUDIO_EXTENSIONS = /\\.(m4a|m4b|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx|flac)($|\\?)/i;\nconst AUDIO_TYPES = /* @__PURE__ */ new Set([\n    \"audio/mpeg\",\n    \"audio/ogg\",\n    \"audio/3gp\",\n    \"audio/mp3\",\n    \"audio/webm\",\n    \"audio/flac\"\n]);\nconst VIDEO_EXTENSIONS = /\\.(mp4|og[gv]|webm|mov|m4v)(#t=[,\\d+]+)?($|\\?)/i;\nconst VIDEO_TYPES = /* @__PURE__ */ new Set([\n    \"video/mp4\",\n    \"video/webm\",\n    \"video/3gp\",\n    \"video/ogg\",\n    \"video/avi\",\n    \"video/mpeg\"\n]);\nconst HLS_VIDEO_EXTENSIONS = /\\.(m3u8)($|\\?)/i;\nconst DASH_VIDEO_EXTENSIONS = /\\.(mpd)($|\\?)/i;\nconst HLS_VIDEO_TYPES = /* @__PURE__ */ new Set([\n    // Apple sanctioned\n    \"application/vnd.apple.mpegurl\",\n    // Apple sanctioned for backwards compatibility\n    \"audio/mpegurl\",\n    // Very common\n    \"audio/x-mpegurl\",\n    // Very common\n    \"application/x-mpegurl\",\n    // Included for completeness\n    \"video/x-mpegurl\",\n    \"video/mpegurl\",\n    \"application/mpegurl\"\n]);\nconst DASH_VIDEO_TYPES = /* @__PURE__ */ new Set([\n    \"application/dash+xml\"\n]);\nfunction isAudioSrc(param) {\n    let { src, type } = param;\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src) ? AUDIO_EXTENSIONS.test(src) || AUDIO_TYPES.has(type) || src.startsWith(\"blob:\") && type === \"audio/object\" : type === \"audio/object\";\n}\nfunction isVideoSrc(src) {\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src.src) ? VIDEO_EXTENSIONS.test(src.src) || VIDEO_TYPES.has(src.type) || src.src.startsWith(\"blob:\") && src.type === \"video/object\" || isHLSSrc(src) && (IS_SERVER || canPlayHLSNatively()) : src.type === \"video/object\";\n}\nfunction isHLSSrc(param) {\n    let { src, type } = param;\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src) && HLS_VIDEO_EXTENSIONS.test(src) || HLS_VIDEO_TYPES.has(type);\n}\nfunction isDASHSrc(param) {\n    let { src, type } = param;\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src) && DASH_VIDEO_EXTENSIONS.test(src) || DASH_VIDEO_TYPES.has(type);\n}\nfunction canGoogleCastSrc(src) {\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src.src) && (isAudioSrc(src) || isVideoSrc(src) || isHLSSrc(src));\n}\nfunction isMediaStream(src) {\n    return !IS_SERVER && typeof window.MediaStream !== \"undefined\" && src instanceof window.MediaStream;\n}\nfunction appendParamsToURL(baseUrl, params) {\n    const searchParams = new URLSearchParams();\n    for (const key of Object.keys(params)){\n        searchParams.set(key, params[key] + \"\");\n    }\n    return baseUrl + \"?\" + searchParams.toString();\n}\nfunction preconnect(url) {\n    let rel = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"preconnect\";\n    if (IS_SERVER) return false;\n    const exists = document.querySelector('link[href=\"'.concat(url, '\"]'));\n    if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNull)(exists)) return true;\n    const link = document.createElement(\"link\");\n    link.rel = rel;\n    link.href = url;\n    link.crossOrigin = \"true\";\n    document.head.append(link);\n    return true;\n}\nconst pendingRequests = {};\nfunction loadScript(src) {\n    if (pendingRequests[src]) return pendingRequests[src].promise;\n    const promise = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.deferredPromise)(), exists = document.querySelector('script[src=\"'.concat(src, '\"]'));\n    if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNull)(exists)) {\n        promise.resolve();\n        return promise.promise;\n    }\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = ()=>{\n        promise.resolve();\n        delete pendingRequests[src];\n    };\n    script.onerror = ()=>{\n        promise.reject();\n        delete pendingRequests[src];\n    };\n    setTimeout(()=>document.head.append(script), 0);\n    return promise.promise;\n}\nfunction getRequestCredentials(crossOrigin) {\n    return crossOrigin === \"use-credentials\" ? \"include\" : (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(crossOrigin) ? \"same-origin\" : void 0;\n}\nfunction getDownloadFile(param) {\n    let { title, src, download } = param;\n    const url = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isBoolean)(download) || download === \"\" ? src.src : (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(download) ? download : download === null || download === void 0 ? void 0 : download.url;\n    if (!isValidFileDownload({\n        url,\n        src,\n        download\n    })) return null;\n    return {\n        url,\n        name: !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isBoolean)(download) && !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(download) && (download === null || download === void 0 ? void 0 : download.filename) || title.toLowerCase() || \"media\"\n    };\n}\nfunction isValidFileDownload(param) {\n    let { url, src, download } = param;\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(url) && (download && download !== true || isAudioSrc(src) || isVideoSrc(src));\n}\nconst CROSS_ORIGIN = Symbol(\"TEXT_TRACK_CROSS_ORIGIN\"), READY_STATE = Symbol(\"TEXT_TRACK_READY_STATE\"), UPDATE_ACTIVE_CUES = Symbol(\"TEXT_TRACK_UPDATE_ACTIVE_CUES\"), CAN_LOAD = Symbol(\"TEXT_TRACK_CAN_LOAD\"), ON_MODE_CHANGE = Symbol(\"TEXT_TRACK_ON_MODE_CHANGE\"), NATIVE = Symbol(\"TEXT_TRACK_NATIVE\"), NATIVE_HLS = Symbol(\"TEXT_TRACK_NATIVE_HLS\");\nconst TextTrackSymbol = {\n    _crossOrigin: CROSS_ORIGIN,\n    _readyState: READY_STATE,\n    _updateActiveCues: UPDATE_ACTIVE_CUES,\n    _canLoad: CAN_LOAD,\n    _onModeChange: ON_MODE_CHANGE,\n    _native: NATIVE,\n    _nativeHLS: NATIVE_HLS\n};\nfunction findActiveCue(cues, time) {\n    for(let i = 0, len = cues.length; i < len; i++){\n        if (isCueActive(cues[i], time)) return cues[i];\n    }\n    return null;\n}\nfunction isCueActive(cue, time) {\n    return time >= cue.startTime && time < cue.endTime;\n}\nfunction watchActiveTextTrack(tracks, kind, onChange) {\n    let currentTrack = null, scope = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.getScope)();\n    function onModeChange() {\n        const kinds = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(kind) ? [\n            kind\n        ] : kind, track = tracks.toArray().find((track2)=>kinds.includes(track2.kind) && track2.mode === \"showing\");\n        if (track === currentTrack) return;\n        if (!track) {\n            onChange(null);\n            currentTrack = null;\n            return;\n        }\n        if (track.readyState == 2) {\n            onChange(track);\n        } else {\n            onChange(null);\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.scoped)(()=>{\n                const off = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"load\", ()=>{\n                    onChange(track);\n                    off();\n                }, {\n                    once: true\n                });\n            }, scope);\n        }\n        currentTrack = track;\n    }\n    onModeChange();\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(tracks, \"mode-change\", onModeChange);\n}\nfunction watchCueTextChange(tracks, kind, callback) {\n    watchActiveTextTrack(tracks, kind, (track)=>{\n        if (!track) {\n            callback(\"\");\n            return;\n        }\n        const onCueChange = ()=>{\n            const activeCue = track === null || track === void 0 ? void 0 : track.activeCues[0];\n            callback((activeCue === null || activeCue === void 0 ? void 0 : activeCue.text) || \"\");\n        };\n        onCueChange();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"cue-change\", onCueChange);\n    });\n}\nvar _a$2, _b, _c;\nclass TextTrack extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.EventsTarget {\n    static createId(track) {\n        var _track_src, _ref;\n        return \"vds-\".concat(track.type, \"-\").concat(track.kind, \"-\").concat((_ref = (_track_src = track.src) !== null && _track_src !== void 0 ? _track_src : track.label) !== null && _ref !== void 0 ? _ref : \"?\");\n    }\n    get metadata() {\n        return this._metadata;\n    }\n    get regions() {\n        return this._regions;\n    }\n    get cues() {\n        return this._cues;\n    }\n    get activeCues() {\n        return this._activeCues;\n    }\n    /**\n   * - 0: Not Loading\n   * - 1: Loading\n   * - 2: Ready\n   * - 3: Error\n   */ get readyState() {\n        return this[TextTrackSymbol._readyState];\n    }\n    get mode() {\n        return this._mode;\n    }\n    set mode(mode) {\n        this.setMode(mode);\n    }\n    addCue(cue, trigger) {\n        let i = 0, length = this._cues.length;\n        for(i = 0; i < length; i++)if (cue.endTime <= this._cues[i].startTime) break;\n        if (i === length) this._cues.push(cue);\n        else this._cues.splice(i, 0, cue);\n        if (!(cue instanceof TextTrackCue)) {\n            var _this_TextTrackSymbol__native;\n            (_this_TextTrackSymbol__native = this[TextTrackSymbol._native]) === null || _this_TextTrackSymbol__native === void 0 ? void 0 : _this_TextTrackSymbol__native.track.addCue(cue);\n        }\n        this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"add-cue\", {\n            detail: cue,\n            trigger\n        }));\n        if (isCueActive(cue, this._currentTime)) {\n            this[TextTrackSymbol._updateActiveCues](this._currentTime, trigger);\n        }\n    }\n    removeCue(cue, trigger) {\n        const index = this._cues.indexOf(cue);\n        if (index >= 0) {\n            var _this_TextTrackSymbol__native;\n            const isActive = this._activeCues.includes(cue);\n            this._cues.splice(index, 1);\n            (_this_TextTrackSymbol__native = this[TextTrackSymbol._native]) === null || _this_TextTrackSymbol__native === void 0 ? void 0 : _this_TextTrackSymbol__native.track.removeCue(cue);\n            this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"remove-cue\", {\n                detail: cue,\n                trigger\n            }));\n            if (isActive) {\n                this[TextTrackSymbol._updateActiveCues](this._currentTime, trigger);\n            }\n        }\n    }\n    setMode(mode, trigger) {\n        var _this_TextTrackSymbol__onModeChange, _this;\n        if (this._mode === mode) return;\n        this._mode = mode;\n        if (mode === \"disabled\") {\n            this._activeCues = [];\n            this._activeCuesChanged();\n        } else if (this.readyState === 2) {\n            this[TextTrackSymbol._updateActiveCues](this._currentTime, trigger);\n        } else {\n            this._load();\n        }\n        this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"mode-change\", {\n            detail: this,\n            trigger\n        }));\n        (_this_TextTrackSymbol__onModeChange = (_this = this)[TextTrackSymbol._onModeChange]) === null || _this_TextTrackSymbol__onModeChange === void 0 ? void 0 : _this_TextTrackSymbol__onModeChange.call(_this);\n    }\n    /** @internal */ [(_c = TextTrackSymbol._readyState, _b = TextTrackSymbol._onModeChange, _a$2 = TextTrackSymbol._native, TextTrackSymbol._updateActiveCues)](currentTime, trigger) {\n        this._currentTime = currentTime;\n        if (this.mode === \"disabled\" || !this._cues.length) return;\n        const activeCues = [];\n        for(let i = 0, length = this._cues.length; i < length; i++){\n            const cue = this._cues[i];\n            if (isCueActive(cue, currentTime)) activeCues.push(cue);\n        }\n        let changed = activeCues.length !== this._activeCues.length;\n        if (!changed) {\n            for(let i = 0; i < activeCues.length; i++){\n                if (!this._activeCues.includes(activeCues[i])) {\n                    changed = true;\n                    break;\n                }\n            }\n        }\n        this._activeCues = activeCues;\n        if (changed) this._activeCuesChanged(trigger);\n    }\n    /** @internal */ [TextTrackSymbol._canLoad]() {\n        this._canLoad = true;\n        if (this._mode !== \"disabled\") this._load();\n    }\n    _parseContent(init) {\n        __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_media-captions_dist_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! media-captions */ \"(app-pages-browser)/./node_modules/media-captions/dist/dev.js\")).then((param)=>{\n            let { parseText, VTTCue, VTTRegion } = param;\n            if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(init.content) || init.type === \"json\") {\n                this._parseJSON(init.content, VTTCue, VTTRegion);\n                if (this.readyState !== 3) this._ready();\n            } else {\n                parseText(init.content, {\n                    type: init.type\n                }).then((param)=>{\n                    let { cues, regions } = param;\n                    this._cues = cues;\n                    this._regions = regions;\n                    this._ready();\n                });\n            }\n        });\n    }\n    async _load() {\n        if (!this._canLoad || this[TextTrackSymbol._readyState] > 0) return;\n        this[TextTrackSymbol._readyState] = 1;\n        this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"load-start\"));\n        if (!this.src) {\n            this._ready();\n            return;\n        }\n        try {\n            var _this_TextTrackSymbol__crossOrigin, _this;\n            const { parseResponse, VTTCue, VTTRegion } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_media-captions_dist_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! media-captions */ \"(app-pages-browser)/./node_modules/media-captions/dist/dev.js\")), crossOrigin = (_this_TextTrackSymbol__crossOrigin = (_this = this)[TextTrackSymbol._crossOrigin]) === null || _this_TextTrackSymbol__crossOrigin === void 0 ? void 0 : _this_TextTrackSymbol__crossOrigin.call(_this);\n            const response = fetch(this.src, {\n                headers: this.type === \"json\" ? {\n                    \"Content-Type\": \"application/json\"\n                } : void 0,\n                credentials: getRequestCredentials(crossOrigin)\n            });\n            if (this.type === \"json\") {\n                this._parseJSON(await (await response).text(), VTTCue, VTTRegion);\n            } else {\n                var _errors_;\n                const { errors, metadata, regions, cues } = await parseResponse(response, {\n                    type: this.type,\n                    encoding: this.encoding\n                });\n                if (((_errors_ = errors[0]) === null || _errors_ === void 0 ? void 0 : _errors_.code) === 0) {\n                    throw errors[0];\n                } else {\n                    this._metadata = metadata;\n                    this._regions = regions;\n                    this._cues = cues;\n                }\n            }\n            this._ready();\n        } catch (error) {\n            this._error(error);\n        }\n    }\n    _ready() {\n        this[TextTrackSymbol._readyState] = 2;\n        if (!this.src || this.type !== \"vtt\") {\n            const native = this[TextTrackSymbol._native];\n            if (native && !native.managed) {\n                for (const cue of this._cues)native.track.addCue(cue);\n            }\n        }\n        const loadEvent = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"load\");\n        this[TextTrackSymbol._updateActiveCues](this._currentTime, loadEvent);\n        this.dispatchEvent(loadEvent);\n    }\n    _error(error) {\n        this[TextTrackSymbol._readyState] = 3;\n        this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"error\", {\n            detail: error\n        }));\n    }\n    _parseJSON(json, VTTCue, VTTRegion) {\n        try {\n            const { regions, cues } = parseJSONCaptionsFile(json, VTTCue, VTTRegion);\n            this._regions = regions;\n            this._cues = cues;\n        } catch (error) {\n            {\n                console.error(\"[vidstack] failed to parse JSON captions at: `\".concat(this.src, \"`\\n\\n\"), error);\n            }\n            this._error(error);\n        }\n    }\n    _activeCuesChanged(trigger) {\n        this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"cue-change\", {\n            trigger\n        }));\n    }\n    constructor(init){\n        super();\n        this.id = \"\";\n        this.label = \"\";\n        this.language = \"\";\n        this.default = false;\n        this._canLoad = false;\n        this._currentTime = 0;\n        this._mode = \"disabled\";\n        this._metadata = {};\n        this._regions = [];\n        this._cues = [];\n        this._activeCues = [];\n        /** @internal */ this[_c] = 0;\n        /** @internal */ this[_b] = null;\n        /** @internal */ this[_a$2] = null;\n        for (const prop of Object.keys(init))this[prop] = init[prop];\n        if (!this.type) this.type = \"vtt\";\n        if (!IS_SERVER && init.content) {\n            this._parseContent(init);\n        } else if (!init.src) {\n            this[TextTrackSymbol._readyState] = 2;\n        }\n        if (isTrackCaptionKind(this) && !this.label) {\n            console.warn(\"[vidstack] captions text track created without label: `\".concat(this.src, \"`\"));\n        }\n    }\n}\nconst captionRE = /captions|subtitles/;\nfunction isTrackCaptionKind(track) {\n    return captionRE.test(track.kind);\n}\nfunction parseJSONCaptionsFile(json, Cue, Region) {\n    const content = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(json) ? JSON.parse(json) : json;\n    let regions = [], cues = [];\n    if (content.regions && Region) {\n        regions = content.regions.map((region)=>Object.assign(new Region(), region));\n    }\n    if (content.cues || (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(content)) {\n        cues = ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(content) ? content : content.cues).filter((content2)=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(content2.startTime) && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(content2.endTime)).map((cue)=>Object.assign(new Cue(0, 0, \"\"), cue));\n    }\n    return {\n        regions,\n        cues\n    };\n}\nconst mediaState = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.State({\n    artist: \"\",\n    artwork: null,\n    audioTrack: null,\n    audioTracks: [],\n    autoPlay: false,\n    autoPlayError: null,\n    audioGain: null,\n    buffered: new TimeRange(),\n    canLoad: false,\n    canLoadPoster: false,\n    canFullscreen: false,\n    canOrientScreen: canOrientScreen(),\n    canPictureInPicture: false,\n    canPlay: false,\n    clipStartTime: 0,\n    clipEndTime: 0,\n    controls: false,\n    get iOSControls () {\n        return IS_IPHONE && this.mediaType === \"video\" && (!this.playsInline || !_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.fscreen.fullscreenEnabled && this.fullscreen);\n    },\n    get nativeControls () {\n        return this.controls || this.iOSControls;\n    },\n    controlsVisible: false,\n    get controlsHidden () {\n        return !this.controlsVisible;\n    },\n    crossOrigin: null,\n    ended: false,\n    error: null,\n    fullscreen: false,\n    get loop () {\n        return this.providedLoop || this.userPrefersLoop;\n    },\n    logLevel: \"warn\",\n    mediaType: \"unknown\",\n    muted: false,\n    paused: true,\n    played: new TimeRange(),\n    playing: false,\n    playsInline: false,\n    pictureInPicture: false,\n    preload: \"metadata\",\n    playbackRate: 1,\n    qualities: [],\n    quality: null,\n    autoQuality: false,\n    canSetQuality: true,\n    canSetPlaybackRate: true,\n    canSetVolume: false,\n    canSetAudioGain: false,\n    seekable: new TimeRange(),\n    seeking: false,\n    source: {\n        src: \"\",\n        type: \"\"\n    },\n    sources: [],\n    started: false,\n    textTracks: [],\n    textTrack: null,\n    get hasCaptions () {\n        return this.textTracks.filter(isTrackCaptionKind).length > 0;\n    },\n    volume: 1,\n    waiting: false,\n    realCurrentTime: 0,\n    get currentTime () {\n        return this.ended ? this.duration : this.clipStartTime > 0 ? Math.max(0, Math.min(this.realCurrentTime - this.clipStartTime, this.duration)) : this.realCurrentTime;\n    },\n    providedDuration: -1,\n    intrinsicDuration: 0,\n    get realDuration () {\n        return this.providedDuration > 0 ? this.providedDuration : this.intrinsicDuration;\n    },\n    get duration () {\n        return this.clipEndTime > 0 ? this.clipEndTime - this.clipStartTime : Math.max(0, this.realDuration - this.clipStartTime);\n    },\n    get title () {\n        return this.providedTitle || this.inferredTitle;\n    },\n    get poster () {\n        return this.providedPoster || this.inferredPoster;\n    },\n    get viewType () {\n        return this.providedViewType !== \"unknown\" ? this.providedViewType : this.inferredViewType;\n    },\n    get streamType () {\n        return this.providedStreamType !== \"unknown\" ? this.providedStreamType : this.inferredStreamType;\n    },\n    get currentSrc () {\n        return this.source;\n    },\n    get bufferedStart () {\n        var _getTimeRangesStart;\n        const start = (_getTimeRangesStart = getTimeRangesStart(this.buffered)) !== null && _getTimeRangesStart !== void 0 ? _getTimeRangesStart : 0;\n        return Math.max(0, start - this.clipStartTime);\n    },\n    get bufferedEnd () {\n        var _getTimeRangesEnd;\n        const end = (_getTimeRangesEnd = getTimeRangesEnd(this.buffered)) !== null && _getTimeRangesEnd !== void 0 ? _getTimeRangesEnd : 0;\n        return Math.min(this.duration, Math.max(0, end - this.clipStartTime));\n    },\n    get seekableStart () {\n        var _getTimeRangesStart1;\n        const start = (_getTimeRangesStart1 = getTimeRangesStart(this.seekable)) !== null && _getTimeRangesStart1 !== void 0 ? _getTimeRangesStart1 : 0;\n        return Math.max(0, start - this.clipStartTime);\n    },\n    get seekableEnd () {\n        var _getTimeRangesEnd1;\n        const end = this.canPlay ? (_getTimeRangesEnd1 = getTimeRangesEnd(this.seekable)) !== null && _getTimeRangesEnd1 !== void 0 ? _getTimeRangesEnd1 : Infinity : 0;\n        return this.clipEndTime > 0 ? Math.max(this.clipEndTime, Math.max(0, end - this.clipStartTime)) : end;\n    },\n    get seekableWindow () {\n        return Math.max(0, this.seekableEnd - this.seekableStart);\n    },\n    // ~~ remote playback ~~\n    canAirPlay: false,\n    canGoogleCast: false,\n    remotePlaybackState: \"disconnected\",\n    remotePlaybackType: \"none\",\n    remotePlaybackLoader: null,\n    remotePlaybackInfo: null,\n    get isAirPlayConnected () {\n        return this.remotePlaybackType === \"airplay\" && this.remotePlaybackState === \"connected\";\n    },\n    get isGoogleCastConnected () {\n        return this.remotePlaybackType === \"google-cast\" && this.remotePlaybackState === \"connected\";\n    },\n    // ~~ responsive design ~~\n    pointer: \"fine\",\n    orientation: \"landscape\",\n    width: 0,\n    height: 0,\n    mediaWidth: 0,\n    mediaHeight: 0,\n    lastKeyboardAction: null,\n    // ~~ user props ~~\n    userBehindLiveEdge: false,\n    // ~~ live props ~~\n    liveEdgeTolerance: 10,\n    minLiveDVRWindow: 60,\n    get canSeek () {\n        return /unknown|on-demand|:dvr/.test(this.streamType) && Number.isFinite(this.seekableWindow) && (!this.live || /:dvr/.test(this.streamType) && this.seekableWindow >= this.minLiveDVRWindow);\n    },\n    get live () {\n        return this.streamType.includes(\"live\") || !Number.isFinite(this.realDuration);\n    },\n    get liveEdgeStart () {\n        var _this_liveSyncPosition;\n        return this.live && Number.isFinite(this.seekableEnd) ? Math.max(0, ((_this_liveSyncPosition = this.liveSyncPosition) !== null && _this_liveSyncPosition !== void 0 ? _this_liveSyncPosition : this.seekableEnd) - this.liveEdgeTolerance) : 0;\n    },\n    get liveEdge () {\n        return this.live && (!this.canSeek || !this.userBehindLiveEdge && this.currentTime >= this.liveEdgeStart);\n    },\n    get liveEdgeWindow () {\n        return this.live && Number.isFinite(this.seekableEnd) ? this.seekableEnd - this.liveEdgeStart : 0;\n    },\n    // ~~ internal props ~~\n    autoPlaying: false,\n    providedTitle: \"\",\n    inferredTitle: \"\",\n    providedLoop: false,\n    userPrefersLoop: false,\n    providedPoster: \"\",\n    inferredPoster: \"\",\n    inferredViewType: \"unknown\",\n    providedViewType: \"unknown\",\n    providedStreamType: \"unknown\",\n    inferredStreamType: \"unknown\",\n    liveSyncPosition: null,\n    savedState: null\n});\nconst RESET_ON_SRC_QUALITY_CHANGE = /* @__PURE__ */ new Set([\n    \"autoPlayError\",\n    \"autoPlaying\",\n    \"buffered\",\n    \"canPlay\",\n    \"error\",\n    \"paused\",\n    \"played\",\n    \"playing\",\n    \"seekable\",\n    \"seeking\",\n    \"waiting\"\n]);\nconst RESET_ON_SRC_CHANGE = /* @__PURE__ */ new Set([\n    ...RESET_ON_SRC_QUALITY_CHANGE,\n    \"ended\",\n    \"inferredPoster\",\n    \"inferredStreamType\",\n    \"inferredTitle\",\n    \"intrinsicDuration\",\n    \"liveSyncPosition\",\n    \"realCurrentTime\",\n    \"savedState\",\n    \"started\",\n    \"userBehindLiveEdge\"\n]);\nfunction softResetMediaState($media) {\n    let isSourceQualityChange = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    const filter = isSourceQualityChange ? RESET_ON_SRC_QUALITY_CHANGE : RESET_ON_SRC_CHANGE;\n    mediaState.reset($media, (prop)=>filter.has(prop));\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.tick)();\n}\nconst mediaContext = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useMediaContext() {\n    _s();\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(mediaContext);\n}\n_s(useMediaContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _a$1;\nconst GROUPED_LOG = Symbol(\"GROUPED_LOG\");\n_a$1 = GROUPED_LOG;\nconst _GroupedLog = class _GroupedLog {\n    log() {\n        for(var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++){\n            data[_key] = arguments[_key];\n        }\n        this.logs.push({\n            data\n        });\n        return this;\n    }\n    labelledLog(label) {\n        for(var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n            data[_key - 1] = arguments[_key];\n        }\n        this.logs.push({\n            label,\n            data\n        });\n        return this;\n    }\n    groupStart(title) {\n        var _this_root;\n        return new _GroupedLog(this.logger, this.level, title, (_this_root = this.root) !== null && _this_root !== void 0 ? _this_root : this, this);\n    }\n    groupEnd() {\n        var _this_parent;\n        (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.logs.push(this);\n        var _this_parent1;\n        return (_this_parent1 = this.parent) !== null && _this_parent1 !== void 0 ? _this_parent1 : this;\n    }\n    dispatch() {\n        var _this_root;\n        return this.logger.dispatch(this.level, (_this_root = this.root) !== null && _this_root !== void 0 ? _this_root : this);\n    }\n    constructor(logger, level, title, root, parent){\n        this.logger = logger;\n        this.level = level;\n        this.title = title;\n        this.root = root;\n        this.parent = parent;\n        this[_a$1] = true;\n        this.logs = [];\n    }\n};\nlet GroupedLog = _GroupedLog;\nfunction isGroupedLog(data) {\n    return !!(data === null || data === void 0 ? void 0 : data[GROUPED_LOG]);\n}\nclass Logger {\n    error() {\n        for(var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++){\n            data[_key] = arguments[_key];\n        }\n        return this.dispatch(\"error\", ...data);\n    }\n    warn() {\n        for(var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++){\n            data[_key] = arguments[_key];\n        }\n        return this.dispatch(\"warn\", ...data);\n    }\n    info() {\n        for(var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++){\n            data[_key] = arguments[_key];\n        }\n        return this.dispatch(\"info\", ...data);\n    }\n    debug() {\n        for(var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++){\n            data[_key] = arguments[_key];\n        }\n        return this.dispatch(\"debug\", ...data);\n    }\n    errorGroup(title) {\n        return new GroupedLog(this, \"error\", title);\n    }\n    warnGroup(title) {\n        return new GroupedLog(this, \"warn\", title);\n    }\n    infoGroup(title) {\n        return new GroupedLog(this, \"info\", title);\n    }\n    debugGroup(title) {\n        return new GroupedLog(this, \"debug\", title);\n    }\n    setTarget(newTarget) {\n        this._target = newTarget;\n    }\n    dispatch(level) {\n        for(var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n            data[_key - 1] = arguments[_key];\n        }\n        var _this__target;\n        return ((_this__target = this._target) === null || _this__target === void 0 ? void 0 : _this__target.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"vds-log\", {\n            bubbles: true,\n            composed: true,\n            detail: {\n                level,\n                data\n            }\n        }))) || false;\n    }\n    constructor(){\n        this._target = null;\n    }\n}\nclass MediaRemoteControl {\n    /**\n   * Set the target from which to dispatch media requests events from. The events should bubble\n   * up from this target to the player element.\n   *\n   * @example\n   * ```ts\n   * const button = document.querySelector('button');\n   * remote.setTarget(button);\n   * ```\n   */ setTarget(target) {\n        var _this__logger;\n        this._target = target;\n        (_this__logger = this._logger) === null || _this__logger === void 0 ? void 0 : _this__logger.setTarget(target);\n    }\n    /**\n   * Returns the current player element. This method will attempt to find the player by\n   * searching up from either the given `target` or default target set via `remote.setTarget`.\n   *\n   * @example\n   * ```ts\n   * const player = remote.getPlayer();\n   * ```\n   */ getPlayer(target) {\n        var _this;\n        if (this._player) return this._player;\n        (_this = target !== null && target !== void 0 ? target : this._target) === null || _this === void 0 ? void 0 : _this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"find-media-player\", {\n            detail: (player)=>void (this._player = player),\n            bubbles: true,\n            composed: true\n        }));\n        return this._player;\n    }\n    /**\n   * Set the current player element so the remote can support toggle methods such as\n   * `togglePaused` as they rely on the current media state.\n   */ setPlayer(player) {\n        this._player = player;\n    }\n    /**\n   * Dispatch a request to start the media loading process. This will only work if the media\n   * player has been initialized with a custom loading strategy `load=\"custom\">`.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/core-concepts/loading#load-strategies}\n   */ startLoading(trigger) {\n        this._dispatchRequest(\"media-start-loading\", trigger);\n    }\n    /**\n   * Dispatch a request to start the poster loading process. This will only work if the media\n   * player has been initialized with a custom poster loading strategy `posterLoad=\"custom\">`.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/core-concepts/loading#load-strategies}\n   */ startLoadingPoster(trigger) {\n        this._dispatchRequest(\"media-poster-start-loading\", trigger);\n    }\n    /**\n   * Dispatch a request to connect to AirPlay.\n   *\n   * @see {@link https://www.apple.com/au/airplay}\n   */ requestAirPlay(trigger) {\n        this._dispatchRequest(\"media-airplay-request\", trigger);\n    }\n    /**\n   * Dispatch a request to connect to Google Cast.\n   *\n   * @see {@link https://developers.google.com/cast/docs/overview}\n   */ requestGoogleCast(trigger) {\n        this._dispatchRequest(\"media-google-cast-request\", trigger);\n    }\n    /**\n   * Dispatch a request to begin/resume media playback.\n   */ play(trigger) {\n        this._dispatchRequest(\"media-play-request\", trigger);\n    }\n    /**\n   * Dispatch a request to pause media playback.\n   */ pause(trigger) {\n        this._dispatchRequest(\"media-pause-request\", trigger);\n    }\n    /**\n   * Dispatch a request to set the media volume to mute (0).\n   */ mute(trigger) {\n        this._dispatchRequest(\"media-mute-request\", trigger);\n    }\n    /**\n   * Dispatch a request to unmute the media volume and set it back to it's previous state.\n   */ unmute(trigger) {\n        this._dispatchRequest(\"media-unmute-request\", trigger);\n    }\n    /**\n   * Dispatch a request to enter fullscreen.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/fullscreen#remote-control}\n   */ enterFullscreen(target, trigger) {\n        this._dispatchRequest(\"media-enter-fullscreen-request\", trigger, target);\n    }\n    /**\n   * Dispatch a request to exit fullscreen.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/fullscreen#remote-control}\n   */ exitFullscreen(target, trigger) {\n        this._dispatchRequest(\"media-exit-fullscreen-request\", trigger, target);\n    }\n    /**\n   * Dispatch a request to lock the screen orientation.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/screen-orientation#remote-control}\n   */ lockScreenOrientation(lockType, trigger) {\n        this._dispatchRequest(\"media-orientation-lock-request\", trigger, lockType);\n    }\n    /**\n   * Dispatch a request to unlock the screen orientation.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/screen-orientation#remote-control}\n   */ unlockScreenOrientation(trigger) {\n        this._dispatchRequest(\"media-orientation-unlock-request\", trigger);\n    }\n    /**\n   * Dispatch a request to enter picture-in-picture mode.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/picture-in-picture#remote-control}\n   */ enterPictureInPicture(trigger) {\n        this._dispatchRequest(\"media-enter-pip-request\", trigger);\n    }\n    /**\n   * Dispatch a request to exit picture-in-picture mode.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/picture-in-picture#remote-control}\n   */ exitPictureInPicture(trigger) {\n        this._dispatchRequest(\"media-exit-pip-request\", trigger);\n    }\n    /**\n   * Notify the media player that a seeking process is happening and to seek to the given `time`.\n   */ seeking(time, trigger) {\n        this._dispatchRequest(\"media-seeking-request\", trigger, time);\n    }\n    /**\n   * Notify the media player that a seeking operation has completed and to seek to the given `time`.\n   * This is generally called after a series of `remote.seeking()` calls.\n   */ seek(time, trigger) {\n        this._dispatchRequest(\"media-seek-request\", trigger, time);\n    }\n    seekToLiveEdge(trigger) {\n        this._dispatchRequest(\"media-live-edge-request\", trigger);\n    }\n    /**\n   * Dispatch a request to update the length of the media in seconds.\n   *\n   * @example\n   * ```ts\n   * remote.changeDuration(100); // 100 seconds\n   * ```\n   */ changeDuration(duration, trigger) {\n        this._dispatchRequest(\"media-duration-change-request\", trigger, duration);\n    }\n    /**\n   * Dispatch a request to update the clip start time. This is the time at which media playback\n   * should start at.\n   *\n   * @example\n   * ```ts\n   * remote.changeClipStart(100); // start at 100 seconds\n   * ```\n   */ changeClipStart(startTime, trigger) {\n        this._dispatchRequest(\"media-clip-start-change-request\", trigger, startTime);\n    }\n    /**\n   * Dispatch a request to update the clip end time. This is the time at which media playback\n   * should end at.\n   *\n   * @example\n   * ```ts\n   * remote.changeClipEnd(100); // end at 100 seconds\n   * ```\n   */ changeClipEnd(endTime, trigger) {\n        this._dispatchRequest(\"media-clip-end-change-request\", trigger, endTime);\n    }\n    /**\n   * Dispatch a request to update the media volume to the given `volume` level which is a value\n   * between 0 and 1.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/audio-gain#remote-control}\n   * @example\n   * ```ts\n   * remote.changeVolume(0); // 0%\n   * remote.changeVolume(0.05); // 5%\n   * remote.changeVolume(0.5); // 50%\n   * remote.changeVolume(0.75); // 70%\n   * remote.changeVolume(1); // 100%\n   * ```\n   */ changeVolume(volume, trigger) {\n        this._dispatchRequest(\"media-volume-change-request\", trigger, Math.max(0, Math.min(1, volume)));\n    }\n    /**\n   * Dispatch a request to change the current audio track.\n   *\n   * @example\n   * ```ts\n   * remote.changeAudioTrack(1); // track at index 1\n   * ```\n   */ changeAudioTrack(index, trigger) {\n        this._dispatchRequest(\"media-audio-track-change-request\", trigger, index);\n    }\n    /**\n   * Dispatch a request to change the video quality. The special value `-1` represents auto quality\n   * selection.\n   *\n   * @example\n   * ```ts\n   * remote.changeQuality(-1); // auto\n   * remote.changeQuality(1); // quality at index 1\n   * ```\n   */ changeQuality(index, trigger) {\n        this._dispatchRequest(\"media-quality-change-request\", trigger, index);\n    }\n    /**\n   * Request auto quality selection.\n   */ requestAutoQuality(trigger) {\n        this.changeQuality(-1, trigger);\n    }\n    /**\n   * Dispatch a request to change the mode of the text track at the given index.\n   *\n   * @example\n   * ```ts\n   * remote.changeTextTrackMode(1, 'showing'); // track at index 1\n   * ```\n   */ changeTextTrackMode(index, mode, trigger) {\n        this._dispatchRequest(\"media-text-track-change-request\", trigger, {\n            index,\n            mode\n        });\n    }\n    /**\n   * Dispatch a request to change the media playback rate.\n   *\n   * @example\n   * ```ts\n   * remote.changePlaybackRate(0.5); // Half the normal speed\n   * remote.changePlaybackRate(1); // Normal speed\n   * remote.changePlaybackRate(1.5); // 50% faster than normal\n   * remote.changePlaybackRate(2); // Double the normal speed\n   * ```\n   */ changePlaybackRate(rate, trigger) {\n        this._dispatchRequest(\"media-rate-change-request\", trigger, rate);\n    }\n    /**\n   * Dispatch a request to change the media audio gain.\n   *\n   * @example\n   * ```ts\n   * remote.changeAudioGain(1); // Disable audio gain\n   * remote.changeAudioGain(1.5); // 50% louder\n   * remote.changeAudioGain(2); // 100% louder\n   * ```\n   */ changeAudioGain(gain, trigger) {\n        this._dispatchRequest(\"media-audio-gain-change-request\", trigger, gain);\n    }\n    /**\n   * Dispatch a request to resume idle tracking on controls.\n   */ resumeControls(trigger) {\n        this._dispatchRequest(\"media-resume-controls-request\", trigger);\n    }\n    /**\n   * Dispatch a request to pause controls idle tracking. Pausing tracking will result in the\n   * controls being visible until `remote.resumeControls()` is called. This method\n   * is generally used when building custom controls and you'd like to prevent the UI from\n   * disappearing.\n   *\n   * @example\n   * ```ts\n   * // Prevent controls hiding while menu is being interacted with.\n   * function onSettingsOpen() {\n   *   remote.pauseControls();\n   * }\n   *\n   * function onSettingsClose() {\n   *   remote.resumeControls();\n   * }\n   * ```\n   */ pauseControls(trigger) {\n        this._dispatchRequest(\"media-pause-controls-request\", trigger);\n    }\n    /**\n   * Dispatch a request to toggle the media playback state.\n   */ togglePaused(trigger) {\n        const player = this.getPlayer(trigger === null || trigger === void 0 ? void 0 : trigger.target);\n        if (!player) {\n            this._noPlayerWarning(this.togglePaused.name);\n            return;\n        }\n        if (player.state.paused) this.play(trigger);\n        else this.pause(trigger);\n    }\n    /**\n   * Dispatch a request to toggle the controls visibility.\n   */ toggleControls(trigger) {\n        const player = this.getPlayer(trigger === null || trigger === void 0 ? void 0 : trigger.target);\n        if (!player) {\n            this._noPlayerWarning(this.toggleControls.name);\n            return;\n        }\n        if (!player.controls.showing) {\n            player.controls.show(0, trigger);\n        } else {\n            player.controls.hide(0, trigger);\n        }\n    }\n    /**\n   * Dispatch a request to toggle the media muted state.\n   */ toggleMuted(trigger) {\n        const player = this.getPlayer(trigger === null || trigger === void 0 ? void 0 : trigger.target);\n        if (!player) {\n            this._noPlayerWarning(this.toggleMuted.name);\n            return;\n        }\n        if (player.state.muted) this.unmute(trigger);\n        else this.mute(trigger);\n    }\n    /**\n   * Dispatch a request to toggle the media fullscreen state.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/fullscreen#remote-control}\n   */ toggleFullscreen(target, trigger) {\n        const player = this.getPlayer(trigger === null || trigger === void 0 ? void 0 : trigger.target);\n        if (!player) {\n            this._noPlayerWarning(this.toggleFullscreen.name);\n            return;\n        }\n        if (player.state.fullscreen) this.exitFullscreen(target, trigger);\n        else this.enterFullscreen(target, trigger);\n    }\n    /**\n   * Dispatch a request to toggle the media picture-in-picture mode.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/picture-in-picture#remote-control}\n   */ togglePictureInPicture(trigger) {\n        const player = this.getPlayer(trigger === null || trigger === void 0 ? void 0 : trigger.target);\n        if (!player) {\n            this._noPlayerWarning(this.togglePictureInPicture.name);\n            return;\n        }\n        if (player.state.pictureInPicture) this.exitPictureInPicture(trigger);\n        else this.enterPictureInPicture(trigger);\n    }\n    /**\n   * Show captions.\n   */ showCaptions(trigger) {\n        const player = this.getPlayer(trigger === null || trigger === void 0 ? void 0 : trigger.target);\n        if (!player) {\n            this._noPlayerWarning(this.showCaptions.name);\n            return;\n        }\n        let tracks = player.state.textTracks, index = this._prevTrackIndex;\n        if (!tracks[index] || !isTrackCaptionKind(tracks[index])) {\n            index = -1;\n        }\n        if (index === -1) {\n            index = tracks.findIndex((track)=>isTrackCaptionKind(track) && track.default);\n        }\n        if (index === -1) {\n            index = tracks.findIndex((track)=>isTrackCaptionKind(track));\n        }\n        if (index >= 0) this.changeTextTrackMode(index, \"showing\", trigger);\n        this._prevTrackIndex = -1;\n    }\n    /**\n   * Turn captions off.\n   */ disableCaptions(trigger) {\n        const player = this.getPlayer(trigger === null || trigger === void 0 ? void 0 : trigger.target);\n        if (!player) {\n            this._noPlayerWarning(this.disableCaptions.name);\n            return;\n        }\n        const tracks = player.state.textTracks, track = player.state.textTrack;\n        if (track) {\n            const index = tracks.indexOf(track);\n            this.changeTextTrackMode(index, \"disabled\", trigger);\n            this._prevTrackIndex = index;\n        }\n    }\n    /**\n   * Dispatch a request to toggle the current captions mode.\n   */ toggleCaptions(trigger) {\n        const player = this.getPlayer(trigger === null || trigger === void 0 ? void 0 : trigger.target);\n        if (!player) {\n            this._noPlayerWarning(this.toggleCaptions.name);\n            return;\n        }\n        if (player.state.textTrack) {\n            this.disableCaptions();\n        } else {\n            this.showCaptions();\n        }\n    }\n    userPrefersLoopChange(prefersLoop, trigger) {\n        this._dispatchRequest(\"media-user-loop-change-request\", trigger, prefersLoop);\n    }\n    _dispatchRequest(type, trigger, detail) {\n        var _this__player, _this_getPlayer;\n        const request = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(type, {\n            bubbles: true,\n            composed: true,\n            cancelable: true,\n            detail,\n            trigger\n        });\n        let target = (trigger === null || trigger === void 0 ? void 0 : trigger.target) || null;\n        if (target && target instanceof _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component) target = target.el;\n        const shouldUsePlayer = !target || target === document || target === window || target === document.body || ((_this__player = this._player) === null || _this__player === void 0 ? void 0 : _this__player.el) && target instanceof Node && !this._player.el.contains(target);\n        var _this__target;\n        target = shouldUsePlayer ? (_this__target = this._target) !== null && _this__target !== void 0 ? _this__target : (_this_getPlayer = this.getPlayer()) === null || _this_getPlayer === void 0 ? void 0 : _this_getPlayer.el : target !== null && target !== void 0 ? target : this._target;\n        {\n            var _this__logger;\n            (_this__logger = this._logger) === null || _this__logger === void 0 ? void 0 : _this__logger.debugGroup(\"\\uD83D\\uDCE8 dispatching `\".concat(type, \"`\")).labelledLog(\"Target\", target).labelledLog(\"Player\", this._player).labelledLog(\"Request Event\", request).labelledLog(\"Trigger Event\", trigger).dispatch();\n        }\n        if (this._player) {\n            if (type === \"media-play-request\" && !this._player.state.canLoad) {\n                target === null || target === void 0 ? void 0 : target.dispatchEvent(request);\n            } else {\n                this._player.canPlayQueue._enqueue(type, ()=>target === null || target === void 0 ? void 0 : target.dispatchEvent(request));\n            }\n        } else {\n            target === null || target === void 0 ? void 0 : target.dispatchEvent(request);\n        }\n    }\n    _noPlayerWarning(method) {\n        {\n            console.warn(\"[vidstack] attempted to call `MediaRemoteControl.\".concat(method, \"`() that requires player but failed because remote could not find a parent player element from target\"));\n        }\n    }\n    constructor(_logger = new Logger()){\n        this._logger = _logger;\n        this._target = null;\n        this._player = null;\n        this._prevTrackIndex = -1;\n    }\n}\nclass LocalMediaStorage {\n    async getVolume() {\n        return this._data.volume;\n    }\n    async setVolume(volume) {\n        this._data.volume = volume;\n        this.save();\n    }\n    async getMuted() {\n        return this._data.muted;\n    }\n    async setMuted(muted) {\n        this._data.muted = muted;\n        this.save();\n    }\n    async getTime() {\n        return this._data.time;\n    }\n    async setTime(time, ended) {\n        const shouldClear = time < 0;\n        this._data.time = !shouldClear ? time : null;\n        if (shouldClear || ended) this.saveTime();\n        else this.saveTimeThrottled();\n    }\n    async getLang() {\n        return this._data.lang;\n    }\n    async setLang(lang) {\n        this._data.lang = lang;\n        this.save();\n    }\n    async getCaptions() {\n        return this._data.captions;\n    }\n    async setCaptions(enabled) {\n        this._data.captions = enabled;\n        this.save();\n    }\n    async getPlaybackRate() {\n        return this._data.rate;\n    }\n    async setPlaybackRate(rate) {\n        this._data.rate = rate;\n        this.save();\n    }\n    async getAudioGain() {\n        return this._data.audioGain;\n    }\n    async setAudioGain(gain) {\n        this._data.audioGain = gain;\n        this.save();\n    }\n    async getVideoQuality() {\n        return this._data.quality;\n    }\n    async setVideoQuality(quality) {\n        this._data.quality = quality;\n        this.save();\n    }\n    onChange(src, mediaId) {\n        let playerId = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"vds-player\";\n        const savedData = playerId ? localStorage.getItem(playerId) : null, savedTime = mediaId ? localStorage.getItem(mediaId) : null;\n        this.playerId = playerId;\n        this.mediaId = mediaId;\n        this._data = {\n            volume: null,\n            muted: null,\n            audioGain: null,\n            lang: null,\n            captions: null,\n            rate: null,\n            quality: null,\n            ...savedData ? JSON.parse(savedData) : {},\n            time: savedTime ? +savedTime : null\n        };\n    }\n    save() {\n        if (IS_SERVER || !this.playerId) return;\n        const data = JSON.stringify({\n            ...this._data,\n            time: void 0\n        });\n        localStorage.setItem(this.playerId, data);\n    }\n    saveTime() {\n        if (IS_SERVER || !this.mediaId) return;\n        var _this__data_time;\n        const data = ((_this__data_time = this._data.time) !== null && _this__data_time !== void 0 ? _this__data_time : 0).toString();\n        localStorage.setItem(this.mediaId, data);\n    }\n    constructor(){\n        this.playerId = \"vds-player\";\n        this.mediaId = null;\n        this._data = {\n            volume: null,\n            muted: null,\n            audioGain: null,\n            time: null,\n            lang: null,\n            captions: null,\n            rate: null,\n            quality: null\n        };\n        this.saveTimeThrottled = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.functionThrottle)(this.saveTime.bind(this), 1e3);\n    }\n}\nfunction round(num) {\n    let decimalPlaces = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;\n    return Number(num.toFixed(decimalPlaces));\n}\nfunction getNumberOfDecimalPlaces(num) {\n    var _String_split_;\n    var _String_split__length;\n    return (_String_split__length = (_String_split_ = String(num).split(\".\")[1]) === null || _String_split_ === void 0 ? void 0 : _String_split_.length) !== null && _String_split__length !== void 0 ? _String_split__length : 0;\n}\nfunction clampNumber(min, value, max) {\n    return Math.max(min, Math.min(max, value));\n}\nfunction listen(target, type, handler) {\n    if (!target) return;\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(target, type, handler);\n}\nfunction isEventInside(el, event1) {\n    const target = event1.composedPath()[0];\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isDOMNode)(target) && el.contains(target);\n}\nconst rafJobs = /* @__PURE__ */ new Set();\nif (!IS_SERVER) {\n    let processJobs = function() {\n        for (const job of rafJobs){\n            try {\n                job();\n            } catch (e) {\n                console.error(\"[vidstack] failed job:\\n\\n\".concat(e));\n            }\n        }\n        window.requestAnimationFrame(processJobs);\n    };\n    processJobs();\n}\nfunction scheduleRafJob(job) {\n    rafJobs.add(job);\n    return ()=>rafJobs.delete(job);\n}\nfunction setAttributeIfEmpty(target, name, value) {\n    if (!target.hasAttribute(name)) target.setAttribute(name, value);\n}\nfunction setARIALabel(target, $label) {\n    if (target.hasAttribute(\"aria-label\") || target.hasAttribute(\"data-no-label\")) return;\n    if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)($label)) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(target, \"aria-label\", $label);\n        return;\n    }\n    function updateAriaDescription() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(target, \"aria-label\", $label());\n    }\n    if (IS_SERVER) updateAriaDescription();\n    else (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(updateAriaDescription);\n}\nfunction isElementVisible(el) {\n    const style = getComputedStyle(el);\n    return style.display !== \"none\" && parseInt(style.opacity) > 0;\n}\nfunction checkVisibility(el) {\n    return !!el && (\"checkVisibility\" in el ? el.checkVisibility({\n        checkOpacity: true,\n        checkVisibilityCSS: true\n    }) : isElementVisible(el));\n}\nfunction observeVisibility(el, callback) {\n    return scheduleRafJob(()=>callback(checkVisibility(el)));\n}\nfunction isElementParent(owner, node, test) {\n    while(node){\n        if (node === owner) {\n            return true;\n        } else if (test === null || test === void 0 ? void 0 : test(node)) {\n            break;\n        } else {\n            node = node.parentElement;\n        }\n    }\n    return false;\n}\nfunction onPress(target, handler) {\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(target, \"pointerup\", (event1)=>{\n        if (event1.button === 0 && !event1.defaultPrevented) handler(event1);\n    });\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(target, \"keydown\", (event1)=>{\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isKeyboardClick)(event1)) handler(event1);\n    });\n}\nfunction isTouchPinchEvent(event1) {\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isTouchEvent)(event1) && (event1.touches.length > 1 || event1.changedTouches.length > 1);\n}\nfunction requestScopedAnimationFrame(callback) {\n    if (IS_SERVER) return callback();\n    let scope = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.getScope)(), id = window.requestAnimationFrame(()=>{\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.scoped)(callback, scope);\n        id = -1;\n    });\n    return ()=>void window.cancelAnimationFrame(id);\n}\nfunction autoPlacement(el, trigger, placement, param) {\n    let { offsetVarName, xOffset, yOffset, ...options } = param;\n    if (!el) return;\n    const floatingPlacement = placement.replace(\" \", \"-\").replace(\"-center\", \"\");\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(el, \"visibility\", !trigger ? \"hidden\" : null);\n    if (!trigger) return;\n    let isTop = placement.includes(\"top\");\n    const negateX = (x)=>placement.includes(\"left\") ? \"calc(-1 * \".concat(x, \")\") : x, negateY = (y)=>isTop ? \"calc(-1 * \".concat(y, \")\") : y;\n    return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.autoUpdate)(trigger, el, ()=>{\n        var _options_middleware;\n        (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.computePosition)(trigger, el, {\n            placement: floatingPlacement,\n            middleware: [\n                ...(_options_middleware = options.middleware) !== null && _options_middleware !== void 0 ? _options_middleware : [],\n                (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.flip)({\n                    fallbackAxisSideDirection: \"start\",\n                    crossAxis: false\n                }),\n                (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.shift)()\n            ],\n            ...options\n        }).then((param)=>{\n            let { x, y, middlewareData } = param;\n            var _middlewareData_flip;\n            const hasFlipped = !!((_middlewareData_flip = middlewareData.flip) === null || _middlewareData_flip === void 0 ? void 0 : _middlewareData_flip.index);\n            isTop = placement.includes(hasFlipped ? \"bottom\" : \"top\");\n            el.setAttribute(\"data-placement\", hasFlipped ? placement.startsWith(\"top\") ? placement.replace(\"top\", \"bottom\") : placement.replace(\"bottom\", \"top\") : placement);\n            Object.assign(el.style, {\n                top: \"calc(\".concat(y + \"px\", \" + \").concat(negateY(yOffset ? yOffset + \"px\" : \"var(--\".concat(offsetVarName, \"-y-offset, 0px)\")), \")\"),\n                left: \"calc(\".concat(x + \"px\", \" + \").concat(negateX(xOffset ? xOffset + \"px\" : \"var(--\".concat(offsetVarName, \"-x-offset, 0px)\")), \")\")\n            });\n        });\n    });\n}\nfunction hasAnimation(el) {\n    const styles = getComputedStyle(el);\n    return styles.animationName !== \"none\";\n}\nfunction isHTMLElement(el) {\n    return el instanceof HTMLElement;\n}\nclass NativeTextRenderer {\n    canRender(_, video) {\n        return !!video;\n    }\n    attach(video) {\n        this._video = video;\n        if (video) video.textTracks.onchange = this._onChange.bind(this);\n    }\n    addTrack(track) {\n        this._tracks.add(track);\n        this._attachTrack(track);\n    }\n    removeTrack(track) {\n        var _track_TextTrackSymbol__native_remove, _track_TextTrackSymbol__native;\n        (_track_TextTrackSymbol__native = track[TextTrackSymbol._native]) === null || _track_TextTrackSymbol__native === void 0 ? void 0 : (_track_TextTrackSymbol__native_remove = _track_TextTrackSymbol__native.remove) === null || _track_TextTrackSymbol__native_remove === void 0 ? void 0 : _track_TextTrackSymbol__native_remove.call(_track_TextTrackSymbol__native);\n        track[TextTrackSymbol._native] = null;\n        this._tracks.delete(track);\n    }\n    changeTrack(track) {\n        const current = track === null || track === void 0 ? void 0 : track[TextTrackSymbol._native];\n        if (current && current.track.mode !== \"showing\") {\n            current.track.mode = \"showing\";\n        }\n        this._track = track;\n    }\n    setDisplay(display) {\n        this._display = display;\n        this._onChange();\n    }\n    detach() {\n        if (this._video) this._video.textTracks.onchange = null;\n        for (const track of this._tracks)this.removeTrack(track);\n        this._tracks.clear();\n        this._video = null;\n        this._track = null;\n    }\n    _attachTrack(track) {\n        var _track, _TextTrackSymbol__native;\n        if (!this._video) return;\n        var _;\n        const el = (_ = (_track = track)[_TextTrackSymbol__native = TextTrackSymbol._native]) !== null && _ !== void 0 ? _ : _track[_TextTrackSymbol__native] = this._createTrackElement(track);\n        if (isHTMLElement(el)) {\n            this._video.append(el);\n            el.track.mode = el.default ? \"showing\" : \"disabled\";\n        }\n    }\n    _createTrackElement(track) {\n        const el = document.createElement(\"track\"), isDefault = track.default || track.mode === \"showing\", isSupported = track.src && track.type === \"vtt\";\n        el.id = track.id;\n        el.src = isSupported ? track.src : \"\";\n        el.label = track.label;\n        el.kind = track.kind;\n        el.default = isDefault;\n        track.language && (el.srclang = track.language);\n        if (isDefault && !isSupported) {\n            this._copyCues(track, el.track);\n        }\n        return el;\n    }\n    _copyCues(track, native) {\n        var _native_cues;\n        if (track.src && track.type === \"vtt\" || ((_native_cues = native.cues) === null || _native_cues === void 0 ? void 0 : _native_cues.length)) return;\n        for (const cue of track.cues)native.addCue(cue);\n    }\n    _onChange(event1) {\n        for (const track of this._tracks){\n            const native = track[TextTrackSymbol._native];\n            if (!native) continue;\n            if (!this._display) {\n                native.track.mode = native.managed ? \"hidden\" : \"disabled\";\n                continue;\n            }\n            const isShowing = native.track.mode === \"showing\";\n            if (isShowing) this._copyCues(track, native.track);\n            track.setMode(isShowing ? \"showing\" : \"disabled\", event1);\n        }\n    }\n    constructor(){\n        this.priority = 0;\n        this._display = true;\n        this._video = null;\n        this._track = null;\n        this._tracks = /* @__PURE__ */ new Set();\n    }\n}\nclass TextRenderers {\n    _watchControls() {\n        const { nativeControls } = this._media.$state;\n        this._nativeDisplay = nativeControls();\n        this._update();\n    }\n    add(renderer) {\n        this._renderers.push(renderer);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(this._update.bind(this));\n    }\n    remove(renderer) {\n        renderer.detach();\n        this._renderers.splice(this._renderers.indexOf(renderer), 1);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(this._update.bind(this));\n    }\n    /** @internal */ _attachVideo(video) {\n        requestAnimationFrame(()=>{\n            this._video = video;\n            if (video) {\n                this._nativeRenderer = new NativeTextRenderer();\n                this._nativeRenderer.attach(video);\n                for (const track of this._textTracks)this._addNativeTrack(track);\n            }\n            this._update();\n        });\n    }\n    _addNativeTrack(track) {\n        var _this__nativeRenderer;\n        if (!isTrackCaptionKind(track)) return;\n        (_this__nativeRenderer = this._nativeRenderer) === null || _this__nativeRenderer === void 0 ? void 0 : _this__nativeRenderer.addTrack(track);\n    }\n    _removeNativeTrack(track) {\n        var _this__nativeRenderer;\n        if (!isTrackCaptionKind(track)) return;\n        (_this__nativeRenderer = this._nativeRenderer) === null || _this__nativeRenderer === void 0 ? void 0 : _this__nativeRenderer.removeTrack(track);\n    }\n    _onAddTrack(event1) {\n        this._addNativeTrack(event1.detail);\n    }\n    _onRemoveTrack(event1) {\n        this._removeNativeTrack(event1.detail);\n    }\n    _update() {\n        var _this__nativeRenderer, _this__nativeRenderer1;\n        const currentTrack = this._textTracks.selected;\n        if (this._video && (this._nativeDisplay || (currentTrack === null || currentTrack === void 0 ? void 0 : currentTrack[TextTrackSymbol._nativeHLS]))) {\n            var _this__customRenderer, _this__nativeRenderer2, _this__nativeRenderer3;\n            (_this__customRenderer = this._customRenderer) === null || _this__customRenderer === void 0 ? void 0 : _this__customRenderer.changeTrack(null);\n            (_this__nativeRenderer2 = this._nativeRenderer) === null || _this__nativeRenderer2 === void 0 ? void 0 : _this__nativeRenderer2.setDisplay(true);\n            (_this__nativeRenderer3 = this._nativeRenderer) === null || _this__nativeRenderer3 === void 0 ? void 0 : _this__nativeRenderer3.changeTrack(currentTrack);\n            return;\n        }\n        (_this__nativeRenderer = this._nativeRenderer) === null || _this__nativeRenderer === void 0 ? void 0 : _this__nativeRenderer.setDisplay(false);\n        (_this__nativeRenderer1 = this._nativeRenderer) === null || _this__nativeRenderer1 === void 0 ? void 0 : _this__nativeRenderer1.changeTrack(null);\n        if (!currentTrack) {\n            var _this__customRenderer1;\n            (_this__customRenderer1 = this._customRenderer) === null || _this__customRenderer1 === void 0 ? void 0 : _this__customRenderer1.changeTrack(null);\n            return;\n        }\n        const customRenderer = this._renderers.sort((a, b)=>a.priority - b.priority).find((renderer)=>renderer.canRender(currentTrack, this._video));\n        if (this._customRenderer !== customRenderer) {\n            var _this__customRenderer2;\n            (_this__customRenderer2 = this._customRenderer) === null || _this__customRenderer2 === void 0 ? void 0 : _this__customRenderer2.detach();\n            customRenderer === null || customRenderer === void 0 ? void 0 : customRenderer.attach(this._video);\n            this._customRenderer = customRenderer !== null && customRenderer !== void 0 ? customRenderer : null;\n        }\n        customRenderer === null || customRenderer === void 0 ? void 0 : customRenderer.changeTrack(currentTrack);\n    }\n    _detach() {\n        var _this__nativeRenderer, _this__customRenderer;\n        (_this__nativeRenderer = this._nativeRenderer) === null || _this__nativeRenderer === void 0 ? void 0 : _this__nativeRenderer.detach();\n        this._nativeRenderer = null;\n        (_this__customRenderer = this._customRenderer) === null || _this__customRenderer === void 0 ? void 0 : _this__customRenderer.detach();\n        this._customRenderer = null;\n    }\n    constructor(_media){\n        this._media = _media;\n        this._video = null;\n        this._renderers = [];\n        this._nativeDisplay = false;\n        this._nativeRenderer = null;\n        this._customRenderer = null;\n        const textTracks = _media.textTracks;\n        this._textTracks = textTracks;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchControls.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(this._detach.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(textTracks, \"add\", this._onAddTrack.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(textTracks, \"remove\", this._onRemoveTrack.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(textTracks, \"mode-change\", this._update.bind(this));\n    }\n}\nconst ADD = Symbol(\"LIST_ADD\"), REMOVE = Symbol(\"LIST_REMOVE\"), RESET = Symbol(\"LIST_RESET\"), SELECT = Symbol(\"LIST_SELECT\"), READONLY = Symbol(\"LIST_READONLY\"), SET_READONLY = Symbol(\"LIST_SET_READONLY\"), ON_RESET = Symbol(\"LIST_ON_RESET\"), ON_REMOVE = Symbol(\"LIST_ON_REMOVE\"), ON_USER_SELECT = Symbol(\"LIST_ON_USER_SELECT\");\nconst ListSymbol = {\n    _add: ADD,\n    _remove: REMOVE,\n    _reset: RESET,\n    _select: SELECT,\n    _readonly: READONLY,\n    _setReadonly: SET_READONLY,\n    _onReset: ON_RESET,\n    _onRemove: ON_REMOVE,\n    _onUserSelect: ON_USER_SELECT\n};\nvar _a;\nclass List extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.EventsTarget {\n    get length() {\n        return this._items.length;\n    }\n    get readonly() {\n        return this[ListSymbol._readonly];\n    }\n    /**\n   * Returns the index of the first occurrence of the given item, or -1 if it is not present.\n   */ indexOf(item) {\n        return this._items.indexOf(item);\n    }\n    /**\n   * Returns an item matching the given `id`, or `null` if not present.\n   */ getById(id) {\n        if (id === \"\") return null;\n        var _this__items_find;\n        return (_this__items_find = this._items.find((item)=>item.id === id)) !== null && _this__items_find !== void 0 ? _this__items_find : null;\n    }\n    /**\n   * Transform list to an array.\n   */ toArray() {\n        return [\n            ...this._items\n        ];\n    }\n    [(_a = ListSymbol._readonly, Symbol.iterator)]() {\n        return this._items.values();\n    }\n    /** @internal */ [ListSymbol._add](item, trigger) {\n        const index = this._items.length;\n        if (!(\"\" + index in this)) {\n            Object.defineProperty(this, index, {\n                get () {\n                    return this._items[index];\n                }\n            });\n        }\n        if (this._items.includes(item)) return;\n        this._items.push(item);\n        this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"add\", {\n            detail: item,\n            trigger\n        }));\n    }\n    /** @internal */ [ListSymbol._remove](item, trigger) {\n        const index = this._items.indexOf(item);\n        if (index >= 0) {\n            var _this_ListSymbol__onRemove, _this;\n            (_this_ListSymbol__onRemove = (_this = this)[ListSymbol._onRemove]) === null || _this_ListSymbol__onRemove === void 0 ? void 0 : _this_ListSymbol__onRemove.call(_this, item, trigger);\n            this._items.splice(index, 1);\n            this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"remove\", {\n                detail: item,\n                trigger\n            }));\n        }\n    }\n    /** @internal */ [ListSymbol._reset](trigger) {\n        var _this_ListSymbol__onReset, _this;\n        for (const item of [\n            ...this._items\n        ])this[ListSymbol._remove](item, trigger);\n        this._items = [];\n        this[ListSymbol._setReadonly](false, trigger);\n        (_this_ListSymbol__onReset = (_this = this)[ListSymbol._onReset]) === null || _this_ListSymbol__onReset === void 0 ? void 0 : _this_ListSymbol__onReset.call(_this);\n    }\n    /** @internal */ [ListSymbol._setReadonly](readonly, trigger) {\n        if (this[ListSymbol._readonly] === readonly) return;\n        this[ListSymbol._readonly] = readonly;\n        this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"readonly-change\", {\n            detail: readonly,\n            trigger\n        }));\n    }\n    constructor(){\n        super(...arguments);\n        this._items = [];\n        /** @internal */ this[_a] = false;\n    }\n}\nclass TextTrackList extends List {\n    get selected() {\n        const track = this._items.find((t)=>t.mode === \"showing\" && isTrackCaptionKind(t));\n        return track !== null && track !== void 0 ? track : null;\n    }\n    get selectedIndex() {\n        const selected = this.selected;\n        return selected ? this.indexOf(selected) : -1;\n    }\n    get preferredLang() {\n        return this._preferredLang;\n    }\n    set preferredLang(lang) {\n        this._preferredLang = lang;\n        this._saveLang(lang);\n    }\n    add(init, trigger) {\n        const isTrack = init instanceof TextTrack, track = isTrack ? init : new TextTrack(init), kind = init.kind === \"captions\" || init.kind === \"subtitles\" ? \"captions\" : init.kind;\n        if (this._defaults[kind] && init.default) delete init.default;\n        track.addEventListener(\"mode-change\", this._onTrackModeChangeBind);\n        this[ListSymbol._add](track, trigger);\n        track[TextTrackSymbol._crossOrigin] = this[TextTrackSymbol._crossOrigin];\n        if (this._canLoad) track[TextTrackSymbol._canLoad]();\n        if (init.default) this._defaults[kind] = track;\n        this._selectTracks();\n        return this;\n    }\n    remove(track, trigger) {\n        this._pendingRemoval = track;\n        if (!this._items.includes(track)) return;\n        if (track === this._defaults[track.kind]) delete this._defaults[track.kind];\n        track.mode = \"disabled\";\n        track[TextTrackSymbol._onModeChange] = null;\n        track.removeEventListener(\"mode-change\", this._onTrackModeChangeBind);\n        this[ListSymbol._remove](track, trigger);\n        this._pendingRemoval = null;\n        return this;\n    }\n    clear(trigger) {\n        for (const track of [\n            ...this._items\n        ]){\n            this.remove(track, trigger);\n        }\n        return this;\n    }\n    getByKind(kind) {\n        const kinds = Array.isArray(kind) ? kind : [\n            kind\n        ];\n        return this._items.filter((track)=>kinds.includes(track.kind));\n    }\n    /** @internal */ [TextTrackSymbol._canLoad]() {\n        if (this._canLoad) return;\n        for (const track of this._items)track[TextTrackSymbol._canLoad]();\n        this._canLoad = true;\n        this._selectTracks();\n    }\n    _onTrackModeChange(event1) {\n        const track = event1.detail;\n        if (this._storage && isTrackCaptionKind(track) && track !== this._pendingRemoval) {\n            this._saveCaptionsTrack(track);\n        }\n        if (track.mode === \"showing\") {\n            const kinds = isTrackCaptionKind(track) ? [\n                \"captions\",\n                \"subtitles\"\n            ] : [\n                track.kind\n            ];\n            for (const t of this._items){\n                if (t.mode === \"showing\" && t != track && kinds.includes(t.kind)) {\n                    t.mode = \"disabled\";\n                }\n            }\n        }\n        this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"mode-change\", {\n            detail: event1.detail,\n            trigger: event1\n        }));\n    }\n    _saveCaptionsTrack(track) {\n        var _this__storage_setCaptions, _this__storage;\n        if (track.mode !== \"disabled\") {\n            this._saveLang(track.language);\n        }\n        (_this__storage = this._storage) === null || _this__storage === void 0 ? void 0 : (_this__storage_setCaptions = _this__storage.setCaptions) === null || _this__storage_setCaptions === void 0 ? void 0 : _this__storage_setCaptions.call(_this__storage, track.mode === \"showing\");\n    }\n    _saveLang(lang) {\n        var _this__storage_setLang, _this__storage;\n        (_this__storage = this._storage) === null || _this__storage === void 0 ? void 0 : (_this__storage_setLang = _this__storage.setLang) === null || _this__storage_setLang === void 0 ? void 0 : _this__storage_setLang.call(_this__storage, this._preferredLang = lang);\n    }\n    setStorage(storage) {\n        this._storage = storage;\n    }\n    constructor(){\n        super();\n        this._canLoad = false;\n        this._defaults = {};\n        this._storage = null;\n        this._preferredLang = null;\n        this._selectTracks = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.functionDebounce)(async ()=>{\n            var _this__storage;\n            if (!this._canLoad) return;\n            if (!this._preferredLang && this._storage) {\n                this._preferredLang = await this._storage.getLang();\n            }\n            const showCaptions = await ((_this__storage = this._storage) === null || _this__storage === void 0 ? void 0 : _this__storage.getCaptions()), kinds = [\n                [\n                    \"captions\",\n                    \"subtitles\"\n                ],\n                \"chapters\",\n                \"descriptions\",\n                \"metadata\"\n            ];\n            for (const kind of kinds){\n                const tracks = this.getByKind(kind);\n                if (tracks.find((t)=>t.mode === \"showing\")) continue;\n                const preferredTrack = this._preferredLang ? tracks.find((track2)=>track2.language === this._preferredLang) : null;\n                const defaultTrack = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(kind) ? this._defaults[kind.find((kind2)=>this._defaults[kind2]) || \"\"] : this._defaults[kind];\n                const track = preferredTrack !== null && preferredTrack !== void 0 ? preferredTrack : defaultTrack, isCaptionsKind = track && isTrackCaptionKind(track);\n                if (track && (!isCaptionsKind || showCaptions !== false)) {\n                    track.mode = \"showing\";\n                    if (isCaptionsKind) this._saveCaptionsTrack(track);\n                }\n            }\n        }, 300);\n        this._pendingRemoval = null;\n        this._onTrackModeChangeBind = this._onTrackModeChange.bind(this);\n    }\n}\nconst SELECTED = Symbol(\"SELECTED\");\nclass SelectList extends List {\n    get selected() {\n        var _this__items_find;\n        return (_this__items_find = this._items.find((item)=>item.selected)) !== null && _this__items_find !== void 0 ? _this__items_find : null;\n    }\n    get selectedIndex() {\n        return this._items.findIndex((item)=>item.selected);\n    }\n    /** @internal */ [ListSymbol._onRemove](item, trigger) {\n        this[ListSymbol._select](item, false, trigger);\n    }\n    /** @internal */ [ListSymbol._add](item, trigger) {\n        item[SELECTED] = false;\n        Object.defineProperty(item, \"selected\", {\n            get () {\n                return this[SELECTED];\n            },\n            set: (selected)=>{\n                var _this_ListSymbol__onUserSelect, _this;\n                if (this.readonly) return;\n                (_this_ListSymbol__onUserSelect = (_this = this)[ListSymbol._onUserSelect]) === null || _this_ListSymbol__onUserSelect === void 0 ? void 0 : _this_ListSymbol__onUserSelect.call(_this);\n                this[ListSymbol._select](item, selected);\n            }\n        });\n        super[ListSymbol._add](item, trigger);\n    }\n    /** @internal */ [ListSymbol._select](item, selected, trigger) {\n        if (selected === (item === null || item === void 0 ? void 0 : item[SELECTED])) return;\n        const prev = this.selected;\n        if (item) item[SELECTED] = selected;\n        const changed = !selected ? prev === item : prev !== item;\n        if (changed) {\n            if (prev) prev[SELECTED] = false;\n            this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"change\", {\n                detail: {\n                    prev,\n                    current: this.selected\n                },\n                trigger\n            }));\n        }\n    }\n}\nclass AudioTrackList extends SelectList {\n}\nconst SET_AUTO = Symbol(\"SET_AUTO_QUALITY\"), ENABLE_AUTO = Symbol(\"ENABLE_AUTO_QUALITY\");\nconst QualitySymbol = {\n    _setAuto: SET_AUTO,\n    _enableAuto: ENABLE_AUTO\n};\nclass VideoQualityList extends SelectList {\n    /**\n   * Whether automatic quality selection is enabled.\n   */ get auto() {\n        return this._auto || this.readonly;\n    }\n    /** @internal */ [ListSymbol._onUserSelect]() {\n        this[QualitySymbol._setAuto](false);\n    }\n    /** @internal */ [ListSymbol._onReset](trigger) {\n        this[QualitySymbol._enableAuto] = void 0;\n        this[QualitySymbol._setAuto](false, trigger);\n    }\n    /**\n   * Request automatic quality selection (if supported). This will be a no-op if the list is\n   * `readonly` as that already implies auto-selection.\n   */ autoSelect(trigger) {\n        var _this_QualitySymbol__enableAuto, _this;\n        if (this.readonly || this._auto || !this[QualitySymbol._enableAuto]) return;\n        (_this_QualitySymbol__enableAuto = (_this = this)[QualitySymbol._enableAuto]) === null || _this_QualitySymbol__enableAuto === void 0 ? void 0 : _this_QualitySymbol__enableAuto.call(_this, trigger);\n        this[QualitySymbol._setAuto](true, trigger);\n    }\n    getBySrc(src) {\n        return this._items.find((quality)=>quality.src === src);\n    }\n    /** @internal */ [QualitySymbol._setAuto](auto, trigger) {\n        if (this._auto === auto) return;\n        this._auto = auto;\n        this.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"auto-change\", {\n            detail: auto,\n            trigger\n        }));\n    }\n    constructor(){\n        super(...arguments);\n        this._auto = false;\n        /**\n     * Configures quality switching:\n     *\n     * - `current`: Trigger an immediate quality level switch. This will abort the current fragment\n     * request if any, flush the whole buffer, and fetch fragment matching with current position\n     * and requested quality level.\n     *\n     * - `next`: Trigger a quality level switch for next fragment. This could eventually flush\n     * already buffered next fragment.\n     *\n     * - `load`: Set quality level for next loaded fragment.\n     *\n     * @see {@link https://www.vidstack.io/docs/player/api/video-quality#switch}\n     * @see {@link https://github.com/video-dev/hls.js/blob/master/docs/API.md#quality-switch-control-api}\n     */ this.switch = \"current\";\n    }\n}\nfunction sortVideoQualities(qualities, desc) {\n    return [\n        ...qualities\n    ].sort(desc ? compareVideoQualityDesc : compareVideoQualityAsc);\n}\nfunction compareVideoQualityAsc(a, b) {\n    var _a_bitrate, _b_bitrate;\n    return a.height === b.height ? ((_a_bitrate = a.bitrate) !== null && _a_bitrate !== void 0 ? _a_bitrate : 0) - ((_b_bitrate = b.bitrate) !== null && _b_bitrate !== void 0 ? _b_bitrate : 0) : a.height - b.height;\n}\nfunction compareVideoQualityDesc(a, b) {\n    var _b_bitrate, _a_bitrate;\n    return b.height === a.height ? ((_b_bitrate = b.bitrate) !== null && _b_bitrate !== void 0 ? _b_bitrate : 0) - ((_a_bitrate = a.bitrate) !== null && _a_bitrate !== void 0 ? _a_bitrate : 0) : b.height - a.height;\n}\nfunction isAudioProvider(provider) {\n    return (provider === null || provider === void 0 ? void 0 : provider.$$PROVIDER_TYPE) === \"AUDIO\";\n}\nfunction isVideoProvider(provider) {\n    return (provider === null || provider === void 0 ? void 0 : provider.$$PROVIDER_TYPE) === \"VIDEO\";\n}\nfunction isHLSProvider(provider) {\n    return (provider === null || provider === void 0 ? void 0 : provider.$$PROVIDER_TYPE) === \"HLS\";\n}\nfunction isDASHProvider(provider) {\n    return (provider === null || provider === void 0 ? void 0 : provider.$$PROVIDER_TYPE) === \"DASH\";\n}\nfunction isYouTubeProvider(provider) {\n    return (provider === null || provider === void 0 ? void 0 : provider.$$PROVIDER_TYPE) === \"YOUTUBE\";\n}\nfunction isVimeoProvider(provider) {\n    return (provider === null || provider === void 0 ? void 0 : provider.$$PROVIDER_TYPE) === \"VIMEO\";\n}\nfunction isGoogleCastProvider(provider) {\n    return (provider === null || provider === void 0 ? void 0 : provider.$$PROVIDER_TYPE) === \"GOOGLE_CAST\";\n}\nfunction isHTMLAudioElement(element) {\n    return !IS_SERVER && element instanceof HTMLAudioElement;\n}\nfunction isHTMLVideoElement(element) {\n    return !IS_SERVER && element instanceof HTMLVideoElement;\n}\nfunction isHTMLMediaElement(element) {\n    return isHTMLAudioElement(element) || isHTMLVideoElement(element);\n}\nfunction isHTMLIFrameElement(element) {\n    return !IS_SERVER && element instanceof HTMLIFrameElement;\n}\nclass MediaPlayerController extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n}\nconst MEDIA_KEY_SHORTCUTS = {\n    togglePaused: \"k Space\",\n    toggleMuted: \"m\",\n    toggleFullscreen: \"f\",\n    togglePictureInPicture: \"i\",\n    toggleCaptions: \"c\",\n    seekBackward: \"j J ArrowLeft\",\n    seekForward: \"l L ArrowRight\",\n    volumeUp: \"ArrowUp\",\n    volumeDown: \"ArrowDown\",\n    speedUp: \">\",\n    slowDown: \"<\"\n};\nconst MODIFIER_KEYS = /* @__PURE__ */ new Set([\n    \"Shift\",\n    \"Alt\",\n    \"Meta\",\n    \"Ctrl\"\n]), BUTTON_SELECTORS = 'button, [role=\"button\"]', IGNORE_SELECTORS = 'input, textarea, select, [contenteditable], [role^=\"menuitem\"], [role=\"timer\"]';\nclass MediaKeyboardController extends MediaPlayerController {\n    onConnect() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onTargetChange.bind(this));\n    }\n    _onTargetChange() {\n        const { keyDisabled, keyTarget } = this.$props;\n        if (keyDisabled()) return;\n        const target = keyTarget() === \"player\" ? this.el : document, $active = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n        if (target === this.el) {\n            this.listen(\"focusin\", ()=>$active.set(true));\n            this.listen(\"focusout\", (event1)=>{\n                if (!this.el.contains(event1.target)) $active.set(false);\n            });\n        } else {\n            if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)($active)) $active.set(document.querySelector(\"[data-media-player]\") === this.el);\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(document, \"focusin\", (event1)=>{\n                const activePlayer = event1.composedPath().find((el)=>el instanceof Element && el.localName === \"media-player\");\n                if (activePlayer !== void 0) $active.set(this.el === activePlayer);\n            });\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            if (!$active()) return;\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(target, \"keyup\", this._onKeyUp.bind(this));\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(target, \"keydown\", this._onKeyDown.bind(this));\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(target, \"keydown\", this._onPreventVideoKeys.bind(this), {\n                capture: true\n            });\n        });\n    }\n    _onKeyUp(event1) {\n        const focusedEl = document.activeElement;\n        if (!event1.key || !this.$state.canSeek() || (focusedEl === null || focusedEl === void 0 ? void 0 : focusedEl.matches(IGNORE_SELECTORS))) {\n            return;\n        }\n        let { method, value } = this._getMatchingMethod(event1);\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(value) && !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {\n            var _value_onKeyUp, _value_callback;\n            value === null || value === void 0 ? void 0 : (_value_onKeyUp = value.onKeyUp) === null || _value_onKeyUp === void 0 ? void 0 : _value_onKeyUp.call(value, {\n                event: event1,\n                player: this._media.player,\n                remote: this._media.remote\n            });\n            value === null || value === void 0 ? void 0 : (_value_callback = value.callback) === null || _value_callback === void 0 ? void 0 : _value_callback.call(value, event1, this._media.remote);\n            return;\n        }\n        if (method === null || method === void 0 ? void 0 : method.startsWith(\"seek\")) {\n            event1.preventDefault();\n            event1.stopPropagation();\n            if (this._timeSlider) {\n                this._forwardTimeKeyboardEvent(event1, method === \"seekForward\");\n                this._timeSlider = null;\n            } else {\n                this._media.remote.seek(this._seekTotal, event1);\n                this._seekTotal = void 0;\n            }\n        }\n        if (method === null || method === void 0 ? void 0 : method.startsWith(\"volume\")) {\n            const volumeSlider = this.el.querySelector(\"[data-media-volume-slider]\");\n            volumeSlider === null || volumeSlider === void 0 ? void 0 : volumeSlider.dispatchEvent(new KeyboardEvent(\"keyup\", {\n                key: method === \"volumeUp\" ? \"Up\" : \"Down\",\n                shiftKey: event1.shiftKey,\n                trigger: event1\n            }));\n        }\n    }\n    _onKeyDown(event1) {\n        if (!event1.key || MODIFIER_KEYS.has(event1.key)) return;\n        const focusedEl = document.activeElement;\n        if ((focusedEl === null || focusedEl === void 0 ? void 0 : focusedEl.matches(IGNORE_SELECTORS)) || (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isKeyboardClick)(event1) && (focusedEl === null || focusedEl === void 0 ? void 0 : focusedEl.matches(BUTTON_SELECTORS))) {\n            return;\n        }\n        let { method, value } = this._getMatchingMethod(event1), isNumberPress = !event1.metaKey && /^[0-9]$/.test(event1.key);\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(value) && !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(value) && !isNumberPress) {\n            var _value_onKeyDown, _value_callback;\n            value === null || value === void 0 ? void 0 : (_value_onKeyDown = value.onKeyDown) === null || _value_onKeyDown === void 0 ? void 0 : _value_onKeyDown.call(value, {\n                event: event1,\n                player: this._media.player,\n                remote: this._media.remote\n            });\n            value === null || value === void 0 ? void 0 : (_value_callback = value.callback) === null || _value_callback === void 0 ? void 0 : _value_callback.call(value, event1, this._media.remote);\n            return;\n        }\n        if (!method && isNumberPress) {\n            event1.preventDefault();\n            event1.stopPropagation();\n            this._media.remote.seek(this.$state.duration() / 10 * Number(event1.key), event1);\n            return;\n        }\n        if (!method) return;\n        event1.preventDefault();\n        event1.stopPropagation();\n        switch(method){\n            case \"seekForward\":\n            case \"seekBackward\":\n                this._seeking(event1, method, method === \"seekForward\");\n                break;\n            case \"volumeUp\":\n            case \"volumeDown\":\n                const volumeSlider = this.el.querySelector(\"[data-media-volume-slider]\");\n                if (volumeSlider) {\n                    volumeSlider.dispatchEvent(new KeyboardEvent(\"keydown\", {\n                        key: method === \"volumeUp\" ? \"Up\" : \"Down\",\n                        shiftKey: event1.shiftKey,\n                        trigger: event1\n                    }));\n                } else {\n                    const value2 = event1.shiftKey ? 0.1 : 0.05;\n                    this._media.remote.changeVolume(this.$state.volume() + (method === \"volumeUp\" ? +value2 : -value2), event1);\n                }\n                break;\n            case \"toggleFullscreen\":\n                this._media.remote.toggleFullscreen(\"prefer-media\", event1);\n                break;\n            case \"speedUp\":\n            case \"slowDown\":\n                const playbackRate = this.$state.playbackRate();\n                this._media.remote.changePlaybackRate(Math.max(0.25, Math.min(2, playbackRate + (method === \"speedUp\" ? 0.25 : -0.25))), event1);\n                break;\n            default:\n                var _this__media_remote_method, _this__media_remote;\n                (_this__media_remote_method = (_this__media_remote = this._media.remote)[method]) === null || _this__media_remote_method === void 0 ? void 0 : _this__media_remote_method.call(_this__media_remote, event1);\n        }\n        this.$state.lastKeyboardAction.set({\n            action: method,\n            event: event1\n        });\n    }\n    _onPreventVideoKeys(event1) {\n        if (isHTMLMediaElement(event1.target) && this._getMatchingMethod(event1).method) {\n            event1.preventDefault();\n        }\n    }\n    _getMatchingMethod(event1) {\n        const keyShortcuts = {\n            ...this.$props.keyShortcuts(),\n            ...this._media.ariaKeys\n        };\n        const method = Object.keys(keyShortcuts).find((method2)=>{\n            var _this;\n            const value = keyShortcuts[method2], keys = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(value) ? value.join(\" \") : (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(value) ? value : value === null || value === void 0 ? void 0 : value.keys;\n            const combinations = (_this = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(keys) ? keys : keys === null || keys === void 0 ? void 0 : keys.split(\" \")) === null || _this === void 0 ? void 0 : _this.map((key)=>replaceSymbolKeys(key).replace(/Control/g, \"Ctrl\").split(\"+\"));\n            return combinations === null || combinations === void 0 ? void 0 : combinations.some((combo)=>{\n                const modifierKeys = new Set(combo.filter((key)=>MODIFIER_KEYS.has(key)));\n                for (const modKey of MODIFIER_KEYS){\n                    const modKeyProp = modKey.toLowerCase() + \"Key\";\n                    if (!modifierKeys.has(modKey) && event1[modKeyProp]) {\n                        return false;\n                    }\n                }\n                return combo.every((key)=>{\n                    return MODIFIER_KEYS.has(key) ? event1[key.toLowerCase() + \"Key\"] : event1.key === key.replace(\"Space\", \" \");\n                });\n            });\n        });\n        return {\n            method,\n            value: method ? keyShortcuts[method] : null\n        };\n    }\n    _calcSeekAmount(event1, type) {\n        const seekBy = event1.shiftKey ? 10 : 5;\n        var _this__seekTotal;\n        return this._seekTotal = Math.max(0, Math.min(((_this__seekTotal = this._seekTotal) !== null && _this__seekTotal !== void 0 ? _this__seekTotal : this.$state.currentTime()) + (type === \"seekForward\" ? +seekBy : -seekBy), this.$state.duration()));\n    }\n    _forwardTimeKeyboardEvent(event1, forward) {\n        var _this__timeSlider;\n        (_this__timeSlider = this._timeSlider) === null || _this__timeSlider === void 0 ? void 0 : _this__timeSlider.dispatchEvent(new KeyboardEvent(event1.type, {\n            key: !forward ? \"Left\" : \"Right\",\n            shiftKey: event1.shiftKey,\n            trigger: event1\n        }));\n    }\n    _seeking(event1, type, forward) {\n        if (!this.$state.canSeek()) return;\n        if (!this._timeSlider) {\n            this._timeSlider = this.el.querySelector(\"[data-media-time-slider]\");\n        }\n        if (this._timeSlider) {\n            this._forwardTimeKeyboardEvent(event1, forward);\n        } else {\n            this._media.remote.seeking(this._calcSeekAmount(event1, type), event1);\n        }\n    }\n    constructor(_media){\n        super();\n        this._media = _media;\n        this._timeSlider = null;\n    }\n}\nconst SYMBOL_KEY_MAP = [\n    \"!\",\n    \"@\",\n    \"#\",\n    \"$\",\n    \"%\",\n    \"^\",\n    \"&\",\n    \"*\",\n    \"(\",\n    \")\"\n];\nfunction replaceSymbolKeys(key) {\n    return key.replace(/Shift\\+(\\d)/g, (_, num)=>SYMBOL_KEY_MAP[num - 1]);\n}\nclass ARIAKeyShortcuts extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    onAttach(el) {\n        const { $props, ariaKeys } = useMediaContext(), keys = el.getAttribute(\"aria-keyshortcuts\");\n        if (keys) {\n            ariaKeys[this._shortcut] = keys;\n            if (!IS_SERVER) {\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n                    delete ariaKeys[this._shortcut];\n                });\n            }\n            return;\n        }\n        const shortcuts = $props.keyShortcuts()[this._shortcut];\n        if (shortcuts) {\n            const keys2 = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(shortcuts) ? shortcuts.join(\" \") : (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(shortcuts) ? shortcuts : shortcuts === null || shortcuts === void 0 ? void 0 : shortcuts.keys;\n            el.setAttribute(\"aria-keyshortcuts\", (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(keys2) ? keys2.join(\" \") : keys2);\n        }\n    }\n    constructor(_shortcut){\n        super();\n        this._shortcut = _shortcut;\n    }\n}\nclass MediaControls extends MediaPlayerController {\n    /**\n   * Whether controls can hide after a delay in user interaction. If this is false, controls will\n   * not hide and be user controlled.\n   */ get canIdle() {\n        return this._canIdle();\n    }\n    set canIdle(canIdle) {\n        this._canIdle.set(canIdle);\n    }\n    /**\n   * Whether controls visibility should be toggled when the mouse enters and leaves the player\n   * container.\n   *\n   * @defaultValue false\n   */ get hideOnMouseLeave() {\n        const { hideControlsOnMouseLeave } = this.$props;\n        return this._hideOnMouseLeave() || hideControlsOnMouseLeave();\n    }\n    set hideOnMouseLeave(hide) {\n        this._hideOnMouseLeave.set(hide);\n    }\n    /**\n   * Whether media controls are currently visible.\n   */ get showing() {\n        return this.$state.controlsVisible();\n    }\n    /**\n   * Show controls.\n   */ show() {\n        let delay = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, trigger = arguments.length > 1 ? arguments[1] : void 0;\n        this._clearIdleTimer();\n        if (!this._pausedTracking) {\n            this._changeVisibility(true, delay, trigger);\n        }\n    }\n    /**\n   * Hide controls.\n   */ hide() {\n        let delay = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.defaultDelay, trigger = arguments.length > 1 ? arguments[1] : void 0;\n        this._clearIdleTimer();\n        if (!this._pausedTracking) {\n            this._changeVisibility(false, delay, trigger);\n        }\n    }\n    /**\n   * Whether all idle tracking on controls should be paused until resumed again.\n   */ pause(trigger) {\n        this._pausedTracking = true;\n        this._clearIdleTimer();\n        this._changeVisibility(true, 0, trigger);\n    }\n    resume(trigger) {\n        this._pausedTracking = false;\n        if (this.$state.paused()) return;\n        this._changeVisibility(false, this.defaultDelay, trigger);\n    }\n    onConnect() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._init.bind(this));\n    }\n    _init() {\n        const { viewType } = this.$state;\n        if (!this._canIdle()) return;\n        if (viewType() === \"audio\") {\n            this.show();\n            return;\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchMouse.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPaused.bind(this));\n        const onPlay = this._onPlay.bind(this), onPause = this._onPause.bind(this);\n        this.listen(\"can-play\", (event1)=>this.show(0, event1));\n        this.listen(\"play\", onPlay);\n        this.listen(\"pause\", onPause);\n        this.listen(\"auto-play-fail\", onPause);\n    }\n    _watchMouse() {\n        const { started, pointer, paused } = this.$state;\n        if (!started() || pointer() !== \"fine\") return;\n        const shouldHideOnMouseLeave = this.hideOnMouseLeave;\n        if (!shouldHideOnMouseLeave || !this._isMouseOutside()) {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n                if (!paused()) this.listen(\"pointermove\", this._onStopIdle.bind(this));\n            });\n        }\n        if (shouldHideOnMouseLeave) {\n            this.listen(\"mouseenter\", this._onMouseEnter.bind(this));\n            this.listen(\"mouseleave\", this._onMouseLeave.bind(this));\n        }\n    }\n    _watchPaused() {\n        const { paused, started, autoPlayError } = this.$state;\n        if (paused() || autoPlayError() && !started()) return;\n        const onStopIdle = this._onStopIdle.bind(this);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            const pointer = this.$state.pointer(), isTouch = pointer === \"coarse\", events = [\n                isTouch ? \"touchend\" : \"pointerup\",\n                \"keydown\"\n            ];\n            for (const eventType of events){\n                this.listen(eventType, onStopIdle, {\n                    passive: false\n                });\n            }\n        });\n    }\n    _onPlay(event1) {\n        this.show(0, event1);\n        this.hide(void 0, event1);\n    }\n    _onPause(event1) {\n        this.show(0, event1);\n    }\n    _onMouseEnter(event1) {\n        this._isMouseOutside.set(false);\n        this.show(0, event1);\n        this.hide(void 0, event1);\n    }\n    _onMouseLeave(event1) {\n        this._isMouseOutside.set(true);\n        this.hide(0, event1);\n    }\n    _clearIdleTimer() {\n        window.clearTimeout(this._idleTimer);\n        this._idleTimer = -1;\n    }\n    _onStopIdle(event1) {\n        if (// @ts-expect-error\n        event1.MEDIA_GESTURE || this._pausedTracking || isTouchPinchEvent(event1)) {\n            return;\n        }\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isKeyboardEvent)(event1)) {\n            if (event1.key === \"Escape\") {\n                var _this_el;\n                (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.focus();\n                this._focusedItem = null;\n            } else if (this._focusedItem) {\n                event1.preventDefault();\n                requestAnimationFrame(()=>{\n                    var _this__focusedItem;\n                    (_this__focusedItem = this._focusedItem) === null || _this__focusedItem === void 0 ? void 0 : _this__focusedItem.focus();\n                    this._focusedItem = null;\n                });\n            }\n        }\n        this.show(0, event1);\n        this.hide(this.defaultDelay, event1);\n    }\n    _changeVisibility(visible, delay, trigger) {\n        if (delay === 0) {\n            this._onChange(visible, trigger);\n            return;\n        }\n        this._idleTimer = window.setTimeout(()=>{\n            if (!this.scope) return;\n            this._onChange(visible && !this._pausedTracking, trigger);\n        }, delay);\n    }\n    _onChange(visible, trigger) {\n        var _this_el;\n        if (this.$state.controlsVisible() === visible) return;\n        this.$state.controlsVisible.set(visible);\n        if (!visible && document.activeElement && ((_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.contains(document.activeElement))) {\n            this._focusedItem = document.activeElement;\n            requestAnimationFrame(()=>{\n                var _this_el;\n                (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.focus({\n                    preventScroll: true\n                });\n            });\n        }\n        this.dispatch(\"controls-change\", {\n            detail: visible,\n            trigger\n        });\n    }\n    constructor(){\n        super(...arguments);\n        this._idleTimer = -2;\n        this._pausedTracking = false;\n        this._hideOnMouseLeave = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n        this._isMouseOutside = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n        this._focusedItem = null;\n        this._canIdle = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(true);\n        /**\n     * The default amount of delay in milliseconds while media playback is progressing without user\n     * activity to indicate an idle state (i.e., hide controls).\n     *\n     * @defaultValue 2000\n     */ this.defaultDelay = 2e3;\n    }\n}\nconst CAN_FULLSCREEN = _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.fscreen.fullscreenEnabled;\nclass FullscreenController extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    get active() {\n        return this._active;\n    }\n    get supported() {\n        return CAN_FULLSCREEN;\n    }\n    onConnect() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.fscreen, \"fullscreenchange\", this._onChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.fscreen, \"fullscreenerror\", this._onError.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(this._onDisconnect.bind(this));\n    }\n    async _onDisconnect() {\n        if (CAN_FULLSCREEN) await this.exit();\n    }\n    _onChange(event1) {\n        const active = isFullscreen(this.el);\n        if (active === this._active) return;\n        if (!active) this._listening = false;\n        this._active = active;\n        this.dispatch(\"fullscreen-change\", {\n            detail: active,\n            trigger: event1\n        });\n    }\n    _onError(event1) {\n        if (!this._listening) return;\n        this.dispatch(\"fullscreen-error\", {\n            detail: null,\n            trigger: event1\n        });\n        this._listening = false;\n    }\n    async enter() {\n        try {\n            this._listening = true;\n            if (!this.el || isFullscreen(this.el)) return;\n            assertFullscreenAPI();\n            return _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.fscreen.requestFullscreen(this.el);\n        } catch (error) {\n            this._listening = false;\n            throw error;\n        }\n    }\n    async exit() {\n        if (!this.el || !isFullscreen(this.el)) return;\n        assertFullscreenAPI();\n        return _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.fscreen.exitFullscreen();\n    }\n    constructor(){\n        super(...arguments);\n        /**\n     * Tracks whether we're the active fullscreen event listener. Fullscreen events can only be\n     * listened to globally on the document so we need to know if they relate to the current host\n     * element or not.\n     */ this._listening = false;\n        this._active = false;\n    }\n}\nfunction canFullscreen() {\n    return CAN_FULLSCREEN;\n}\nfunction isFullscreen(host) {\n    if (_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.fscreen.fullscreenElement === host) return true;\n    try {\n        return host.matches(// @ts-expect-error - `fullscreenPseudoClass` is missing from `@types/fscreen`.\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.fscreen.fullscreenPseudoClass);\n    } catch (error) {\n        return false;\n    }\n}\nfunction assertFullscreenAPI() {\n    if (CAN_FULLSCREEN) return;\n    throw Error(\"[vidstack] fullscreen API is not enabled or supported in this environment\");\n}\nconst _ScreenOrientationController = class _ScreenOrientationController extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    /**\n   * The current screen orientation type.\n   *\n   * @signal\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/ScreenOrientation}\n   * @see https://w3c.github.io/screen-orientation/#screen-orientation-types-and-locks\n   */ get type() {\n        return this._type();\n    }\n    /**\n   * Whether the screen orientation is currently locked.\n   *\n   * @signal\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/ScreenOrientation}\n   * @see https://w3c.github.io/screen-orientation/#screen-orientation-types-and-locks\n   */ get locked() {\n        return this._locked();\n    }\n    /**\n   * Whether the viewport is in a portrait orientation.\n   *\n   * @signal\n   */ get portrait() {\n        return this._type().startsWith(\"portrait\");\n    }\n    /**\n   * Whether the viewport is in a landscape orientation.\n   *\n   * @signal\n   */ get landscape() {\n        return this._type().startsWith(\"landscape\");\n    }\n    /**\n   * Whether the native Screen Orientation API is available.\n   */ get supported() {\n        return _ScreenOrientationController.supported;\n    }\n    onConnect() {\n        if (this.supported) {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(screen.orientation, \"change\", this._onOrientationChange.bind(this));\n        } else {\n            const query = window.matchMedia(\"(orientation: landscape)\");\n            query.onchange = this._onOrientationChange.bind(this);\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>query.onchange = null);\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(this._onDisconnect.bind(this));\n    }\n    async _onDisconnect() {\n        if (this.supported && this._locked()) await this.unlock();\n    }\n    _onOrientationChange(event1) {\n        this._type.set(this._getScreenOrientation());\n        this.dispatch(\"orientation-change\", {\n            detail: {\n                orientation: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._type),\n                lock: this._currentLock\n            },\n            trigger: event1\n        });\n    }\n    /**\n   * Locks the orientation of the screen to the desired orientation type using the\n   * Screen Orientation API.\n   *\n   * @param lockType - The screen lock orientation type.\n   * @throws Error - If screen orientation API is unavailable.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation}\n   * @see {@link https://w3c.github.io/screen-orientation}\n   */ async lock(lockType) {\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._locked) || this._currentLock === lockType) return;\n        this._assertScreenOrientationAPI();\n        await screen.orientation.lock(lockType);\n        this._locked.set(true);\n        this._currentLock = lockType;\n    }\n    /**\n   * Unlocks the orientation of the screen to it's default state using the Screen Orientation\n   * API. This method will throw an error if the API is unavailable.\n   *\n   * @throws Error - If screen orientation API is unavailable.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation}\n   * @see {@link https://w3c.github.io/screen-orientation}\n   */ async unlock() {\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._locked)) return;\n        this._assertScreenOrientationAPI();\n        this._currentLock = void 0;\n        await screen.orientation.unlock();\n        this._locked.set(false);\n    }\n    _assertScreenOrientationAPI() {\n        if (this.supported) return;\n        throw Error(\"[vidstack] screen orientation API is not available\");\n    }\n    _getScreenOrientation() {\n        if (IS_SERVER) return \"portrait-primary\";\n        if (this.supported) return window.screen.orientation.type;\n        return window.innerWidth >= window.innerHeight ? \"landscape-primary\" : \"portrait-primary\";\n    }\n    constructor(){\n        super(...arguments);\n        this._type = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(this._getScreenOrientation());\n        this._locked = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n    }\n};\n/**\n * Whether the native Screen Orientation API is available.\n */ _ScreenOrientationController.supported = canOrientScreen();\nlet ScreenOrientationController = _ScreenOrientationController;\nclass AudioProviderLoader {\n    canPlay(src) {\n        if (!isAudioSrc(src)) return false;\n        return IS_SERVER || !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src.src) || src.type === \"?\" || canPlayAudioType(this.target, src.type);\n    }\n    mediaType() {\n        return \"audio\";\n    }\n    async load(ctx) {\n        if (IS_SERVER) {\n            throw Error(\"[vidstack] can not load audio provider server-side\");\n        }\n        if (!this.target) {\n            throw Error(\"[vidstack] `<audio>` element was not found - did you forget to include `<media-provider>`?\");\n        }\n        return new (await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_vidstack_react_dev_chunks_vidstack-Cjt-9Nqm_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./vidstack-Cjt-9Nqm.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Cjt-9Nqm.js\"))).AudioProvider(this.target, ctx);\n    }\n    constructor(){\n        this.name = \"audio\";\n    }\n}\nclass VideoProviderLoader {\n    canPlay(src) {\n        if (!isVideoSrc(src)) return false;\n        return IS_SERVER || !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src.src) || src.type === \"?\" || canPlayVideoType(this.target, src.type);\n    }\n    mediaType() {\n        return \"video\";\n    }\n    async load(ctx) {\n        if (IS_SERVER) {\n            throw Error(\"[vidstack] can not load video provider server-side\");\n        }\n        if (!this.target) {\n            throw Error(\"[vidstack] `<video>` element was not found - did you forget to include media provider?\");\n        }\n        return new (await Promise.resolve().then(function() {\n            return provider$1;\n        })).VideoProvider(this.target, ctx);\n    }\n    constructor(){\n        this.name = \"video\";\n    }\n}\nconst _HLSProviderLoader = class _HLSProviderLoader extends VideoProviderLoader {\n    canPlay(src) {\n        return _HLSProviderLoader.supported && isHLSSrc(src);\n    }\n    async load(context) {\n        if (IS_SERVER) {\n            throw Error(\"[vidstack] can not load hls provider server-side\");\n        }\n        if (!this.target) {\n            throw Error(\"[vidstack] `<video>` element was not found - did you forget to include `<media-provider>`?\");\n        }\n        return new (await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_vidstack_react_dev_chunks_vidstack-Dci4Ce5n_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./vidstack-Dci4Ce5n.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Dci4Ce5n.js\"))).HLSProvider(this.target, context);\n    }\n    constructor(){\n        super(...arguments);\n        this.name = \"hls\";\n    }\n};\n_HLSProviderLoader.supported = isHLSSupported();\nlet HLSProviderLoader = _HLSProviderLoader;\nlet audioContext = null, gainNodes = [], elAudioSources = [];\nfunction getOrCreateAudioCtx() {\n    return audioContext !== null && audioContext !== void 0 ? audioContext : audioContext = new AudioContext();\n}\nfunction createGainNode() {\n    const audioCtx = getOrCreateAudioCtx(), gainNode = audioCtx.createGain();\n    gainNode.connect(audioCtx.destination);\n    gainNodes.push(gainNode);\n    return gainNode;\n}\nfunction createElementSource(el, gainNode) {\n    const audioCtx = getOrCreateAudioCtx(), src = audioCtx.createMediaElementSource(el);\n    if (gainNode) {\n        src.connect(gainNode);\n    }\n    elAudioSources.push(src);\n    return src;\n}\nfunction destroyGainNode(node) {\n    const idx = gainNodes.indexOf(node);\n    if (idx !== -1) {\n        gainNodes.splice(idx, 1);\n        node.disconnect();\n        freeAudioCtxWhenAllResourcesFreed();\n    }\n}\nfunction destroyElementSource(src) {\n    const idx = elAudioSources.indexOf(src);\n    if (idx !== -1) {\n        elAudioSources.splice(idx, 1);\n        src.disconnect();\n        freeAudioCtxWhenAllResourcesFreed();\n    }\n}\nfunction freeAudioCtxWhenAllResourcesFreed() {\n    if (audioContext && gainNodes.length === 0 && elAudioSources.length === 0) {\n        audioContext.close().then(()=>{\n            audioContext = null;\n        });\n    }\n}\nclass AudioGain {\n    get currentGain() {\n        var _this__gainNode_gain, _this__gainNode;\n        var _this__gainNode_gain_value;\n        return (_this__gainNode_gain_value = (_this__gainNode = this._gainNode) === null || _this__gainNode === void 0 ? void 0 : (_this__gainNode_gain = _this__gainNode.gain) === null || _this__gainNode_gain === void 0 ? void 0 : _this__gainNode_gain.value) !== null && _this__gainNode_gain_value !== void 0 ? _this__gainNode_gain_value : null;\n    }\n    get supported() {\n        return true;\n    }\n    setGain(gain) {\n        const currGain = this.currentGain;\n        if (gain === this.currentGain) {\n            return;\n        }\n        if (gain === 1 && currGain !== 1) {\n            this.removeGain();\n            return;\n        }\n        if (!this._gainNode) {\n            this._gainNode = createGainNode();\n            if (this._srcAudioNode) {\n                this._srcAudioNode.connect(this._gainNode);\n            }\n        }\n        if (!this._srcAudioNode) {\n            this._srcAudioNode = createElementSource(this._media, this._gainNode);\n        }\n        this._gainNode.gain.value = gain;\n        this._onChange(gain);\n    }\n    removeGain() {\n        if (!this._gainNode) return;\n        if (this._srcAudioNode) {\n            this._srcAudioNode.connect(getOrCreateAudioCtx().destination);\n        }\n        this._destroyGainNode();\n        this._onChange(null);\n    }\n    destroy() {\n        this._destroySrcNode();\n        this._destroyGainNode();\n    }\n    _destroySrcNode() {\n        if (!this._srcAudioNode) return;\n        try {\n            destroyElementSource(this._srcAudioNode);\n        } catch (e) {} finally{\n            this._srcAudioNode = null;\n        }\n    }\n    _destroyGainNode() {\n        if (!this._gainNode) return;\n        try {\n            destroyGainNode(this._gainNode);\n        } catch (e) {} finally{\n            this._gainNode = null;\n        }\n    }\n    constructor(_media, _onChange){\n        this._media = _media;\n        this._onChange = _onChange;\n        this._gainNode = null;\n        this._srcAudioNode = null;\n    }\n}\nconst PAGE_EVENTS = [\n    \"focus\",\n    \"blur\",\n    \"visibilitychange\",\n    \"pageshow\",\n    \"pagehide\"\n];\nclass PageVisibility {\n    connect() {\n        for (const eventType of PAGE_EVENTS){\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(window, eventType, this._handlePageEvent.bind(this));\n        }\n        if (IS_SAFARI) {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(window, \"beforeunload\", (event1)=>{\n                this._safariBeforeUnloadTimeout = setTimeout(()=>{\n                    if (!(event1.defaultPrevented || event1.returnValue.length > 0)) {\n                        this._state.set(\"hidden\");\n                        this._visibility.set(\"hidden\");\n                    }\n                }, 0);\n            });\n        }\n    }\n    /**\n   * The current page state. Important to note we only account for a subset of page states, as\n   * the rest aren't valuable to the player at the moment.\n   *\n   * - **active:** A page is in the active state if it is visible and has input focus.\n   * - **passive:** A page is in the passive state if it is visible and does not have input focus.\n   * - **hidden:** A page is in the hidden state if it is not visible.\n   *\n   * @see https://developers.google.com/web/updates/2018/07/page-lifecycle-api#states\n   */ get pageState() {\n        return this._state();\n    }\n    /**\n   * The current document visibility state.\n   *\n   * - **visible:** The page content may be at least partially visible. In practice, this means that\n   * the page is the foreground tab of a non-minimized window.\n   * - **hidden:** The page content is not visible to the user. In practice this means that the\n   * document is either a background tab or part of a minimized window, or the OS screen lock is\n   * active.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState\n   */ get visibility() {\n        return this._visibility();\n    }\n    _handlePageEvent(event1) {\n        if (IS_SAFARI) window.clearTimeout(this._safariBeforeUnloadTimeout);\n        if (event1.type !== \"blur\" || this._state() === \"active\") {\n            this._state.set(determinePageState(event1));\n            this._visibility.set(document.visibilityState == \"hidden\" ? \"hidden\" : \"visible\");\n        }\n    }\n    constructor(){\n        this._state = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(determinePageState());\n        this._visibility = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(IS_SERVER ? \"visible\" : document.visibilityState);\n    }\n}\nfunction determinePageState(event1) {\n    if (IS_SERVER) return \"hidden\";\n    if ((event1 === null || event1 === void 0 ? void 0 : event1.type) === \"blur\" || document.visibilityState === \"hidden\") return \"hidden\";\n    if (document.hasFocus()) return \"active\";\n    return \"passive\";\n}\nclass RAFLoop {\n    _start() {\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(this._id)) return;\n        this._loop();\n    }\n    _stop() {\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(this._id)) window.cancelAnimationFrame(this._id);\n        this._id = void 0;\n    }\n    _loop() {\n        this._id = window.requestAnimationFrame(()=>{\n            if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(this._id)) return;\n            this._callback();\n            this._loop();\n        });\n    }\n    constructor(_callback){\n        this._callback = _callback;\n    }\n}\nclass HTMLMediaEvents {\n    get _media() {\n        return this._provider.media;\n    }\n    get _notify() {\n        return this._ctx.delegate._notify;\n    }\n    _onDispose() {\n        this._attachedLoadStart = false;\n        this._attachedCanPlay = false;\n        this._timeRAF._stop();\n        this._disposal.empty();\n    }\n    _onAnimationFrame() {\n        const newTime = this._media.currentTime;\n        const didStutter = IS_SAFARI && newTime - this._seekedTo < 0.35;\n        if (!didStutter && this._lastSeenTime !== newTime) {\n            this._updateCurrentTime(newTime);\n            this._lastSeenTime = newTime;\n        }\n    }\n    _attachInitialListeners() {\n        var _this__ctx_logger;\n        {\n            var _this__ctx_logger1;\n            (_this__ctx_logger1 = this._ctx.logger) === null || _this__ctx_logger1 === void 0 ? void 0 : _this__ctx_logger1.info(\"attaching initial listeners\");\n        }\n        this._attachEventListener(\"loadstart\", this._onLoadStart);\n        this._attachEventListener(\"abort\", this._onAbort);\n        this._attachEventListener(\"emptied\", this._onEmptied);\n        this._attachEventListener(\"error\", this._onError);\n        this._attachEventListener(\"volumechange\", this._onVolumeChange);\n        (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.debug(\"attached initial media event listeners\");\n    }\n    _attachLoadStartListeners() {\n        if (this._attachedLoadStart) return;\n        {\n            var _this__ctx_logger;\n            (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.info(\"attaching load start listeners\");\n        }\n        this._disposal.add(this._attachEventListener(\"loadeddata\", this._onLoadedData), this._attachEventListener(\"loadedmetadata\", this._onLoadedMetadata), this._attachEventListener(\"canplay\", this._onCanPlay), this._attachEventListener(\"canplaythrough\", this._onCanPlayThrough), this._attachEventListener(\"durationchange\", this._onDurationChange), this._attachEventListener(\"play\", this._onPlay), this._attachEventListener(\"progress\", this._onProgress), this._attachEventListener(\"stalled\", this._onStalled), this._attachEventListener(\"suspend\", this._onSuspend), this._attachEventListener(\"ratechange\", this._onRateChange));\n        this._attachedLoadStart = true;\n    }\n    _attachCanPlayListeners() {\n        if (this._attachedCanPlay) return;\n        {\n            var _this__ctx_logger;\n            (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.info(\"attaching can play listeners\");\n        }\n        this._disposal.add(this._attachEventListener(\"pause\", this._onPause), this._attachEventListener(\"playing\", this._onPlaying), this._attachEventListener(\"seeked\", this._onSeeked), this._attachEventListener(\"seeking\", this._onSeeking), this._attachEventListener(\"ended\", this._onEnded), this._attachEventListener(\"waiting\", this._onWaiting));\n        this._attachedCanPlay = true;\n    }\n    _attachEventListener(eventType, handler) {\n        this._handlers.set(eventType, handler);\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._media, eventType, this._handleDevEvent);\n    }\n    _onDevEvent(event2) {\n        var _this__ctx_logger, _this__handlers_get;\n        (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.debugGroup(\"\\uD83D\\uDCFA provider fired `\".concat(event2.type, \"`\")).labelledLog(\"Provider\", this._provider).labelledLog(\"Event\", event2).labelledLog(\"Media Store\", {\n            ...this._ctx.$state\n        }).dispatch();\n        (_this__handlers_get = this._handlers.get(event2.type)) === null || _this__handlers_get === void 0 ? void 0 : _this__handlers_get.call(this, event2);\n    }\n    _updateCurrentTime(time, trigger) {\n        const newTime = Math.min(time, this._ctx.$state.seekableEnd());\n        this._notify(\"time-change\", newTime, trigger);\n    }\n    _onLoadStart(event2) {\n        if (this._media.networkState === 3) {\n            this._onAbort(event2);\n            return;\n        }\n        this._attachLoadStartListeners();\n        this._notify(\"load-start\", void 0, event2);\n    }\n    _onAbort(event2) {\n        this._notify(\"abort\", void 0, event2);\n    }\n    _onEmptied() {\n        this._notify(\"emptied\", void 0, event);\n    }\n    _onLoadedData(event2) {\n        this._notify(\"loaded-data\", void 0, event2);\n    }\n    _onLoadedMetadata(event2) {\n        this._lastSeenTime = 0;\n        this._seekedTo = -1;\n        this._attachCanPlayListeners();\n        this._notify(\"loaded-metadata\", void 0, event2);\n        if (IS_IOS || IS_SAFARI && isHLSSrc(this._ctx.$state.source())) {\n            this._ctx.delegate._ready(this._getCanPlayDetail(), event2);\n        }\n    }\n    _getCanPlayDetail() {\n        return {\n            provider: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._ctx.$provider),\n            duration: this._media.duration,\n            buffered: this._media.buffered,\n            seekable: this._media.seekable\n        };\n    }\n    _onPlay(event2) {\n        if (!this._ctx.$state.canPlay) return;\n        this._notify(\"play\", void 0, event2);\n    }\n    _onPause(event2) {\n        if (this._media.readyState === 1 && !this._waiting) return;\n        this._waiting = false;\n        this._timeRAF._stop();\n        this._notify(\"pause\", void 0, event2);\n    }\n    _onCanPlay(event2) {\n        this._ctx.delegate._ready(this._getCanPlayDetail(), event2);\n    }\n    _onCanPlayThrough(event2) {\n        if (this._ctx.$state.started()) return;\n        this._notify(\"can-play-through\", this._getCanPlayDetail(), event2);\n    }\n    _onPlaying(event2) {\n        if (this._media.paused) return;\n        this._waiting = false;\n        this._notify(\"playing\", void 0, event2);\n        this._timeRAF._start();\n    }\n    _onStalled(event2) {\n        this._notify(\"stalled\", void 0, event2);\n        if (this._media.readyState < 3) {\n            this._waiting = true;\n            this._notify(\"waiting\", void 0, event2);\n        }\n    }\n    _onWaiting(event2) {\n        if (this._media.readyState < 3) {\n            this._waiting = true;\n            this._notify(\"waiting\", void 0, event2);\n        }\n    }\n    _onEnded(event2) {\n        this._timeRAF._stop();\n        this._updateCurrentTime(this._media.duration, event2);\n        this._notify(\"end\", void 0, event2);\n        if (this._ctx.$state.loop()) {\n            const hasCustomControls = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNil)(this._media.controls);\n            if (hasCustomControls) this._media.controls = false;\n        }\n    }\n    _attachTimeUpdate() {\n        const isPaused = this._ctx.$state.paused(), isPageHidden = this._pageVisibility.visibility === \"hidden\", shouldListenToTimeUpdates = isPaused || isPageHidden;\n        if (shouldListenToTimeUpdates) {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._media, \"timeupdate\", this._onTimeUpdate.bind(this));\n        }\n    }\n    _onTimeUpdate(event2) {\n        this._updateCurrentTime(this._media.currentTime, event2);\n    }\n    _onDurationChange(event2) {\n        if (this._ctx.$state.ended()) {\n            this._updateCurrentTime(this._media.duration, event2);\n        }\n        this._notify(\"duration-change\", this._media.duration, event2);\n    }\n    _onVolumeChange(event2) {\n        const detail = {\n            volume: this._media.volume,\n            muted: this._media.muted\n        };\n        this._notify(\"volume-change\", detail, event2);\n    }\n    _onSeeked(event2) {\n        this._seekedTo = this._media.currentTime;\n        this._updateCurrentTime(this._media.currentTime, event2);\n        this._notify(\"seeked\", this._media.currentTime, event2);\n        if (Math.trunc(this._media.currentTime) === Math.trunc(this._media.duration) && getNumberOfDecimalPlaces(this._media.duration) > getNumberOfDecimalPlaces(this._media.currentTime)) {\n            this._updateCurrentTime(this._media.duration, event2);\n            if (!this._media.ended) {\n                this._ctx.player.dispatch(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"media-play-request\", {\n                    trigger: event2\n                }));\n            }\n        }\n    }\n    _onSeeking(event2) {\n        this._notify(\"seeking\", this._media.currentTime, event2);\n    }\n    _onProgress(event2) {\n        const detail = {\n            buffered: this._media.buffered,\n            seekable: this._media.seekable\n        };\n        this._notify(\"progress\", detail, event2);\n    }\n    _onSuspend(event2) {\n        this._notify(\"suspend\", void 0, event2);\n    }\n    _onRateChange(event2) {\n        this._notify(\"rate-change\", this._media.playbackRate, event2);\n    }\n    _onError(event2) {\n        const error = this._media.error;\n        if (!error) return;\n        const detail = {\n            message: error.message,\n            code: error.code,\n            mediaError: error\n        };\n        this._notify(\"error\", detail, event2);\n    }\n    constructor(_provider, _ctx){\n        this._provider = _provider;\n        this._ctx = _ctx;\n        this._disposal = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useDisposalBin)();\n        this._waiting = false;\n        this._attachedLoadStart = false;\n        this._attachedCanPlay = false;\n        this._timeRAF = new RAFLoop(this._onAnimationFrame.bind(this));\n        this._pageVisibility = new PageVisibility();\n        /**\n     * The `timeupdate` event fires surprisingly infrequently during playback, meaning your progress\n     * bar (or whatever else is synced to the currentTime) moves in a choppy fashion. This helps\n     * resolve that by retrieving time updates in a request animation frame loop.\n     */ this._lastSeenTime = 0;\n        this._seekedTo = -1;\n        this._handlers = /* @__PURE__ */ new Map();\n        this._handleDevEvent = this._onDevEvent.bind(this);\n        this._attachInitialListeners();\n        this._pageVisibility.connect();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._attachTimeUpdate.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(this._onDispose.bind(this));\n    }\n}\nclass NativeAudioTracks {\n    get _nativeTracks() {\n        return this._provider.media.audioTracks;\n    }\n    _onAddNativeTrack(event1) {\n        const _track = event1.track;\n        if (_track.label === \"\") return;\n        const id = _track.id.toString() || \"native-audio-\".concat(this._ctx.audioTracks.length), audioTrack = {\n            id,\n            label: _track.label,\n            language: _track.language,\n            kind: _track.kind,\n            selected: false\n        };\n        this._ctx.audioTracks[ListSymbol._add](audioTrack, event1);\n        if (_track.enabled) audioTrack.selected = true;\n    }\n    _onRemoveNativeTrack(event1) {\n        const track = this._ctx.audioTracks.getById(event1.track.id);\n        if (track) this._ctx.audioTracks[ListSymbol._remove](track, event1);\n    }\n    _onChangeNativeTrack(event1) {\n        let enabledTrack = this._getEnabledNativeTrack();\n        if (!enabledTrack) return;\n        const track = this._ctx.audioTracks.getById(enabledTrack.id);\n        if (track) this._ctx.audioTracks[ListSymbol._select](track, true, event1);\n    }\n    _getEnabledNativeTrack() {\n        return Array.from(this._nativeTracks).find((track)=>track.enabled);\n    }\n    _onChangeTrack(event1) {\n        const { current } = event1.detail;\n        if (!current) return;\n        const track = this._nativeTracks.getTrackById(current.id);\n        if (track) {\n            const prev = this._getEnabledNativeTrack();\n            if (prev) prev.enabled = false;\n            track.enabled = true;\n        }\n    }\n    constructor(_provider, _ctx){\n        this._provider = _provider;\n        this._ctx = _ctx;\n        this._nativeTracks.onaddtrack = this._onAddNativeTrack.bind(this);\n        this._nativeTracks.onremovetrack = this._onRemoveNativeTrack.bind(this);\n        this._nativeTracks.onchange = this._onChangeNativeTrack.bind(this);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._ctx.audioTracks, \"change\", this._onChangeTrack.bind(this));\n    }\n}\nclass HTMLMediaProvider {\n    setup() {\n        new HTMLMediaEvents(this, this._ctx);\n        if (\"audioTracks\" in this.media) new NativeAudioTracks(this, this._ctx);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n            this.audioGain.destroy();\n            this._media.srcObject = null;\n            this._media.removeAttribute(\"src\");\n            for (const source of this._media.querySelectorAll(\"source\"))source.remove();\n            this._media.load();\n        });\n    }\n    get type() {\n        return \"\";\n    }\n    get media() {\n        return this._media;\n    }\n    get currentSrc() {\n        return this._currentSrc;\n    }\n    setPlaybackRate(rate) {\n        this._media.playbackRate = rate;\n    }\n    async play() {\n        return this._media.play();\n    }\n    async pause() {\n        return this._media.pause();\n    }\n    setMuted(muted) {\n        this._media.muted = muted;\n    }\n    setVolume(volume) {\n        this._media.volume = volume;\n    }\n    setCurrentTime(time) {\n        this._media.currentTime = time;\n    }\n    setPlaysInline(inline) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(this._media, \"playsinline\", inline);\n    }\n    async loadSource(param, preload) {\n        let { src, type } = param;\n        this._media.preload = preload || \"\";\n        if (isMediaStream(src)) {\n            this._removeSource();\n            this._media.srcObject = src;\n        } else {\n            this._media.srcObject = null;\n            if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src)) {\n                if (type !== \"?\") {\n                    this._appendSource({\n                        src,\n                        type\n                    });\n                } else {\n                    this._removeSource();\n                    this._media.src = this._appendMediaFragment(src);\n                }\n            } else {\n                this._removeSource();\n                this._media.src = window.URL.createObjectURL(src);\n            }\n        }\n        this._media.load();\n        this._currentSrc = {\n            src,\n            type\n        };\n    }\n    /**\n   * Append source so it works when requesting AirPlay since hls.js will remove it.\n   */ _appendSource(src, defaultType) {\n        const prevSource = this._media.querySelector(\"source[data-vds]\"), source = prevSource !== null && prevSource !== void 0 ? prevSource : document.createElement(\"source\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(source, \"src\", this._appendMediaFragment(src.src));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(source, \"type\", src.type !== \"?\" ? src.type : defaultType);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(source, \"data-vds\", \"\");\n        if (!prevSource) this._media.append(source);\n    }\n    _removeSource() {\n        var _this__media_querySelector;\n        (_this__media_querySelector = this._media.querySelector(\"source[data-vds]\")) === null || _this__media_querySelector === void 0 ? void 0 : _this__media_querySelector.remove();\n    }\n    _appendMediaFragment(src) {\n        const { clipStartTime, clipEndTime } = this._ctx.$state, startTime = clipStartTime(), endTime = clipEndTime();\n        if (startTime > 0 && endTime > 0) {\n            return \"\".concat(src, \"#t=\").concat(startTime, \",\").concat(endTime);\n        } else if (startTime > 0) {\n            return \"\".concat(src, \"#t=\").concat(startTime);\n        } else if (endTime > 0) {\n            return \"\".concat(src, \"#t=0,\").concat(endTime);\n        }\n        return src;\n    }\n    constructor(_media, _ctx){\n        this._media = _media;\n        this._ctx = _ctx;\n        this.scope = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createScope)();\n        this._currentSrc = null;\n        this.audioGain = new AudioGain(this._media, (gain)=>{\n            this._ctx.delegate._notify(\"audio-gain-change\", gain);\n        });\n    }\n}\nclass HTMLRemotePlaybackAdapter {\n    get supported() {\n        return this._supported();\n    }\n    _setup() {\n        var _this__media;\n        if (IS_SERVER || !((_this__media = this._media) === null || _this__media === void 0 ? void 0 : _this__media.remote) || !this._canPrompt) return;\n        this._media.remote.watchAvailability((available)=>{\n            this._supported.set(available);\n        }).catch(()=>{\n            this._supported.set(false);\n        });\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchSupported.bind(this));\n    }\n    _watchSupported() {\n        if (!this._supported()) return;\n        const events = [\n            \"connecting\",\n            \"connect\",\n            \"disconnect\"\n        ], onStateChange = this._onStateChange.bind(this);\n        onStateChange();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._media, \"playing\", onStateChange);\n        for (const type of events){\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._media.remote, type, onStateChange);\n        }\n    }\n    async prompt() {\n        if (!this.supported) throw Error(\"Not supported on this platform.\");\n        if (this._type === \"airplay\" && this._media.webkitShowPlaybackTargetPicker) {\n            return this._media.webkitShowPlaybackTargetPicker();\n        }\n        return this._media.remote.prompt();\n    }\n    _onStateChange(event1) {\n        const state = this._media.remote.state;\n        if (state === this._state) return;\n        const detail = {\n            type: this._type,\n            state\n        };\n        this._ctx.delegate._notify(\"remote-playback-change\", detail, event1);\n        this._state = state;\n    }\n    constructor(_media, _ctx){\n        this._media = _media;\n        this._ctx = _ctx;\n        this._supported = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n        this._setup();\n    }\n}\nclass HTMLAirPlayAdapter extends HTMLRemotePlaybackAdapter {\n    get _canPrompt() {\n        return \"WebKitPlaybackTargetAvailabilityEvent\" in window;\n    }\n    constructor(){\n        super(...arguments);\n        this._type = \"airplay\";\n    }\n}\nclass NativeHLSTextTracks {\n    _onAddTrack(event1) {\n        const nativeTrack = event1.track;\n        if (!nativeTrack || findTextTrackElement(this._video, nativeTrack)) return;\n        var _nativeTrack_label;\n        const track = new TextTrack({\n            id: nativeTrack.id,\n            kind: nativeTrack.kind,\n            label: (_nativeTrack_label = nativeTrack.label) !== null && _nativeTrack_label !== void 0 ? _nativeTrack_label : \"\",\n            language: nativeTrack.language,\n            type: \"vtt\"\n        });\n        track[TextTrackSymbol._native] = {\n            track: nativeTrack\n        };\n        track[TextTrackSymbol._readyState] = 2;\n        track[TextTrackSymbol._nativeHLS] = true;\n        let lastIndex = 0;\n        const onCueChange = (event2)=>{\n            if (!nativeTrack.cues) return;\n            for(let i = lastIndex; i < nativeTrack.cues.length; i++){\n                track.addCue(nativeTrack.cues[i], event2);\n                lastIndex++;\n            }\n        };\n        onCueChange(event1);\n        nativeTrack.oncuechange = onCueChange;\n        this._ctx.textTracks.add(track, event1);\n        track.setMode(nativeTrack.mode, event1);\n    }\n    _onDispose() {\n        this._video.textTracks.onaddtrack = null;\n        for (const track of this._ctx.textTracks){\n            var _track_TextTrackSymbol__native;\n            const nativeTrack = (_track_TextTrackSymbol__native = track[TextTrackSymbol._native]) === null || _track_TextTrackSymbol__native === void 0 ? void 0 : _track_TextTrackSymbol__native.track;\n            if (nativeTrack === null || nativeTrack === void 0 ? void 0 : nativeTrack.oncuechange) nativeTrack.oncuechange = null;\n        }\n    }\n    constructor(_video, _ctx){\n        this._video = _video;\n        this._ctx = _ctx;\n        _video.textTracks.onaddtrack = this._onAddTrack.bind(this);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(this._onDispose.bind(this));\n    }\n}\nfunction findTextTrackElement(video, track) {\n    return Array.from(video.children).find((el)=>el.track === track);\n}\nclass VideoPictureInPicture {\n    get active() {\n        return document.pictureInPictureElement === this._video;\n    }\n    get supported() {\n        return canUsePictureInPicture(this._video);\n    }\n    async enter() {\n        return this._video.requestPictureInPicture();\n    }\n    exit() {\n        return document.exitPictureInPicture();\n    }\n    _onEnter(event1) {\n        this._onChange(true, event1);\n    }\n    _onExit(event1) {\n        this._onChange(false, event1);\n    }\n    constructor(_video, _media){\n        this._video = _video;\n        this._media = _media;\n        this._onChange = (active, event1)=>{\n            this._media.delegate._notify(\"picture-in-picture-change\", active, event1);\n        };\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._video, \"enterpictureinpicture\", this._onEnter.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._video, \"leavepictureinpicture\", this._onExit.bind(this));\n    }\n}\nclass VideoPresentation {\n    get _supported() {\n        return canUseVideoPresentation(this._video);\n    }\n    async _setPresentationMode(mode) {\n        if (this._mode === mode) return;\n        this._video.webkitSetPresentationMode(mode);\n    }\n    _onModeChange(event1) {\n        var _this__media_player;\n        const prevMode = this._mode;\n        this._mode = this._video.webkitPresentationMode;\n        {\n            var _this__media_logger;\n            (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.infoGroup(\"presentation mode change\").labelledLog(\"Mode\", this._mode).labelledLog(\"Event\", event1).dispatch();\n        }\n        (_this__media_player = this._media.player) === null || _this__media_player === void 0 ? void 0 : _this__media_player.dispatch(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"video-presentation-change\", {\n            detail: this._mode,\n            trigger: event1\n        }));\n        [\n            \"fullscreen\",\n            \"picture-in-picture\"\n        ].forEach((type)=>{\n            if (this._mode === type || prevMode === type) {\n                this._media.delegate._notify(\"\".concat(type, \"-change\"), this._mode === type, event1);\n            }\n        });\n    }\n    constructor(_video, _media){\n        this._video = _video;\n        this._media = _media;\n        this._mode = \"inline\";\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._video, \"webkitpresentationmodechanged\", this._onModeChange.bind(this));\n    }\n}\nclass FullscreenPresentationAdapter {\n    get active() {\n        return this._presentation._mode === \"fullscreen\";\n    }\n    get supported() {\n        return this._presentation._supported;\n    }\n    async enter() {\n        this._presentation._setPresentationMode(\"fullscreen\");\n    }\n    async exit() {\n        this._presentation._setPresentationMode(\"inline\");\n    }\n    constructor(_presentation){\n        this._presentation = _presentation;\n    }\n}\nclass PIPPresentationAdapter {\n    get active() {\n        return this._presentation._mode === \"picture-in-picture\";\n    }\n    get supported() {\n        return this._presentation._supported;\n    }\n    async enter() {\n        this._presentation._setPresentationMode(\"picture-in-picture\");\n    }\n    async exit() {\n        this._presentation._setPresentationMode(\"inline\");\n    }\n    constructor(_presentation){\n        this._presentation = _presentation;\n    }\n}\nclass VideoProvider extends HTMLMediaProvider {\n    get type() {\n        return \"video\";\n    }\n    setup() {\n        super.setup();\n        if (canPlayHLSNatively(this.video)) {\n            new NativeHLSTextTracks(this.video, this._ctx);\n        }\n        this._ctx.textRenderers._attachVideo(this.video);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n            this._ctx.textRenderers._attachVideo(null);\n        });\n        if (this.type === \"video\") this._ctx.delegate._notify(\"provider-setup\", this);\n    }\n    /**\n   * The native HTML `<video>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement}\n   */ get video() {\n        return this._media;\n    }\n    constructor(video, ctx){\n        super(video, ctx);\n        this.$$PROVIDER_TYPE = \"VIDEO\";\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.scoped)(()=>{\n            this.airPlay = new HTMLAirPlayAdapter(video, ctx);\n            if (canUseVideoPresentation(video)) {\n                const presentation = new VideoPresentation(video, ctx);\n                this.fullscreen = new FullscreenPresentationAdapter(presentation);\n                this.pictureInPicture = new PIPPresentationAdapter(presentation);\n            } else if (canUsePictureInPicture(video)) {\n                this.pictureInPicture = new VideoPictureInPicture(video, ctx);\n            }\n        }, this.scope);\n    }\n}\nvar provider$1 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    VideoProvider: VideoProvider\n});\nfunction getLangName(langCode) {\n    try {\n        const displayNames = new Intl.DisplayNames(navigator.languages, {\n            type: \"language\"\n        });\n        const languageName = displayNames.of(langCode);\n        return languageName !== null && languageName !== void 0 ? languageName : null;\n    } catch (err) {\n        return null;\n    }\n}\nconst toDOMEventType = (type)=>\"dash-\".concat((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.camelToKebabCase)(type));\nclass DASHController {\n    get instance() {\n        return this._instance;\n    }\n    setup(ctor) {\n        this._instance = ctor().create();\n        const dispatcher = this._dispatchDASHEvent.bind(this);\n        for (const event1 of Object.values(ctor.events))this._instance.on(event1, dispatcher);\n        this._instance.on(ctor.events.ERROR, this._onError.bind(this));\n        for (const callback of this._callbacks)callback(this._instance);\n        this._ctx.player.dispatch(\"dash-instance\", {\n            detail: this._instance\n        });\n        this._instance.initialize(this._video, void 0, false);\n        this._instance.updateSettings({\n            streaming: {\n                text: {\n                    // Disabling text rendering by dash.\n                    defaultEnabled: false,\n                    dispatchForManualRendering: true\n                },\n                buffer: {\n                    /// Enables buffer replacement when switching bitrates for faster switching.\n                    fastSwitchEnabled: true\n                }\n            },\n            ...this._config\n        });\n        this._instance.on(ctor.events.FRAGMENT_LOADING_STARTED, this._onFragmentLoadStart.bind(this));\n        this._instance.on(ctor.events.FRAGMENT_LOADING_COMPLETED, this._onFragmentLoadComplete.bind(this));\n        this._instance.on(ctor.events.MANIFEST_LOADED, this._onManifestLoaded.bind(this));\n        this._instance.on(ctor.events.QUALITY_CHANGE_RENDERED, this._onQualityChange.bind(this));\n        this._instance.on(ctor.events.TEXT_TRACKS_ADDED, this._onTextTracksAdded.bind(this));\n        this._instance.on(ctor.events.TRACK_CHANGE_RENDERED, this._onTrackChange.bind(this));\n        this._ctx.qualities[QualitySymbol._enableAuto] = this._enableAutoQuality.bind(this);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._ctx.qualities, \"change\", this._onUserQualityChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._ctx.audioTracks, \"change\", this._onUserAudioChange.bind(this));\n        this._stopLiveSync = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._liveSync.bind(this));\n    }\n    _createDOMEvent(event1) {\n        return new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(toDOMEventType(event1.type), {\n            detail: event1\n        });\n    }\n    _liveSync() {\n        if (!this._ctx.$state.live()) return;\n        const raf = new RAFLoop(this._liveSyncPosition.bind(this));\n        raf._start();\n        return raf._stop.bind(raf);\n    }\n    _liveSyncPosition() {\n        if (!this._instance) return;\n        const position = this._instance.duration() - this._instance.time();\n        this._ctx.$state.liveSyncPosition.set(!isNaN(position) ? position : Infinity);\n    }\n    _dispatchDASHEvent(event1) {\n        var _this__ctx_player;\n        (_this__ctx_player = this._ctx.player) === null || _this__ctx_player === void 0 ? void 0 : _this__ctx_player.dispatch(this._createDOMEvent(event1));\n    }\n    _onTextFragmentLoaded(event1) {\n        var _this__currentTrack;\n        const native = (_this__currentTrack = this._currentTrack) === null || _this__currentTrack === void 0 ? void 0 : _this__currentTrack[TextTrackSymbol._native], cues = (native === null || native === void 0 ? void 0 : native.track).cues;\n        if (!native || !cues) return;\n        var _this__cueTracker_id;\n        const id = this._currentTrack.id, startIndex = (_this__cueTracker_id = this._cueTracker[id]) !== null && _this__cueTracker_id !== void 0 ? _this__cueTracker_id : 0, trigger = this._createDOMEvent(event1);\n        for(let i = startIndex; i < cues.length; i++){\n            const cue = cues[i];\n            if (!cue.positionAlign) cue.positionAlign = \"auto\";\n            this._currentTrack.addCue(cue, trigger);\n        }\n        this._cueTracker[id] = cues.length;\n    }\n    _onTextTracksAdded(event1) {\n        if (!this._instance) return;\n        const data = event1.tracks, nativeTextTracks = [\n            ...this._video.textTracks\n        ].filter((track)=>\"manualMode\" in track), trigger = this._createDOMEvent(event1);\n        for(let i = 0; i < nativeTextTracks.length; i++){\n            var _textTrackInfo_labels_find;\n            const textTrackInfo = data[i], nativeTextTrack = nativeTextTracks[i];\n            var _textTrackInfo_label, _ref, _ref1, _ref2, _textTrackInfo_lang;\n            const id = \"dash-\".concat(textTrackInfo.kind, \"-\").concat(i), track = new TextTrack({\n                id,\n                label: (_ref2 = (_ref1 = (_ref = (_textTrackInfo_label = textTrackInfo === null || textTrackInfo === void 0 ? void 0 : textTrackInfo.label) !== null && _textTrackInfo_label !== void 0 ? _textTrackInfo_label : (_textTrackInfo_labels_find = textTrackInfo.labels.find((t)=>t.text)) === null || _textTrackInfo_labels_find === void 0 ? void 0 : _textTrackInfo_labels_find.text) !== null && _ref !== void 0 ? _ref : (textTrackInfo === null || textTrackInfo === void 0 ? void 0 : textTrackInfo.lang) && getLangName(textTrackInfo.lang)) !== null && _ref1 !== void 0 ? _ref1 : textTrackInfo === null || textTrackInfo === void 0 ? void 0 : textTrackInfo.lang) !== null && _ref2 !== void 0 ? _ref2 : void 0,\n                language: (_textTrackInfo_lang = textTrackInfo.lang) !== null && _textTrackInfo_lang !== void 0 ? _textTrackInfo_lang : void 0,\n                kind: textTrackInfo.kind,\n                default: textTrackInfo.defaultTrack\n            });\n            track[TextTrackSymbol._native] = {\n                managed: true,\n                track: nativeTextTrack\n            };\n            track[TextTrackSymbol._readyState] = 2;\n            track[TextTrackSymbol._onModeChange] = ()=>{\n                if (!this._instance) return;\n                if (track.mode === \"showing\") {\n                    this._instance.setTextTrack(i);\n                    this._currentTrack = track;\n                } else {\n                    this._instance.setTextTrack(-1);\n                    this._currentTrack = null;\n                }\n            };\n            this._ctx.textTracks.add(track, trigger);\n        }\n    }\n    _onTrackChange(event1) {\n        const { mediaType, newMediaInfo } = event1;\n        if (mediaType === \"audio\") {\n            const track = this._ctx.audioTracks.getById(\"dash-audio-\".concat(newMediaInfo.index));\n            if (track) {\n                const trigger = this._createDOMEvent(event1);\n                this._ctx.audioTracks[ListSymbol._select](track, true, trigger);\n            }\n        }\n    }\n    _onQualityChange(event1) {\n        if (event1.mediaType !== \"video\") return;\n        const quality = this._ctx.qualities[event1.newQuality];\n        if (quality) {\n            const trigger = this._createDOMEvent(event1);\n            this._ctx.qualities[ListSymbol._select](quality, true, trigger);\n        }\n    }\n    _onManifestLoaded(event1) {\n        if (this._ctx.$state.canPlay() || !this._instance) return;\n        const { type, mediaPresentationDuration } = event1.data, trigger = this._createDOMEvent(event1);\n        this._ctx.delegate._notify(\"stream-type-change\", type !== \"static\" ? \"live\" : \"on-demand\", trigger);\n        this._ctx.delegate._notify(\"duration-change\", mediaPresentationDuration, trigger);\n        this._ctx.qualities[QualitySymbol._setAuto](true, trigger);\n        const media = this._instance.getVideoElement();\n        const videoQualities = this._instance.getTracksForTypeFromManifest(\"video\", event1.data);\n        const supportedVideoMimeType = [\n            ...new Set(videoQualities.map((e)=>e.mimeType))\n        ].find((type2)=>type2 && canPlayVideoType(media, type2));\n        const videoQuality = videoQualities.filter((track)=>supportedVideoMimeType === track.mimeType)[0];\n        let audioTracks = this._instance.getTracksForTypeFromManifest(\"audio\", event1.data);\n        const supportedAudioMimeType = [\n            ...new Set(audioTracks.map((e)=>e.mimeType))\n        ].find((type2)=>type2 && canPlayAudioType(media, type2));\n        audioTracks = audioTracks.filter((track)=>supportedAudioMimeType === track.mimeType);\n        videoQuality.bitrateList.forEach((bitrate, index)=>{\n            var _bitrate_id;\n            var _bitrate_id_toString, _bitrate_width, _bitrate_height, _bitrate_bandwidth;\n            const quality = {\n                id: (_bitrate_id_toString = (_bitrate_id = bitrate.id) === null || _bitrate_id === void 0 ? void 0 : _bitrate_id.toString()) !== null && _bitrate_id_toString !== void 0 ? _bitrate_id_toString : \"dash-bitrate-\".concat(index),\n                width: (_bitrate_width = bitrate.width) !== null && _bitrate_width !== void 0 ? _bitrate_width : 0,\n                height: (_bitrate_height = bitrate.height) !== null && _bitrate_height !== void 0 ? _bitrate_height : 0,\n                bitrate: (_bitrate_bandwidth = bitrate.bandwidth) !== null && _bitrate_bandwidth !== void 0 ? _bitrate_bandwidth : 0,\n                codec: videoQuality.codec,\n                index\n            };\n            this._ctx.qualities[ListSymbol._add](quality, trigger);\n        });\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(videoQuality.index)) {\n            const quality = this._ctx.qualities[videoQuality.index];\n            if (quality) this._ctx.qualities[ListSymbol._select](quality, true, trigger);\n        }\n        audioTracks.forEach((audioTrack, index)=>{\n            const matchingLabel = audioTrack.labels.find((label2)=>{\n                return navigator.languages.some((language)=>{\n                    return label2.lang && language.toLowerCase().startsWith(label2.lang.toLowerCase());\n                });\n            });\n            const label = matchingLabel || audioTrack.labels[0];\n            var _label_text, _ref, _ref1, _audioTrack_lang;\n            const localTrack = {\n                id: \"dash-audio-\".concat(audioTrack === null || audioTrack === void 0 ? void 0 : audioTrack.index),\n                label: (_ref1 = (_ref = (_label_text = label === null || label === void 0 ? void 0 : label.text) !== null && _label_text !== void 0 ? _label_text : audioTrack.lang && getLangName(audioTrack.lang)) !== null && _ref !== void 0 ? _ref : audioTrack.lang) !== null && _ref1 !== void 0 ? _ref1 : \"\",\n                language: (_audioTrack_lang = audioTrack.lang) !== null && _audioTrack_lang !== void 0 ? _audioTrack_lang : \"\",\n                kind: \"main\",\n                mimeType: audioTrack.mimeType,\n                codec: audioTrack.codec,\n                index\n            };\n            this._ctx.audioTracks[ListSymbol._add](localTrack, trigger);\n        });\n        media.dispatchEvent(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"canplay\", {\n            trigger\n        }));\n    }\n    _onError(event1) {\n        const { type: eventType, error: data } = event1;\n        {\n            var _this__ctx_logger;\n            (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.errorGroup(\"[vidstack] DASH error `\".concat(data.message, \"`\")).labelledLog(\"Media Element\", this._video).labelledLog(\"DASH Instance\", this._instance).labelledLog(\"Event Type\", eventType).labelledLog(\"Data\", data).labelledLog(\"Src\", (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._ctx.$state.source)).labelledLog(\"Media Store\", {\n                ...this._ctx.$state\n            }).dispatch();\n        }\n        switch(data.code){\n            case 27:\n                this._onNetworkError(data);\n                break;\n            default:\n                this._onFatalError(data);\n                break;\n        }\n    }\n    _onFragmentLoadStart() {\n        if (this._retryLoadingTimer >= 0) this._clearRetryTimer();\n    }\n    _onFragmentLoadComplete(event1) {\n        const mediaType = event1.mediaType;\n        if (mediaType === \"text\") {\n            requestAnimationFrame(this._onTextFragmentLoaded.bind(this, event1));\n        }\n    }\n    _onNetworkError(error) {\n        var _this__instance;\n        this._clearRetryTimer();\n        (_this__instance = this._instance) === null || _this__instance === void 0 ? void 0 : _this__instance.play();\n        this._retryLoadingTimer = window.setTimeout(()=>{\n            this._retryLoadingTimer = -1;\n            this._onFatalError(error);\n        }, 5e3);\n    }\n    _clearRetryTimer() {\n        clearTimeout(this._retryLoadingTimer);\n        this._retryLoadingTimer = -1;\n    }\n    _onFatalError(error) {\n        var _error_message;\n        this._ctx.delegate._notify(\"error\", {\n            message: (_error_message = error.message) !== null && _error_message !== void 0 ? _error_message : \"\",\n            code: 1,\n            error\n        });\n    }\n    _enableAutoQuality() {\n        var _this__instance;\n        this._switchAutoBitrate(\"video\", true);\n        const { qualities } = this._ctx;\n        (_this__instance = this._instance) === null || _this__instance === void 0 ? void 0 : _this__instance.setQualityFor(\"video\", qualities.selectedIndex, true);\n    }\n    _switchAutoBitrate(type, auto) {\n        var _this__instance;\n        (_this__instance = this._instance) === null || _this__instance === void 0 ? void 0 : _this__instance.updateSettings({\n            streaming: {\n                abr: {\n                    autoSwitchBitrate: {\n                        [type]: auto\n                    }\n                }\n            }\n        });\n    }\n    _onUserQualityChange() {\n        const { qualities } = this._ctx;\n        if (!this._instance || qualities.auto || !qualities.selected) return;\n        this._switchAutoBitrate(\"video\", false);\n        this._instance.setQualityFor(\"video\", qualities.selectedIndex, qualities.switch === \"current\");\n        if (IS_CHROME) {\n            this._video.currentTime = this._video.currentTime;\n        }\n    }\n    _onUserAudioChange() {\n        if (!this._instance) return;\n        const { audioTracks } = this._ctx, selectedTrack = this._instance.getTracksFor(\"audio\").find((track)=>audioTracks.selected && audioTracks.selected.id === \"dash-audio-\".concat(track.index));\n        if (selectedTrack) this._instance.setCurrentTrack(selectedTrack);\n    }\n    _reset() {\n        this._clearRetryTimer();\n        this._currentTrack = null;\n        this._cueTracker = {};\n    }\n    loadSource(src) {\n        var _this__instance;\n        this._reset();\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src.src)) return;\n        (_this__instance = this._instance) === null || _this__instance === void 0 ? void 0 : _this__instance.attachSource(src.src);\n    }\n    destroy() {\n        var _this__instance, _this__stopLiveSync, _this, _this__ctx_logger, _this__ctx;\n        this._reset();\n        (_this__instance = this._instance) === null || _this__instance === void 0 ? void 0 : _this__instance.destroy();\n        this._instance = null;\n        (_this__stopLiveSync = (_this = this)._stopLiveSync) === null || _this__stopLiveSync === void 0 ? void 0 : _this__stopLiveSync.call(_this);\n        this._stopLiveSync = null;\n        (_this__ctx = this._ctx) === null || _this__ctx === void 0 ? void 0 : (_this__ctx_logger = _this__ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.info(\"\\uD83C\\uDFD7️ Destroyed DASH instance\");\n    }\n    constructor(_video, _ctx){\n        this._video = _video;\n        this._ctx = _ctx;\n        this._instance = null;\n        this._stopLiveSync = null;\n        this._config = {};\n        this._callbacks = /* @__PURE__ */ new Set();\n        this._currentTrack = null;\n        this._cueTracker = {};\n        this._retryLoadingTimer = -1;\n    }\n}\nfunction coerceToError(error) {\n    return error instanceof Error ? error : Error(typeof error === \"string\" ? error : JSON.stringify(error));\n}\nfunction assert(condition, message) {\n    if (!condition) {\n        throw Error(message || \"Assertion failed.\");\n    }\n}\nclass DASHLibLoader {\n    async _startLoading() {\n        var _this__ctx_logger;\n        (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.info(\"\\uD83C\\uDFD7️ Loading DASH Library\");\n        const callbacks = {\n            onLoadStart: this._onLoadStart.bind(this),\n            onLoaded: this._onLoaded.bind(this),\n            onLoadError: this._onLoadError.bind(this)\n        };\n        let ctor = await loadDASHScript(this._lib, callbacks);\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(ctor) && !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(this._lib)) ctor = await importDASH(this._lib, callbacks);\n        if (!ctor) return null;\n        if (!window.dashjs.supportsMediaSource()) {\n            var _this__ctx_logger1;\n            const message = \"[vidstack] `dash.js` is not supported in this environment\";\n            (_this__ctx_logger1 = this._ctx.logger) === null || _this__ctx_logger1 === void 0 ? void 0 : _this__ctx_logger1.error(message);\n            this._ctx.player.dispatch(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"dash-unsupported\"));\n            this._ctx.delegate._notify(\"error\", {\n                message,\n                code: 4\n            });\n            return null;\n        }\n        return ctor;\n    }\n    _onLoadStart() {\n        {\n            var _this__ctx_logger;\n            (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.infoGroup(\"Starting to load `dash.js`\").labelledLog(\"URL\", this._lib).dispatch();\n        }\n        this._ctx.player.dispatch(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"dash-lib-load-start\"));\n    }\n    _onLoaded(ctor) {\n        {\n            var _this__ctx_logger;\n            (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.infoGroup(\"Loaded `dash.js`\").labelledLog(\"Library\", this._lib).labelledLog(\"Constructor\", ctor).dispatch();\n        }\n        this._ctx.player.dispatch(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"dash-lib-loaded\", {\n            detail: ctor\n        }));\n        this._callback(ctor);\n    }\n    _onLoadError(e) {\n        const error = coerceToError(e);\n        {\n            var _this__ctx_logger;\n            (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.errorGroup(\"[vidstack] Failed to load `dash.js`\").labelledLog(\"Library\", this._lib).labelledLog(\"Error\", e).dispatch();\n        }\n        this._ctx.player.dispatch(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"dash-lib-load-error\", {\n            detail: error\n        }));\n        this._ctx.delegate._notify(\"error\", {\n            message: error.message,\n            code: 4,\n            error\n        });\n    }\n    constructor(_lib, _ctx, _callback){\n        this._lib = _lib;\n        this._ctx = _ctx;\n        this._callback = _callback;\n        this._startLoading();\n    }\n}\nasync function importDASH(loader) {\n    let callbacks = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    var _callbacks_onLoadStart;\n    if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(loader)) return void 0;\n    (_callbacks_onLoadStart = callbacks.onLoadStart) === null || _callbacks_onLoadStart === void 0 ? void 0 : _callbacks_onLoadStart.call(callbacks);\n    if (isDASHConstructor(loader)) {\n        var _callbacks_onLoaded;\n        (_callbacks_onLoaded = callbacks.onLoaded) === null || _callbacks_onLoaded === void 0 ? void 0 : _callbacks_onLoaded.call(callbacks, loader);\n        return loader;\n    }\n    if (isDASHNamespace(loader)) {\n        var _callbacks_onLoaded1;\n        const ctor = loader.MediaPlayer;\n        (_callbacks_onLoaded1 = callbacks.onLoaded) === null || _callbacks_onLoaded1 === void 0 ? void 0 : _callbacks_onLoaded1.call(callbacks, ctor);\n        return ctor;\n    }\n    try {\n        var _this;\n        const ctor = (_this = await loader()) === null || _this === void 0 ? void 0 : _this.default;\n        if (isDASHNamespace(ctor)) {\n            var _callbacks_onLoaded2;\n            (_callbacks_onLoaded2 = callbacks.onLoaded) === null || _callbacks_onLoaded2 === void 0 ? void 0 : _callbacks_onLoaded2.call(callbacks, ctor.MediaPlayer);\n            return ctor.MediaPlayer;\n        }\n        if (ctor) {\n            var _callbacks_onLoaded3;\n            (_callbacks_onLoaded3 = callbacks.onLoaded) === null || _callbacks_onLoaded3 === void 0 ? void 0 : _callbacks_onLoaded3.call(callbacks, ctor);\n        } else {\n            throw Error( true ? \"[vidstack] failed importing `dash.js`. Dynamic import returned invalid object.\" : 0);\n        }\n        return ctor;\n    } catch (err) {\n        var _callbacks_onLoadError;\n        (_callbacks_onLoadError = callbacks.onLoadError) === null || _callbacks_onLoadError === void 0 ? void 0 : _callbacks_onLoadError.call(callbacks, err);\n    }\n    return void 0;\n}\nasync function loadDASHScript(src) {\n    let callbacks = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    var _callbacks_onLoadStart;\n    if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src)) return void 0;\n    (_callbacks_onLoadStart = callbacks.onLoadStart) === null || _callbacks_onLoadStart === void 0 ? void 0 : _callbacks_onLoadStart.call(callbacks);\n    try {\n        var _callbacks_onLoaded;\n        await loadScript(src);\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(window.dashjs.MediaPlayer)) {\n            throw Error( true ? \"[vidstack] failed loading `dash.js`. Could not find a valid `Dash` constructor on window\" : 0);\n        }\n        const ctor = window.dashjs.MediaPlayer;\n        (_callbacks_onLoaded = callbacks.onLoaded) === null || _callbacks_onLoaded === void 0 ? void 0 : _callbacks_onLoaded.call(callbacks, ctor);\n        return ctor;\n    } catch (err) {\n        var _callbacks_onLoadError;\n        (_callbacks_onLoadError = callbacks.onLoadError) === null || _callbacks_onLoadError === void 0 ? void 0 : _callbacks_onLoadError.call(callbacks, err);\n    }\n    return void 0;\n}\nfunction isDASHConstructor(value) {\n    return value && value.prototype && value.prototype !== Function;\n}\nfunction isDASHNamespace(value) {\n    return value && \"MediaPlayer\" in value;\n}\nconst JS_DELIVR_CDN = \"https://cdn.jsdelivr.net\";\nclass DASHProvider extends VideoProvider {\n    /**\n   * The `dash.js` constructor.\n   */ get ctor() {\n        return this._ctor;\n    }\n    /**\n   * The current `dash.js` instance.\n   */ get instance() {\n        return this._controller.instance;\n    }\n    get type() {\n        return \"dash\";\n    }\n    get canLiveSync() {\n        return true;\n    }\n    /**\n   * The `dash.js` configuration object.\n   *\n   * @see {@link https://cdn.dashjs.org/latest/jsdoc/module-Settings.html}\n   */ get config() {\n        return this._controller._config;\n    }\n    set config(config) {\n        this._controller._config = config;\n    }\n    /**\n   * The `dash.js` constructor (supports dynamic imports) or a URL of where it can be found.\n   *\n   * @defaultValue `https://cdn.jsdelivr.net/npm/dashjs@4.7.4/dist/dash.all.min.js`\n   */ get library() {\n        return this._library;\n    }\n    set library(library) {\n        this._library = library;\n    }\n    preconnect() {\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(this._library)) return;\n        preconnect(this._library);\n    }\n    setup() {\n        super.setup();\n        new DASHLibLoader(this._library, this._ctx, (ctor)=>{\n            this._ctor = ctor;\n            this._controller.setup(ctor);\n            this._ctx.delegate._notify(\"provider-setup\", this);\n            const src = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._ctx.$state.source);\n            if (src) this.loadSource(src);\n        });\n    }\n    async loadSource(src, preload) {\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src.src)) {\n            this._removeSource();\n            return;\n        }\n        this._media.preload = preload || \"\";\n        this._appendSource(src, \"application/x-mpegurl\");\n        this._controller.loadSource(src);\n        this._currentSrc = src;\n    }\n    /**\n   * The given callback is invoked when a new `dash.js` instance is created and right before it's\n   * attached to media.\n   */ onInstance(callback) {\n        const instance = this._controller.instance;\n        if (instance) callback(instance);\n        this._controller._callbacks.add(callback);\n        return ()=>this._controller._callbacks.delete(callback);\n    }\n    destroy() {\n        this._controller.destroy();\n    }\n    constructor(){\n        super(...arguments);\n        this.$$PROVIDER_TYPE = \"DASH\";\n        this._ctor = null;\n        this._controller = new DASHController(this.video, this._ctx);\n        this._library = \"\".concat(JS_DELIVR_CDN, \"/npm/dashjs@4.7.4/dist/dash\", \".all.debug.js\");\n    }\n}\n/**\n * Whether `dash.js` is supported in this environment.\n */ DASHProvider.supported = isDASHSupported();\nvar provider = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    DASHProvider: DASHProvider\n});\nconst _DASHProviderLoader = class _DASHProviderLoader extends VideoProviderLoader {\n    canPlay(src) {\n        return _DASHProviderLoader.supported && isDASHSrc(src);\n    }\n    async load(context) {\n        if (IS_SERVER) {\n            throw Error(\"[vidstack] can not load dash provider server-side\");\n        }\n        if (!this.target) {\n            throw Error(\"[vidstack] `<video>` element was not found - did you forget to include `<media-provider>`?\");\n        }\n        return new (await Promise.resolve().then(function() {\n            return provider;\n        })).DASHProvider(this.target, context);\n    }\n    constructor(){\n        super(...arguments);\n        this.name = \"dash\";\n    }\n};\n_DASHProviderLoader.supported = isDASHSupported();\nlet DASHProviderLoader = _DASHProviderLoader;\nclass VimeoProviderLoader {\n    preconnect() {\n        const connections = [\n            \"https://i.vimeocdn.com\",\n            \"https://f.vimeocdn.com\",\n            \"https://fresnel.vimeocdn.com\"\n        ];\n        for (const url of connections){\n            preconnect(url);\n        }\n    }\n    canPlay(src) {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src.src) && src.type === \"video/vimeo\";\n    }\n    mediaType() {\n        return \"video\";\n    }\n    async load(ctx) {\n        if (IS_SERVER) {\n            throw Error(\"[vidstack] can not load vimeo provider server-side\");\n        }\n        if (!this.target) {\n            throw Error(\"[vidstack] `<iframe>` element was not found - did you forget to include media provider?\");\n        }\n        return new (await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_vidstack_react_dev_chunks_vidstack-C4FuHl6d_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./vidstack-C4FuHl6d.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-C4FuHl6d.js\"))).VimeoProvider(this.target, ctx);\n    }\n    async loadPoster(src, ctx, abort) {\n        const { resolveVimeoVideoId, getVimeoVideoInfo } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_vidstack_react_dev_chunks_vidstack-krOAtKMi_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./vidstack-krOAtKMi.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-krOAtKMi.js\"));\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src.src)) return null;\n        const { videoId, hash } = resolveVimeoVideoId(src.src);\n        if (videoId) {\n            return getVimeoVideoInfo(videoId, abort, hash).then((info)=>info ? info.poster : null);\n        }\n        return null;\n    }\n    constructor(){\n        this.name = \"vimeo\";\n    }\n}\nclass YouTubeProviderLoader {\n    preconnect() {\n        const connections = [\n            // Botguard script.\n            \"https://www.google.com\",\n            // Posters.\n            \"https://i.ytimg.com\",\n            // Ads.\n            \"https://googleads.g.doubleclick.net\",\n            \"https://static.doubleclick.net\"\n        ];\n        for (const url of connections){\n            preconnect(url);\n        }\n    }\n    canPlay(src) {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src.src) && src.type === \"video/youtube\";\n    }\n    mediaType() {\n        return \"video\";\n    }\n    async load(ctx) {\n        if (IS_SERVER) {\n            throw Error(\"[vidstack] can not load youtube provider server-side\");\n        }\n        if (!this.target) {\n            throw Error(\"[vidstack] `<iframe>` element was not found - did you forget to include media provider?\");\n        }\n        return new (await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_vidstack_react_dev_chunks_vidstack-Bby4qdTP_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./vidstack-Bby4qdTP.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Bby4qdTP.js\"))).YouTubeProvider(this.target, ctx);\n    }\n    async loadPoster(src, ctx, abort) {\n        const { findYouTubePoster, resolveYouTubeVideoId } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_vidstack_react_dev_chunks_vidstack-Zc3I7oOd_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./vidstack-Zc3I7oOd.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Zc3I7oOd.js\"));\n        const videoId = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src.src) && resolveYouTubeVideoId(src.src);\n        if (videoId) return findYouTubePoster(videoId, abort);\n        return null;\n    }\n    constructor(){\n        this.name = \"youtube\";\n    }\n}\nfunction padNumberWithZeroes(num, expectedLength) {\n    const str = String(num);\n    const actualLength = str.length;\n    const shouldPad = actualLength < expectedLength;\n    if (shouldPad) {\n        const padLength = expectedLength - actualLength;\n        const padding = \"0\".repeat(padLength);\n        return \"\".concat(padding).concat(num);\n    }\n    return str;\n}\nfunction parseTime(duration) {\n    const hours = Math.trunc(duration / 3600);\n    const minutes = Math.trunc(duration % 3600 / 60);\n    const seconds = Math.trunc(duration % 60);\n    const fraction = Number((duration - Math.trunc(duration)).toPrecision(3));\n    return {\n        hours,\n        minutes,\n        seconds,\n        fraction\n    };\n}\nfunction formatTime(duration) {\n    let { padHrs = null, padMins = null, showHrs = false, showMs = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const { hours, minutes, seconds, fraction } = parseTime(duration), paddedHours = padHrs ? padNumberWithZeroes(hours, 2) : hours, paddedMinutes = padMins || (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNull)(padMins) && duration >= 3600 ? padNumberWithZeroes(minutes, 2) : minutes, paddedSeconds = padNumberWithZeroes(seconds, 2), paddedMs = showMs && fraction > 0 ? \".\".concat(String(fraction).replace(/^0?\\./, \"\")) : \"\", time = \"\".concat(paddedMinutes, \":\").concat(paddedSeconds).concat(paddedMs);\n    return hours > 0 || showHrs ? \"\".concat(paddedHours, \":\").concat(time) : time;\n}\nfunction formatSpokenTime(duration) {\n    const spokenParts = [];\n    const { hours, minutes, seconds } = parseTime(duration);\n    if (hours > 0) {\n        spokenParts.push(\"\".concat(hours, \" hour\"));\n    }\n    if (minutes > 0) {\n        spokenParts.push(\"\".concat(minutes, \" min\"));\n    }\n    if (seconds > 0 || spokenParts.length === 0) {\n        spokenParts.push(\"\".concat(seconds, \" sec\"));\n    }\n    return spokenParts.join(\" \");\n}\nconst MEDIA_ATTRIBUTES = Symbol(\"MEDIA_ATTRIBUTES\");\nconst mediaAttributes = [\n    \"autoPlay\",\n    \"canAirPlay\",\n    \"canFullscreen\",\n    \"canGoogleCast\",\n    \"canLoad\",\n    \"canLoadPoster\",\n    \"canPictureInPicture\",\n    \"canPlay\",\n    \"canSeek\",\n    \"ended\",\n    \"fullscreen\",\n    \"isAirPlayConnected\",\n    \"isGoogleCastConnected\",\n    \"live\",\n    \"liveEdge\",\n    \"loop\",\n    \"mediaType\",\n    \"muted\",\n    \"paused\",\n    \"pictureInPicture\",\n    \"playing\",\n    \"playsInline\",\n    \"remotePlaybackState\",\n    \"remotePlaybackType\",\n    \"seeking\",\n    \"started\",\n    \"streamType\",\n    \"viewType\",\n    \"waiting\"\n];\nconst mediaPlayerProps = {\n    artist: \"\",\n    artwork: null,\n    autoplay: false,\n    autoPlay: false,\n    clipStartTime: 0,\n    clipEndTime: 0,\n    controls: false,\n    currentTime: 0,\n    crossorigin: null,\n    crossOrigin: null,\n    duration: -1,\n    fullscreenOrientation: \"landscape\",\n    googleCast: {},\n    load: \"visible\",\n    posterLoad: \"visible\",\n    logLevel: \"warn\",\n    loop: false,\n    muted: false,\n    paused: true,\n    playsinline: false,\n    playsInline: false,\n    playbackRate: 1,\n    poster: \"\",\n    preload: \"metadata\",\n    preferNativeHLS: false,\n    src: \"\",\n    title: \"\",\n    controlsDelay: 2e3,\n    hideControlsOnMouseLeave: false,\n    viewType: \"unknown\",\n    streamType: \"unknown\",\n    volume: 1,\n    liveEdgeTolerance: 10,\n    minLiveDVRWindow: 60,\n    keyDisabled: false,\n    keyTarget: \"player\",\n    keyShortcuts: MEDIA_KEY_SHORTCUTS,\n    storage: null\n};\nconst MEDIA_EVENTS = [\n    \"abort\",\n    \"can-play\",\n    \"can-play-through\",\n    \"duration-change\",\n    \"emptied\",\n    \"ended\",\n    \"error\",\n    \"fullscreen-change\",\n    \"loaded-data\",\n    \"loaded-metadata\",\n    \"load-start\",\n    \"media-type-change\",\n    \"pause\",\n    \"play\",\n    \"playing\",\n    \"progress\",\n    \"seeked\",\n    \"seeking\",\n    \"source-change\",\n    \"sources-change\",\n    \"stalled\",\n    \"started\",\n    \"suspend\",\n    \"stream-type-change\",\n    \"replay\",\n    // time-change,\n    // 'time-update',\n    \"view-type-change\",\n    \"volume-change\",\n    \"waiting\"\n];\nclass MediaEventsLogger extends MediaPlayerController {\n    onConnect() {\n        const handler = this._onMediaEvent.bind(this);\n        for (const eventType of MEDIA_EVENTS)this.listen(eventType, handler);\n    }\n    _onMediaEvent(event1) {\n        var _this__media_logger;\n        (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.debugGroup(\"\\uD83D\\uDCE1 dispatching `\".concat(event1.type, \"`\")).labelledLog(\"Media Store\", {\n            ...this.$state\n        }).labelledLog(\"Event\", event1).dispatch();\n    }\n    constructor(_media){\n        super();\n        this._media = _media;\n    }\n}\nclass MediaLoadController extends MediaPlayerController {\n    async onAttach(el) {\n        if (IS_SERVER) return;\n        const load = this.$props[this._type]();\n        if (load === \"eager\") {\n            requestAnimationFrame(this._callback);\n        } else if (load === \"idle\") {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.waitIdlePeriod)(this._callback);\n        } else if (load === \"visible\") {\n            let dispose, observer = new IntersectionObserver((entries)=>{\n                if (!this.scope) return;\n                if (entries[0].isIntersecting) {\n                    dispose === null || dispose === void 0 ? void 0 : dispose();\n                    dispose = void 0;\n                    this._callback();\n                }\n            });\n            observer.observe(el);\n            dispose = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>observer.disconnect());\n        }\n    }\n    constructor(_type, _callback){\n        super();\n        this._type = _type;\n        this._callback = _callback;\n    }\n}\nlet seenAutoplayWarning = false;\nclass MediaPlayerDelegate {\n    async _ready(info, trigger) {\n        if (IS_SERVER) return;\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(async ()=>{\n            var _storage_onLoad, _savedState, _savedState1;\n            const { logger } = this._media, { autoPlay, canPlay, started, duration, seekable, buffered, remotePlaybackInfo, playsInline, savedState, source } = this._media.$state;\n            if (canPlay()) return;\n            var _info_duration, _info_seekable, _info_buffered;\n            const detail = {\n                duration: (_info_duration = info === null || info === void 0 ? void 0 : info.duration) !== null && _info_duration !== void 0 ? _info_duration : duration(),\n                seekable: (_info_seekable = info === null || info === void 0 ? void 0 : info.seekable) !== null && _info_seekable !== void 0 ? _info_seekable : seekable(),\n                buffered: (_info_buffered = info === null || info === void 0 ? void 0 : info.buffered) !== null && _info_buffered !== void 0 ? _info_buffered : buffered(),\n                provider: this._media.$provider()\n            };\n            this._notify(\"can-play\", detail, trigger);\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.tick)();\n            {\n                logger === null || logger === void 0 ? void 0 : logger.infoGroup(\"-~-~-~-~-~-~- ✅ MEDIA READY -~-~-~-~-~-~-\").labelledLog(\"Media\", this._media).labelledLog(\"Trigger Event\", trigger).dispatch();\n            }\n            let provider = this._media.$provider(), { storage, qualities } = this._media, { muted, volume, clipStartTime, playbackRate } = this._media.$props;\n            await (storage === null || storage === void 0 ? void 0 : (_storage_onLoad = storage.onLoad) === null || _storage_onLoad === void 0 ? void 0 : _storage_onLoad.call(storage, source()));\n            var _ref;\n            const savedPlaybackTime = (_savedState = savedState()) === null || _savedState === void 0 ? void 0 : _savedState.currentTime, savedPlayingState = (_savedState1 = savedState()) === null || _savedState1 === void 0 ? void 0 : _savedState1.paused, storageTime = await (storage === null || storage === void 0 ? void 0 : storage.getTime()), startTime = (_ref = savedPlaybackTime !== null && savedPlaybackTime !== void 0 ? savedPlaybackTime : storageTime) !== null && _ref !== void 0 ? _ref : clipStartTime(), shouldAutoPlay = savedPlayingState || savedPlayingState !== false && !started() && autoPlay();\n            if (provider) {\n                var _provider_audioGain_setGain, _provider_audioGain, _provider_setPlaybackRate, _provider_setPlaysInline;\n                var _ref1;\n                provider.setVolume((_ref1 = await (storage === null || storage === void 0 ? void 0 : storage.getVolume())) !== null && _ref1 !== void 0 ? _ref1 : volume());\n                provider.setMuted(muted() || !!await (storage === null || storage === void 0 ? void 0 : storage.getMuted()));\n                var _ref2;\n                const audioGain = (_ref2 = await (storage === null || storage === void 0 ? void 0 : storage.getAudioGain())) !== null && _ref2 !== void 0 ? _ref2 : 1;\n                if (audioGain > 1) (_provider_audioGain = provider.audioGain) === null || _provider_audioGain === void 0 ? void 0 : (_provider_audioGain_setGain = _provider_audioGain.setGain) === null || _provider_audioGain_setGain === void 0 ? void 0 : _provider_audioGain_setGain.call(_provider_audioGain, audioGain);\n                var _ref3;\n                (_provider_setPlaybackRate = provider.setPlaybackRate) === null || _provider_setPlaybackRate === void 0 ? void 0 : _provider_setPlaybackRate.call(provider, (_ref3 = await (storage === null || storage === void 0 ? void 0 : storage.getPlaybackRate())) !== null && _ref3 !== void 0 ? _ref3 : playbackRate());\n                (_provider_setPlaysInline = provider.setPlaysInline) === null || _provider_setPlaysInline === void 0 ? void 0 : _provider_setPlaysInline.call(provider, playsInline());\n                if (startTime > 0) provider.setCurrentTime(startTime);\n            }\n            const prefQuality = await (storage === null || storage === void 0 ? void 0 : storage.getVideoQuality());\n            if (prefQuality && qualities.length) {\n                let currentQuality = null, currentScore = Infinity;\n                for (const quality of qualities){\n                    var _quality_bitrate;\n                    const score = Math.abs(prefQuality.width - quality.width) + Math.abs(prefQuality.height - quality.height) + (prefQuality.bitrate ? Math.abs(prefQuality.bitrate - ((_quality_bitrate = quality.bitrate) !== null && _quality_bitrate !== void 0 ? _quality_bitrate : 0)) : 0);\n                    if (score < currentScore) {\n                        currentQuality = quality;\n                        currentScore = score;\n                    }\n                }\n                if (currentQuality) currentQuality.selected = true;\n            }\n            if (canPlay() && shouldAutoPlay) {\n                await this._attemptAutoplay(trigger);\n            } else if (storageTime && storageTime > 0) {\n                this._notify(\"started\", void 0, trigger);\n            }\n            remotePlaybackInfo.set(null);\n        });\n    }\n    async _attemptAutoplay(trigger) {\n        const { player, $state: { autoPlaying, muted } } = this._media;\n        autoPlaying.set(true);\n        const attemptEvent = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"auto-play-attempt\", {\n            trigger\n        });\n        try {\n            await player.play(attemptEvent);\n        } catch (error) {\n            if (!seenAutoplayWarning) {\n                var _this__media_logger;\n                const muteMsg = !muted() ? \" Attempting with volume muted will most likely resolve the issue.\" : \"\";\n                (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.errorGroup(\"[vidstack] auto-play request failed\").labelledLog(\"Message\", \"Autoplay was requested but failed most likely due to browser autoplay policies.\".concat(muteMsg)).labelledLog(\"Trigger Event\", trigger).labelledLog(\"Error\", error).labelledLog(\"See\", \"https://developer.chrome.com/blog/autoplay\").dispatch();\n                seenAutoplayWarning = true;\n            }\n        }\n    }\n    constructor(_handle, _media){\n        var _this = this;\n        this._handle = _handle;\n        this._media = _media;\n        this._notify = function(type) {\n            for(var _len = arguments.length, init = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                init[_key - 1] = arguments[_key];\n            }\n            if (IS_SERVER) return;\n            _this._handle(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(type, {\n                detail: init === null || init === void 0 ? void 0 : init[0],\n                trigger: init === null || init === void 0 ? void 0 : init[1]\n            }));\n        };\n    }\n}\nclass Queue {\n    /**\n   * Queue the given `item` under the given `key` to be processed at a later time by calling\n   * `serve(key)`.\n   */ _enqueue(key, item) {\n        this._queue.set(key, item);\n    }\n    /**\n   * Process item in queue for the given `key`.\n   */ _serve(key) {\n        const value = this._peek(key);\n        this._queue.delete(key);\n        return value;\n    }\n    /**\n   * Peek at item in queue for the given `key`.\n   */ _peek(key) {\n        return this._queue.get(key);\n    }\n    /**\n   * Removes queued item under the given `key`.\n   */ _delete(key) {\n        this._queue.delete(key);\n    }\n    /**\n   * Clear all items in the queue.\n   */ _clear() {\n        this._queue.clear();\n    }\n    constructor(){\n        this._queue = /* @__PURE__ */ new Map();\n    }\n}\nclass RequestQueue {\n    /**\n   * The number of callbacks that are currently in queue.\n   */ get _size() {\n        return this._queue.size;\n    }\n    /**\n   * Whether items in the queue are being served immediately, otherwise they're queued to\n   * be processed later.\n   */ get _isServing() {\n        return this._serving;\n    }\n    /**\n   * Waits for the queue to be flushed (ie: start serving).\n   */ async _waitForFlush() {\n        if (this._serving) return;\n        await this._pending.promise;\n    }\n    /**\n   * Queue the given `callback` to be invoked at a later time by either calling the `serve()` or\n   * `start()` methods. If the queue has started serving (i.e., `start()` was already called),\n   * then the callback will be invoked immediately.\n   *\n   * @param key - Uniquely identifies this callback so duplicates are ignored.\n   * @param callback - The function to call when this item in the queue is being served.\n   */ _enqueue(key, callback) {\n        if (this._serving) {\n            callback();\n            return;\n        }\n        this._queue.delete(key);\n        this._queue.set(key, callback);\n    }\n    /**\n   * Invokes the callback with the given `key` in the queue (if it exists).\n   */ _serve(key) {\n        var _this__queue_get;\n        (_this__queue_get = this._queue.get(key)) === null || _this__queue_get === void 0 ? void 0 : _this__queue_get();\n        this._queue.delete(key);\n    }\n    /**\n   * Flush all queued items and start serving future requests immediately until `stop()` is called.\n   */ _start() {\n        this._flush();\n        this._serving = true;\n        if (this._queue.size > 0) this._flush();\n    }\n    /**\n   * Stop serving requests, they'll be queued until you begin processing again by calling `start()`.\n   */ _stop() {\n        this._serving = false;\n    }\n    /**\n   * Stop serving requests, empty the request queue, and release any promises waiting for the\n   * queue to flush.\n   */ _reset() {\n        this._stop();\n        this._queue.clear();\n        this._release();\n    }\n    _flush() {\n        for (const key of this._queue.keys())this._serve(key);\n        this._release();\n    }\n    _release() {\n        this._pending.resolve();\n        this._pending = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.deferredPromise)();\n    }\n    constructor(){\n        this._serving = false;\n        this._pending = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.deferredPromise)();\n        this._queue = /* @__PURE__ */ new Map();\n    }\n}\nclass MediaRequestManager extends MediaPlayerController {\n    onAttach() {\n        this.listen(\"fullscreen-change\", this._onFullscreenChange.bind(this));\n    }\n    onConnect() {\n        const names = Object.getOwnPropertyNames(Object.getPrototypeOf(this)), handle = this._handleRequest.bind(this);\n        for (const name of names){\n            if (name.startsWith(\"media-\")) {\n                this.listen(name, handle);\n            }\n        }\n        this._attachLoadPlayListener();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchProvider.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchControlsDelayChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchAudioGainSupport.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchAirPlaySupport.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchGoogleCastSupport.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchFullscreenSupport.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPiPSupport.bind(this));\n    }\n    onDestroy() {\n        try {\n            const destroyEvent = this.createEvent(\"destroy\"), { pictureInPicture, fullscreen } = this.$state;\n            if (fullscreen()) this._exitFullscreen(\"prefer-media\", destroyEvent);\n            if (pictureInPicture()) this._exitPictureInPicture(destroyEvent);\n        } catch (e) {}\n        this._providerQueue._reset();\n    }\n    _attachLoadPlayListener() {\n        const { load } = this.$props, { canLoad } = this.$state;\n        if (load() !== \"play\" || canLoad()) return;\n        const off = this.listen(\"media-play-request\", (event1)=>{\n            this._handleLoadPlayStrategy(event1);\n            off();\n        });\n    }\n    _watchProvider() {\n        const provider = this._$provider(), canPlay = this.$state.canPlay();\n        if (provider && canPlay) {\n            this._providerQueue._start();\n        }\n        return ()=>{\n            this._providerQueue._stop();\n        };\n    }\n    _handleRequest(event1) {\n        event1.stopPropagation();\n        if (event1.defaultPrevented) return;\n        {\n            var _this__media_logger;\n            (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.infoGroup(\"\\uD83D\\uDCEC received `\".concat(event1.type, \"`\")).labelledLog(\"Request\", event1).dispatch();\n        }\n        if (!this[event1.type]) return;\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._$provider)) {\n            this[event1.type](event1);\n        } else {\n            this._providerQueue._enqueue(event1.type, ()=>{\n                if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._$provider)) this[event1.type](event1);\n            });\n        }\n    }\n    async _play(trigger) {\n        if (IS_SERVER) return;\n        const { canPlay, paused, autoPlaying } = this.$state;\n        if (this._handleLoadPlayStrategy(trigger)) return;\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(paused)) return;\n        if (trigger) this._request._queue._enqueue(\"media-play-request\", trigger);\n        const isAutoPlaying = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(autoPlaying);\n        try {\n            const provider = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._$provider);\n            throwIfNotReadyForPlayback(provider, (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(canPlay));\n            return await provider.play();\n        } catch (error) {\n            this._logError(\"play request failed\", error, trigger);\n            const errorEvent = this.createEvent(\"play-fail\", {\n                detail: coerceToError(error),\n                trigger\n            });\n            errorEvent.autoPlay = isAutoPlaying;\n            this._stateMgr._handle(errorEvent);\n            throw error;\n        }\n    }\n    _handleLoadPlayStrategy(trigger) {\n        const { load } = this.$props, { canLoad } = this.$state;\n        if (load() === \"play\" && !canLoad()) {\n            const event1 = this.createEvent(\"media-start-loading\", {\n                trigger\n            });\n            this.dispatchEvent(event1);\n            this._providerQueue._enqueue(\"media-play-request\", async ()=>{\n                try {\n                    await this._play(event1);\n                } catch (error) {}\n            });\n            return true;\n        }\n        return false;\n    }\n    async _pause(trigger) {\n        if (IS_SERVER) return;\n        const { canPlay, paused } = this.$state;\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(paused)) return;\n        if (trigger) {\n            this._request._queue._enqueue(\"media-pause-request\", trigger);\n        }\n        try {\n            const provider = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._$provider);\n            throwIfNotReadyForPlayback(provider, (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(canPlay));\n            return await provider.pause();\n        } catch (error) {\n            this._request._queue._delete(\"media-pause-request\");\n            {\n                this._logError(\"pause request failed\", error, trigger);\n            }\n            throw error;\n        }\n    }\n    _setAudioGain(gain, trigger) {\n        const { audioGain, canSetAudioGain } = this.$state;\n        if (audioGain() === gain) return;\n        const provider = this._$provider();\n        if (!(provider === null || provider === void 0 ? void 0 : provider.audioGain) || !canSetAudioGain()) {\n            throw Error(\"[vidstack] audio gain api not available\");\n        }\n        if (trigger) {\n            this._request._queue._enqueue(\"media-audio-gain-change-request\", trigger);\n        }\n        provider.audioGain.setGain(gain);\n    }\n    _seekToLiveEdge(trigger) {\n        if (IS_SERVER) return;\n        const { canPlay, live, liveEdge, canSeek, liveSyncPosition, seekableEnd, userBehindLiveEdge } = this.$state;\n        userBehindLiveEdge.set(false);\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(()=>!live() || liveEdge() || !canSeek())) return;\n        const provider = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._$provider);\n        throwIfNotReadyForPlayback(provider, (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(canPlay));\n        if (trigger) this._request._queue._enqueue(\"media-seek-request\", trigger);\n        const end = seekableEnd() - 2;\n        var _liveSyncPosition;\n        provider.setCurrentTime(Math.min(end, (_liveSyncPosition = liveSyncPosition()) !== null && _liveSyncPosition !== void 0 ? _liveSyncPosition : end));\n    }\n    async _enterFullscreen() {\n        let target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"prefer-media\", trigger = arguments.length > 1 ? arguments[1] : void 0;\n        if (IS_SERVER) return;\n        const adapter = this._getFullscreenAdapter(target);\n        throwIfFullscreenNotSupported(target, adapter);\n        if (adapter.active) return;\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.pictureInPicture)) {\n            this._wasPIPActive = true;\n            await this._exitPictureInPicture(trigger);\n        }\n        if (trigger) {\n            this._request._queue._enqueue(\"media-enter-fullscreen-request\", trigger);\n        }\n        return adapter.enter();\n    }\n    async _exitFullscreen() {\n        let target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"prefer-media\", trigger = arguments.length > 1 ? arguments[1] : void 0;\n        if (IS_SERVER) return;\n        const adapter = this._getFullscreenAdapter(target);\n        throwIfFullscreenNotSupported(target, adapter);\n        if (!adapter.active) return;\n        if (trigger) {\n            this._request._queue._enqueue(\"media-exit-fullscreen-request\", trigger);\n        }\n        try {\n            const result = await adapter.exit();\n            if (this._wasPIPActive && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.canPictureInPicture)) {\n                await this._enterPictureInPicture();\n            }\n            return result;\n        } finally{\n            this._wasPIPActive = false;\n        }\n    }\n    _getFullscreenAdapter(target) {\n        const provider = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._$provider);\n        return target === \"prefer-media\" && this._fullscreen.supported || target === \"media\" ? this._fullscreen : provider === null || provider === void 0 ? void 0 : provider.fullscreen;\n    }\n    async _enterPictureInPicture(trigger) {\n        if (IS_SERVER) return;\n        this._throwIfPIPNotSupported();\n        if (this.$state.pictureInPicture()) return;\n        if (trigger) {\n            this._request._queue._enqueue(\"media-enter-pip-request\", trigger);\n        }\n        return await this._$provider().pictureInPicture.enter();\n    }\n    async _exitPictureInPicture(trigger) {\n        if (IS_SERVER) return;\n        this._throwIfPIPNotSupported();\n        if (!this.$state.pictureInPicture()) return;\n        if (trigger) {\n            this._request._queue._enqueue(\"media-exit-pip-request\", trigger);\n        }\n        return await this._$provider().pictureInPicture.exit();\n    }\n    _throwIfPIPNotSupported() {\n        if (this.$state.canPictureInPicture()) return;\n        throw Error(\"[vidstack] picture-in-picture is not currently available\");\n    }\n    _watchControlsDelayChange() {\n        this._controls.defaultDelay = this.$props.controlsDelay();\n    }\n    _watchAudioGainSupport() {\n        var _this__$provider_audioGain, _this__$provider;\n        const { canSetAudioGain } = this.$state, supported = !!((_this__$provider = this._$provider()) === null || _this__$provider === void 0 ? void 0 : (_this__$provider_audioGain = _this__$provider.audioGain) === null || _this__$provider_audioGain === void 0 ? void 0 : _this__$provider_audioGain.supported);\n        canSetAudioGain.set(supported);\n    }\n    _watchAirPlaySupport() {\n        var _this__$provider_airPlay, _this__$provider;\n        const { canAirPlay } = this.$state, supported = !!((_this__$provider = this._$provider()) === null || _this__$provider === void 0 ? void 0 : (_this__$provider_airPlay = _this__$provider.airPlay) === null || _this__$provider_airPlay === void 0 ? void 0 : _this__$provider_airPlay.supported);\n        canAirPlay.set(supported);\n    }\n    _watchGoogleCastSupport() {\n        const { canGoogleCast, source } = this.$state, supported = IS_CHROME && !IS_IOS && canGoogleCastSrc(source());\n        canGoogleCast.set(supported);\n    }\n    _watchFullscreenSupport() {\n        var _this__$provider_fullscreen, _this__$provider;\n        const { canFullscreen } = this.$state, supported = this._fullscreen.supported || !!((_this__$provider = this._$provider()) === null || _this__$provider === void 0 ? void 0 : (_this__$provider_fullscreen = _this__$provider.fullscreen) === null || _this__$provider_fullscreen === void 0 ? void 0 : _this__$provider_fullscreen.supported);\n        canFullscreen.set(supported);\n    }\n    _watchPiPSupport() {\n        var _this__$provider_pictureInPicture, _this__$provider;\n        const { canPictureInPicture } = this.$state, supported = !!((_this__$provider = this._$provider()) === null || _this__$provider === void 0 ? void 0 : (_this__$provider_pictureInPicture = _this__$provider.pictureInPicture) === null || _this__$provider_pictureInPicture === void 0 ? void 0 : _this__$provider_pictureInPicture.supported);\n        canPictureInPicture.set(supported);\n    }\n    async [\"media-airplay-request\"](event1) {\n        try {\n            await this._requestAirPlay(event1);\n        } catch (error) {}\n    }\n    async _requestAirPlay(trigger) {\n        try {\n            var _this__$provider;\n            const adapter = (_this__$provider = this._$provider()) === null || _this__$provider === void 0 ? void 0 : _this__$provider.airPlay;\n            if (!(adapter === null || adapter === void 0 ? void 0 : adapter.supported)) {\n                throw Error( true ? \"AirPlay adapter not available on provider.\" : 0);\n            }\n            if (trigger) {\n                this._request._queue._enqueue(\"media-airplay-request\", trigger);\n            }\n            return await adapter.prompt();\n        } catch (error) {\n            this._request._queue._delete(\"media-airplay-request\");\n            {\n                this._logError(\"airplay request failed\", error, trigger);\n            }\n            throw error;\n        }\n    }\n    async [\"media-google-cast-request\"](event1) {\n        try {\n            await this._requestGoogleCast(event1);\n        } catch (error) {}\n    }\n    async _requestGoogleCast(trigger) {\n        try {\n            const { canGoogleCast } = this.$state;\n            if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(canGoogleCast)) {\n                const error = Error( true ? \"Google Cast not available on this platform.\" : 0);\n                error.code = \"CAST_NOT_AVAILABLE\";\n                throw error;\n            }\n            preconnect(\"https://www.gstatic.com\");\n            if (!this._googleCastLoader) {\n                const $module = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_vidstack_react_dev_chunks_vidstack-VGbd3Q_b_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./vidstack-VGbd3Q_b.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-VGbd3Q_b.js\")).then(function(n) {\n                    return n.loader;\n                });\n                this._googleCastLoader = new $module.GoogleCastLoader();\n            }\n            await this._googleCastLoader.prompt(this._media);\n            if (trigger) {\n                this._request._queue._enqueue(\"media-google-cast-request\", trigger);\n            }\n            const isConnecting = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.remotePlaybackState) !== \"disconnected\";\n            if (isConnecting) {\n                this.$state.savedState.set({\n                    paused: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.paused),\n                    currentTime: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.currentTime)\n                });\n            }\n            this.$state.remotePlaybackLoader.set(isConnecting ? this._googleCastLoader : null);\n        } catch (error) {\n            this._request._queue._delete(\"media-google-cast-request\");\n            {\n                this._logError(\"google cast request failed\", error, trigger);\n            }\n            throw error;\n        }\n    }\n    [\"media-clip-start-change-request\"](event1) {\n        const { clipStartTime } = this.$state;\n        clipStartTime.set(event1.detail);\n    }\n    [\"media-clip-end-change-request\"](event1) {\n        const { clipEndTime } = this.$state;\n        clipEndTime.set(event1.detail);\n        this.dispatch(\"duration-change\", {\n            detail: event1.detail,\n            trigger: event1\n        });\n    }\n    [\"media-duration-change-request\"](event1) {\n        const { providedDuration, clipEndTime } = this.$state;\n        providedDuration.set(event1.detail);\n        if (clipEndTime() <= 0) {\n            this.dispatch(\"duration-change\", {\n                detail: event1.detail,\n                trigger: event1\n            });\n        }\n    }\n    [\"media-audio-track-change-request\"](event1) {\n        const { logger, audioTracks } = this._media;\n        if (audioTracks.readonly) {\n            {\n                logger === null || logger === void 0 ? void 0 : logger.warnGroup(\"[vidstack] attempted to change audio track but it is currently read-only\").labelledLog(\"Request Event\", event1).dispatch();\n            }\n            return;\n        }\n        const index = event1.detail, track = audioTracks[index];\n        if (track) {\n            const key = event1.type;\n            this._request._queue._enqueue(key, event1);\n            track.selected = true;\n        } else {\n            logger === null || logger === void 0 ? void 0 : logger.warnGroup(\"[vidstack] failed audio track change request (invalid index)\").labelledLog(\"Audio Tracks\", audioTracks.toArray()).labelledLog(\"Index\", index).labelledLog(\"Request Event\", event1).dispatch();\n        }\n    }\n    async [\"media-enter-fullscreen-request\"](event1) {\n        try {\n            await this._enterFullscreen(event1.detail, event1);\n        } catch (error) {\n            this._onFullscreenError(error, event1);\n        }\n    }\n    async [\"media-exit-fullscreen-request\"](event1) {\n        try {\n            await this._exitFullscreen(event1.detail, event1);\n        } catch (error) {\n            this._onFullscreenError(error, event1);\n        }\n    }\n    async _onFullscreenChange(event1) {\n        const lockType = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$props.fullscreenOrientation), isFullscreen = event1.detail;\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(lockType) || lockType === \"none\" || !this._orientation.supported) return;\n        if (isFullscreen) {\n            if (this._orientation.locked) return;\n            this.dispatch(\"media-orientation-lock-request\", {\n                detail: lockType,\n                trigger: event1\n            });\n        } else if (this._orientation.locked) {\n            this.dispatch(\"media-orientation-unlock-request\", {\n                trigger: event1\n            });\n        }\n    }\n    _onFullscreenError(error, request) {\n        {\n            this._logError(\"fullscreen request failed\", error, request);\n        }\n        this._stateMgr._handle(this.createEvent(\"fullscreen-error\", {\n            detail: coerceToError(error)\n        }));\n    }\n    async [\"media-orientation-lock-request\"](event1) {\n        const key = event1.type;\n        try {\n            this._request._queue._enqueue(key, event1);\n            await this._orientation.lock(event1.detail);\n        } catch (error) {\n            this._request._queue._delete(key);\n            {\n                this._logError(\"failed to lock screen orientation\", error, event1);\n            }\n        }\n    }\n    async [\"media-orientation-unlock-request\"](event1) {\n        const key = event1.type;\n        try {\n            this._request._queue._enqueue(key, event1);\n            await this._orientation.unlock();\n        } catch (error) {\n            this._request._queue._delete(key);\n            {\n                this._logError(\"failed to unlock screen orientation\", error, event1);\n            }\n        }\n    }\n    async [\"media-enter-pip-request\"](event1) {\n        try {\n            await this._enterPictureInPicture(event1);\n        } catch (error) {\n            this._onPictureInPictureError(error, event1);\n        }\n    }\n    async [\"media-exit-pip-request\"](event1) {\n        try {\n            await this._exitPictureInPicture(event1);\n        } catch (error) {\n            this._onPictureInPictureError(error, event1);\n        }\n    }\n    _onPictureInPictureError(error, request) {\n        {\n            this._logError(\"pip request failed\", error, request);\n        }\n        this._stateMgr._handle(this.createEvent(\"picture-in-picture-error\", {\n            detail: coerceToError(error)\n        }));\n    }\n    [\"media-live-edge-request\"](event1) {\n        const { live, liveEdge, canSeek } = this.$state;\n        if (!live() || liveEdge() || !canSeek()) return;\n        this._request._queue._enqueue(\"media-seek-request\", event1);\n        try {\n            this._seekToLiveEdge();\n        } catch (error) {\n            this._request._queue._delete(\"media-seek-request\");\n            {\n                this._logError(\"seek to live edge fail\", error, event1);\n            }\n        }\n    }\n    async [\"media-loop-request\"](event1) {\n        try {\n            this._request._looping = true;\n            this._request._replaying = true;\n            await this._play(event1);\n        } catch (error) {\n            this._request._looping = false;\n        }\n    }\n    [\"media-user-loop-change-request\"](event1) {\n        this.$state.userPrefersLoop.set(event1.detail);\n    }\n    async [\"media-pause-request\"](event1) {\n        if (this.$state.paused()) return;\n        try {\n            await this._pause(event1);\n        } catch (error) {}\n    }\n    async [\"media-play-request\"](event1) {\n        if (!this.$state.paused()) return;\n        try {\n            await this._play(event1);\n        } catch (e) {}\n    }\n    [\"media-rate-change-request\"](event1) {\n        const { playbackRate, canSetPlaybackRate } = this.$state;\n        if (playbackRate() === event1.detail || !canSetPlaybackRate()) return;\n        const provider = this._$provider();\n        if (!(provider === null || provider === void 0 ? void 0 : provider.setPlaybackRate)) return;\n        this._request._queue._enqueue(\"media-rate-change-request\", event1);\n        provider.setPlaybackRate(event1.detail);\n    }\n    [\"media-audio-gain-change-request\"](event1) {\n        try {\n            this._setAudioGain(event1.detail, event1);\n        } catch (e) {}\n    }\n    [\"media-quality-change-request\"](event1) {\n        const { qualities, storage, logger } = this._media;\n        if (qualities.readonly) {\n            {\n                logger === null || logger === void 0 ? void 0 : logger.warnGroup(\"[vidstack] attempted to change video quality but it is currently read-only\").labelledLog(\"Request Event\", event1).dispatch();\n            }\n            return;\n        }\n        this._request._queue._enqueue(\"media-quality-change-request\", event1);\n        const index = event1.detail;\n        if (index < 0) {\n            var _storage_setVideoQuality;\n            qualities.autoSelect(event1);\n            if (event1.isOriginTrusted) storage === null || storage === void 0 ? void 0 : (_storage_setVideoQuality = storage.setVideoQuality) === null || _storage_setVideoQuality === void 0 ? void 0 : _storage_setVideoQuality.call(storage, null);\n        } else {\n            const quality = qualities[index];\n            if (quality) {\n                quality.selected = true;\n                if (event1.isOriginTrusted) {\n                    var _storage_setVideoQuality1;\n                    storage === null || storage === void 0 ? void 0 : (_storage_setVideoQuality1 = storage.setVideoQuality) === null || _storage_setVideoQuality1 === void 0 ? void 0 : _storage_setVideoQuality1.call(storage, {\n                        id: quality.id,\n                        width: quality.width,\n                        height: quality.height,\n                        bitrate: quality.bitrate\n                    });\n                }\n            } else {\n                logger === null || logger === void 0 ? void 0 : logger.warnGroup(\"[vidstack] failed quality change request (invalid index)\").labelledLog(\"Qualities\", qualities.toArray()).labelledLog(\"Index\", index).labelledLog(\"Request Event\", event1).dispatch();\n            }\n        }\n    }\n    [\"media-pause-controls-request\"](event1) {\n        const key = event1.type;\n        this._request._queue._enqueue(key, event1);\n        this._controls.pause(event1);\n    }\n    [\"media-resume-controls-request\"](event1) {\n        const key = event1.type;\n        this._request._queue._enqueue(key, event1);\n        this._controls.resume(event1);\n    }\n    [\"media-seek-request\"](event1) {\n        const { seekableStart, seekableEnd, ended, canSeek, live, userBehindLiveEdge, clipStartTime } = this.$state, seekTime = event1.detail;\n        if (ended()) this._request._replaying = true;\n        const key = event1.type;\n        this._request._seeking = false;\n        this._request._queue._delete(key);\n        const clippedTime = seekTime + clipStartTime(), isEnd = Math.floor(clippedTime) === Math.floor(seekableEnd()), boundTime = isEnd ? seekableEnd() : Math.min(Math.max(seekableStart() + 0.1, clippedTime), seekableEnd() - 0.1);\n        if (!Number.isFinite(boundTime) || !canSeek()) return;\n        this._request._queue._enqueue(key, event1);\n        this._$provider().setCurrentTime(boundTime);\n        if (live() && event1.isOriginTrusted && Math.abs(seekableEnd() - boundTime) >= 2) {\n            userBehindLiveEdge.set(true);\n        }\n    }\n    [\"media-seeking-request\"](event1) {\n        const key = event1.type;\n        this._request._queue._enqueue(key, event1);\n        this.$state.seeking.set(true);\n        this._request._seeking = true;\n    }\n    [\"media-start-loading\"](event1) {\n        if (this.$state.canLoad()) return;\n        const key = event1.type;\n        this._request._queue._enqueue(key, event1);\n        this._stateMgr._handle(this.createEvent(\"can-load\"));\n    }\n    [\"media-poster-start-loading\"](event1) {\n        if (this.$state.canLoadPoster()) return;\n        const key = event1.type;\n        this._request._queue._enqueue(key, event1);\n        this._stateMgr._handle(this.createEvent(\"can-load-poster\"));\n    }\n    [\"media-text-track-change-request\"](event1) {\n        const { index, mode } = event1.detail, track = this._media.textTracks[index];\n        if (track) {\n            const key = event1.type;\n            this._request._queue._enqueue(key, event1);\n            track.setMode(mode, event1);\n        } else {\n            var _this__media_logger;\n            (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.warnGroup(\"[vidstack] failed text track change request (invalid index)\").labelledLog(\"Text Tracks\", this._media.textTracks.toArray()).labelledLog(\"Index\", index).labelledLog(\"Request Event\", event1).dispatch();\n        }\n    }\n    [\"media-mute-request\"](event1) {\n        if (this.$state.muted()) return;\n        const key = event1.type;\n        this._request._queue._enqueue(key, event1);\n        this._$provider().setMuted(true);\n    }\n    [\"media-unmute-request\"](event1) {\n        const { muted, volume } = this.$state;\n        if (!muted()) return;\n        const key = event1.type;\n        this._request._queue._enqueue(key, event1);\n        this._media.$provider().setMuted(false);\n        if (volume() === 0) {\n            this._request._queue._enqueue(key, event1);\n            this._$provider().setVolume(0.25);\n        }\n    }\n    [\"media-volume-change-request\"](event1) {\n        const { muted, volume } = this.$state;\n        const newVolume = event1.detail;\n        if (volume() === newVolume) return;\n        const key = event1.type;\n        this._request._queue._enqueue(key, event1);\n        this._$provider().setVolume(newVolume);\n        if (newVolume > 0 && muted()) {\n            this._request._queue._enqueue(key, event1);\n            this._$provider().setMuted(false);\n        }\n    }\n    _logError(title, error, request) {\n        var _this__media_logger;\n        (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.errorGroup(\"[vidstack] \".concat(title)).labelledLog(\"Error\", error).labelledLog(\"Media Context\", {\n            ...this._media\n        }).labelledLog(\"Trigger Event\", request).dispatch();\n    }\n    constructor(_stateMgr, _request, _media){\n        super();\n        this._stateMgr = _stateMgr;\n        this._request = _request;\n        this._media = _media;\n        this._providerQueue = new RequestQueue();\n        this._wasPIPActive = false;\n        this._$provider = _media.$provider;\n        this._controls = new MediaControls();\n        this._fullscreen = new FullscreenController();\n        this._orientation = new ScreenOrientationController();\n    }\n}\nfunction throwIfNotReadyForPlayback(provider, canPlay) {\n    if (provider && canPlay) return;\n    throw Error(\"[vidstack] media is not ready - wait for `can-play` event.\");\n}\nfunction throwIfFullscreenNotSupported(target, fullscreen) {\n    if (fullscreen === null || fullscreen === void 0 ? void 0 : fullscreen.supported) return;\n    throw Error(\"[vidstack] fullscreen is not currently available on target `\".concat(target, \"`\"));\n}\nclass MediaRequestContext {\n    constructor(){\n        this._seeking = false;\n        this._looping = false;\n        this._replaying = false;\n        this._queue = new Queue();\n    }\n}\nconst TRACKED_EVENT = /* @__PURE__ */ new Set([\n    \"auto-play\",\n    \"auto-play-fail\",\n    \"can-load\",\n    \"sources-change\",\n    \"source-change\",\n    \"load-start\",\n    \"abort\",\n    \"error\",\n    \"loaded-metadata\",\n    \"loaded-data\",\n    \"can-play\",\n    \"play\",\n    \"play-fail\",\n    \"pause\",\n    \"playing\",\n    \"seeking\",\n    \"seeked\",\n    \"waiting\"\n]);\nclass MediaStateManager extends MediaPlayerController {\n    onAttach(el) {\n        el.setAttribute(\"aria-busy\", \"true\");\n        this.listen(\"fullscreen-change\", this[\"fullscreen-change\"].bind(this));\n        this.listen(\"fullscreen-error\", this[\"fullscreen-error\"].bind(this));\n        this.listen(\"orientation-change\", this[\"orientation-change\"].bind(this));\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchCanSetVolume.bind(this));\n        this._addTextTrackListeners();\n        this._addQualityListeners();\n        this._addAudioTrackListeners();\n        this._resumePlaybackOnConnect();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(this._pausePlaybackOnDisconnect.bind(this));\n    }\n    onDestroy() {\n        const { audioTracks, qualities, textTracks } = this._media;\n        audioTracks[ListSymbol._reset]();\n        qualities[ListSymbol._reset]();\n        textTracks[ListSymbol._reset]();\n        this._stopWatchingQualityResize();\n    }\n    _handle(event1) {\n        if (!this.scope) return;\n        const type = event1.type;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(()=>{\n            var _this_event_type, _this;\n            return (_this_event_type = (_this = this)[event1.type]) === null || _this_event_type === void 0 ? void 0 : _this_event_type.call(_this, event1);\n        });\n        if (!IS_SERVER) {\n            if (TRACKED_EVENT.has(type)) this._trackedEvents.set(type, event1);\n            this.dispatch(event1);\n        }\n    }\n    _resumePlaybackOnConnect() {\n        if (!this._isPlayingOnDisconnect) return;\n        requestAnimationFrame(()=>{\n            if (!this.scope) return;\n            this._media.remote.play(new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"dom-connect\"));\n        });\n        this._isPlayingOnDisconnect = false;\n    }\n    _pausePlaybackOnDisconnect() {\n        var _this__media_$provider;\n        if (this._isPlayingOnDisconnect) return;\n        this._isPlayingOnDisconnect = !this.$state.paused();\n        (_this__media_$provider = this._media.$provider()) === null || _this__media_$provider === void 0 ? void 0 : _this__media_$provider.pause();\n    }\n    _resetTracking() {\n        this._stopWaiting();\n        this._clipEnded = false;\n        this._request._replaying = false;\n        this._request._looping = false;\n        this._firingWaiting = false;\n        this._waitingTrigger = void 0;\n        this._trackedEvents.clear();\n    }\n    _satisfyRequest(request, event1) {\n        const requestEvent = this._request._queue._serve(request);\n        if (!requestEvent) return;\n        event1.request = requestEvent;\n        event1.triggers.add(requestEvent);\n    }\n    _addTextTrackListeners() {\n        this._onTextTracksChange();\n        this._onTextTrackModeChange();\n        const textTracks = this._media.textTracks;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(textTracks, \"add\", this._onTextTracksChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(textTracks, \"remove\", this._onTextTracksChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(textTracks, \"mode-change\", this._onTextTrackModeChange.bind(this));\n    }\n    _addQualityListeners() {\n        const qualities = this._media.qualities;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(qualities, \"add\", this._onQualitiesChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(qualities, \"remove\", this._onQualitiesChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(qualities, \"change\", this._onQualityChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(qualities, \"auto-change\", this._onAutoQualityChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(qualities, \"readonly-change\", this._onCanSetQualityChange.bind(this));\n    }\n    _addAudioTrackListeners() {\n        const audioTracks = this._media.audioTracks;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(audioTracks, \"add\", this._onAudioTracksChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(audioTracks, \"remove\", this._onAudioTracksChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(audioTracks, \"change\", this._onAudioTrackChange.bind(this));\n    }\n    _onTextTracksChange(event1) {\n        const { textTracks } = this.$state;\n        textTracks.set(this._media.textTracks.toArray());\n        this.dispatch(\"text-tracks-change\", {\n            detail: textTracks(),\n            trigger: event1\n        });\n    }\n    _onTextTrackModeChange(event1) {\n        if (event1) this._satisfyRequest(\"media-text-track-change-request\", event1);\n        const current = this._media.textTracks.selected, { textTrack } = this.$state;\n        if (textTrack() !== current) {\n            textTrack.set(current);\n            this.dispatch(\"text-track-change\", {\n                detail: current,\n                trigger: event1\n            });\n        }\n    }\n    _onAudioTracksChange(event1) {\n        const { audioTracks } = this.$state;\n        audioTracks.set(this._media.audioTracks.toArray());\n        this.dispatch(\"audio-tracks-change\", {\n            detail: audioTracks(),\n            trigger: event1\n        });\n    }\n    _onAudioTrackChange(event1) {\n        const { audioTrack } = this.$state;\n        audioTrack.set(this._media.audioTracks.selected);\n        if (event1) this._satisfyRequest(\"media-audio-track-change-request\", event1);\n        this.dispatch(\"audio-track-change\", {\n            detail: audioTrack(),\n            trigger: event1\n        });\n    }\n    _onQualitiesChange(event1) {\n        const { qualities } = this.$state;\n        qualities.set(this._media.qualities.toArray());\n        this.dispatch(\"qualities-change\", {\n            detail: qualities(),\n            trigger: event1\n        });\n    }\n    _onQualityChange(event1) {\n        const { quality } = this.$state;\n        quality.set(this._media.qualities.selected);\n        if (event1) this._satisfyRequest(\"media-quality-change-request\", event1);\n        this.dispatch(\"quality-change\", {\n            detail: quality(),\n            trigger: event1\n        });\n    }\n    _onAutoQualityChange() {\n        const { qualities } = this._media, isAuto = qualities.auto;\n        this.$state.autoQuality.set(isAuto);\n        if (!isAuto) this._stopWatchingQualityResize();\n    }\n    _watchQualityResize() {\n        this._stopWatchingQualityResize();\n        this._stopQualityResizeEffect = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            const { qualities } = this._media, { mediaWidth, mediaHeight } = this.$state, w = mediaWidth(), h = mediaHeight();\n            if (w === 0 || h === 0) return;\n            let selectedQuality = null, minScore = Infinity;\n            for (const quality of qualities){\n                const score = Math.abs(quality.width - w) + Math.abs(quality.height - h);\n                if (score < minScore) {\n                    minScore = score;\n                    selectedQuality = quality;\n                }\n            }\n            if (selectedQuality) {\n                qualities[ListSymbol._select](selectedQuality, true, new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"resize\", {\n                    detail: {\n                        width: w,\n                        height: h\n                    }\n                }));\n            }\n        });\n    }\n    _stopWatchingQualityResize() {\n        var _this__stopQualityResizeEffect, _this;\n        (_this__stopQualityResizeEffect = (_this = this)._stopQualityResizeEffect) === null || _this__stopQualityResizeEffect === void 0 ? void 0 : _this__stopQualityResizeEffect.call(_this);\n        this._stopQualityResizeEffect = null;\n    }\n    _onCanSetQualityChange() {\n        this.$state.canSetQuality.set(!this._media.qualities.readonly);\n    }\n    _watchCanSetVolume() {\n        const { canSetVolume, isGoogleCastConnected } = this.$state;\n        if (isGoogleCastConnected()) {\n            canSetVolume.set(false);\n            return;\n        }\n        canChangeVolume().then(canSetVolume.set);\n    }\n    [\"provider-change\"](event1) {\n        var _prevProvider_destroy, _prevProvider_scope;\n        const prevProvider = this._media.$provider(), newProvider = event1.detail;\n        if ((prevProvider === null || prevProvider === void 0 ? void 0 : prevProvider.type) === (newProvider === null || newProvider === void 0 ? void 0 : newProvider.type)) return;\n        prevProvider === null || prevProvider === void 0 ? void 0 : (_prevProvider_destroy = prevProvider.destroy) === null || _prevProvider_destroy === void 0 ? void 0 : _prevProvider_destroy.call(prevProvider);\n        prevProvider === null || prevProvider === void 0 ? void 0 : (_prevProvider_scope = prevProvider.scope) === null || _prevProvider_scope === void 0 ? void 0 : _prevProvider_scope.dispose();\n        this._media.$provider.set(event1.detail);\n        if (prevProvider && event1.detail === null) {\n            this._resetMediaState(event1);\n        }\n    }\n    [\"provider-loader-change\"](event1) {\n        {\n            var _event_detail, _this__media_logger;\n            (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.infoGroup(\"Loader change `\".concat((_event_detail = event1.detail) === null || _event_detail === void 0 ? void 0 : _event_detail.constructor.name, \"`\")).labelledLog(\"Event\", event1).dispatch();\n        }\n    }\n    [\"auto-play\"](event1) {\n        this.$state.autoPlayError.set(null);\n    }\n    [\"auto-play-fail\"](event1) {\n        this.$state.autoPlayError.set(event1.detail);\n        this._resetTracking();\n    }\n    [\"can-load\"](event1) {\n        this.$state.canLoad.set(true);\n        this._trackedEvents.set(\"can-load\", event1);\n        this._media.textTracks[TextTrackSymbol._canLoad]();\n        this._satisfyRequest(\"media-start-loading\", event1);\n    }\n    [\"can-load-poster\"](event1) {\n        this.$state.canLoadPoster.set(true);\n        this._trackedEvents.set(\"can-load-poster\", event1);\n        this._satisfyRequest(\"media-poster-start-loading\", event1);\n    }\n    [\"media-type-change\"](event1) {\n        const sourceChangeEvent = this._trackedEvents.get(\"source-change\");\n        if (sourceChangeEvent) event1.triggers.add(sourceChangeEvent);\n        const viewType = this.$state.viewType();\n        this.$state.mediaType.set(event1.detail);\n        const providedViewType = this.$state.providedViewType(), currentViewType = providedViewType === \"unknown\" ? event1.detail : providedViewType;\n        if (viewType !== currentViewType) {\n            if (IS_SERVER) {\n                this.$state.inferredViewType.set(currentViewType);\n            } else {\n                setTimeout(()=>{\n                    requestAnimationFrame(()=>{\n                        if (!this.scope) return;\n                        this.$state.inferredViewType.set(event1.detail);\n                        this.dispatch(\"view-type-change\", {\n                            detail: currentViewType,\n                            trigger: event1\n                        });\n                    });\n                }, 0);\n            }\n        }\n    }\n    [\"stream-type-change\"](event1) {\n        const sourceChangeEvent = this._trackedEvents.get(\"source-change\");\n        if (sourceChangeEvent) event1.triggers.add(sourceChangeEvent);\n        const { streamType, inferredStreamType } = this.$state;\n        inferredStreamType.set(event1.detail);\n        event1.detail = streamType();\n    }\n    [\"rate-change\"](event1) {\n        const { storage } = this._media, { canPlay } = this.$state;\n        this.$state.playbackRate.set(event1.detail);\n        this._satisfyRequest(\"media-rate-change-request\", event1);\n        if (canPlay()) {\n            var _storage_setPlaybackRate;\n            storage === null || storage === void 0 ? void 0 : (_storage_setPlaybackRate = storage.setPlaybackRate) === null || _storage_setPlaybackRate === void 0 ? void 0 : _storage_setPlaybackRate.call(storage, event1.detail);\n        }\n    }\n    [\"remote-playback-change\"](event1) {\n        const { remotePlaybackState, remotePlaybackType } = this.$state, { type, state } = event1.detail, isConnected = state === \"connected\";\n        remotePlaybackType.set(type);\n        remotePlaybackState.set(state);\n        const key = type === \"airplay\" ? \"media-airplay-request\" : \"media-google-cast-request\";\n        if (isConnected) {\n            this._satisfyRequest(key, event1);\n        } else {\n            const requestEvent = this._request._queue._peek(key);\n            if (requestEvent) {\n                event1.request = requestEvent;\n                event1.triggers.add(requestEvent);\n            }\n        }\n    }\n    [\"sources-change\"](event1) {\n        const prevSources = this.$state.sources(), newSources = event1.detail;\n        this.$state.sources.set(newSources);\n        this._onSourceQualitiesChange(prevSources, newSources, event1);\n    }\n    _onSourceQualitiesChange(prevSources, newSources, trigger) {\n        let { qualities } = this._media, added = false, removed = false;\n        for (const prevSrc of prevSources){\n            if (!isVideoQualitySrc(prevSrc)) continue;\n            const exists = newSources.some((s)=>s.src === prevSrc.src);\n            if (!exists) {\n                const quality = qualities.getBySrc(prevSrc.src);\n                if (quality) {\n                    qualities[ListSymbol._remove](quality, trigger);\n                    removed = true;\n                }\n            }\n        }\n        if (removed && !qualities.length) {\n            this.$state.savedState.set(null);\n            qualities[ListSymbol._reset](trigger);\n        }\n        for (const src of newSources){\n            if (!isVideoQualitySrc(src) || qualities.getBySrc(src.src)) continue;\n            var _src_id;\n            const quality = {\n                id: (_src_id = src.id) !== null && _src_id !== void 0 ? _src_id : src.height + \"p\",\n                bitrate: null,\n                codec: null,\n                ...src,\n                selected: false\n            };\n            qualities[ListSymbol._add](quality, trigger);\n            added = true;\n        }\n        if (added && !qualities[QualitySymbol._enableAuto]) {\n            this._watchQualityResize();\n            qualities[QualitySymbol._enableAuto] = this._watchQualityResize.bind(this);\n            qualities[QualitySymbol._setAuto](true, trigger);\n        }\n    }\n    [\"source-change\"](event1) {\n        var _event_originEvent, _this_el;\n        event1.isQualityChange = ((_event_originEvent = event1.originEvent) === null || _event_originEvent === void 0 ? void 0 : _event_originEvent.type) === \"quality-change\";\n        const source = event1.detail;\n        this._resetMediaState(event1, event1.isQualityChange);\n        this._trackedEvents.set(event1.type, event1);\n        this.$state.source.set(source);\n        (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.setAttribute(\"aria-busy\", \"true\");\n        {\n            var _this__media_logger;\n            (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.infoGroup(\"\\uD83D\\uDCFC Media source change\").labelledLog(\"Source\", source).dispatch();\n        }\n    }\n    _resetMediaState(event1) {\n        let isSourceQualityChange = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        const { audioTracks, qualities } = this._media;\n        if (!isSourceQualityChange) {\n            this._playedIntervals = [];\n            this._playedInterval = [\n                -1,\n                -1\n            ];\n            audioTracks[ListSymbol._reset](event1);\n            qualities[ListSymbol._reset](event1);\n            softResetMediaState(this.$state, isSourceQualityChange);\n            this._resetTracking();\n            return;\n        }\n        softResetMediaState(this.$state, isSourceQualityChange);\n        this._resetTracking();\n    }\n    [\"abort\"](event1) {\n        const sourceChangeEvent = this._trackedEvents.get(\"source-change\");\n        if (sourceChangeEvent) event1.triggers.add(sourceChangeEvent);\n        const canLoadEvent = this._trackedEvents.get(\"can-load\");\n        if (canLoadEvent && !event1.triggers.hasType(\"can-load\")) {\n            event1.triggers.add(canLoadEvent);\n        }\n    }\n    [\"load-start\"](event1) {\n        const sourceChangeEvent = this._trackedEvents.get(\"source-change\");\n        if (sourceChangeEvent) event1.triggers.add(sourceChangeEvent);\n    }\n    [\"error\"](event1) {\n        this.$state.error.set(event1.detail);\n        const abortEvent = this._trackedEvents.get(\"abort\");\n        if (abortEvent) event1.triggers.add(abortEvent);\n        {\n            var _this__media_logger;\n            (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.errorGroup(\"Media Error\").labelledLog(\"Error\", event1.detail).labelledLog(\"Event\", event1).labelledLog(\"Context\", this._media).dispatch();\n        }\n    }\n    [\"loaded-metadata\"](event1) {\n        const loadStartEvent = this._trackedEvents.get(\"load-start\");\n        if (loadStartEvent) event1.triggers.add(loadStartEvent);\n    }\n    [\"loaded-data\"](event1) {\n        const loadStartEvent = this._trackedEvents.get(\"load-start\");\n        if (loadStartEvent) event1.triggers.add(loadStartEvent);\n    }\n    [\"can-play\"](event1) {\n        var _this_el;\n        const loadedMetadata = this._trackedEvents.get(\"loaded-metadata\");\n        if (loadedMetadata) event1.triggers.add(loadedMetadata);\n        this._onCanPlayDetail(event1.detail);\n        (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.setAttribute(\"aria-busy\", \"false\");\n    }\n    [\"can-play-through\"](event1) {\n        this._onCanPlayDetail(event1.detail);\n        const canPlay = this._trackedEvents.get(\"can-play\");\n        if (canPlay) event1.triggers.add(canPlay);\n    }\n    _onCanPlayDetail(detail) {\n        const { seekable, buffered, intrinsicDuration, canPlay } = this.$state;\n        canPlay.set(true);\n        buffered.set(detail.buffered);\n        seekable.set(detail.seekable);\n        var _getTimeRangesEnd;\n        const seekableEnd = (_getTimeRangesEnd = getTimeRangesEnd(detail.seekable)) !== null && _getTimeRangesEnd !== void 0 ? _getTimeRangesEnd : Infinity;\n        intrinsicDuration.set(seekableEnd);\n    }\n    [\"duration-change\"](event1) {\n        const { live, intrinsicDuration, providedDuration, clipEndTime, ended } = this.$state, time = event1.detail;\n        if (!live()) {\n            const duration = !Number.isNaN(time) ? time : 0;\n            intrinsicDuration.set(duration);\n            if (ended()) this._onEndPrecisionChange(event1);\n        }\n        if (providedDuration() > 0 || clipEndTime() > 0) {\n            event1.stopImmediatePropagation();\n        }\n    }\n    [\"progress\"](event1) {\n        var _getTimeRangesEnd, _getTimeRangesEnd1;\n        const { buffered, bufferedEnd, seekable, seekableEnd, live, intrinsicDuration } = this.$state, { buffered: newBuffered, seekable: newSeekable } = event1.detail, newBufferedEnd = (_getTimeRangesEnd = getTimeRangesEnd(newBuffered)) !== null && _getTimeRangesEnd !== void 0 ? _getTimeRangesEnd : Infinity, hasBufferedLengthChanged = newBuffered.length !== buffered().length, hasBufferedEndChanged = newBufferedEnd > bufferedEnd(), newSeekableEnd = (_getTimeRangesEnd1 = getTimeRangesEnd(newSeekable)) !== null && _getTimeRangesEnd1 !== void 0 ? _getTimeRangesEnd1 : Infinity, hasSeekableLengthChanged = newSeekable.length !== seekable().length, hasSeekableEndChanged = newSeekableEnd > seekableEnd();\n        if (hasBufferedLengthChanged || hasBufferedEndChanged) {\n            buffered.set(newBuffered);\n        }\n        if (hasSeekableLengthChanged || hasSeekableEndChanged) {\n            seekable.set(newSeekable);\n        }\n        if (live()) {\n            intrinsicDuration.set(newSeekableEnd);\n            this.dispatch(\"duration-change\", {\n                detail: newSeekableEnd,\n                trigger: event1\n            });\n        }\n    }\n    [\"play\"](event1) {\n        const { paused, autoPlayError, ended, autoPlaying, playsInline, pointer, muted, viewType, live, userBehindLiveEdge } = this.$state;\n        this._resetPlaybackIfNeeded();\n        if (!paused()) {\n            event1.stopImmediatePropagation();\n            return;\n        }\n        event1.autoPlay = autoPlaying();\n        const waitingEvent = this._trackedEvents.get(\"waiting\");\n        if (waitingEvent) event1.triggers.add(waitingEvent);\n        this._satisfyRequest(\"media-play-request\", event1);\n        this._trackedEvents.set(\"play\", event1);\n        paused.set(false);\n        autoPlayError.set(null);\n        if (event1.autoPlay) {\n            this._handle(this.createEvent(\"auto-play\", {\n                detail: {\n                    muted: muted()\n                },\n                trigger: event1\n            }));\n            autoPlaying.set(false);\n        }\n        if (ended() || this._request._replaying) {\n            this._request._replaying = false;\n            ended.set(false);\n            this._handle(this.createEvent(\"replay\", {\n                trigger: event1\n            }));\n        }\n        if (!playsInline() && viewType() === \"video\" && pointer() === \"coarse\") {\n            this._media.remote.enterFullscreen(\"prefer-media\", event1);\n        }\n        if (live() && !userBehindLiveEdge()) {\n            this._media.remote.seekToLiveEdge(event1);\n        }\n    }\n    _resetPlaybackIfNeeded(trigger) {\n        const provider = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._media.$provider);\n        if (!provider) return;\n        const { ended, seekableStart, clipStartTime, clipEndTime, realCurrentTime, duration } = this.$state;\n        const shouldReset = realCurrentTime() < clipStartTime() || clipEndTime() > 0 && realCurrentTime() >= clipEndTime() || Math.abs(realCurrentTime() - duration()) < 0.1 || ended();\n        if (shouldReset) {\n            this.dispatch(\"media-seek-request\", {\n                detail: (clipStartTime() > 0 ? 0 : seekableStart()) + 0.1,\n                trigger\n            });\n        }\n        return shouldReset;\n    }\n    [\"play-fail\"](event1) {\n        const { muted, autoPlaying } = this.$state;\n        const playEvent = this._trackedEvents.get(\"play\");\n        if (playEvent) event1.triggers.add(playEvent);\n        this._satisfyRequest(\"media-play-request\", event1);\n        const { paused, playing } = this.$state;\n        paused.set(true);\n        playing.set(false);\n        this._resetTracking();\n        this._trackedEvents.set(\"play-fail\", event1);\n        if (event1.autoPlay) {\n            this._handle(this.createEvent(\"auto-play-fail\", {\n                detail: {\n                    muted: muted(),\n                    error: event1.detail\n                },\n                trigger: event1\n            }));\n            autoPlaying.set(false);\n        }\n    }\n    [\"playing\"](event1) {\n        const playEvent = this._trackedEvents.get(\"play\"), seekedEvent = this._trackedEvents.get(\"seeked\");\n        if (playEvent) event1.triggers.add(playEvent);\n        else if (seekedEvent) event1.triggers.add(seekedEvent);\n        setTimeout(()=>this._resetTracking(), 0);\n        const { paused, playing, live, liveSyncPosition, seekableEnd, started, currentTime, seeking, ended } = this.$state;\n        paused.set(false);\n        playing.set(true);\n        seeking.set(false);\n        ended.set(false);\n        if (this._request._looping) {\n            this._request._looping = false;\n            return;\n        }\n        if (live() && !started() && currentTime() === 0) {\n            var _liveSyncPosition;\n            const end = (_liveSyncPosition = liveSyncPosition()) !== null && _liveSyncPosition !== void 0 ? _liveSyncPosition : seekableEnd() - 2;\n            if (Number.isFinite(end)) this._media.$provider().setCurrentTime(end);\n        }\n        this[\"started\"](event1);\n    }\n    [\"started\"](event1) {\n        const { started } = this.$state;\n        if (!started()) {\n            started.set(true);\n            this._handle(this.createEvent(\"started\", {\n                trigger: event1\n            }));\n        }\n    }\n    [\"pause\"](event1) {\n        var _this_el;\n        if (!((_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.isConnected)) {\n            this._isPlayingOnDisconnect = true;\n        }\n        this._satisfyRequest(\"media-pause-request\", event1);\n        const seekedEvent = this._trackedEvents.get(\"seeked\");\n        if (seekedEvent) event1.triggers.add(seekedEvent);\n        const { paused, playing } = this.$state;\n        paused.set(true);\n        playing.set(false);\n        if (this._clipEnded) {\n            setTimeout(()=>{\n                this._handle(this.createEvent(\"end\", {\n                    trigger: event1\n                }));\n                this._clipEnded = false;\n            }, 0);\n        }\n        this._resetTracking();\n    }\n    [\"time-change\"](event1) {\n        if (this._request._looping) {\n            event1.stopImmediatePropagation();\n            return;\n        }\n        let { waiting, played, clipEndTime, realCurrentTime, currentTime } = this.$state, newTime = event1.detail, endTime = clipEndTime();\n        realCurrentTime.set(newTime);\n        this._updatePlayed();\n        waiting.set(false);\n        for (const track of this._media.textTracks){\n            track[TextTrackSymbol._updateActiveCues](newTime, event1);\n        }\n        if (endTime > 0 && newTime >= endTime) {\n            this._clipEnded = true;\n            this.dispatch(\"media-pause-request\", {\n                trigger: event1\n            });\n        }\n        this._saveTime();\n        this.dispatch(\"time-update\", {\n            detail: {\n                currentTime: currentTime(),\n                played: played()\n            },\n            trigger: event1\n        });\n    }\n    _updatePlayed() {\n        const { currentTime, played, paused } = this.$state;\n        if (paused()) return;\n        this._playedInterval = updateTimeIntervals(this._playedIntervals, this._playedInterval, currentTime());\n        played.set(new TimeRange(this._playedIntervals));\n    }\n    // Called to update time again incase duration precision has changed.\n    _onEndPrecisionChange(trigger) {\n        const { clipStartTime, clipEndTime, duration } = this.$state, isClipped = clipStartTime() > 0 || clipEndTime() > 0;\n        if (isClipped) return;\n        this._handle(this.createEvent(\"time-change\", {\n            detail: duration(),\n            trigger\n        }));\n    }\n    _saveTime() {\n        const { storage } = this._media, { canPlay, realCurrentTime } = this.$state;\n        if (canPlay()) {\n            var _storage_setTime;\n            storage === null || storage === void 0 ? void 0 : (_storage_setTime = storage.setTime) === null || _storage_setTime === void 0 ? void 0 : _storage_setTime.call(storage, realCurrentTime());\n        }\n    }\n    [\"audio-gain-change\"](event1) {\n        var _storage_setAudioGain;\n        const { storage } = this._media, { canPlay, audioGain } = this.$state;\n        audioGain.set(event1.detail);\n        this._satisfyRequest(\"media-audio-gain-change-request\", event1);\n        if (canPlay()) storage === null || storage === void 0 ? void 0 : (_storage_setAudioGain = storage.setAudioGain) === null || _storage_setAudioGain === void 0 ? void 0 : _storage_setAudioGain.call(storage, audioGain());\n    }\n    [\"volume-change\"](event1) {\n        const { storage } = this._media, { volume, muted, canPlay } = this.$state, detail = event1.detail;\n        volume.set(detail.volume);\n        muted.set(detail.muted || detail.volume === 0);\n        this._satisfyRequest(\"media-volume-change-request\", event1);\n        this._satisfyRequest(detail.muted ? \"media-mute-request\" : \"media-unmute-request\", event1);\n        if (canPlay()) {\n            var _storage_setVolume, _storage_setMuted;\n            storage === null || storage === void 0 ? void 0 : (_storage_setVolume = storage.setVolume) === null || _storage_setVolume === void 0 ? void 0 : _storage_setVolume.call(storage, volume());\n            storage === null || storage === void 0 ? void 0 : (_storage_setMuted = storage.setMuted) === null || _storage_setMuted === void 0 ? void 0 : _storage_setMuted.call(storage, muted());\n        }\n    }\n    [\"seeked\"](event1) {\n        const { seeking, currentTime, realCurrentTime, paused, seekableEnd, ended } = this.$state;\n        if (this._request._seeking) {\n            seeking.set(true);\n            event1.stopImmediatePropagation();\n        } else if (seeking()) {\n            const waitingEvent = this._trackedEvents.get(\"waiting\");\n            if (waitingEvent) event1.triggers.add(waitingEvent);\n            const seekingEvent = this._trackedEvents.get(\"seeking\");\n            if (seekingEvent && !event1.triggers.has(seekingEvent)) {\n                event1.triggers.add(seekingEvent);\n            }\n            if (paused()) this._stopWaiting();\n            seeking.set(false);\n            realCurrentTime.set(event1.detail);\n            this._satisfyRequest(\"media-seek-request\", event1);\n            const origin = event1 === null || event1 === void 0 ? void 0 : event1.originEvent;\n            if ((origin === null || origin === void 0 ? void 0 : origin.isTrusted) && !/seek/.test(origin.type)) {\n                this[\"started\"](event1);\n            }\n        }\n        if (Math.floor(currentTime()) !== Math.floor(seekableEnd())) {\n            ended.set(false);\n        } else {\n            this.end(event1);\n        }\n    }\n    [\"waiting\"](event1) {\n        if (this._firingWaiting || this._request._seeking) return;\n        event1.stopImmediatePropagation();\n        this._waitingTrigger = event1;\n        this._fireWaiting();\n    }\n    [\"end\"](event1) {\n        const { loop, ended } = this.$state;\n        if (!loop() && ended()) return;\n        if (loop()) {\n            setTimeout(()=>{\n                requestAnimationFrame(()=>{\n                    this._resetPlaybackIfNeeded(event1);\n                    this.dispatch(\"media-loop-request\", {\n                        trigger: event1\n                    });\n                });\n            }, 10);\n            return;\n        }\n        setTimeout(()=>this._onEnded(event1), 0);\n    }\n    _onEnded(event1) {\n        var _storage_setTime;\n        const { storage } = this._media, { paused, seeking, ended, duration } = this.$state;\n        this._onEndPrecisionChange(event1);\n        if (!paused()) {\n            this.dispatch(\"pause\", {\n                trigger: event1\n            });\n        }\n        if (seeking()) {\n            this.dispatch(\"seeked\", {\n                detail: duration(),\n                trigger: event1\n            });\n        }\n        ended.set(true);\n        this._resetTracking();\n        storage === null || storage === void 0 ? void 0 : (_storage_setTime = storage.setTime) === null || _storage_setTime === void 0 ? void 0 : _storage_setTime.call(storage, duration(), true);\n        this.dispatch(\"ended\", {\n            trigger: event1\n        });\n    }\n    _stopWaiting() {\n        this._fireWaiting.cancel();\n        this.$state.waiting.set(false);\n    }\n    [\"fullscreen-change\"](event1) {\n        const isFullscreen = event1.detail;\n        this.$state.fullscreen.set(isFullscreen);\n        this._satisfyRequest(isFullscreen ? \"media-enter-fullscreen-request\" : \"media-exit-fullscreen-request\", event1);\n    }\n    [\"fullscreen-error\"](event1) {\n        this._satisfyRequest(\"media-enter-fullscreen-request\", event1);\n        this._satisfyRequest(\"media-exit-fullscreen-request\", event1);\n    }\n    [\"orientation-change\"](event1) {\n        const isLocked = event1.detail.lock;\n        this._satisfyRequest(isLocked ? \"media-orientation-lock-request\" : \"media-orientation-unlock-request\", event1);\n    }\n    [\"picture-in-picture-change\"](event1) {\n        const isPiP = event1.detail;\n        this.$state.pictureInPicture.set(isPiP);\n        this._satisfyRequest(isPiP ? \"media-enter-pip-request\" : \"media-exit-pip-request\", event1);\n    }\n    [\"picture-in-picture-error\"](event1) {\n        this._satisfyRequest(\"media-enter-pip-request\", event1);\n        this._satisfyRequest(\"media-exit-pip-request\", event1);\n    }\n    [\"title-change\"](event1) {\n        if (!event1.trigger) return;\n        event1.stopImmediatePropagation();\n        this.$state.inferredTitle.set(event1.detail);\n    }\n    [\"poster-change\"](event1) {\n        if (!event1.trigger) return;\n        event1.stopImmediatePropagation();\n        this.$state.inferredPoster.set(event1.detail);\n    }\n    constructor(_request, _media){\n        super();\n        this._request = _request;\n        this._media = _media;\n        this._trackedEvents = /* @__PURE__ */ new Map();\n        this._clipEnded = false;\n        this._playedIntervals = [];\n        this._playedInterval = [\n            -1,\n            -1\n        ];\n        this._firingWaiting = false;\n        this._isPlayingOnDisconnect = false;\n        this._stopQualityResizeEffect = null;\n        this[\"seeking\"] = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.functionThrottle)((event1)=>{\n            const { seeking, realCurrentTime, paused } = this.$state;\n            seeking.set(true);\n            realCurrentTime.set(event1.detail);\n            this._satisfyRequest(\"media-seeking-request\", event1);\n            if (paused()) {\n                this._waitingTrigger = event1;\n                this._fireWaiting();\n            }\n            this._playedInterval = [\n                -1,\n                -1\n            ];\n        }, 150, {\n            leading: true\n        });\n        this._fireWaiting = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.functionDebounce)(()=>{\n            if (!this._waitingTrigger) return;\n            this._firingWaiting = true;\n            const { waiting, playing } = this.$state;\n            waiting.set(true);\n            playing.set(false);\n            const event1 = this.createEvent(\"waiting\", {\n                trigger: this._waitingTrigger\n            });\n            this._trackedEvents.set(\"waiting\", event1);\n            this.dispatch(event1);\n            this._waitingTrigger = void 0;\n            this._firingWaiting = false;\n        }, 300);\n    }\n}\nclass MediaStateSync extends MediaPlayerController {\n    onSetup() {\n        this._init();\n        if (IS_SERVER) return;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchLogLevel.bind(this));\n        const effects = [\n            this._watchMetadata,\n            this._watchAutoplay,\n            this._watchClipStartTime,\n            this._watchClipEndTime,\n            this._watchControls,\n            this._watchCrossOrigin,\n            this._watchDuration,\n            this._watchLive,\n            this._watchLiveEdge,\n            this._watchLiveTolerance,\n            this._watchLoop,\n            this._watchPlaysInline,\n            this._watchPoster,\n            this._watchProvidedTypes,\n            this._watchTitle\n        ];\n        for (const callback of effects){\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(callback.bind(this));\n        }\n    }\n    _init() {\n        const providedProps = {\n            duration: \"providedDuration\",\n            loop: \"providedLoop\",\n            poster: \"providedPoster\",\n            streamType: \"providedStreamType\",\n            title: \"providedTitle\",\n            viewType: \"providedViewType\"\n        };\n        const skip = /* @__PURE__ */ new Set([\n            \"currentTime\",\n            \"paused\",\n            \"playbackRate\",\n            \"volume\"\n        ]);\n        for (const prop of Object.keys(this.$props)){\n            var _this_$state_;\n            if (skip.has(prop)) continue;\n            var _providedProps_prop;\n            (_this_$state_ = this.$state[(_providedProps_prop = providedProps[prop]) !== null && _providedProps_prop !== void 0 ? _providedProps_prop : prop]) === null || _this_$state_ === void 0 ? void 0 : _this_$state_.set(this.$props[prop]());\n        }\n        this.$state.muted.set(this.$props.muted() || this.$props.volume() === 0);\n    }\n    // Sync \"provided\" props with internal state. Provided props are used to differentiate from\n    // provider inferred values.\n    _watchProvidedTypes() {\n        const { viewType, streamType, title, poster, loop } = this.$props, $state = this.$state;\n        $state.providedPoster.set(poster());\n        $state.providedStreamType.set(streamType());\n        $state.providedViewType.set(viewType());\n        $state.providedTitle.set(title());\n        $state.providedLoop.set(loop());\n    }\n    _watchLogLevel() {\n        this.$state.logLevel.set(this.$props.logLevel());\n    }\n    _watchMetadata() {\n        const { artist, artwork } = this.$props;\n        this.$state.artist.set(artist());\n        this.$state.artwork.set(artwork());\n    }\n    _watchTitle() {\n        const { title } = this.$state;\n        this.dispatch(\"title-change\", {\n            detail: title()\n        });\n    }\n    _watchAutoplay() {\n        const autoPlay = this.$props.autoPlay() || this.$props.autoplay();\n        this.$state.autoPlay.set(autoPlay);\n        this.dispatch(\"auto-play-change\", {\n            detail: autoPlay\n        });\n    }\n    _watchLoop() {\n        const loop = this.$state.loop();\n        this.dispatch(\"loop-change\", {\n            detail: loop\n        });\n    }\n    _watchControls() {\n        const controls = this.$props.controls();\n        this.$state.controls.set(controls);\n    }\n    _watchPoster() {\n        const { poster } = this.$state;\n        this.dispatch(\"poster-change\", {\n            detail: poster()\n        });\n    }\n    _watchCrossOrigin() {\n        var _this_$props_crossOrigin;\n        const _crossOrigin = (_this_$props_crossOrigin = this.$props.crossOrigin()) !== null && _this_$props_crossOrigin !== void 0 ? _this_$props_crossOrigin : this.$props.crossorigin(), value = _crossOrigin === true ? \"\" : _crossOrigin;\n        this.$state.crossOrigin.set(value);\n    }\n    _watchDuration() {\n        const { duration } = this.$props;\n        this.dispatch(\"media-duration-change-request\", {\n            detail: duration()\n        });\n    }\n    _watchPlaysInline() {\n        const inline = this.$props.playsInline() || this.$props.playsinline();\n        this.$state.playsInline.set(inline);\n        this.dispatch(\"plays-inline-change\", {\n            detail: inline\n        });\n    }\n    _watchClipStartTime() {\n        const { clipStartTime } = this.$props;\n        this.dispatch(\"media-clip-start-change-request\", {\n            detail: clipStartTime()\n        });\n    }\n    _watchClipEndTime() {\n        const { clipEndTime } = this.$props;\n        this.dispatch(\"media-clip-end-change-request\", {\n            detail: clipEndTime()\n        });\n    }\n    _watchLive() {\n        this.dispatch(\"live-change\", {\n            detail: this.$state.live()\n        });\n    }\n    _watchLiveTolerance() {\n        this.$state.liveEdgeTolerance.set(this.$props.liveEdgeTolerance());\n        this.$state.minLiveDVRWindow.set(this.$props.minLiveDVRWindow());\n    }\n    _watchLiveEdge() {\n        this.dispatch(\"live-edge-change\", {\n            detail: this.$state.liveEdge()\n        });\n    }\n}\nconst _NavigatorMediaSession = class _NavigatorMediaSession extends MediaPlayerController {\n    onConnect() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onMetadataChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onPlaybackStateChange.bind(this));\n        const handleAction = this._handleAction.bind(this);\n        for (const action of _NavigatorMediaSession._actions){\n            navigator.mediaSession.setActionHandler(action, handleAction);\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(this._onDisconnect.bind(this));\n    }\n    _onDisconnect() {\n        for (const action of _NavigatorMediaSession._actions){\n            navigator.mediaSession.setActionHandler(action, null);\n        }\n    }\n    _onMetadataChange() {\n        const { title, artist, artwork, poster } = this.$state;\n        var _artwork;\n        navigator.mediaSession.metadata = new MediaMetadata({\n            title: title(),\n            artist: artist(),\n            artwork: (_artwork = artwork()) !== null && _artwork !== void 0 ? _artwork : [\n                {\n                    src: poster()\n                }\n            ]\n        });\n    }\n    _onPlaybackStateChange() {\n        const { canPlay, paused } = this.$state;\n        navigator.mediaSession.playbackState = !canPlay() ? \"none\" : paused() ? \"paused\" : \"playing\";\n    }\n    _handleAction(details) {\n        const trigger = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"media-session-action\", {\n            detail: details\n        });\n        switch(details.action){\n            case \"play\":\n                this.dispatch(\"media-play-request\", {\n                    trigger\n                });\n                break;\n            case \"pause\":\n                this.dispatch(\"media-pause-request\", {\n                    trigger\n                });\n                break;\n            case \"seekto\":\n            case \"seekforward\":\n            case \"seekbackward\":\n                var _details_seekOffset;\n                this.dispatch(\"media-seek-request\", {\n                    detail: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(details.seekTime) ? details.seekTime : this.$state.currentTime() + ((_details_seekOffset = details.seekOffset) !== null && _details_seekOffset !== void 0 ? _details_seekOffset : 10),\n                    trigger\n                });\n                break;\n        }\n    }\n    constructor(){\n        super();\n    }\n};\n_NavigatorMediaSession._actions = [\n    \"play\",\n    \"pause\",\n    \"seekforward\",\n    \"seekbackward\",\n    \"seekto\"\n];\nlet NavigatorMediaSession = _NavigatorMediaSession;\nconst LOCAL_STORAGE_KEY = \"@vidstack/log-colors\";\nconst savedColors = init();\nfunction getLogColor(key) {\n    return savedColors.get(key);\n}\nfunction saveLogColor(key) {\n    let { color = generateColor(), overwrite = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    if (!savedColors.has(key) || overwrite) {\n        savedColors.set(key, color);\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(Object.entries(savedColors)));\n    }\n}\nfunction generateColor() {\n    return \"hsl(\".concat(Math.random() * 360, \", 55%, 70%)\");\n}\nfunction init() {\n    let colors;\n    try {\n        colors = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (e) {}\n    return new Map(Object.entries(colors !== null && colors !== void 0 ? colors : {}));\n}\nconst LogLevelValue = Object.freeze({\n    silent: 0,\n    error: 1,\n    warn: 2,\n    info: 3,\n    debug: 4\n});\nconst LogLevelColor = Object.freeze({\n    silent: \"white\",\n    error: \"hsl(6, 58%, 50%)\",\n    warn: \"hsl(51, 58%, 50%)\",\n    info: \"hsl(219, 58%, 50%)\",\n    debug: \"hsl(280, 58%, 50%)\"\n});\nconst s = 1e3;\nconst m = s * 60;\nconst h = m * 60;\nconst d = h * 24;\nfunction ms(val) {\n    const msAbs = Math.abs(val);\n    if (msAbs >= d) {\n        return Math.round(val / d) + \"d\";\n    }\n    if (msAbs >= h) {\n        return Math.round(val / h) + \"h\";\n    }\n    if (msAbs >= m) {\n        return Math.round(val / m) + \"m\";\n    }\n    if (msAbs >= s) {\n        return Math.round(val / s) + \"s\";\n    }\n    return round(val, 2) + \"ms\";\n}\nclass LogPrinter extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    /**\n   * The current log level.\n   */ get logLevel() {\n        return this._level;\n    }\n    set logLevel(level) {\n        this._level = level;\n    }\n    onConnect() {\n        this.listen(\"vds-log\", (event1)=>{\n            var _event_path, _element_$$COMPONENT_NAME;\n            event1.stopPropagation();\n            var _event_path_, _element_$$COMPONENT_NAME_replace_replace, _ref;\n            const element = (_event_path_ = (_event_path = event1.path) === null || _event_path === void 0 ? void 0 : _event_path[0]) !== null && _event_path_ !== void 0 ? _event_path_ : event1.target instanceof _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController ? event1.target.el : event1.target, eventTargetName = (_ref = (_element_$$COMPONENT_NAME_replace_replace = element === null || element === void 0 ? void 0 : (_element_$$COMPONENT_NAME = element.$$COMPONENT_NAME) === null || _element_$$COMPONENT_NAME === void 0 ? void 0 : _element_$$COMPONENT_NAME.replace(/^_/, \"\").replace(/Instance$/, \"\")) !== null && _element_$$COMPONENT_NAME_replace_replace !== void 0 ? _element_$$COMPONENT_NAME_replace_replace : element === null || element === void 0 ? void 0 : element.tagName.toLowerCase()) !== null && _ref !== void 0 ? _ref : \"unknown\";\n            var _event_detail;\n            const { level = \"warn\", data } = (_event_detail = event1.detail) !== null && _event_detail !== void 0 ? _event_detail : {};\n            if (LogLevelValue[this._level] < LogLevelValue[level]) {\n                return;\n            }\n            saveLogColor(eventTargetName);\n            const hint = (data === null || data === void 0 ? void 0 : data.length) === 1 && isGroupedLog(data[0]) ? data[0].title : (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(data === null || data === void 0 ? void 0 : data[0]) ? data[0] : \"\";\n            console.groupCollapsed(\"%c\".concat(level.toUpperCase(), \"%c \").concat(eventTargetName, \"%c \").concat(hint.slice(0, 50)).concat(hint.length > 50 ? \"...\" : \"\"), \"background: \".concat(LogLevelColor[level], \"; color: white; padding: 1.5px 2.2px; border-radius: 2px; font-size: 11px;\"), \"color: \".concat(getLogColor(eventTargetName), \"; padding: 4px 0px; font-size: 11px;\"), \"color: gray; font-size: 11px; padding-left: 4px;\");\n            if ((data === null || data === void 0 ? void 0 : data.length) === 1 && isGroupedLog(data[0])) {\n                if (element) data[0].logs.unshift({\n                    label: \"Element\",\n                    data: [\n                        element\n                    ]\n                });\n                printGroup(level, data[0]);\n            } else if (data) {\n                print(level, ...data);\n            }\n            this._printTimeDiff();\n            printStackTrace();\n            console.groupEnd();\n        });\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n            this._lastLogged = void 0;\n        });\n    }\n    _printTimeDiff() {\n        labelledPrint(\"Time since last log\", this._calcLastLogTimeDiff());\n    }\n    _calcLastLogTimeDiff() {\n        const time = performance.now();\n        var _this__lastLogged;\n        const diff = time - ((_this__lastLogged = this._lastLogged) !== null && _this__lastLogged !== void 0 ? _this__lastLogged : this._lastLogged = performance.now());\n        this._lastLogged = time;\n        return ms(diff);\n    }\n    constructor(){\n        super(...arguments);\n        this._level = \"warn\";\n    }\n}\nfunction print(level) {\n    for(var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        data[_key - 1] = arguments[_key];\n    }\n    console[level](...data);\n}\nfunction labelledPrint(label) {\n    for(var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        data[_key - 1] = arguments[_key];\n    }\n    console.log(\"%c\".concat(label, \":\"), \"color: gray\", ...data);\n}\nfunction printStackTrace() {\n    console.groupCollapsed(\"%cStack Trace\", \"color: gray\");\n    console.trace();\n    console.groupEnd();\n}\nfunction printGroup(level, groupedLog) {\n    for (const log of groupedLog.logs){\n        if (isGroupedLog(log)) {\n            console.groupCollapsed(groupedLog.title);\n            printGroup(level, log);\n            console.groupEnd();\n        } else if (\"label\" in log && !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(log.label)) {\n            labelledPrint(log.label, ...log.data);\n        } else {\n            print(level, ...log.data);\n        }\n    }\n}\nlet $keyboard = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\nif (!IS_SERVER) {\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(document, \"pointerdown\", ()=>{\n        $keyboard.set(false);\n    });\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(document, \"keydown\", (e)=>{\n        if (e.metaKey || e.altKey || e.ctrlKey) return;\n        $keyboard.set(true);\n    });\n}\nclass FocusVisibleController extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            if (!$keyboard()) {\n                this._focused.set(false);\n                updateFocusAttr(el, false);\n                this.listen(\"pointerenter\", this._onPointerEnter.bind(this));\n                this.listen(\"pointerleave\", this._onPointerLeave.bind(this));\n                return;\n            }\n            const active = document.activeElement === el;\n            this._focused.set(active);\n            updateFocusAttr(el, active);\n            this.listen(\"focus\", this._onFocus.bind(this));\n            this.listen(\"blur\", this._onBlur.bind(this));\n        });\n    }\n    focused() {\n        return this._focused();\n    }\n    _onFocus() {\n        this._focused.set(true);\n        updateFocusAttr(this.el, true);\n    }\n    _onBlur() {\n        this._focused.set(false);\n        updateFocusAttr(this.el, false);\n    }\n    _onPointerEnter() {\n        updateHoverAttr(this.el, true);\n    }\n    _onPointerLeave() {\n        updateHoverAttr(this.el, false);\n    }\n    constructor(){\n        super(...arguments);\n        this._focused = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n    }\n}\nfunction updateFocusAttr(el, isFocused) {\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-focus\", isFocused);\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-hocus\", isFocused);\n}\nfunction updateHoverAttr(el, isHovering) {\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-hocus\", isHovering);\n    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-hover\", isHovering);\n}\nvar __defProp$f = Object.defineProperty;\nvar __getOwnPropDesc$f = Object.getOwnPropertyDescriptor;\nvar __decorateClass$f = (decorators, target, key, kind)=>{\n    var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$f(target, key) : target;\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n    if (kind && result) __defProp$f(target, key, result);\n    return result;\n};\nconst _MediaPlayer = class _MediaPlayer extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get _provider() {\n        return this._media.$provider();\n    }\n    get _$$props() {\n        return this.$props;\n    }\n    onSetup() {\n        this._setupMediaAttributes();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchCanPlay.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchMuted.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPaused.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchVolume.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchCurrentTime.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPlaysInline.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPlaybackRate.bind(this));\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-player\", \"\");\n        setAttributeIfEmpty(el, \"tabindex\", \"0\");\n        setAttributeIfEmpty(el, \"role\", \"region\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchStorage.bind(this));\n        if (IS_SERVER) this._watchTitle();\n        else (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchTitle.bind(this));\n        if (IS_SERVER) this._watchOrientation();\n        else (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchOrientation.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(el, \"find-media-player\", this._onFindPlayer.bind(this));\n    }\n    onConnect(el) {\n        if (IS_IPHONE) (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-iphone\", \"\");\n        const pointerQuery = window.matchMedia(\"(pointer: coarse)\");\n        this._onPointerChange(pointerQuery);\n        pointerQuery.onchange = this._onPointerChange.bind(this);\n        const resize = new ResizeObserver((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.animationFrameThrottle)(this._onResize.bind(this)));\n        resize.observe(el);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onResize.bind(this));\n        this.dispatch(\"media-player-connect\", {\n            detail: this,\n            bubbles: true,\n            composed: true\n        });\n        this._media.logger.setTarget(el);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n            resize.disconnect();\n            pointerQuery.onchange = null;\n            this._media.logger.setTarget(null);\n        });\n    }\n    onDestroy() {\n        this._media.player = null;\n        this.canPlayQueue._reset();\n    }\n    _watchTitle() {\n        const el = this.$el, { title, live, viewType, providedTitle } = this.$state, isLive = live(), type = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.uppercaseFirstChar)(viewType()), typeText = type !== \"Unknown\" ? \"\".concat(isLive ? \"Live \" : \"\").concat(type) : isLive ? \"Live\" : \"Media\", currentTitle = title();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(this.el, \"aria-label\", \"\".concat(typeText, \" Player\") + (currentTitle ? \" - \".concat(currentTitle) : \"\"));\n        if (!IS_SERVER && (el === null || el === void 0 ? void 0 : el.hasAttribute(\"title\"))) {\n            this._skipTitleUpdate = true;\n            el === null || el === void 0 ? void 0 : el.removeAttribute(\"title\");\n        }\n    }\n    _watchOrientation() {\n        const orientation = this.orientation.landscape ? \"landscape\" : \"portrait\";\n        this.$state.orientation.set(orientation);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(this.el, \"data-orientation\", orientation);\n        this._onResize();\n    }\n    _watchCanPlay() {\n        if (this.$state.canPlay() && this._provider) this.canPlayQueue._start();\n        else this.canPlayQueue._stop();\n    }\n    _setupMediaAttributes() {\n        if (_MediaPlayer[MEDIA_ATTRIBUTES]) {\n            this.setAttributes(_MediaPlayer[MEDIA_ATTRIBUTES]);\n            return;\n        }\n        const $attrs = {\n            \"data-load\": function() {\n                return this.$props.load();\n            },\n            \"data-captions\": function() {\n                const track = this.$state.textTrack();\n                return !!track && isTrackCaptionKind(track);\n            },\n            \"data-ios-controls\": function() {\n                return this.$state.iOSControls();\n            },\n            \"data-controls\": function() {\n                return this.controls.showing;\n            },\n            \"data-buffering\": function() {\n                const { canLoad, canPlay, waiting } = this.$state;\n                return canLoad() && (!canPlay() || waiting());\n            },\n            \"data-error\": function() {\n                const { error } = this.$state;\n                return !!error();\n            },\n            \"data-autoplay-error\": function() {\n                const { autoPlayError } = this.$state;\n                return !!autoPlayError();\n            }\n        };\n        const alias = {\n            autoPlay: \"autoplay\",\n            canAirPlay: \"can-airplay\",\n            canPictureInPicture: \"can-pip\",\n            pictureInPicture: \"pip\",\n            playsInline: \"playsinline\",\n            remotePlaybackState: \"remote-state\",\n            remotePlaybackType: \"remote-type\",\n            isAirPlayConnected: \"airplay\",\n            isGoogleCastConnected: \"google-cast\"\n        };\n        for (const prop2 of mediaAttributes){\n            var _alias_prop2;\n            const attrName = \"data-\" + ((_alias_prop2 = alias[prop2]) !== null && _alias_prop2 !== void 0 ? _alias_prop2 : (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.camelToKebabCase)(prop2));\n            $attrs[attrName] = function() {\n                return this.$state[prop2]();\n            };\n        }\n        delete $attrs.title;\n        _MediaPlayer[MEDIA_ATTRIBUTES] = $attrs;\n        this.setAttributes($attrs);\n    }\n    _onFindPlayer(event1) {\n        event1.detail(this);\n    }\n    _onResize() {\n        if (IS_SERVER || !this.el) return;\n        const width = this.el.clientWidth, height = this.el.clientHeight;\n        this.$state.width.set(width);\n        this.$state.height.set(height);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(this.el, \"--player-width\", width + \"px\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(this.el, \"--player-height\", height + \"px\");\n    }\n    _onPointerChange(queryList) {\n        if (IS_SERVER) return;\n        const pointer = queryList.matches ? \"coarse\" : \"fine\";\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(this.el, \"data-pointer\", pointer);\n        this.$state.pointer.set(pointer);\n        this._onResize();\n    }\n    get provider() {\n        return this._provider;\n    }\n    get controls() {\n        return this._requestMgr._controls;\n    }\n    set controls(controls) {\n        this._$$props.controls.set(controls);\n    }\n    get title() {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.providedTitle);\n    }\n    set title(newTitle) {\n        if (this._skipTitleUpdate) {\n            this._skipTitleUpdate = false;\n            return;\n        }\n        this.$state.providedTitle.set(newTitle);\n    }\n    get qualities() {\n        return this._media.qualities;\n    }\n    get audioTracks() {\n        return this._media.audioTracks;\n    }\n    get textTracks() {\n        return this._media.textTracks;\n    }\n    get textRenderers() {\n        return this._media.textRenderers;\n    }\n    get duration() {\n        return this.$state.duration();\n    }\n    set duration(duration) {\n        this._$$props.duration.set(duration);\n    }\n    get paused() {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.paused);\n    }\n    set paused(paused) {\n        this._queuePausedUpdate(paused);\n    }\n    _watchPaused() {\n        this._queuePausedUpdate(this.$props.paused());\n    }\n    _queuePausedUpdate(paused) {\n        if (paused) {\n            this.canPlayQueue._enqueue(\"paused\", ()=>this._requestMgr._pause());\n        } else this.canPlayQueue._enqueue(\"paused\", ()=>this._requestMgr._play());\n    }\n    get muted() {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.muted);\n    }\n    set muted(muted) {\n        this._$$props.muted.set(muted);\n    }\n    _watchMuted() {\n        this._queueMutedUpdate(this.$props.muted());\n    }\n    _queueMutedUpdate(muted) {\n        this.canPlayQueue._enqueue(\"muted\", ()=>{\n            if (this._provider) this._provider.setMuted(muted);\n        });\n    }\n    get currentTime() {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.currentTime);\n    }\n    set currentTime(time) {\n        this._queueCurrentTimeUpdate(time);\n    }\n    _watchCurrentTime() {\n        this._queueCurrentTimeUpdate(this.$props.currentTime());\n    }\n    _queueCurrentTimeUpdate(time) {\n        this.canPlayQueue._enqueue(\"currentTime\", ()=>{\n            const { currentTime, clipStartTime, seekableStart, seekableEnd } = this.$state;\n            if (time === (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(currentTime)) return;\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(()=>{\n                if (!this._provider) return;\n                const clippedTime = time + clipStartTime(), isEnd = Math.floor(clippedTime) === Math.floor(seekableEnd()), boundTime = isEnd ? seekableEnd() : Math.min(Math.max(seekableStart() + 0.1, clippedTime), seekableEnd() - 0.1);\n                if (Number.isFinite(boundTime)) {\n                    this._provider.setCurrentTime(boundTime);\n                }\n            });\n        });\n    }\n    get volume() {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.volume);\n    }\n    set volume(volume) {\n        this._$$props.volume.set(volume);\n    }\n    _watchVolume() {\n        this._queueVolumeUpdate(this.$props.volume());\n    }\n    _queueVolumeUpdate(volume) {\n        const clampedVolume = clampNumber(0, volume, 1);\n        this.canPlayQueue._enqueue(\"volume\", ()=>{\n            if (this._provider) this._provider.setVolume(clampedVolume);\n        });\n    }\n    get playbackRate() {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.playbackRate);\n    }\n    set playbackRate(rate) {\n        this._queuePlaybackRateUpdate(rate);\n    }\n    _watchPlaybackRate() {\n        this._queuePlaybackRateUpdate(this.$props.playbackRate());\n    }\n    _queuePlaybackRateUpdate(rate) {\n        this.canPlayQueue._enqueue(\"rate\", ()=>{\n            var _this__provider_setPlaybackRate, _this__provider;\n            if (this._provider) (_this__provider_setPlaybackRate = (_this__provider = this._provider).setPlaybackRate) === null || _this__provider_setPlaybackRate === void 0 ? void 0 : _this__provider_setPlaybackRate.call(_this__provider, rate);\n        });\n    }\n    _watchPlaysInline() {\n        this._queuePlaysInlineUpdate(this.$props.playsInline());\n    }\n    _queuePlaysInlineUpdate(inline) {\n        this.canPlayQueue._enqueue(\"playsinline\", ()=>{\n            var _this__provider_setPlaysInline, _this__provider;\n            if (this._provider) (_this__provider_setPlaysInline = (_this__provider = this._provider).setPlaysInline) === null || _this__provider_setPlaysInline === void 0 ? void 0 : _this__provider_setPlaysInline.call(_this__provider, inline);\n        });\n    }\n    _watchStorage() {\n        let storageValue = this.$props.storage(), storage = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(storageValue) ? new LocalMediaStorage() : storageValue;\n        if (storage === null || storage === void 0 ? void 0 : storage.onChange) {\n            var _this_el;\n            const { source } = this.$state, playerId = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(storageValue) ? storageValue : (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.id, mediaId = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.computed)(this._computeMediaId.bind(this));\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>storage.onChange(source(), mediaId(), playerId || void 0));\n        }\n        this._media.storage = storage;\n        this._media.textTracks.setStorage(storage);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n            var _storage_onDestroy;\n            storage === null || storage === void 0 ? void 0 : (_storage_onDestroy = storage.onDestroy) === null || _storage_onDestroy === void 0 ? void 0 : _storage_onDestroy.call(storage);\n            this._media.storage = null;\n            this._media.textTracks.setStorage(null);\n        });\n    }\n    _computeMediaId() {\n        const { clipStartTime, clipEndTime } = this.$props, { source } = this.$state, src = source();\n        return src.src ? \"\".concat(src.src, \":\").concat(clipStartTime(), \":\").concat(clipEndTime()) : null;\n    }\n    async play(trigger) {\n        return this._requestMgr._play(trigger);\n    }\n    async pause(trigger) {\n        return this._requestMgr._pause(trigger);\n    }\n    async enterFullscreen(target, trigger) {\n        return this._requestMgr._enterFullscreen(target, trigger);\n    }\n    async exitFullscreen(target, trigger) {\n        return this._requestMgr._exitFullscreen(target, trigger);\n    }\n    enterPictureInPicture(trigger) {\n        return this._requestMgr._enterPictureInPicture(trigger);\n    }\n    exitPictureInPicture(trigger) {\n        return this._requestMgr._exitPictureInPicture(trigger);\n    }\n    seekToLiveEdge(trigger) {\n        this._requestMgr._seekToLiveEdge(trigger);\n    }\n    startLoading(trigger) {\n        this._media.delegate._notify(\"can-load\", void 0, trigger);\n    }\n    startLoadingPoster(trigger) {\n        this._media.delegate._notify(\"can-load-poster\", void 0, trigger);\n    }\n    requestAirPlay(trigger) {\n        return this._requestMgr._requestAirPlay(trigger);\n    }\n    requestGoogleCast(trigger) {\n        return this._requestMgr._requestGoogleCast(trigger);\n    }\n    setAudioGain(gain, trigger) {\n        return this._requestMgr._setAudioGain(gain, trigger);\n    }\n    destroy() {\n        super.destroy();\n        this._media.remote.setPlayer(null);\n        this.dispatch(\"destroy\");\n    }\n    constructor(){\n        super();\n        this.canPlayQueue = new RequestQueue();\n        this._skipTitleUpdate = false;\n        new MediaStateSync();\n        const context = {\n            player: this,\n            qualities: new VideoQualityList(),\n            audioTracks: new AudioTrackList(),\n            storage: null,\n            $provider: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null),\n            $providerSetup: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false),\n            $props: this.$props,\n            $state: this.$state\n        };\n        {\n            const logPrinter = new LogPrinter();\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n                logPrinter.logLevel = this.$props.logLevel();\n            });\n        }\n        context.logger = new Logger();\n        context.remote = this.remoteControl = new MediaRemoteControl(context.logger);\n        context.remote.setPlayer(this);\n        context.textTracks = new TextTrackList();\n        context.textTracks[TextTrackSymbol._crossOrigin] = this.$state.crossOrigin;\n        context.textRenderers = new TextRenderers(context);\n        context.ariaKeys = {};\n        this._media = context;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(mediaContext, context);\n        this.orientation = new ScreenOrientationController();\n        new FocusVisibleController();\n        new MediaKeyboardController(context);\n        new MediaEventsLogger(context);\n        const request = new MediaRequestContext();\n        this._stateMgr = new MediaStateManager(request, context);\n        this._requestMgr = new MediaRequestManager(this._stateMgr, request, context);\n        context.delegate = new MediaPlayerDelegate(this._stateMgr._handle.bind(this._stateMgr), context);\n        if (typeof navigator !== \"undefined\" && \"mediaSession\" in navigator) {\n            new NavigatorMediaSession();\n        }\n        new MediaLoadController(\"load\", this.startLoading.bind(this));\n        new MediaLoadController(\"posterLoad\", this.startLoadingPoster.bind(this));\n    }\n};\n_MediaPlayer.props = mediaPlayerProps;\n_MediaPlayer.state = mediaState;\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"canPlayQueue\", 2);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"remoteControl\", 2);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"provider\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"controls\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"orientation\", 2);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"title\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"qualities\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"audioTracks\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"textTracks\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"textRenderers\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"duration\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"paused\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"muted\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"currentTime\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"volume\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], _MediaPlayer.prototype, \"playbackRate\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"play\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"pause\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"enterFullscreen\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"exitFullscreen\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"enterPictureInPicture\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"exitPictureInPicture\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"seekToLiveEdge\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"startLoading\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"startLoadingPoster\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"requestAirPlay\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"requestGoogleCast\", 1);\n__decorateClass$f([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], _MediaPlayer.prototype, \"setAudioGain\", 1);\nlet MediaPlayer = _MediaPlayer;\nfunction resolveStreamTypeFromDASHManifest(manifestSrc, requestInit) {\n    return fetch(manifestSrc, requestInit).then((res)=>res.text()).then((manifest)=>{\n        return /type=\"static\"/.test(manifest) ? \"on-demand\" : \"live\";\n    });\n}\nfunction resolveStreamTypeFromHLSManifest(manifestSrc, requestInit) {\n    return fetch(manifestSrc, requestInit).then((res)=>res.text()).then((manifest)=>{\n        const renditionURI = resolveHLSRenditionURI(manifest);\n        if (renditionURI) {\n            return resolveStreamTypeFromHLSManifest(/^https?:/.test(renditionURI) ? renditionURI : new URL(renditionURI, manifestSrc).href, requestInit);\n        }\n        const streamType = /EXT-X-PLAYLIST-TYPE:\\s*VOD/.test(manifest) ? \"on-demand\" : \"live\";\n        if (streamType === \"live\" && resolveTargetDuration(manifest) >= 10 && (/#EXT-X-DVR-ENABLED:\\s*true/.test(manifest) || manifest.includes(\"#EXT-X-DISCONTINUITY\"))) {\n            return \"live:dvr\";\n        }\n        return streamType;\n    });\n}\nfunction resolveHLSRenditionURI(manifest) {\n    const matches = manifest.match(/#EXT-X-STREAM-INF:[^\\n]+(\\n[^\\n]+)*/g);\n    return matches ? matches[0].split(\"\\n\")[1].trim() : null;\n}\nfunction resolveTargetDuration(manifest) {\n    const lines = manifest.split(\"\\n\");\n    for (const line of lines){\n        if (line.startsWith(\"#EXT-X-TARGETDURATION\")) {\n            const duration = parseFloat(line.split(\":\")[1]);\n            if (!isNaN(duration)) {\n                return duration;\n            }\n        }\n    }\n    return -1;\n}\nlet warned$1 = /* @__PURE__ */ new Set();\nconst sourceTypes = /* @__PURE__ */ new Map();\nclass SourceSelection {\n    get _notify() {\n        return this._media.delegate._notify;\n    }\n    connect() {\n        const loader = this._loader();\n        if (this._initialize) {\n            this._notifySourceChange(this._media.$state.source(), loader);\n            this._notifyLoaderChange(loader);\n            this._initialize = false;\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onSourcesChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onSourceChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onSetup.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onLoadSource.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onLoadPoster.bind(this));\n    }\n    _onSourcesChange() {\n        this._notify(\"sources-change\", [\n            ...normalizeSrc(this._media.$props.src()),\n            ...this._domSources()\n        ]);\n    }\n    _onSourceChange() {\n        var _sources_;\n        const { $state } = this._media;\n        const sources = $state.sources(), currentSource = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)($state.source), newSource = this._findNewSource(currentSource, sources), noMatch = ((_sources_ = sources[0]) === null || _sources_ === void 0 ? void 0 : _sources_.src) && !newSource.src && !newSource.type;\n        if (noMatch && !warned$1.has(newSource.src) && !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._loader)) {\n            const source = sources[0];\n            console.warn('[vidstack] could not find a loader for any of the given media sources, consider providing `type`:\\n\\n--- HTML ---\\n\\n<media-provider>\\n  <source src=\"'.concat(source.src, '\" type=\"video/mp4\" />\\n</media-provider>\"\\n\\n--- React ---\\n\\n<MediaPlayer src={{ src: \"').concat(source.src, '\", type: \"video/mp4\" }}>\\n\\n---\\n\\nFalling back to fetching source headers...'));\n            warned$1.add(newSource.src);\n        }\n        if (noMatch) {\n            const { crossOrigin } = $state, credentials = getRequestCredentials(crossOrigin()), abort = new AbortController();\n            Promise.all(sources.map((source)=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(source.src) && source.type === \"?\" ? fetch(source.src, {\n                    method: \"HEAD\",\n                    credentials,\n                    signal: abort.signal\n                }).then((res)=>{\n                    source.type = res.headers.get(\"content-type\") || \"??\";\n                    sourceTypes.set(source.src, source.type);\n                    return source;\n                }).catch(()=>source) : source)).then((sources2)=>{\n                if (abort.signal.aborted) return;\n                const newSource2 = this._findNewSource((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)($state.source), sources2);\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.tick)();\n                if (!newSource2.src) {\n                    this._notify(\"error\", {\n                        message: \"Failed to load resource.\",\n                        code: 4\n                    });\n                }\n            });\n            return ()=>abort.abort();\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.tick)();\n    }\n    _findNewSource(currentSource, sources) {\n        let newSource = {\n            src: \"\",\n            type: \"\"\n        }, newLoader = null, triggerEvent = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"sources-change\", {\n            detail: {\n                sources\n            }\n        }), loaders = this._loaders(), { started, paused, currentTime, quality, savedState } = this._media.$state;\n        for (const src of sources){\n            const loader = loaders.find((loader2)=>loader2.canPlay(src));\n            if (loader) {\n                newSource = src;\n                newLoader = loader;\n                break;\n            }\n        }\n        if (isVideoQualitySrc(newSource)) {\n            const currentQuality = quality(), sourceQuality = sources.find((s)=>s.src === (currentQuality === null || currentQuality === void 0 ? void 0 : currentQuality.src));\n            if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(started)) {\n                savedState.set({\n                    paused: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(paused),\n                    currentTime: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(currentTime)\n                });\n            } else {\n                savedState.set(null);\n            }\n            if (sourceQuality) {\n                newSource = sourceQuality;\n                triggerEvent = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"quality-change\", {\n                    detail: {\n                        quality: currentQuality\n                    }\n                });\n            }\n        }\n        if (!isSameSrc(currentSource, newSource)) {\n            this._notifySourceChange(newSource, newLoader, triggerEvent);\n        }\n        if (newLoader !== (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._loader)) {\n            this._notifyLoaderChange(newLoader, triggerEvent);\n        }\n        return newSource;\n    }\n    _notifySourceChange(src, loader, trigger) {\n        this._notify(\"source-change\", src, trigger);\n        this._notify(\"media-type-change\", (loader === null || loader === void 0 ? void 0 : loader.mediaType(src)) || \"unknown\", trigger);\n    }\n    _notifyLoaderChange(loader, trigger) {\n        this._media.$providerSetup.set(false);\n        this._notify(\"provider-change\", null, trigger);\n        loader && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(()=>{\n            var _loader_preconnect;\n            return (_loader_preconnect = loader.preconnect) === null || _loader_preconnect === void 0 ? void 0 : _loader_preconnect.call(loader, this._media);\n        });\n        this._loader.set(loader);\n        this._notify(\"provider-loader-change\", loader, trigger);\n    }\n    _onSetup() {\n        const provider = this._media.$provider();\n        if (!provider || (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._media.$providerSetup)) return;\n        if (this._media.$state.canLoad()) {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.scoped)(()=>provider.setup(), provider.scope);\n            this._media.$providerSetup.set(true);\n            return;\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(()=>{\n            var _provider_preconnect;\n            return (_provider_preconnect = provider.preconnect) === null || _provider_preconnect === void 0 ? void 0 : _provider_preconnect.call(provider);\n        });\n    }\n    _onLoadSource() {\n        if (!this._media.$providerSetup()) return;\n        const provider = this._media.$provider(), source = this._media.$state.source(), crossOrigin = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._media.$state.crossOrigin), preferNativeHLS = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._media.$props.preferNativeHLS);\n        if (isSameSrc(provider === null || provider === void 0 ? void 0 : provider.currentSrc, source)) {\n            return;\n        }\n        if (this._media.$state.canLoad()) {\n            const abort = new AbortController();\n            if (isHLSSrc(source)) {\n                if (preferNativeHLS || !isHLSSupported()) {\n                    resolveStreamTypeFromHLSManifest(source.src, {\n                        credentials: getRequestCredentials(crossOrigin),\n                        signal: abort.signal\n                    }).then((streamType)=>{\n                        this._notify(\"stream-type-change\", streamType);\n                    }).catch(_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.noop);\n                }\n            } else if (isDASHSrc(source)) {\n                resolveStreamTypeFromDASHManifest(source.src, {\n                    credentials: getRequestCredentials(crossOrigin),\n                    signal: abort.signal\n                }).then((streamType)=>{\n                    this._notify(\"stream-type-change\", streamType);\n                }).catch(_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.noop);\n            } else {\n                this._notify(\"stream-type-change\", \"on-demand\");\n            }\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(()=>{\n                const preload = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._media.$state.preload);\n                return provider === null || provider === void 0 ? void 0 : provider.loadSource(source, preload).catch((error)=>{\n                    {\n                        var _this__media_logger;\n                        (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.errorGroup(\"[vidstack] failed to load source\").labelledLog(\"Error\", error).labelledLog(\"Source\", source).labelledLog(\"Provider\", provider).labelledLog(\"Media Context\", {\n                            ...this._media\n                        }).dispatch();\n                    }\n                });\n            });\n            return ()=>abort.abort();\n        }\n        try {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(source.src) && preconnect(new URL(source.src).origin);\n        } catch (error) {\n            {\n                var _this__media_logger;\n                (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.infoGroup(\"Failed to preconnect to source: \".concat(source.src)).labelledLog(\"Error\", error).dispatch();\n            }\n        }\n    }\n    _onLoadPoster() {\n        const loader = this._loader(), { providedPoster, source, canLoadPoster } = this._media.$state;\n        if (!loader || !loader.loadPoster || !source() || !canLoadPoster() || providedPoster()) return;\n        const abort = new AbortController(), trigger = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"source-change\", {\n            detail: source\n        });\n        loader.loadPoster(source(), this._media, abort).then((url)=>{\n            this._notify(\"poster-change\", url || \"\", trigger);\n        }).catch(()=>{\n            this._notify(\"poster-change\", \"\", trigger);\n        });\n        return ()=>{\n            abort.abort();\n        };\n    }\n    constructor(_domSources, _media, _loader, customLoaders = []){\n        this._domSources = _domSources;\n        this._media = _media;\n        this._loader = _loader;\n        this._initialize = false;\n        const DASH_LOADER = new DASHProviderLoader(), HLS_LOADER = new HLSProviderLoader(), VIDEO_LOADER = new VideoProviderLoader(), AUDIO_LOADER = new AudioProviderLoader(), YOUTUBE_LOADER = new YouTubeProviderLoader(), VIMEO_LOADER = new VimeoProviderLoader(), EMBED_LOADERS = [\n            YOUTUBE_LOADER,\n            VIMEO_LOADER\n        ];\n        this._loaders = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.computed)(()=>{\n            const remoteLoader = _media.$state.remotePlaybackLoader();\n            const loaders = _media.$props.preferNativeHLS() ? [\n                VIDEO_LOADER,\n                AUDIO_LOADER,\n                DASH_LOADER,\n                HLS_LOADER,\n                ...EMBED_LOADERS,\n                ...customLoaders\n            ] : [\n                HLS_LOADER,\n                VIDEO_LOADER,\n                AUDIO_LOADER,\n                DASH_LOADER,\n                ...EMBED_LOADERS,\n                ...customLoaders\n            ];\n            return remoteLoader ? [\n                remoteLoader,\n                ...loaders\n            ] : loaders;\n        });\n        const { $state } = _media;\n        $state.sources.set(normalizeSrc(_media.$props.src()));\n        for (const src of $state.sources()){\n            const loader = this._loaders().find((loader2)=>loader2.canPlay(src));\n            if (!loader) continue;\n            const mediaType = loader.mediaType(src);\n            this._media.$state.source.set(src);\n            this._media.$state.mediaType.set(mediaType);\n            this._media.$state.inferredViewType.set(mediaType);\n            this._loader.set(loader);\n            this._initialize = true;\n            break;\n        }\n    }\n}\nfunction normalizeSrc(src) {\n    return ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(src) ? src : [\n        src\n    ]).map((src2)=>{\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src2)) {\n            return {\n                src: src2,\n                type: inferType(src2)\n            };\n        } else {\n            return {\n                ...src2,\n                type: inferType(src2.src, src2.type)\n            };\n        }\n    });\n}\nfunction inferType(src, type) {\n    if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(type) && type.length) {\n        return type;\n    } else if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src) && sourceTypes.has(src)) {\n        return sourceTypes.get(src);\n    } else if (!type && isHLSSrc({\n        src,\n        type: \"\"\n    })) {\n        return \"application/x-mpegurl\";\n    } else if (!type && isDASHSrc({\n        src,\n        type: \"\"\n    })) {\n        return \"application/dash+xml\";\n    } else if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src) || src.startsWith(\"blob:\")) {\n        return \"video/object\";\n    } else if (src.includes(\"youtube\") || src.includes(\"youtu.be\")) {\n        return \"video/youtube\";\n    } else if (src.includes(\"vimeo\") && !src.includes(\"progressive_redirect\") && !src.includes(\".m3u8\")) {\n        return \"video/vimeo\";\n    }\n    return \"?\";\n}\nfunction isSameSrc(a, b) {\n    return (a === null || a === void 0 ? void 0 : a.src) === (b === null || b === void 0 ? void 0 : b.src) && (a === null || a === void 0 ? void 0 : a.type) === (b === null || b === void 0 ? void 0 : b.type);\n}\nclass Tracks {\n    _onTracksChange() {\n        const newTracks = this._domTracks();\n        for (const oldTrack of this._prevTracks){\n            if (!newTracks.some((t)=>t.id === oldTrack.id)) {\n                const track = oldTrack.id && this._media.textTracks.getById(oldTrack.id);\n                if (track) this._media.textTracks.remove(track);\n            }\n        }\n        for (const newTrack of newTracks){\n            const id = newTrack.id || TextTrack.createId(newTrack);\n            if (!this._media.textTracks.getById(id)) {\n                newTrack.id = id;\n                this._media.textTracks.add(newTrack);\n            }\n        }\n        this._prevTracks = newTracks;\n    }\n    constructor(_domTracks, _media){\n        this._domTracks = _domTracks;\n        this._media = _media;\n        this._prevTracks = [];\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onTracksChange.bind(this));\n    }\n}\nvar __defProp$e = Object.defineProperty;\nvar __getOwnPropDesc$e = Object.getOwnPropertyDescriptor;\nvar __decorateClass$e = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$e(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$e(target, key, result);\n    return result;\n};\nclass MediaProvider extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        this._sources = new SourceSelection(this._domSources, this._media, this.$state.loader, this.$props.loaders());\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-provider\", \"\");\n    }\n    onConnect(el) {\n        this._sources.connect();\n        new Tracks(this._domTracks, this._media);\n        const resize = new ResizeObserver((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.animationFrameThrottle)(this._onResize.bind(this)));\n        resize.observe(el);\n        const mutations = new MutationObserver(this._onMutation.bind(this));\n        mutations.observe(el, {\n            attributes: true,\n            childList: true\n        });\n        this._onResize();\n        this._onMutation();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n            resize.disconnect();\n            mutations.disconnect();\n        });\n    }\n    load(target) {\n        window.cancelAnimationFrame(this._loadRafId);\n        this._loadRafId = requestAnimationFrame(()=>this._runLoader(target));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n            window.cancelAnimationFrame(this._loadRafId);\n        });\n    }\n    _runLoader(target) {\n        if (!this.scope) return;\n        const loader = this.$state.loader(), { $provider } = this._media;\n        if (this._loader === loader && (loader === null || loader === void 0 ? void 0 : loader.target) === target && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)($provider)) return;\n        this._destroyProvider();\n        this._loader = loader;\n        if (loader) loader.target = target || null;\n        if (!loader || !target) return;\n        loader.load(this._media).then((provider)=>{\n            if (!this.scope) return;\n            if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$state.loader) !== loader) return;\n            this._media.delegate._notify(\"provider-change\", provider);\n        });\n    }\n    onDestroy() {\n        this._loader = null;\n        this._destroyProvider();\n    }\n    _destroyProvider() {\n        var _this__media;\n        (_this__media = this._media) === null || _this__media === void 0 ? void 0 : _this__media.delegate._notify(\"provider-change\", null);\n    }\n    _onResize() {\n        if (!this.el) return;\n        const { player, $state } = this._media, width = this.el.offsetWidth, height = this.el.offsetHeight;\n        if (!player) return;\n        $state.mediaWidth.set(width);\n        $state.mediaHeight.set(height);\n        if (player.el) {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(player.el, \"--media-width\", width + \"px\");\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(player.el, \"--media-height\", height + \"px\");\n        }\n    }\n    _onMutation() {\n        const sources = [], tracks = [], children = this.el.children;\n        for (const el of children){\n            if (el.hasAttribute(\"data-vds\")) continue;\n            if (el instanceof HTMLSourceElement) {\n                const src = {\n                    id: el.id,\n                    src: el.src,\n                    type: el.type\n                };\n                for (const prop of [\n                    \"id\",\n                    \"src\",\n                    \"width\",\n                    \"height\",\n                    \"bitrate\",\n                    \"codec\"\n                ]){\n                    const value = el.getAttribute(\"data-\".concat(prop));\n                    if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(value)) src[prop] = /id|src|codec/.test(prop) ? value : Number(value);\n                }\n                sources.push(src);\n            } else if (el instanceof HTMLTrackElement) {\n                const track = {\n                    src: el.src,\n                    kind: el.track.kind,\n                    language: el.srclang,\n                    label: el.label,\n                    default: el.default,\n                    type: el.getAttribute(\"data-type\")\n                };\n                tracks.push({\n                    id: el.id || TextTrack.createId(track),\n                    ...track\n                });\n            }\n        }\n        this._domSources.set(sources);\n        this._domTracks.set(tracks);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.tick)();\n    }\n    constructor(){\n        super(...arguments);\n        this._domSources = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)([]);\n        this._domTracks = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)([]);\n        this._loader = null;\n        this._loadRafId = -1;\n    }\n}\nMediaProvider.props = {\n    loaders: []\n};\nMediaProvider.state = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.State({\n    loader: null\n});\n__decorateClass$e([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], MediaProvider.prototype, \"load\");\nclass MediaAnnouncer extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n    }\n    onAttach(el) {\n        el.style.display = \"contents\";\n    }\n    onConnect(el) {\n        el.setAttribute(\"data-media-announcer\", \"\");\n        setAttributeIfEmpty(el, \"role\", \"status\");\n        setAttributeIfEmpty(el, \"aria-live\", \"polite\");\n        const { busy } = this.$state;\n        this.setAttributes({\n            \"aria-busy\": ()=>busy() ? \"true\" : null\n        });\n        this._initializing = true;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPaused.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchVolume.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchCaptions.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchFullscreen.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPiP.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchSeeking.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchLabel.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.tick)();\n        this._initializing = false;\n    }\n    _watchPaused() {\n        const { paused } = this._media.$state;\n        this._setLabel(!paused() ? \"Play\" : \"Pause\");\n    }\n    _watchFullscreen() {\n        const { fullscreen } = this._media.$state;\n        this._setLabel(fullscreen() ? \"Enter Fullscreen\" : \"Exit Fullscreen\");\n    }\n    _watchPiP() {\n        const { pictureInPicture } = this._media.$state;\n        this._setLabel(pictureInPicture() ? \"Enter PiP\" : \"Exit PiP\");\n    }\n    _watchCaptions() {\n        const { textTrack } = this._media.$state;\n        this._setLabel(textTrack() ? \"Closed-Captions On\" : \"Closed-Captions Off\");\n    }\n    _watchVolume() {\n        const { muted, volume, audioGain } = this._media.$state;\n        var _audioGain;\n        this._setLabel(muted() || volume() === 0 ? \"Mute\" : \"\".concat(Math.round(volume() * ((_audioGain = audioGain()) !== null && _audioGain !== void 0 ? _audioGain : 1) * 100), \"% \").concat(this._translate(\"Volume\")));\n    }\n    _watchSeeking() {\n        const { seeking, currentTime } = this._media.$state, isSeeking = seeking();\n        if (this._startedSeekingAt > 0) {\n            window.clearTimeout(this._seekTimer);\n            this._seekTimer = window.setTimeout(()=>{\n                if (!this.scope) return;\n                const newTime = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(currentTime), seconds = Math.abs(newTime - this._startedSeekingAt);\n                if (seconds >= 1) {\n                    const isForward = newTime >= this._startedSeekingAt, spokenTime = formatSpokenTime(seconds);\n                    this._setLabel(\"\".concat(this._translate(isForward ? \"Seek Forward\" : \"Seek Backward\"), \" \").concat(spokenTime));\n                }\n                this._startedSeekingAt = -1;\n                this._seekTimer = -1;\n            }, 300);\n        } else if (isSeeking) {\n            this._startedSeekingAt = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(currentTime);\n        }\n    }\n    _translate(word) {\n        var _translations;\n        const { translations } = this.$props;\n        var _translations_;\n        return (_translations_ = translations === null || translations === void 0 ? void 0 : (_translations = translations()) === null || _translations === void 0 ? void 0 : _translations[word || \"\"]) !== null && _translations_ !== void 0 ? _translations_ : word;\n    }\n    _watchLabel() {\n        const { label, busy } = this.$state, $label = this._translate(label());\n        if (this._initializing) return;\n        busy.set(true);\n        const id = window.setTimeout(()=>void busy.set(false), 150);\n        this.el && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(this.el, \"aria-label\", $label);\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)($label)) {\n            this.dispatch(\"change\", {\n                detail: $label\n            });\n        }\n        return ()=>window.clearTimeout(id);\n    }\n    _setLabel(word) {\n        const { label } = this.$state;\n        label.set(word);\n    }\n    constructor(){\n        super(...arguments);\n        this._initializing = false;\n        this._startedSeekingAt = -1;\n        this._seekTimer = -1;\n    }\n}\nMediaAnnouncer.props = {\n    translations: null\n};\nMediaAnnouncer.state = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.State({\n    label: null,\n    busy: false\n});\nclass Controls extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchProps.bind(this));\n    }\n    onAttach(el) {\n        const { pictureInPicture, fullscreen } = this._media.$state;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(el, \"pointer-events\", \"none\");\n        setAttributeIfEmpty(el, \"role\", \"group\");\n        this.setAttributes({\n            \"data-visible\": this._isShowing.bind(this),\n            \"data-fullscreen\": fullscreen,\n            \"data-pip\": pictureInPicture\n        });\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            this.dispatch(\"change\", {\n                detail: this._isShowing()\n            });\n        });\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._hideControls.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            const isFullscreen = fullscreen();\n            for (const side of [\n                \"top\",\n                \"right\",\n                \"bottom\",\n                \"left\"\n            ]){\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(el, \"padding-\".concat(side), isFullscreen && \"env(safe-area-inset-\".concat(side, \")\"));\n            }\n        });\n    }\n    _hideControls() {\n        if (!this.el) return;\n        const { nativeControls } = this._media.$state, isHidden = nativeControls();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(this.el, \"aria-hidden\", isHidden ? \"true\" : null);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(this.el, \"display\", isHidden ? \"none\" : null);\n    }\n    _watchProps() {\n        const { controls } = this._media.player, { hideDelay, hideOnMouseLeave } = this.$props;\n        controls.defaultDelay = hideDelay() === 2e3 ? this._media.$props.controlsDelay() : hideDelay();\n        controls.hideOnMouseLeave = hideOnMouseLeave();\n    }\n    _isShowing() {\n        const { controlsVisible } = this._media.$state;\n        return controlsVisible();\n    }\n}\nControls.props = {\n    hideDelay: 2e3,\n    hideOnMouseLeave: false\n};\nclass ControlsGroup extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onAttach(el) {\n        if (!el.style.pointerEvents) (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(el, \"pointer-events\", \"auto\");\n    }\n}\nclass Popper extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    onDestroy() {\n        var _this__stopAnimationEndListener, _this;\n        (_this__stopAnimationEndListener = (_this = this)._stopAnimationEndListener) === null || _this__stopAnimationEndListener === void 0 ? void 0 : _this__stopAnimationEndListener.call(_this);\n        this._stopAnimationEndListener = null;\n    }\n    _watchTrigger() {\n        const trigger = this._delegate._trigger();\n        if (!trigger) {\n            this.hide();\n            return;\n        }\n        const show = this.show.bind(this), hide = this.hide.bind(this);\n        this._delegate._listen(trigger, show, hide);\n    }\n    show(trigger) {\n        var _this__stopAnimationEndListener, _this, _this__delegate__showDelay, _this__delegate;\n        this._cancelShowing();\n        window.cancelAnimationFrame(this._hideRafId);\n        this._hideRafId = -1;\n        (_this__stopAnimationEndListener = (_this = this)._stopAnimationEndListener) === null || _this__stopAnimationEndListener === void 0 ? void 0 : _this__stopAnimationEndListener.call(_this);\n        this._stopAnimationEndListener = null;\n        var _this__delegate__showDelay1;\n        this._showTimerId = window.setTimeout(()=>{\n            this._showTimerId = -1;\n            const content = this._delegate._content();\n            if (content) content.style.removeProperty(\"display\");\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(()=>this._delegate._onChange(true, trigger));\n        }, (_this__delegate__showDelay1 = (_this__delegate__showDelay = (_this__delegate = this._delegate)._showDelay) === null || _this__delegate__showDelay === void 0 ? void 0 : _this__delegate__showDelay.call(_this__delegate)) !== null && _this__delegate__showDelay1 !== void 0 ? _this__delegate__showDelay1 : 0);\n    }\n    hide(trigger) {\n        this._cancelShowing();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(()=>this._delegate._onChange(false, trigger));\n        this._hideRafId = requestAnimationFrame(()=>{\n            this._cancelShowing();\n            this._hideRafId = -1;\n            const content = this._delegate._content();\n            if (content) {\n                const onHide = ()=>{\n                    content.style.display = \"none\";\n                    this._stopAnimationEndListener = null;\n                };\n                const isAnimated = hasAnimation(content);\n                if (isAnimated) {\n                    var _this__stopAnimationEndListener, _this;\n                    (_this__stopAnimationEndListener = (_this = this)._stopAnimationEndListener) === null || _this__stopAnimationEndListener === void 0 ? void 0 : _this__stopAnimationEndListener.call(_this);\n                    const stop = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(content, \"animationend\", onHide, {\n                        once: true\n                    });\n                    this._stopAnimationEndListener = stop;\n                } else {\n                    onHide();\n                }\n            }\n        });\n    }\n    _cancelShowing() {\n        window.clearTimeout(this._showTimerId);\n        this._showTimerId = -1;\n    }\n    constructor(_delegate){\n        super();\n        this._delegate = _delegate;\n        this._showTimerId = -1;\n        this._hideRafId = -1;\n        this._stopAnimationEndListener = null;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchTrigger.bind(this));\n    }\n}\nconst tooltipContext = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nlet id = 0;\nclass Tooltip extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onAttach(el) {\n        el.style.setProperty(\"display\", \"contents\");\n    }\n    onSetup() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(tooltipContext, {\n            _trigger: this._trigger,\n            _content: this._content,\n            _attachTrigger: this._attachTrigger.bind(this),\n            _detachTrigger: this._detachTrigger.bind(this),\n            _attachContent: this._attachContent.bind(this),\n            _detachContent: this._detachContent.bind(this)\n        });\n    }\n    _attachTrigger(el) {\n        this._trigger.set(el);\n        let tooltipName = el.getAttribute(\"data-media-tooltip\");\n        if (tooltipName) {\n            var _this_el;\n            (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.setAttribute(\"data-media-\".concat(tooltipName, \"-tooltip\"), \"\");\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-describedby\", this._id);\n    }\n    _detachTrigger(el) {\n        el.removeAttribute(\"data-describedby\");\n        el.removeAttribute(\"aria-describedby\");\n        this._trigger.set(null);\n    }\n    _attachContent(el) {\n        el.setAttribute(\"id\", this._id);\n        el.style.display = \"none\";\n        setAttributeIfEmpty(el, \"role\", \"tooltip\");\n        this._content.set(el);\n    }\n    _detachContent(el) {\n        el.removeAttribute(\"id\");\n        el.removeAttribute(\"role\");\n        this._content.set(null);\n    }\n    _onShowingChange(isShowing) {\n        const trigger = this._trigger(), content = this._content();\n        if (trigger) {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(trigger, \"aria-describedby\", isShowing ? this._id : null);\n        }\n        for (const el of [\n            this.el,\n            trigger,\n            content\n        ]){\n            el && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-visible\", isShowing);\n        }\n    }\n    constructor(){\n        super();\n        this._id = \"media-tooltip-\".concat(++id);\n        this._trigger = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null);\n        this._content = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null);\n        new FocusVisibleController();\n        const { showDelay } = this.$props;\n        new Popper({\n            _trigger: this._trigger,\n            _content: this._content,\n            _showDelay: showDelay,\n            _listen (trigger, show, hide) {\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(trigger, \"touchstart\", (e)=>e.preventDefault(), {\n                    passive: false\n                });\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n                    if ($keyboard()) (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(trigger, \"focus\", show);\n                    (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(trigger, \"blur\", hide);\n                });\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(trigger, \"mouseenter\", show);\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(trigger, \"mouseleave\", hide);\n            },\n            _onChange: this._onShowingChange.bind(this)\n        });\n    }\n}\nTooltip.props = {\n    showDelay: 700\n};\nclass TooltipTrigger extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onConnect(el) {\n        var _s = $RefreshSig$();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(requestScopedAnimationFrame(_s(()=>{\n            _s();\n            if (!this.connectScope) return;\n            this._attach();\n            const tooltip = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(tooltipContext);\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n                const button = this._getButton();\n                button && tooltip._detachTrigger(button);\n            });\n        }, \"ub1L0cVX0hRyuTlTzgTrvE0q90M=\")));\n    }\n    _attach() {\n        const button = this._getButton(), tooltip = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(tooltipContext);\n        button && tooltip._attachTrigger(button);\n    }\n    _getButton() {\n        const candidate = this.el.firstElementChild;\n        return (candidate === null || candidate === void 0 ? void 0 : candidate.localName) === \"button\" || (candidate === null || candidate === void 0 ? void 0 : candidate.getAttribute(\"role\")) === \"button\" ? candidate : this.el;\n    }\n    constructor(){\n        super();\n        new FocusVisibleController();\n    }\n}\nclass TooltipContent extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onAttach(el) {\n        this._attach(el);\n        Object.assign(el.style, {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"max-content\"\n        });\n    }\n    onConnect(el) {\n        this._attach(el);\n        const tooltip = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(tooltipContext);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>tooltip._detachContent(el));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(requestScopedAnimationFrame(()=>{\n            if (!this.connectScope) return;\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPlacement.bind(this));\n        }));\n    }\n    _attach(el) {\n        const tooltip = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(tooltipContext);\n        tooltip._attachContent(el);\n    }\n    _watchPlacement() {\n        const { placement, offset: mainOffset, alignOffset } = this.$props;\n        return autoPlacement(this.el, this._getTrigger(), placement(), {\n            offsetVarName: \"media-tooltip\",\n            xOffset: alignOffset(),\n            yOffset: mainOffset()\n        });\n    }\n    _getTrigger() {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(tooltipContext)._trigger();\n    }\n    constructor(){\n        super();\n        new FocusVisibleController();\n        const { placement } = this.$props;\n        this.setAttributes({\n            \"data-placement\": placement\n        });\n    }\n}\nTooltipContent.props = {\n    placement: \"top center\",\n    offset: 0,\n    alignOffset: 0\n};\nclass ToggleButtonController extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    onSetup() {\n        const { disabled } = this.$props;\n        this.setAttributes({\n            \"data-pressed\": this._delegate._isPressed,\n            \"aria-pressed\": this._isARIAPressed.bind(this),\n            \"aria-disabled\": ()=>disabled() ? \"true\" : null\n        });\n    }\n    onAttach(el) {\n        setAttributeIfEmpty(el, \"tabindex\", \"0\");\n        setAttributeIfEmpty(el, \"role\", \"button\");\n        setAttributeIfEmpty(el, \"type\", \"button\");\n    }\n    onConnect(el) {\n        onPress(el, this._onMaybePress.bind(this));\n        for (const type of [\n            \"click\",\n            \"touchstart\"\n        ]){\n            this.listen(type, this._onInteraction.bind(this), {\n                passive: true\n            });\n        }\n    }\n    _isARIAPressed() {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ariaBool)(this._delegate._isPressed());\n    }\n    _onPressed(event1) {\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isWriteSignal)(this._delegate._isPressed)) {\n            this._delegate._isPressed.set((p)=>!p);\n        }\n    }\n    _onMaybePress(event1) {\n        const disabled = this.$props.disabled() || this.el.hasAttribute(\"data-disabled\");\n        if (disabled) {\n            event1.preventDefault();\n            event1.stopImmediatePropagation();\n            return;\n        }\n        event1.preventDefault();\n        var _this__delegate__onPress;\n        ((_this__delegate__onPress = this._delegate._onPress) !== null && _this__delegate__onPress !== void 0 ? _this__delegate__onPress : this._onPressed).call(this, event1);\n    }\n    _onInteraction(event1) {\n        if (this.$props.disabled()) {\n            event1.preventDefault();\n            event1.stopImmediatePropagation();\n        }\n    }\n    constructor(_delegate){\n        super();\n        this._delegate = _delegate;\n        new FocusVisibleController();\n        if (_delegate._keyShortcut) {\n            new ARIAKeyShortcuts(_delegate._keyShortcut);\n        }\n    }\n}\nToggleButtonController.props = {\n    disabled: false\n};\nvar __defProp$d = Object.defineProperty;\nvar __getOwnPropDesc$d = Object.getOwnPropertyDescriptor;\nvar __decorateClass$d = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$d(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$d(target, key, result);\n    return result;\n};\nclass ToggleButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get pressed() {\n        return this._pressed();\n    }\n    constructor(){\n        super();\n        this._pressed = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n        new ToggleButtonController({\n            _isPressed: this._pressed\n        });\n    }\n}\nToggleButton.props = {\n    disabled: false,\n    defaultPressed: false\n};\n__decorateClass$d([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], ToggleButton.prototype, \"pressed\");\nfunction ariaBool(value) {\n    return value ? \"true\" : \"false\";\n}\nfunction $ariaBool(signal) {\n    return ()=>ariaBool(signal());\n}\nclass AirPlayButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        const { canAirPlay, isAirPlayConnected } = this._media.$state;\n        this.setAttributes({\n            \"data-active\": isAirPlayConnected,\n            \"data-supported\": canAirPlay,\n            \"data-state\": this._getState.bind(this),\n            \"aria-hidden\": $ariaBool(()=>!canAirPlay())\n        });\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-tooltip\", \"airplay\");\n        setARIALabel(el, this._getDefaultLabel.bind(this));\n    }\n    _onPress(event1) {\n        const remote = this._media.remote;\n        remote.requestAirPlay(event1);\n    }\n    _isPressed() {\n        const { remotePlaybackType, remotePlaybackState } = this._media.$state;\n        return remotePlaybackType() === \"airplay\" && remotePlaybackState() !== \"disconnected\";\n    }\n    _getState() {\n        const { remotePlaybackType, remotePlaybackState } = this._media.$state;\n        return remotePlaybackType() === \"airplay\" && remotePlaybackState();\n    }\n    _getDefaultLabel() {\n        const { remotePlaybackState } = this._media.$state;\n        return \"AirPlay \".concat(remotePlaybackState());\n    }\n    constructor(){\n        super();\n        new ToggleButtonController({\n            _isPressed: this._isPressed.bind(this),\n            _onPress: this._onPress.bind(this)\n        });\n    }\n}\nAirPlayButton.props = ToggleButtonController.props;\nclass GoogleCastButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        const { canGoogleCast, isGoogleCastConnected } = this._media.$state;\n        this.setAttributes({\n            \"data-active\": isGoogleCastConnected,\n            \"data-supported\": canGoogleCast,\n            \"data-state\": this._getState.bind(this),\n            \"aria-hidden\": $ariaBool(()=>!canGoogleCast())\n        });\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-tooltip\", \"google-cast\");\n        setARIALabel(el, this._getDefaultLabel.bind(this));\n    }\n    _onPress(event1) {\n        const remote = this._media.remote;\n        remote.requestGoogleCast(event1);\n    }\n    _isPressed() {\n        const { remotePlaybackType, remotePlaybackState } = this._media.$state;\n        return remotePlaybackType() === \"google-cast\" && remotePlaybackState() !== \"disconnected\";\n    }\n    _getState() {\n        const { remotePlaybackType, remotePlaybackState } = this._media.$state;\n        return remotePlaybackType() === \"google-cast\" && remotePlaybackState();\n    }\n    _getDefaultLabel() {\n        const { remotePlaybackState } = this._media.$state;\n        return \"Google Cast \".concat(remotePlaybackState());\n    }\n    constructor(){\n        super();\n        new ToggleButtonController({\n            _isPressed: this._isPressed.bind(this),\n            _onPress: this._onPress.bind(this)\n        });\n    }\n}\nGoogleCastButton.props = ToggleButtonController.props;\nclass PlayButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        const { paused, ended } = this._media.$state;\n        this.setAttributes({\n            \"data-paused\": paused,\n            \"data-ended\": ended\n        });\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-tooltip\", \"play\");\n        setARIALabel(el, \"Play\");\n    }\n    _onPress(event1) {\n        const remote = this._media.remote;\n        this._isPressed() ? remote.pause(event1) : remote.play(event1);\n    }\n    _isPressed() {\n        const { paused } = this._media.$state;\n        return !paused();\n    }\n    constructor(){\n        super();\n        new ToggleButtonController({\n            _isPressed: this._isPressed.bind(this),\n            _keyShortcut: \"togglePaused\",\n            _onPress: this._onPress.bind(this)\n        });\n    }\n}\nPlayButton.props = ToggleButtonController.props;\nclass CaptionButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        this.setAttributes({\n            \"data-active\": this._isPressed.bind(this),\n            \"data-supported\": ()=>!this._isHidden(),\n            \"aria-hidden\": $ariaBool(this._isHidden.bind(this))\n        });\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-tooltip\", \"caption\");\n        setARIALabel(el, \"Captions\");\n    }\n    _onPress(event1) {\n        this._media.remote.toggleCaptions(event1);\n    }\n    _isPressed() {\n        const { textTrack } = this._media.$state, track = textTrack();\n        return !!track && isTrackCaptionKind(track);\n    }\n    _isHidden() {\n        const { hasCaptions } = this._media.$state;\n        return !hasCaptions();\n    }\n    constructor(){\n        super();\n        new ToggleButtonController({\n            _isPressed: this._isPressed.bind(this),\n            _keyShortcut: \"toggleCaptions\",\n            _onPress: this._onPress.bind(this)\n        });\n    }\n}\nCaptionButton.props = ToggleButtonController.props;\nclass FullscreenButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        const { fullscreen } = this._media.$state, isSupported = this._isSupported.bind(this);\n        this.setAttributes({\n            \"data-active\": fullscreen,\n            \"data-supported\": isSupported,\n            \"aria-hidden\": $ariaBool(()=>!isSupported())\n        });\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-tooltip\", \"fullscreen\");\n        setARIALabel(el, \"Fullscreen\");\n    }\n    _onPress(event1) {\n        const remote = this._media.remote, target = this.$props.target();\n        this._isPressed() ? remote.exitFullscreen(target, event1) : remote.enterFullscreen(target, event1);\n    }\n    _isPressed() {\n        const { fullscreen } = this._media.$state;\n        return fullscreen();\n    }\n    _isSupported() {\n        const { canFullscreen } = this._media.$state;\n        return canFullscreen();\n    }\n    constructor(){\n        super();\n        new ToggleButtonController({\n            _isPressed: this._isPressed.bind(this),\n            _keyShortcut: \"toggleFullscreen\",\n            _onPress: this._onPress.bind(this)\n        });\n    }\n}\nFullscreenButton.props = {\n    ...ToggleButtonController.props,\n    target: \"prefer-media\"\n};\nclass MuteButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        this.setAttributes({\n            \"data-muted\": this._isPressed.bind(this),\n            \"data-state\": this._getState.bind(this)\n        });\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-mute-button\", \"\");\n        el.setAttribute(\"data-media-tooltip\", \"mute\");\n        setARIALabel(el, \"Mute\");\n    }\n    _onPress(event1) {\n        const remote = this._media.remote;\n        this._isPressed() ? remote.unmute(event1) : remote.mute(event1);\n    }\n    _isPressed() {\n        const { muted, volume } = this._media.$state;\n        return muted() || volume() === 0;\n    }\n    _getState() {\n        const { muted, volume } = this._media.$state, $volume = volume();\n        if (muted() || $volume === 0) return \"muted\";\n        else if ($volume >= 0.5) return \"high\";\n        else if ($volume < 0.5) return \"low\";\n    }\n    constructor(){\n        super();\n        new ToggleButtonController({\n            _isPressed: this._isPressed.bind(this),\n            _keyShortcut: \"toggleMuted\",\n            _onPress: this._onPress.bind(this)\n        });\n    }\n}\nMuteButton.props = ToggleButtonController.props;\nclass PIPButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        const { pictureInPicture } = this._media.$state, isSupported = this._isSupported.bind(this);\n        this.setAttributes({\n            \"data-active\": pictureInPicture,\n            \"data-supported\": isSupported,\n            \"aria-hidden\": $ariaBool(()=>!isSupported())\n        });\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-tooltip\", \"pip\");\n        setARIALabel(el, \"PiP\");\n    }\n    _onPress(event1) {\n        const remote = this._media.remote;\n        this._isPressed() ? remote.exitPictureInPicture(event1) : remote.enterPictureInPicture(event1);\n    }\n    _isPressed() {\n        const { pictureInPicture } = this._media.$state;\n        return pictureInPicture();\n    }\n    _isSupported() {\n        const { canPictureInPicture } = this._media.$state;\n        return canPictureInPicture();\n    }\n    constructor(){\n        super();\n        new ToggleButtonController({\n            _isPressed: this._isPressed.bind(this),\n            _keyShortcut: \"togglePictureInPicture\",\n            _onPress: this._onPress.bind(this)\n        });\n    }\n}\nPIPButton.props = ToggleButtonController.props;\nclass SeekButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        const { seeking } = this._media.$state, { seconds } = this.$props, isSupported = this._isSupported.bind(this);\n        this.setAttributes({\n            seconds,\n            \"data-seeking\": seeking,\n            \"data-supported\": isSupported,\n            \"aria-hidden\": $ariaBool(()=>!isSupported())\n        });\n    }\n    onAttach(el) {\n        setAttributeIfEmpty(el, \"tabindex\", \"0\");\n        setAttributeIfEmpty(el, \"role\", \"button\");\n        setAttributeIfEmpty(el, \"type\", \"button\");\n        el.setAttribute(\"data-media-tooltip\", \"seek\");\n        setARIALabel(el, this._getDefaultLabel.bind(this));\n    }\n    onConnect(el) {\n        onPress(el, this._onPress.bind(this));\n    }\n    _isSupported() {\n        const { canSeek } = this._media.$state;\n        return canSeek();\n    }\n    _getDefaultLabel() {\n        const { seconds } = this.$props;\n        return \"Seek \".concat(seconds() > 0 ? \"forward\" : \"backward\", \" \").concat(seconds(), \" seconds\");\n    }\n    _onPress(event1) {\n        const { seconds, disabled } = this.$props;\n        if (disabled()) return;\n        const { currentTime } = this._media.$state, seekTo = currentTime() + seconds();\n        this._media.remote.seek(seekTo, event1);\n    }\n    constructor(){\n        super();\n        new FocusVisibleController();\n    }\n}\nSeekButton.props = {\n    disabled: false,\n    seconds: 30\n};\nclass LiveButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        const { disabled } = this.$props, { live, liveEdge } = this._media.$state, isHidden = ()=>!live();\n        this.setAttributes({\n            \"data-edge\": liveEdge,\n            \"data-hidden\": isHidden,\n            \"aria-disabled\": $ariaBool(()=>disabled() || liveEdge()),\n            \"aria-hidden\": $ariaBool(isHidden)\n        });\n    }\n    onAttach(el) {\n        setAttributeIfEmpty(el, \"tabindex\", \"0\");\n        setAttributeIfEmpty(el, \"role\", \"button\");\n        setAttributeIfEmpty(el, \"type\", \"button\");\n        el.setAttribute(\"data-media-tooltip\", \"live\");\n    }\n    onConnect(el) {\n        onPress(el, this._onPress.bind(this));\n    }\n    _onPress(event1) {\n        const { disabled } = this.$props, { liveEdge } = this._media.$state;\n        if (disabled() || liveEdge()) return;\n        this._media.remote.seekToLiveEdge(event1);\n    }\n    constructor(){\n        super();\n        new FocusVisibleController();\n    }\n}\nLiveButton.props = {\n    disabled: false\n};\nconst sliderState = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.State({\n    min: 0,\n    max: 100,\n    value: 0,\n    step: 1,\n    pointerValue: 0,\n    focused: false,\n    dragging: false,\n    pointing: false,\n    hidden: false,\n    get active () {\n        return this.dragging || this.focused || this.pointing;\n    },\n    get fillRate () {\n        return calcRate(this.min, this.max, this.value);\n    },\n    get fillPercent () {\n        return this.fillRate * 100;\n    },\n    get pointerRate () {\n        return calcRate(this.min, this.max, this.pointerValue);\n    },\n    get pointerPercent () {\n        return this.pointerRate * 100;\n    }\n});\nfunction calcRate(min, max, value) {\n    const range = max - min, offset = value - min;\n    return range > 0 ? offset / range : 0;\n}\nclass IntersectionObserverController extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    onConnect(el) {\n        this._observer = new IntersectionObserver((entries)=>{\n            var _this__init_callback, _this__init;\n            (_this__init_callback = (_this__init = this._init).callback) === null || _this__init_callback === void 0 ? void 0 : _this__init_callback.call(_this__init, entries, this._observer);\n        }, this._init);\n        this._observer.observe(el);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(this._onDisconnect.bind(this));\n    }\n    /**\n   * Disconnect any active intersection observers.\n   */ _onDisconnect() {\n        var _this__observer;\n        (_this__observer = this._observer) === null || _this__observer === void 0 ? void 0 : _this__observer.disconnect();\n        this._observer = void 0;\n    }\n    constructor(_init){\n        super();\n        this._init = _init;\n    }\n}\nconst sliderContext = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst sliderObserverContext = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction getClampedValue(min, max, value, step) {\n    return clampNumber(min, round(value, getNumberOfDecimalPlaces(step)), max);\n}\nfunction getValueFromRate(min, max, rate, step) {\n    const boundRate = clampNumber(0, rate, 1), range = max - min, fill = range * boundRate, stepRatio = fill / step, steps = step * Math.round(stepRatio);\n    return min + steps;\n}\nconst SliderKeyDirection = {\n    Left: -1,\n    ArrowLeft: -1,\n    Up: 1,\n    ArrowUp: 1,\n    Right: 1,\n    ArrowRight: 1,\n    Down: -1,\n    ArrowDown: -1\n};\nclass SliderEventsController extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    onSetup() {\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(sliderObserverContext)) {\n            this._observer = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(sliderObserverContext);\n        }\n    }\n    onConnect() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._attachEventListeners.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._attachPointerListeners.bind(this));\n        if (this._delegate._swipeGesture) (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchSwipeGesture.bind(this));\n    }\n    _watchSwipeGesture() {\n        var _this__media_player_el;\n        const { pointer } = this._media.$state;\n        if (pointer() !== \"coarse\" || !this._delegate._swipeGesture()) {\n            this._provider = null;\n            return;\n        }\n        this._provider = (_this__media_player_el = this._media.player.el) === null || _this__media_player_el === void 0 ? void 0 : _this__media_player_el.querySelector(\"media-provider,[data-media-provider]\");\n        if (!this._provider) return;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._provider, \"touchstart\", this._onTouchStart.bind(this), {\n            passive: true\n        });\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._provider, \"touchmove\", this._onTouchMove.bind(this), {\n            passive: false\n        });\n    }\n    _onTouchStart(event1) {\n        this._touch = event1.touches[0];\n    }\n    _onTouchMove(event1) {\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNull)(this._touch) || isTouchPinchEvent(event1)) return;\n        const touch = event1.touches[0], xDiff = touch.clientX - this._touch.clientX, yDiff = touch.clientY - this._touch.clientY, isDragging = this.$state.dragging();\n        if (!isDragging && Math.abs(yDiff) > 5) {\n            return;\n        }\n        if (isDragging) return;\n        event1.preventDefault();\n        if (Math.abs(xDiff) > 20) {\n            this._touch = touch;\n            this._touchStartValue = this.$state.value();\n            this._onStartDragging(this._touchStartValue, event1);\n        }\n    }\n    _attachEventListeners() {\n        const { hidden } = this.$props;\n        this.listen(\"focus\", this._onFocus.bind(this));\n        this.listen(\"keydown\", this._onKeyDown.bind(this));\n        this.listen(\"keyup\", this._onKeyUp.bind(this));\n        if (hidden() || this._delegate._isDisabled()) return;\n        this.listen(\"pointerenter\", this._onPointerEnter.bind(this));\n        this.listen(\"pointermove\", this._onPointerMove.bind(this));\n        this.listen(\"pointerleave\", this._onPointerLeave.bind(this));\n        this.listen(\"pointerdown\", this._onPointerDown.bind(this));\n    }\n    _attachPointerListeners() {\n        if (this._delegate._isDisabled() || !this.$state.dragging()) return;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(document, \"pointerup\", this._onDocumentPointerUp.bind(this), {\n            capture: true\n        });\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(document, \"pointermove\", this._onDocumentPointerMove.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(document, \"touchmove\", this._onDocumentTouchMove.bind(this), {\n            passive: false\n        });\n    }\n    _onFocus() {\n        this._updatePointerValue(this.$state.value());\n    }\n    _updateValue(newValue, trigger) {\n        var _this__delegate__onValueChange, _this__delegate;\n        const { value, min, max, dragging } = this.$state;\n        const clampedValue = Math.max(min(), Math.min(newValue, max()));\n        value.set(clampedValue);\n        const event1 = this.createEvent(\"value-change\", {\n            detail: clampedValue,\n            trigger\n        });\n        this.dispatch(event1);\n        (_this__delegate__onValueChange = (_this__delegate = this._delegate)._onValueChange) === null || _this__delegate__onValueChange === void 0 ? void 0 : _this__delegate__onValueChange.call(_this__delegate, event1);\n        if (dragging()) {\n            var _this__delegate__onDragValueChange, _this__delegate1;\n            const event2 = this.createEvent(\"drag-value-change\", {\n                detail: clampedValue,\n                trigger\n            });\n            this.dispatch(event2);\n            (_this__delegate__onDragValueChange = (_this__delegate1 = this._delegate)._onDragValueChange) === null || _this__delegate__onDragValueChange === void 0 ? void 0 : _this__delegate__onDragValueChange.call(_this__delegate1, event2);\n        }\n    }\n    _updatePointerValue(value, trigger) {\n        const { pointerValue, dragging } = this.$state;\n        pointerValue.set(value);\n        this.dispatch(\"pointer-value-change\", {\n            detail: value,\n            trigger\n        });\n        if (dragging()) {\n            this._updateValue(value, trigger);\n        }\n    }\n    _getPointerValue(event1) {\n        let thumbPositionRate, rect = this.el.getBoundingClientRect(), { min, max } = this.$state;\n        if (this.$props.orientation() === \"vertical\") {\n            const { bottom: trackBottom, height: trackHeight } = rect;\n            thumbPositionRate = (trackBottom - event1.clientY) / trackHeight;\n        } else {\n            if (this._touch && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(this._touchStartValue)) {\n                const { width } = this._provider.getBoundingClientRect(), rate = (event1.clientX - this._touch.clientX) / width, range = max() - min(), diff = range * Math.abs(rate);\n                thumbPositionRate = (rate < 0 ? this._touchStartValue - diff : this._touchStartValue + diff) / range;\n            } else {\n                const { left: trackLeft, width: trackWidth } = rect;\n                thumbPositionRate = (event1.clientX - trackLeft) / trackWidth;\n            }\n        }\n        return Math.max(min(), Math.min(max(), this._delegate._roundValue(getValueFromRate(min(), max(), thumbPositionRate, this._delegate._getStep()))));\n    }\n    _onPointerEnter(event1) {\n        this.$state.pointing.set(true);\n    }\n    _onPointerMove(event1) {\n        const { dragging } = this.$state;\n        if (dragging()) return;\n        this._updatePointerValue(this._getPointerValue(event1), event1);\n    }\n    _onPointerLeave(event1) {\n        this.$state.pointing.set(false);\n    }\n    _onPointerDown(event1) {\n        if (event1.button !== 0) return;\n        const value = this._getPointerValue(event1);\n        this._onStartDragging(value, event1);\n        this._updatePointerValue(value, event1);\n    }\n    _onStartDragging(value, trigger) {\n        var _this__delegate__onDragStart, _this__delegate, _this__observer_onDragStart, _this__observer;\n        const { dragging } = this.$state;\n        if (dragging()) return;\n        dragging.set(true);\n        this._media.remote.pauseControls(trigger);\n        const event1 = this.createEvent(\"drag-start\", {\n            detail: value,\n            trigger\n        });\n        this.dispatch(event1);\n        (_this__delegate__onDragStart = (_this__delegate = this._delegate)._onDragStart) === null || _this__delegate__onDragStart === void 0 ? void 0 : _this__delegate__onDragStart.call(_this__delegate, event1);\n        (_this__observer = this._observer) === null || _this__observer === void 0 ? void 0 : (_this__observer_onDragStart = _this__observer.onDragStart) === null || _this__observer_onDragStart === void 0 ? void 0 : _this__observer_onDragStart.call(_this__observer);\n    }\n    _onStopDragging(value, trigger) {\n        var _this__delegate__onDragEnd, _this__delegate, _this__observer_onDragEnd, _this__observer;\n        const { dragging } = this.$state;\n        if (!dragging()) return;\n        dragging.set(false);\n        this._media.remote.resumeControls(trigger);\n        const event1 = this.createEvent(\"drag-end\", {\n            detail: value,\n            trigger\n        });\n        this.dispatch(event1);\n        (_this__delegate__onDragEnd = (_this__delegate = this._delegate)._onDragEnd) === null || _this__delegate__onDragEnd === void 0 ? void 0 : _this__delegate__onDragEnd.call(_this__delegate, event1);\n        this._touch = null;\n        this._touchStartValue = null;\n        (_this__observer = this._observer) === null || _this__observer === void 0 ? void 0 : (_this__observer_onDragEnd = _this__observer.onDragEnd) === null || _this__observer_onDragEnd === void 0 ? void 0 : _this__observer_onDragEnd.call(_this__observer);\n    }\n    _onKeyDown(event1) {\n        const isValidKey = Object.keys(SliderKeyDirection).includes(event1.key);\n        if (!isValidKey) return;\n        const { key } = event1, jumpValue = this._calcJumpValue(event1);\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNull)(jumpValue)) {\n            this._updatePointerValue(jumpValue, event1);\n            this._updateValue(jumpValue, event1);\n            return;\n        }\n        const newValue = this._calcNewKeyValue(event1);\n        if (!this._repeatedKeys) {\n            this._repeatedKeys = key === this._lastDownKey;\n            if (!this.$state.dragging() && this._repeatedKeys) {\n                this._onStartDragging(newValue, event1);\n            }\n        }\n        this._updatePointerValue(newValue, event1);\n        this._lastDownKey = key;\n    }\n    _onKeyUp(event1) {\n        const isValidKey = Object.keys(SliderKeyDirection).includes(event1.key);\n        if (!isValidKey || !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNull)(this._calcJumpValue(event1))) return;\n        const newValue = this._repeatedKeys ? this.$state.pointerValue() : this._calcNewKeyValue(event1);\n        this._updateValue(newValue, event1);\n        this._onStopDragging(newValue, event1);\n        this._lastDownKey = \"\";\n        this._repeatedKeys = false;\n    }\n    _calcJumpValue(event1) {\n        let key = event1.key, { min, max } = this.$state;\n        if (key === \"Home\" || key === \"PageUp\") {\n            return min();\n        } else if (key === \"End\" || key === \"PageDown\") {\n            return max();\n        } else if (!event1.metaKey && /^[0-9]$/.test(key)) {\n            return (max() - min()) / 10 * Number(key);\n        }\n        return null;\n    }\n    _calcNewKeyValue(event1) {\n        var _this__delegate__getValue, _this__delegate;\n        const { key, shiftKey } = event1;\n        event1.preventDefault();\n        event1.stopPropagation();\n        const { shiftKeyMultiplier } = this.$props;\n        const { min, max, value, pointerValue } = this.$state, step = this._delegate._getStep(), keyStep = this._delegate._getKeyStep();\n        var _this__delegate__getValue1;\n        const modifiedStep = !shiftKey ? keyStep : keyStep * shiftKeyMultiplier(), direction = Number(SliderKeyDirection[key]), diff = modifiedStep * direction, currentValue = this._repeatedKeys ? pointerValue() : (_this__delegate__getValue1 = (_this__delegate__getValue = (_this__delegate = this._delegate)._getValue) === null || _this__delegate__getValue === void 0 ? void 0 : _this__delegate__getValue.call(_this__delegate)) !== null && _this__delegate__getValue1 !== void 0 ? _this__delegate__getValue1 : value(), steps = (currentValue + diff) / step;\n        return Math.max(min(), Math.min(max(), Number((step * steps).toFixed(3))));\n    }\n    // -------------------------------------------------------------------------------------------\n    // Document (Pointer Events)\n    // -------------------------------------------------------------------------------------------\n    _onDocumentPointerUp(event1) {\n        if (event1.button !== 0) return;\n        event1.preventDefault();\n        event1.stopImmediatePropagation();\n        const value = this._getPointerValue(event1);\n        this._updatePointerValue(value, event1);\n        this._onStopDragging(value, event1);\n    }\n    _onDocumentTouchMove(event1) {\n        event1.preventDefault();\n    }\n    constructor(_delegate, _media){\n        super();\n        this._delegate = _delegate;\n        this._media = _media;\n        this._provider = null;\n        this._touch = null;\n        this._touchStartValue = null;\n        this._repeatedKeys = false;\n        this._onDocumentPointerMove = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.functionThrottle)((event1)=>{\n            this._updatePointerValue(this._getPointerValue(event1), event1);\n        }, 20, {\n            leading: true\n        });\n    }\n}\nconst sliderValueFormatContext = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createContext)(()=>({}));\nclass SliderController extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    onSetup() {\n        this._media = useMediaContext();\n        const focus = new FocusVisibleController();\n        focus.attach(this);\n        this.$state.focused = focus.focused.bind(focus);\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(sliderValueFormatContext)) {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(sliderValueFormatContext, {\n                default: \"value\"\n            });\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(sliderContext, {\n            _orientation: this.$props.orientation,\n            _disabled: this._delegate._isDisabled,\n            _preview: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null)\n        });\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchValue.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchStep.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchDisabled.bind(this));\n        this._setupAttrs();\n        new SliderEventsController(this._delegate, this._media).attach(this);\n        new IntersectionObserverController({\n            callback: this._onIntersectionChange.bind(this)\n        }).attach(this);\n    }\n    onAttach(el) {\n        setAttributeIfEmpty(el, \"role\", \"slider\");\n        setAttributeIfEmpty(el, \"tabindex\", \"0\");\n        setAttributeIfEmpty(el, \"autocomplete\", \"off\");\n        if (IS_SERVER) this._watchCSSVars();\n        else (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchCSSVars.bind(this));\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(observeVisibility(el, this._isVisible.set));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHidden.bind(this));\n    }\n    _onIntersectionChange(entries) {\n        this._isIntersecting.set(entries[0].isIntersecting);\n    }\n    // -------------------------------------------------------------------------------------------\n    // Watch\n    // -------------------------------------------------------------------------------------------\n    _watchHidden() {\n        const { hidden } = this.$props;\n        this.$state.hidden.set(hidden() || !this._isVisible() || !this._isIntersecting.bind(this));\n    }\n    _watchValue() {\n        const { dragging, value, min, max } = this.$state;\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(dragging)) return;\n        value.set(getClampedValue(min(), max(), value(), this._delegate._getStep()));\n    }\n    _watchStep() {\n        this.$state.step.set(this._delegate._getStep());\n    }\n    _watchDisabled() {\n        if (!this._delegate._isDisabled()) return;\n        const { dragging, pointing } = this.$state;\n        dragging.set(false);\n        pointing.set(false);\n    }\n    // -------------------------------------------------------------------------------------------\n    // ARIA\n    // -------------------------------------------------------------------------------------------\n    _getARIADisabled() {\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ariaBool)(this._delegate._isDisabled());\n    }\n    // -------------------------------------------------------------------------------------------\n    // Attributes\n    // -------------------------------------------------------------------------------------------\n    _setupAttrs() {\n        const { orientation } = this.$props, { dragging, active, pointing } = this.$state;\n        var _this__delegate__getARIAValueMin, _this__delegate__getARIAValueMax;\n        this.setAttributes({\n            \"data-dragging\": dragging,\n            \"data-pointing\": pointing,\n            \"data-active\": active,\n            \"aria-disabled\": this._getARIADisabled.bind(this),\n            \"aria-valuemin\": (_this__delegate__getARIAValueMin = this._delegate._getARIAValueMin) !== null && _this__delegate__getARIAValueMin !== void 0 ? _this__delegate__getARIAValueMin : this.$state.min,\n            \"aria-valuemax\": (_this__delegate__getARIAValueMax = this._delegate._getARIAValueMax) !== null && _this__delegate__getARIAValueMax !== void 0 ? _this__delegate__getARIAValueMax : this.$state.max,\n            \"aria-valuenow\": this._delegate._getARIAValueNow,\n            \"aria-valuetext\": this._delegate._getARIAValueText,\n            \"aria-orientation\": orientation\n        });\n    }\n    _watchCSSVars() {\n        const { fillPercent, pointerPercent } = this.$state;\n        this._updateSliderVars(round(fillPercent(), 3), round(pointerPercent(), 3));\n    }\n    constructor(_delegate){\n        super();\n        this._delegate = _delegate;\n        this._isVisible = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(true);\n        this._isIntersecting = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(true);\n        this._updateSliderVars = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.animationFrameThrottle)((fillPercent, pointerPercent)=>{\n            var _this_el, _this_el1;\n            (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.style.setProperty(\"--slider-fill\", fillPercent + \"%\");\n            (_this_el1 = this.el) === null || _this_el1 === void 0 ? void 0 : _this_el1.style.setProperty(\"--slider-pointer\", pointerPercent + \"%\");\n        });\n    }\n}\nSliderController.props = {\n    hidden: false,\n    disabled: false,\n    step: 1,\n    keyStep: 1,\n    orientation: \"horizontal\",\n    shiftKeyMultiplier: 5\n};\nclass Slider extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchValue.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchMinMax.bind(this));\n    }\n    // -------------------------------------------------------------------------------------------\n    // Props\n    // -------------------------------------------------------------------------------------------\n    _getARIAValueNow() {\n        const { value } = this.$state;\n        return Math.round(value());\n    }\n    _getARIAValueText() {\n        const { value, max } = this.$state;\n        return round(value() / max() * 100, 2) + \"%\";\n    }\n    // -------------------------------------------------------------------------------------------\n    // Watch\n    // -------------------------------------------------------------------------------------------\n    _watchValue() {\n        const { value } = this.$props;\n        this.$state.value.set(value());\n    }\n    _watchMinMax() {\n        const { min, max } = this.$props;\n        this.$state.min.set(min());\n        this.$state.max.set(max());\n    }\n    constructor(){\n        super();\n        new SliderController({\n            _getStep: this.$props.step,\n            _getKeyStep: this.$props.keyStep,\n            _roundValue: Math.round,\n            _isDisabled: this.$props.disabled,\n            _getARIAValueNow: this._getARIAValueNow.bind(this),\n            _getARIAValueText: this._getARIAValueText.bind(this)\n        });\n    }\n}\nSlider.props = {\n    ...SliderController.props,\n    min: 0,\n    max: 100,\n    value: 0\n};\nSlider.state = sliderState;\nconst cache = /* @__PURE__ */ new Map(), pending = /* @__PURE__ */ new Map(), warned = /* @__PURE__ */ new Set();\nclass ThumbnailsLoader {\n    static create($src, $crossOrigin) {\n        const media = useMediaContext();\n        return new ThumbnailsLoader($src, $crossOrigin, media);\n    }\n    _onLoadCues() {\n        const { canLoad } = this._media.$state;\n        if (!canLoad()) return;\n        const src = this.$src();\n        if (!src) return;\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src) && cache.has(src)) {\n            const cues = cache.get(src);\n            cache.delete(src);\n            cache.set(src, cues);\n            if (cache.size > 99) {\n                const firstKey = cache.keys().next().value;\n                cache.delete(firstKey);\n            }\n            this.$images.set(cache.get(src));\n        } else if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(src)) {\n            var _pending_get;\n            const crossOrigin = this.$crossOrigin(), currentKey = src + \"::\" + crossOrigin;\n            if (!pending.has(currentKey)) {\n                const promise = new Promise(async (resolve, reject)=>{\n                    try {\n                        const response = await fetch(src, {\n                            credentials: getRequestCredentials(crossOrigin)\n                        }), isJSON = response.headers.get(\"content-type\") === \"application/json\";\n                        if (isJSON) {\n                            const json = await response.json();\n                            if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(json)) {\n                                if (json[0] && \"text\" in json[0]) {\n                                    resolve(this._processVTTCues(json));\n                                } else {\n                                    for(let i = 0; i < json.length; i++){\n                                        const image = json[i];\n                                        assert((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isObject)(image), \"Item not an object at index \".concat(i));\n                                        assert(\"url\" in image && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(image.url), \"Invalid or missing `url` property at index \".concat(i));\n                                        assert(\"startTime\" in image && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(image.startTime), \"Invalid or missing `startTime` property at index \".concat(i));\n                                    }\n                                    resolve(json);\n                                }\n                            } else {\n                                resolve(this._processStoryboard(json));\n                            }\n                            return;\n                        }\n                        __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_media-captions_dist_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! media-captions */ \"(app-pages-browser)/./node_modules/media-captions/dist/dev.js\")).then(async (param)=>{\n                            let { parseResponse } = param;\n                            try {\n                                const { cues } = await parseResponse(response);\n                                resolve(this._processVTTCues(cues));\n                            } catch (e) {\n                                reject(e);\n                            }\n                        });\n                    } catch (e) {\n                        reject(e);\n                    }\n                }).then((images)=>{\n                    cache.set(currentKey, images);\n                    return images;\n                }).catch((error)=>{\n                    this._onError(src, error);\n                }).finally(()=>{\n                    if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(currentKey)) pending.delete(currentKey);\n                });\n                pending.set(currentKey, promise);\n            }\n            (_pending_get = pending.get(currentKey)) === null || _pending_get === void 0 ? void 0 : _pending_get.then((images)=>{\n                this.$images.set(images || []);\n            });\n        } else if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(src)) {\n            try {\n                this.$images.set(this._processImages(src));\n            } catch (error) {\n                this._onError(src, error);\n            }\n        } else {\n            try {\n                this.$images.set(this._processStoryboard(src));\n            } catch (error) {\n                this._onError(src, error);\n            }\n        }\n        return ()=>{\n            this.$images.set([]);\n        };\n    }\n    _processImages(images) {\n        const baseURL = this._resolveBaseUrl();\n        return images.map((img, i)=>{\n            assert(img.url && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(img.url), \"Invalid or missing `url` property at index \".concat(i));\n            assert(\"startTime\" in img && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(img.startTime), \"Invalid or missing `startTime` property at index \".concat(i));\n            return {\n                ...img,\n                url: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(img.url) ? this._resolveURL(img.url, baseURL) : img.url\n            };\n        });\n    }\n    _processStoryboard(board) {\n        var _board_tiles;\n        assert((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(board.url), \"Missing `url` in storyboard object\");\n        assert((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(board.tiles) && ((_board_tiles = board.tiles) === null || _board_tiles === void 0 ? void 0 : _board_tiles.length), \"Empty tiles in storyboard\");\n        const url = new URL(board.url), images = [];\n        const tileWidth = \"tile_width\" in board ? board.tile_width : board.tileWidth, tileHeight = \"tile_height\" in board ? board.tile_height : board.tileHeight;\n        for (const tile of board.tiles){\n            images.push({\n                url,\n                startTime: \"start\" in tile ? tile.start : tile.startTime,\n                width: tileWidth,\n                height: tileHeight,\n                coords: {\n                    x: tile.x,\n                    y: tile.y\n                }\n            });\n        }\n        return images;\n    }\n    _processVTTCues(cues) {\n        for(let i = 0; i < cues.length; i++){\n            const cue = cues[i];\n            assert(\"startTime\" in cue && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(cue.startTime), \"Invalid or missing `startTime` property at index \".concat(i));\n            assert(\"text\" in cue && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(cue.text), \"Invalid or missing `text` property at index \".concat(i));\n        }\n        const images = [], baseURL = this._resolveBaseUrl();\n        for (const cue of cues){\n            const [url, hash] = cue.text.split(\"#\"), data = this._resolveData(hash);\n            images.push({\n                url: this._resolveURL(url, baseURL),\n                startTime: cue.startTime,\n                endTime: cue.endTime,\n                width: data === null || data === void 0 ? void 0 : data.w,\n                height: data === null || data === void 0 ? void 0 : data.h,\n                coords: data && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(data.x) && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(data.y) ? {\n                    x: data.x,\n                    y: data.y\n                } : void 0\n            });\n        }\n        return images;\n    }\n    _resolveBaseUrl() {\n        let baseURL = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$src);\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(baseURL) || !/^https?:/.test(baseURL)) {\n            return location.href;\n        }\n        return baseURL;\n    }\n    _resolveURL(src, baseURL) {\n        return /^https?:/.test(src) ? new URL(src) : new URL(src, baseURL);\n    }\n    _resolveData(hash) {\n        if (!hash) return {};\n        const [hashProps, values] = hash.split(\"=\"), hashValues = values === null || values === void 0 ? void 0 : values.split(\",\"), data = {};\n        if (!hashProps || !hashValues) {\n            return null;\n        }\n        for(let i = 0; i < hashProps.length; i++){\n            const value = +hashValues[i];\n            if (!isNaN(value)) data[hashProps[i]] = value;\n        }\n        return data;\n    }\n    _onError(src, error) {\n        var _this__media_logger;\n        if (warned === null || warned === void 0 ? void 0 : warned.has(src)) return;\n        (_this__media_logger = this._media.logger) === null || _this__media_logger === void 0 ? void 0 : _this__media_logger.errorGroup(\"[vidstack] failed to load thumbnails\").labelledLog(\"Src\", src).labelledLog(\"Error\", error).dispatch();\n        warned === null || warned === void 0 ? void 0 : warned.add(src);\n    }\n    constructor($src, $crossOrigin, _media){\n        this.$src = $src;\n        this.$crossOrigin = $crossOrigin;\n        this._media = _media;\n        this.$images = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)([]);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onLoadCues.bind(this));\n    }\n}\nclass Thumbnail extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        this._loader = ThumbnailsLoader.create(this.$props.src, this.$state.crossOrigin);\n        this._watchCrossOrigin();\n        this.setAttributes({\n            \"data-loading\": this._isLoading.bind(this),\n            \"data-error\": this._hasError.bind(this),\n            \"data-hidden\": this.$state.hidden,\n            \"aria-hidden\": $ariaBool(this.$state.hidden)\n        });\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchImg.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHidden.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchCrossOrigin.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onLoadStart.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onFindActiveThumbnail.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._resize.bind(this));\n    }\n    _watchImg() {\n        const img = this.$state.img();\n        if (!img) return;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(img, \"load\", this._onLoaded.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(img, \"error\", this._onError.bind(this));\n    }\n    _watchCrossOrigin() {\n        const { crossOrigin: crossOriginProp } = this.$props, { crossOrigin: crossOriginState } = this.$state, { crossOrigin: mediaCrossOrigin } = this._media.$state, crossOrigin = crossOriginProp() !== null ? crossOriginProp() : mediaCrossOrigin();\n        crossOriginState.set(crossOrigin === true ? \"anonymous\" : crossOrigin);\n    }\n    _onLoadStart() {\n        const { src, loading, error } = this.$state;\n        if (src()) {\n            loading.set(true);\n            error.set(null);\n        }\n        return ()=>{\n            this._resetStyles();\n            loading.set(false);\n            error.set(null);\n        };\n    }\n    _onLoaded() {\n        const { loading, error } = this.$state;\n        this._resize();\n        loading.set(false);\n        error.set(null);\n    }\n    _onError(event1) {\n        const { loading, error } = this.$state;\n        loading.set(false);\n        error.set(event1);\n    }\n    _isLoading() {\n        const { loading, hidden } = this.$state;\n        return !hidden() && loading();\n    }\n    _hasError() {\n        const { error } = this.$state;\n        return !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNull)(error());\n    }\n    _watchHidden() {\n        const { hidden } = this.$state, { duration } = this._media.$state, images = this._loader.$images();\n        hidden.set(this._hasError() || !Number.isFinite(duration()) || images.length === 0);\n    }\n    _getTime() {\n        return this.$props.time();\n    }\n    _onFindActiveThumbnail() {\n        let images = this._loader.$images();\n        if (!images.length) return;\n        let time = this._getTime(), { src, activeThumbnail } = this.$state, activeIndex = -1, activeImage = null;\n        for(let i = images.length - 1; i >= 0; i--){\n            const image = images[i];\n            if (time >= image.startTime && (!image.endTime || time < image.endTime)) {\n                activeIndex = i;\n                break;\n            }\n        }\n        if (images[activeIndex]) {\n            activeImage = images[activeIndex];\n        }\n        activeThumbnail.set(activeImage);\n        src.set((activeImage === null || activeImage === void 0 ? void 0 : activeImage.url.href) || \"\");\n    }\n    _resize() {\n        if (!this.scope || this.$state.hidden()) return;\n        const rootEl = this.el, imgEl = this.$state.img(), thumbnail = this.$state.activeThumbnail();\n        if (!imgEl || !thumbnail || !rootEl) return;\n        var _thumbnail_width, _thumbnail_height;\n        let width = (_thumbnail_width = thumbnail.width) !== null && _thumbnail_width !== void 0 ? _thumbnail_width : imgEl.naturalWidth, height = (_thumbnail_height = thumbnail === null || thumbnail === void 0 ? void 0 : thumbnail.height) !== null && _thumbnail_height !== void 0 ? _thumbnail_height : imgEl.naturalHeight, { maxWidth, maxHeight, minWidth, minHeight, width: elWidth, height: elHeight } = getComputedStyle(this.el);\n        if (minWidth === \"100%\") minWidth = parseFloat(elWidth) + \"\";\n        if (minHeight === \"100%\") minHeight = parseFloat(elHeight) + \"\";\n        let minRatio = Math.max(parseInt(minWidth) / width, parseInt(minHeight) / height), maxRatio = Math.min(Math.max(parseInt(minWidth), parseInt(maxWidth)) / width, Math.max(parseInt(minHeight), parseInt(maxHeight)) / height), scale = !isNaN(maxRatio) && maxRatio < 1 ? maxRatio : minRatio > 1 ? minRatio : 1;\n        this._style(rootEl, \"--thumbnail-width\", \"\".concat(width * scale, \"px\"));\n        this._style(rootEl, \"--thumbnail-height\", \"\".concat(height * scale, \"px\"));\n        this._style(imgEl, \"width\", \"\".concat(imgEl.naturalWidth * scale, \"px\"));\n        this._style(imgEl, \"height\", \"\".concat(imgEl.naturalHeight * scale, \"px\"));\n        this._style(imgEl, \"transform\", thumbnail.coords ? \"translate(-\".concat(thumbnail.coords.x * scale, \"px, -\").concat(thumbnail.coords.y * scale, \"px)\") : \"\");\n        this._style(imgEl, \"max-width\", \"none\");\n    }\n    _style(el, name, value) {\n        el.style.setProperty(name, value);\n        this._styleResets.push(()=>el.style.removeProperty(name));\n    }\n    _resetStyles() {\n        for (const reset of this._styleResets)reset();\n        this._styleResets = [];\n    }\n    constructor(){\n        super(...arguments);\n        this._styleResets = [];\n    }\n}\nThumbnail.props = {\n    src: null,\n    time: 0,\n    crossOrigin: null\n};\nThumbnail.state = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.State({\n    src: \"\",\n    img: null,\n    thumbnails: [],\n    activeThumbnail: null,\n    crossOrigin: null,\n    loading: false,\n    error: null,\n    hidden: false\n});\nclass SliderThumbnail extends Thumbnail {\n    onAttach(el) {\n        this._slider = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useState)(Slider.state);\n    }\n    _getTime() {\n        const { duration, clipStartTime } = this._media.$state;\n        return clipStartTime() + this._slider.pointerRate() * duration();\n    }\n}\nvar __defProp$c = Object.defineProperty;\nvar __getOwnPropDesc$c = Object.getOwnPropertyDescriptor;\nvar __decorateClass$c = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$c(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$c(target, key, result);\n    return result;\n};\nclass SliderVideo extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get video() {\n        return this.$state.video();\n    }\n    onSetup() {\n        this._media = useMediaContext();\n        this._slider = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useState)(Slider.state);\n        this._watchCrossOrigin();\n        this.setAttributes({\n            \"data-loading\": this._isLoading.bind(this),\n            \"data-hidden\": this.$state.hidden,\n            \"data-error\": this._hasError.bind(this),\n            \"aria-hidden\": $ariaBool(this.$state.hidden)\n        });\n    }\n    onAttach(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchVideo.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchSrc.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchCrossOrigin.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHidden.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onSrcChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onUpdateTime.bind(this));\n    }\n    _watchVideo() {\n        const video = this.$state.video();\n        if (!video) return;\n        if (video.readyState >= 2) this._onCanPlay();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(video, \"canplay\", this._onCanPlay.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(video, \"error\", this._onError.bind(this));\n    }\n    _watchSrc() {\n        const { src } = this.$state, { canLoad } = this._media.$state;\n        src.set(canLoad() ? this.$props.src() : null);\n    }\n    _watchCrossOrigin() {\n        const { crossOrigin: crossOriginProp } = this.$props, { crossOrigin: crossOriginState } = this.$state, { crossOrigin: mediaCrossOrigin } = this._media.$state, crossOrigin = crossOriginProp() !== null ? crossOriginProp() : mediaCrossOrigin();\n        crossOriginState.set(crossOrigin === true ? \"anonymous\" : crossOrigin);\n    }\n    _isLoading() {\n        const { canPlay, hidden } = this.$state;\n        return !canPlay() && !hidden();\n    }\n    _hasError() {\n        const { error } = this.$state;\n        return !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNull)(error);\n    }\n    _watchHidden() {\n        const { src, hidden } = this.$state, { canLoad, duration } = this._media.$state;\n        hidden.set(canLoad() && (!src() || this._hasError() || !Number.isFinite(duration())));\n    }\n    _onSrcChange() {\n        const { src, canPlay, error } = this.$state;\n        src();\n        canPlay.set(false);\n        error.set(null);\n    }\n    _onCanPlay(event1) {\n        const { canPlay, error } = this.$state;\n        canPlay.set(true);\n        error.set(null);\n        this.dispatch(\"can-play\", {\n            trigger: event1\n        });\n    }\n    _onError(event1) {\n        const { canPlay, error } = this.$state;\n        canPlay.set(false);\n        error.set(event1);\n        this.dispatch(\"error\", {\n            trigger: event1\n        });\n    }\n    _onUpdateTime() {\n        const { video, canPlay } = this.$state, { duration } = this._media.$state, { pointerRate } = this._slider, media = video(), canUpdate = canPlay() && media && Number.isFinite(duration()) && Number.isFinite(pointerRate());\n        if (canUpdate) {\n            media.currentTime = pointerRate() * duration();\n        }\n    }\n}\nSliderVideo.props = {\n    src: null,\n    crossOrigin: null\n};\nSliderVideo.state = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.State({\n    video: null,\n    src: null,\n    crossOrigin: null,\n    canPlay: false,\n    error: null,\n    hidden: false\n});\n__decorateClass$c([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], SliderVideo.prototype, \"video\");\nvar __defProp$b = Object.defineProperty;\nvar __getOwnPropDesc$b = Object.getOwnPropertyDescriptor;\nvar __decorateClass$b = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$b(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$b(target, key, result);\n    return result;\n};\nclass SliderValue extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._slider = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useState)(Slider.state);\n        this._format = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(sliderValueFormatContext);\n        this._text = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.computed)(this.getValueText.bind(this));\n    }\n    getValueText() {\n        var _format;\n        const { type, format, decimalPlaces, padHours, padMinutes, showHours, showMs } = this.$props, { value: sliderValue, pointerValue, min, max } = this._slider, _format1 = (_format = format === null || format === void 0 ? void 0 : format()) !== null && _format !== void 0 ? _format : this._format.default;\n        const value = type() === \"current\" ? sliderValue() : pointerValue();\n        if (_format1 === \"percent\") {\n            const range = max() - min();\n            const percent = value / range * 100;\n            var _this__format_percent;\n            return ((_this__format_percent = this._format.percent) !== null && _this__format_percent !== void 0 ? _this__format_percent : round)(percent, decimalPlaces()) + \"%\";\n        } else if (_format1 === \"time\") {\n            var _this__format_time;\n            return ((_this__format_time = this._format.time) !== null && _this__format_time !== void 0 ? _this__format_time : formatTime)(value, {\n                padHrs: padHours(),\n                padMins: padMinutes(),\n                showHrs: showHours(),\n                showMs: showMs()\n            });\n        } else {\n            var _this__format_value, _this__format;\n            var _this__format_value1;\n            return ((_this__format_value1 = (_this__format_value = (_this__format = this._format).value) === null || _this__format_value === void 0 ? void 0 : _this__format_value.call(_this__format, value)) !== null && _this__format_value1 !== void 0 ? _this__format_value1 : value.toFixed(2)) + \"\";\n        }\n    }\n}\nSliderValue.props = {\n    type: \"pointer\",\n    format: null,\n    showHours: false,\n    showMs: false,\n    padHours: null,\n    padMinutes: null,\n    decimalPlaces: 2\n};\n__decorateClass$b([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], SliderValue.prototype, \"getValueText\");\nclass SliderPreview extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._slider = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(sliderContext);\n        const { active } = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useState)(Slider.state);\n        this.setAttributes({\n            \"data-visible\": active\n        });\n    }\n    onAttach(el) {\n        Object.assign(el.style, {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"max-content\"\n        });\n    }\n    onConnect(el) {\n        const { _preview } = this._slider;\n        _preview.set(el);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>_preview.set(null));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._updatePlacement.bind(this));\n        const resize = new ResizeObserver(this._updatePlacement.bind(this));\n        resize.observe(el);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>resize.disconnect());\n    }\n    constructor(){\n        super(...arguments);\n        this._updatePlacement = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.animationFrameThrottle)(()=>{\n            const { _disabled, _orientation } = this._slider;\n            if (_disabled()) return;\n            const el = this.el, { offset, noClamp } = this.$props;\n            if (!el) return;\n            updateSliderPreviewPlacement(el, {\n                clamp: !noClamp(),\n                offset: offset(),\n                orientation: _orientation()\n            });\n        });\n    }\n}\nSliderPreview.props = {\n    offset: 0,\n    noClamp: false\n};\nfunction updateSliderPreviewPlacement(el, param) {\n    let { clamp, offset, orientation } = param;\n    const computedStyle = getComputedStyle(el), width = parseFloat(computedStyle.width), height = parseFloat(computedStyle.height), styles = {\n        top: null,\n        right: null,\n        bottom: null,\n        left: null\n    };\n    styles[orientation === \"horizontal\" ? \"bottom\" : \"left\"] = \"calc(100% + var(--media-slider-preview-offset, \".concat(offset, \"px))\");\n    if (orientation === \"horizontal\") {\n        const widthHalf = width / 2;\n        if (!clamp) {\n            styles.left = \"calc(var(--slider-pointer) - \".concat(widthHalf, \"px)\");\n        } else {\n            const leftClamp = \"max(0px, calc(var(--slider-pointer) - \".concat(widthHalf, \"px))\"), rightClamp = \"calc(100% - \".concat(width, \"px)\");\n            styles.left = \"min(\".concat(leftClamp, \", \").concat(rightClamp, \")\");\n        }\n    } else {\n        const heightHalf = height / 2;\n        if (!clamp) {\n            styles.bottom = \"calc(var(--slider-pointer) - \".concat(heightHalf, \"px)\");\n        } else {\n            const topClamp = \"max(\".concat(heightHalf, \"px, calc(var(--slider-pointer) - \").concat(heightHalf, \"px))\"), bottomClamp = \"calc(100% - \".concat(height, \"px)\");\n            styles.bottom = \"min(\".concat(topClamp, \", \").concat(bottomClamp, \")\");\n        }\n    }\n    Object.assign(el.style, styles);\n}\nclass VolumeSlider extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        const { audioGain } = this._media.$state;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(sliderValueFormatContext, {\n            default: \"percent\",\n            value (value) {\n                var _audioGain;\n                return (value * ((_audioGain = audioGain()) !== null && _audioGain !== void 0 ? _audioGain : 1)).toFixed(2);\n            },\n            percent (value) {\n                var _audioGain;\n                return Math.round(value * ((_audioGain = audioGain()) !== null && _audioGain !== void 0 ? _audioGain : 1));\n            }\n        });\n        new SliderController({\n            _getStep: this.$props.step,\n            _getKeyStep: this.$props.keyStep,\n            _roundValue: Math.round,\n            _isDisabled: this._isDisabled.bind(this),\n            _getARIAValueMax: this._getARIAValueMax.bind(this),\n            _getARIAValueNow: this._getARIAValueNow.bind(this),\n            _getARIAValueText: this._getARIAValueText.bind(this),\n            _onDragValueChange: this._onDragValueChange.bind(this),\n            _onValueChange: this._onValueChange.bind(this)\n        }).attach(this);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchVolume.bind(this));\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-volume-slider\", \"\");\n        setAttributeIfEmpty(el, \"aria-label\", \"Volume\");\n        const { canSetVolume } = this._media.$state;\n        this.setAttributes({\n            \"data-supported\": canSetVolume,\n            \"aria-hidden\": $ariaBool(()=>!canSetVolume())\n        });\n    }\n    _getARIAValueNow() {\n        const { value } = this.$state, { audioGain } = this._media.$state;\n        var _audioGain;\n        return Math.round(value() * ((_audioGain = audioGain()) !== null && _audioGain !== void 0 ? _audioGain : 1));\n    }\n    _getARIAValueText() {\n        const { value, max } = this.$state, { audioGain } = this._media.$state;\n        var _audioGain;\n        return round(value() / max() * ((_audioGain = audioGain()) !== null && _audioGain !== void 0 ? _audioGain : 1) * 100, 2) + \"%\";\n    }\n    _getARIAValueMax() {\n        const { audioGain } = this._media.$state;\n        var _audioGain;\n        return this.$state.max() * ((_audioGain = audioGain()) !== null && _audioGain !== void 0 ? _audioGain : 1);\n    }\n    _isDisabled() {\n        const { disabled } = this.$props, { canSetVolume } = this._media.$state;\n        return disabled() || !canSetVolume();\n    }\n    _watchVolume() {\n        const { muted, volume } = this._media.$state;\n        const newValue = muted() ? 0 : volume() * 100;\n        this.$state.value.set(newValue);\n        this.dispatch(\"value-change\", {\n            detail: newValue\n        });\n    }\n    _onVolumeChange(event1) {\n        if (!event1.trigger) return;\n        const mediaVolume = round(event1.detail / 100, 3);\n        this._media.remote.changeVolume(mediaVolume, event1);\n    }\n    _onValueChange(event1) {\n        this._throttleVolumeChange(event1);\n    }\n    _onDragValueChange(event1) {\n        this._throttleVolumeChange(event1);\n    }\n    constructor(){\n        super(...arguments);\n        this._throttleVolumeChange = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.functionThrottle)(this._onVolumeChange.bind(this), 25);\n    }\n}\nVolumeSlider.props = {\n    ...SliderController.props,\n    keyStep: 5,\n    shiftKeyMultiplier: 2\n};\nVolumeSlider.state = sliderState;\nclass AudioGainSlider extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(sliderValueFormatContext, {\n            default: \"percent\",\n            percent: (_, decimalPlaces)=>{\n                return round(this.$state.value(), decimalPlaces) + \"%\";\n            }\n        });\n        new SliderController({\n            _getStep: this.$props.step,\n            _getKeyStep: this.$props.keyStep,\n            _roundValue: Math.round,\n            _isDisabled: this._isDisabled.bind(this),\n            _getARIAValueNow: this._getARIAValueNow.bind(this),\n            _getARIAValueText: this._getARIAValueText.bind(this),\n            _onDragValueChange: this._onDragValueChange.bind(this),\n            _onValueChange: this._onValueChange.bind(this)\n        }).attach(this);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchMinMax.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchAudioGain.bind(this));\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-audio-gain-slider\", \"\");\n        setAttributeIfEmpty(el, \"aria-label\", \"Audio Boost\");\n        const { canSetAudioGain } = this._media.$state;\n        this.setAttributes({\n            \"data-supported\": canSetAudioGain,\n            \"aria-hidden\": $ariaBool(()=>!canSetAudioGain())\n        });\n    }\n    _getARIAValueNow() {\n        const { value } = this.$state;\n        return Math.round(value());\n    }\n    _getARIAValueText() {\n        const { value } = this.$state;\n        return value() + \"%\";\n    }\n    _watchMinMax() {\n        const { min, max } = this.$props;\n        this.$state.min.set(min());\n        this.$state.max.set(max());\n    }\n    _watchAudioGain() {\n        var _audioGain;\n        const { audioGain } = this._media.$state, value = (((_audioGain = audioGain()) !== null && _audioGain !== void 0 ? _audioGain : 1) - 1) * 100;\n        this.$state.value.set(value);\n        this.dispatch(\"value-change\", {\n            detail: value\n        });\n    }\n    _isDisabled() {\n        const { disabled } = this.$props, { canSetAudioGain } = this._media.$state;\n        return disabled() || !canSetAudioGain();\n    }\n    _onAudioGainChange(event1) {\n        if (!event1.trigger) return;\n        const gain = round(1 + event1.detail / 100, 2);\n        this._media.remote.changeAudioGain(gain, event1);\n    }\n    _onValueChange(event1) {\n        this._onAudioGainChange(event1);\n    }\n    _onDragValueChange(event1) {\n        this._onAudioGainChange(event1);\n    }\n}\nAudioGainSlider.props = {\n    ...SliderController.props,\n    step: 25,\n    keyStep: 25,\n    shiftKeyMultiplier: 2,\n    min: 0,\n    max: 300\n};\nAudioGainSlider.state = sliderState;\nclass SpeedSlider extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        new SliderController({\n            _getStep: this.$props.step,\n            _getKeyStep: this.$props.keyStep,\n            _roundValue: this._roundValue,\n            _isDisabled: this._isDisabled.bind(this),\n            _getARIAValueNow: this._getARIAValueNow.bind(this),\n            _getARIAValueText: this._getARIAValueText.bind(this),\n            _onDragValueChange: this._onDragValueChange.bind(this),\n            _onValueChange: this._onValueChange.bind(this)\n        }).attach(this);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchMinMax.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPlaybackRate.bind(this));\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-speed-slider\", \"\");\n        setAttributeIfEmpty(el, \"aria-label\", \"Speed\");\n        const { canSetPlaybackRate } = this._media.$state;\n        this.setAttributes({\n            \"data-supported\": canSetPlaybackRate,\n            \"aria-hidden\": $ariaBool(()=>!canSetPlaybackRate())\n        });\n    }\n    _getARIAValueNow() {\n        const { value } = this.$state;\n        return value();\n    }\n    _getARIAValueText() {\n        const { value } = this.$state;\n        return value() + \"x\";\n    }\n    _watchMinMax() {\n        const { min, max } = this.$props;\n        this.$state.min.set(min());\n        this.$state.max.set(max());\n    }\n    _watchPlaybackRate() {\n        const { playbackRate } = this._media.$state;\n        const newValue = playbackRate();\n        this.$state.value.set(newValue);\n        this.dispatch(\"value-change\", {\n            detail: newValue\n        });\n    }\n    _roundValue(value) {\n        return round(value, 2);\n    }\n    _isDisabled() {\n        const { disabled } = this.$props, { canSetPlaybackRate } = this._media.$state;\n        return disabled() || !canSetPlaybackRate();\n    }\n    _onPlaybackRateChange(event1) {\n        if (!event1.trigger) return;\n        const rate = event1.detail;\n        this._media.remote.changePlaybackRate(rate, event1);\n    }\n    _onValueChange(event1) {\n        this._throttledSpeedChange(event1);\n    }\n    _onDragValueChange(event1) {\n        this._throttledSpeedChange(event1);\n    }\n    constructor(){\n        super(...arguments);\n        this._throttledSpeedChange = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.functionThrottle)(this._onPlaybackRateChange.bind(this), 25);\n    }\n}\nSpeedSlider.props = {\n    ...SliderController.props,\n    step: 0.25,\n    keyStep: 0.25,\n    shiftKeyMultiplier: 2,\n    min: 0,\n    max: 2\n};\nSpeedSlider.state = sliderState;\nclass QualitySlider extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        new SliderController({\n            _getStep: this.$props.step,\n            _getKeyStep: this.$props.keyStep,\n            _roundValue: Math.round,\n            _isDisabled: this._isDisabled.bind(this),\n            _getARIAValueNow: this._getARIAValueNow.bind(this),\n            _getARIAValueText: this._getARIAValueText.bind(this),\n            _onDragValueChange: this._onDragValueChange.bind(this),\n            _onValueChange: this._onValueChange.bind(this)\n        }).attach(this);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchMax.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchQuality.bind(this));\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-quality-slider\", \"\");\n        setAttributeIfEmpty(el, \"aria-label\", \"Video Quality\");\n        const { qualities, canSetQuality } = this._media.$state, $supported = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.computed)(()=>canSetQuality() && qualities().length > 0);\n        this.setAttributes({\n            \"data-supported\": $supported,\n            \"aria-hidden\": $ariaBool(()=>!$supported())\n        });\n    }\n    _getARIAValueNow() {\n        const { value } = this.$state;\n        return value();\n    }\n    _getARIAValueText() {\n        const { quality } = this._media.$state;\n        if (!quality()) return \"\";\n        const { height, bitrate } = quality(), bitrateText = bitrate && bitrate > 0 ? \"\".concat((bitrate / 1e6).toFixed(2), \" Mbps\") : null;\n        return height ? \"\".concat(height, \"p\").concat(bitrateText ? \" (\".concat(bitrateText, \")\") : \"\") : \"Auto\";\n    }\n    _watchMax() {\n        const $qualities = this._sortedQualities();\n        this.$state.max.set(Math.max(0, $qualities.length - 1));\n    }\n    _watchQuality() {\n        let { quality } = this._media.$state, $qualities = this._sortedQualities(), value = Math.max(0, $qualities.indexOf(quality()));\n        this.$state.value.set(value);\n        this.dispatch(\"value-change\", {\n            detail: value\n        });\n    }\n    _isDisabled() {\n        const { disabled } = this.$props, { canSetQuality, qualities } = this._media.$state;\n        return disabled() || qualities().length <= 1 || !canSetQuality();\n    }\n    _onQualityChange(event1) {\n        if (!event1.trigger) return;\n        const { qualities } = this._media, quality = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._sortedQualities)[event1.detail];\n        this._media.remote.changeQuality(qualities.indexOf(quality), event1);\n    }\n    _onValueChange(event1) {\n        this._throttledQualityChange(event1);\n    }\n    _onDragValueChange(event1) {\n        this._throttledQualityChange(event1);\n    }\n    constructor(){\n        super(...arguments);\n        this._sortedQualities = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.computed)(()=>{\n            const { qualities } = this._media.$state;\n            return sortVideoQualities(qualities());\n        });\n        this._throttledQualityChange = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.functionThrottle)(this._onQualityChange.bind(this), 25);\n    }\n}\nQualitySlider.props = {\n    ...SliderController.props,\n    step: 1,\n    keyStep: 1,\n    shiftKeyMultiplier: 1\n};\nQualitySlider.state = sliderState;\nclass TimeSlider extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(sliderValueFormatContext, {\n            default: \"time\",\n            value: this._formatValue.bind(this),\n            time: this._formatTime.bind(this)\n        });\n        this.setAttributes({\n            \"data-chapters\": this._hasChapters.bind(this)\n        });\n        this.setStyles({\n            \"--slider-progress\": this._calcBufferedPercent.bind(this)\n        });\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchCurrentTime.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchSeekingThrottle.bind(this));\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-time-slider\", \"\");\n        setAttributeIfEmpty(el, \"aria-label\", \"Seek\");\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPreviewing.bind(this));\n        watchActiveTextTrack(this._media.textTracks, \"chapters\", this._chapter.set);\n    }\n    _calcBufferedPercent() {\n        const { bufferedEnd, duration } = this._media.$state;\n        return round(Math.min(bufferedEnd() / Math.max(duration(), 1), 1) * 100, 3) + \"%\";\n    }\n    _hasChapters() {\n        var _this__chapter;\n        const { duration } = this._media.$state;\n        return ((_this__chapter = this._chapter()) === null || _this__chapter === void 0 ? void 0 : _this__chapter.cues.length) && Number.isFinite(duration()) && duration() > 0;\n    }\n    _watchSeekingThrottle() {\n        this._dispatchSeeking = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.functionThrottle)(this._seeking.bind(this), this.$props.seekingRequestThrottle());\n    }\n    _watchCurrentTime() {\n        if (this.$state.hidden()) return;\n        const { value, dragging } = this.$state, newValue = this._getValue();\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(dragging)) {\n            value.set(newValue);\n            this.dispatch(\"value-change\", {\n                detail: newValue\n            });\n        }\n    }\n    _watchPreviewing() {\n        const player = this._media.player.el, { _preview } = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(sliderContext);\n        player && _preview() && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(player, \"data-preview\", this.$state.active());\n    }\n    _seeking(time, event1) {\n        this._media.remote.seeking(time, event1);\n    }\n    _seek(time, percent, event1) {\n        this._dispatchSeeking.cancel();\n        const { live } = this._media.$state;\n        if (live() && percent >= 99) {\n            this._media.remote.seekToLiveEdge(event1);\n            return;\n        }\n        this._media.remote.seek(time, event1);\n    }\n    _onDragStart(event1) {\n        const { pauseWhileDragging } = this.$props;\n        if (pauseWhileDragging()) {\n            const { paused } = this._media.$state;\n            this._playingBeforeDragStart = !paused();\n            this._media.remote.pause(event1);\n        }\n    }\n    _onDragValueChange(event1) {\n        this._dispatchSeeking(this._percentToTime(event1.detail), event1);\n    }\n    _onDragEnd(event1) {\n        const { seeking } = this._media.$state;\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(seeking)) this._seeking(this._percentToTime(event1.detail), event1);\n        const percent = event1.detail;\n        this._seek(this._percentToTime(percent), percent, event1);\n        const { pauseWhileDragging } = this.$props;\n        if (pauseWhileDragging() && this._playingBeforeDragStart) {\n            this._media.remote.play(event1);\n            this._playingBeforeDragStart = false;\n        }\n    }\n    _onValueChange(event1) {\n        const { dragging } = this.$state;\n        if (dragging() || !event1.trigger) return;\n        this._onDragEnd(event1);\n    }\n    // -------------------------------------------------------------------------------------------\n    // Props\n    // -------------------------------------------------------------------------------------------\n    _getValue() {\n        const { currentTime } = this._media.$state;\n        return this._timeToPercent(currentTime());\n    }\n    _getStep() {\n        const value = this.$props.step() / this._media.$state.duration() * 100;\n        return Number.isFinite(value) ? value : 1;\n    }\n    _getKeyStep() {\n        const value = this.$props.keyStep() / this._media.$state.duration() * 100;\n        return Number.isFinite(value) ? value : 1;\n    }\n    _roundValue(value) {\n        return round(value, 3);\n    }\n    _isDisabled() {\n        const { disabled } = this.$props, { canSeek } = this._media.$state;\n        return disabled() || !canSeek();\n    }\n    // -------------------------------------------------------------------------------------------\n    // ARIA\n    // -------------------------------------------------------------------------------------------\n    _getARIAValueNow() {\n        const { value } = this.$state;\n        return Math.round(value());\n    }\n    _getARIAValueText() {\n        const time = this._percentToTime(this.$state.value()), { duration } = this._media.$state;\n        return Number.isFinite(time) ? \"\".concat(formatSpokenTime(time), \" out of \").concat(formatSpokenTime(duration())) : \"live\";\n    }\n    // -------------------------------------------------------------------------------------------\n    // Format\n    // -------------------------------------------------------------------------------------------\n    _percentToTime(percent) {\n        const { duration } = this._media.$state;\n        return round(percent / 100 * duration(), 5);\n    }\n    _timeToPercent(time) {\n        const { liveEdge, duration } = this._media.$state, rate = Math.max(0, Math.min(1, liveEdge() ? 1 : Math.min(time, duration()) / duration()));\n        return Number.isNaN(rate) ? 0 : Number.isFinite(rate) ? rate * 100 : 100;\n    }\n    _formatValue(percent) {\n        const time = this._percentToTime(percent), { live, duration } = this._media.$state;\n        return Number.isFinite(time) ? (live() ? time - duration() : time).toFixed(0) : \"LIVE\";\n    }\n    _formatTime(percent, options) {\n        const time = this._percentToTime(percent), { live, duration } = this._media.$state, value = live() ? time - duration() : time;\n        return Number.isFinite(time) ? \"\".concat(value < 0 ? \"-\" : \"\").concat(formatTime(Math.abs(value), options)) : \"LIVE\";\n    }\n    constructor(){\n        super();\n        this._chapter = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null);\n        this._playingBeforeDragStart = false;\n        const { noSwipeGesture } = this.$props;\n        new SliderController({\n            _swipeGesture: ()=>!noSwipeGesture(),\n            _getValue: this._getValue.bind(this),\n            _getStep: this._getStep.bind(this),\n            _getKeyStep: this._getKeyStep.bind(this),\n            _roundValue: this._roundValue,\n            _isDisabled: this._isDisabled.bind(this),\n            _getARIAValueNow: this._getARIAValueNow.bind(this),\n            _getARIAValueText: this._getARIAValueText.bind(this),\n            _onDragStart: this._onDragStart.bind(this),\n            _onDragValueChange: this._onDragValueChange.bind(this),\n            _onDragEnd: this._onDragEnd.bind(this),\n            _onValueChange: this._onValueChange.bind(this)\n        });\n    }\n}\nTimeSlider.props = {\n    ...SliderController.props,\n    step: 0.1,\n    keyStep: 5,\n    shiftKeyMultiplier: 2,\n    pauseWhileDragging: false,\n    noSwipeGesture: false,\n    seekingRequestThrottle: 100\n};\nTimeSlider.state = sliderState;\nvar __defProp$a = Object.defineProperty;\nvar __getOwnPropDesc$a = Object.getOwnPropertyDescriptor;\nvar __decorateClass$a = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$a(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$a(target, key, result);\n    return result;\n};\nclass SliderChapters extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get cues() {\n        return this._$cues();\n    }\n    get activeCue() {\n        return this._$cues()[this._activeIndex()] || null;\n    }\n    get activePointerCue() {\n        return this._$cues()[this._activePointerIndex()] || null;\n    }\n    onSetup() {\n        this._media = useMediaContext();\n        this._sliderState = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useState)(TimeSlider.state);\n    }\n    onAttach(el) {\n        watchActiveTextTrack(this._media.textTracks, \"chapters\", this._setTrack.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchSource.bind(this));\n    }\n    onConnect() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>this._reset.bind(this));\n    }\n    onDestroy() {\n        this._setTrack(null);\n    }\n    setRefs(refs) {\n        var _this__updateScope;\n        this._refs = refs;\n        (_this__updateScope = this._updateScope) === null || _this__updateScope === void 0 ? void 0 : _this__updateScope.dispose();\n        if (this._refs.length === 1) {\n            const el = this._refs[0];\n            el.style.width = \"100%\";\n            el.style.setProperty(\"--chapter-fill\", \"var(--slider-fill)\");\n            el.style.setProperty(\"--chapter-progress\", \"var(--slider-progress)\");\n        } else if (this._refs.length > 0) {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.scoped)(()=>this._watch(), this._updateScope = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createScope)());\n        }\n    }\n    _setTrack(track) {\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._$track) === track) return;\n        this._reset();\n        this._$track.set(track);\n    }\n    _reset() {\n        var _this__updateScope;\n        this._refs = [];\n        this._$cues.set([]);\n        this._activeIndex.set(-1);\n        this._activePointerIndex.set(-1);\n        this._bufferedIndex = 0;\n        (_this__updateScope = this._updateScope) === null || _this__updateScope === void 0 ? void 0 : _this__updateScope.dispose();\n    }\n    _watch() {\n        if (!this._refs.length) return;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchUpdates.bind(this));\n    }\n    _watchUpdates() {\n        const { hidden } = this._sliderState;\n        if (hidden()) return;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchContainerWidths.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchFillPercent.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPointerPercent.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchBufferedPercent.bind(this));\n    }\n    _watchContainerWidths() {\n        const cues = this._$cues();\n        if (!cues.length) return;\n        let cue, { clipStartTime, clipEndTime } = this._media.$state, startTime = clipStartTime(), endTime = clipEndTime() || cues[cues.length - 1].endTime, duration = endTime - startTime, remainingWidth = 100;\n        for(let i = 0; i < cues.length; i++){\n            cue = cues[i];\n            if (this._refs[i]) {\n                const width = i === cues.length - 1 ? remainingWidth : round((cue.endTime - Math.max(startTime, cue.startTime)) / duration * 100, 3);\n                this._refs[i].style.width = width + \"%\";\n                remainingWidth -= width;\n            }\n        }\n    }\n    _watchFillPercent() {\n        let { liveEdge, clipStartTime, duration } = this._media.$state, { fillPercent, value } = this._sliderState, cues = this._$cues(), isLiveEdge = liveEdge(), prevActiveIndex = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._activeIndex), currentChapter = cues[prevActiveIndex];\n        let currentActiveIndex = isLiveEdge ? this._$cues.length - 1 : this._findActiveChapterIndex(currentChapter ? currentChapter.startTime / duration() * 100 <= (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(value) ? prevActiveIndex : 0 : 0, fillPercent());\n        if (isLiveEdge || !currentChapter) {\n            this._updateFillPercents(0, cues.length, 100);\n        } else if (currentActiveIndex > prevActiveIndex) {\n            this._updateFillPercents(prevActiveIndex, currentActiveIndex, 100);\n        } else if (currentActiveIndex < prevActiveIndex) {\n            this._updateFillPercents(currentActiveIndex + 1, prevActiveIndex + 1, 0);\n        }\n        const percent = isLiveEdge ? 100 : this._calcPercent(cues[currentActiveIndex], fillPercent(), clipStartTime(), this._getEndTime(cues));\n        this._updateFillPercent(this._refs[currentActiveIndex], percent);\n        this._activeIndex.set(currentActiveIndex);\n    }\n    _watchPointerPercent() {\n        let { pointing, pointerPercent } = this._sliderState;\n        if (!pointing()) {\n            this._activePointerIndex.set(-1);\n            return;\n        }\n        const activeIndex = this._findActiveChapterIndex(0, pointerPercent());\n        this._activePointerIndex.set(activeIndex);\n    }\n    _updateFillPercents(start, end, percent) {\n        for(let i = start; i < end; i++)this._updateFillPercent(this._refs[i], percent);\n    }\n    _updateFillPercent(ref, percent) {\n        if (!ref) return;\n        ref.style.setProperty(\"--chapter-fill\", percent + \"%\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(ref, \"data-active\", percent > 0 && percent < 100);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(ref, \"data-ended\", percent === 100);\n    }\n    _findActiveChapterIndex(startIndex, percent) {\n        let chapterPercent = 0, cues = this._$cues();\n        if (percent === 0) return 0;\n        else if (percent === 100) return cues.length - 1;\n        let { clipStartTime } = this._media.$state, startTime = clipStartTime(), endTime = this._getEndTime(cues);\n        for(let i = startIndex; i < cues.length; i++){\n            chapterPercent = this._calcPercent(cues[i], percent, startTime, endTime);\n            if (chapterPercent >= 0 && chapterPercent < 100) return i;\n        }\n        return 0;\n    }\n    _watchBufferedPercent() {\n        this._updateBufferedPercent(this._bufferedPercent());\n    }\n    _calcMediaBufferedPercent() {\n        const { bufferedEnd, duration } = this._media.$state;\n        return round(Math.min(bufferedEnd() / Math.max(duration(), 1), 1), 3) * 100;\n    }\n    _getEndTime(cues) {\n        var _cues_;\n        const { clipEndTime } = this._media.$state, endTime = clipEndTime();\n        return endTime > 0 ? endTime : ((_cues_ = cues[cues.length - 1]) === null || _cues_ === void 0 ? void 0 : _cues_.endTime) || 0;\n    }\n    _calcPercent(cue, percent, startTime, endTime) {\n        const cues = this._$cues();\n        if (cues.length === 0) return 0;\n        const duration = endTime - startTime, cueStartTime = Math.max(0, cue.startTime - startTime), cueEndTime = Math.min(endTime, cue.endTime) - startTime;\n        const startRatio = cueStartTime / duration, startPercent = startRatio * 100, endPercent = Math.min(1, startRatio + (cueEndTime - cueStartTime) / duration) * 100;\n        return Math.max(0, round(percent >= endPercent ? 100 : (percent - startPercent) / (endPercent - startPercent) * 100, 3));\n    }\n    _fillGaps(cues) {\n        let chapters = [], { clipStartTime, clipEndTime, duration } = this._media.$state, startTime = clipStartTime(), endTime = clipEndTime() || Infinity;\n        cues = cues.filter((cue)=>cue.startTime <= endTime && cue.endTime >= startTime);\n        const firstCue = cues[0];\n        if (firstCue && firstCue.startTime > startTime) {\n            chapters.push(new window.VTTCue(startTime, firstCue.startTime, \"\"));\n        }\n        for(let i = 0; i < cues.length - 1; i++){\n            const currentCue = cues[i], nextCue = cues[i + 1];\n            chapters.push(currentCue);\n            if (nextCue) {\n                const timeDiff = nextCue.startTime - currentCue.endTime;\n                if (timeDiff > 0) {\n                    chapters.push(new window.VTTCue(currentCue.endTime, currentCue.endTime + timeDiff, \"\"));\n                }\n            }\n        }\n        const lastCue = cues[cues.length - 1];\n        if (lastCue) {\n            chapters.push(lastCue);\n            const endTime2 = duration();\n            if (endTime2 >= 0 && endTime2 - lastCue.endTime > 1) {\n                chapters.push(new window.VTTCue(lastCue.endTime, duration(), \"\"));\n            }\n        }\n        return chapters;\n    }\n    _watchSource() {\n        const { source } = this._media.$state;\n        source();\n        this._onTrackChange();\n    }\n    _onTrackChange() {\n        if (!this.scope) return;\n        const { disabled } = this.$props;\n        if (disabled()) {\n            this._$cues.set([]);\n            this._activeIndex.set(0);\n            this._bufferedIndex = 0;\n            return;\n        }\n        const track = this._$track();\n        if (track) {\n            const onCuesChange = this._onCuesChange.bind(this);\n            onCuesChange();\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"add-cue\", onCuesChange));\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"remove-cue\", onCuesChange));\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchMediaDuration.bind(this));\n        }\n        this._titleRef = this._findChapterTitleRef();\n        if (this._titleRef) (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onChapterTitleChange.bind(this));\n        return ()=>{\n            if (this._titleRef) {\n                this._titleRef.textContent = \"\";\n                this._titleRef = null;\n            }\n        };\n    }\n    _watchMediaDuration() {\n        this._media.$state.duration();\n        this._onCuesChange();\n    }\n    _onChapterTitleChange() {\n        const cue = this.activePointerCue || this.activeCue;\n        if (this._titleRef) this._titleRef.textContent = (cue === null || cue === void 0 ? void 0 : cue.text) || \"\";\n    }\n    _findParentSlider() {\n        let node = this.el;\n        while(node && node.getAttribute(\"role\") !== \"slider\"){\n            node = node.parentElement;\n        }\n        return node;\n    }\n    _findChapterTitleRef() {\n        const slider = this._findParentSlider();\n        return slider ? slider.querySelector('[data-part=\"chapter-title\"]') : null;\n    }\n    constructor(){\n        super(...arguments);\n        this._titleRef = null;\n        this._refs = [];\n        this._$track = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null);\n        this._$cues = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)([]);\n        this._activeIndex = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(-1);\n        this._activePointerIndex = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(-1);\n        this._bufferedIndex = 0;\n        this._updateBufferedPercent = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.animationFrameThrottle)((bufferedPercent)=>{\n            let percent, cues = this._$cues(), { clipStartTime } = this._media.$state, startTime = clipStartTime(), endTime = this._getEndTime(cues);\n            for(let i = this._bufferedIndex; i < this._refs.length; i++){\n                var _this__refs_i;\n                percent = this._calcPercent(cues[i], bufferedPercent, startTime, endTime);\n                (_this__refs_i = this._refs[i]) === null || _this__refs_i === void 0 ? void 0 : _this__refs_i.style.setProperty(\"--chapter-progress\", percent + \"%\");\n                if (percent < 100) {\n                    this._bufferedIndex = i;\n                    break;\n                }\n            }\n        });\n        this._bufferedPercent = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.computed)(this._calcMediaBufferedPercent.bind(this));\n        this._onCuesChange = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.functionDebounce)(()=>{\n            const track = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._$track);\n            if (!this.scope || !track || !track.cues.length) return;\n            this._$cues.set(this._fillGaps(track.cues));\n            this._activeIndex.set(0);\n            this._bufferedIndex = 0;\n        }, 150, true);\n    }\n}\nSliderChapters.props = {\n    disabled: false\n};\n__decorateClass$a([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], SliderChapters.prototype, \"cues\");\n__decorateClass$a([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], SliderChapters.prototype, \"activeCue\");\n__decorateClass$a([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], SliderChapters.prototype, \"activePointerCue\");\n__decorateClass$a([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], SliderChapters.prototype, \"setRefs\");\nconst menuContext = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction scrollIntoView(el, options) {\n    const scrolls = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.r)(el, options);\n    for (const { el: el2, top, left } of scrolls){\n        el2.scroll({\n            top,\n            left,\n            behavior: options.behavior\n        });\n    }\n}\nfunction scrollIntoCenter(el) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    scrollIntoView(el, {\n        scrollMode: \"if-needed\",\n        block: \"center\",\n        inline: \"center\",\n        ...options\n    });\n}\nconst FOCUSABLE_ELEMENTS_SELECTOR = /* @__PURE__ */ [\n    \"a[href]\",\n    \"[tabindex]\",\n    \"input\",\n    \"select\",\n    \"button\"\n].map((selector)=>\"\".concat(selector, \":not([aria-hidden='true'])\")).join(\",\");\nconst VALID_KEYS = /* @__PURE__ */ new Set([\n    \"Escape\",\n    \"Tab\",\n    \"ArrowUp\",\n    \"ArrowDown\",\n    \"Home\",\n    \"PageUp\",\n    \"End\",\n    \"PageDown\",\n    \"Enter\",\n    \" \"\n]);\nclass MenuFocusController {\n    get _items() {\n        return this._elements;\n    }\n    _attachMenu(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(el, \"focus\", this._onFocus.bind(this));\n        this._el = el;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n            this._el = null;\n        });\n    }\n    _listen() {\n        if (!this._el) return;\n        this._update();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._el, \"keyup\", this._onKeyUp.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._el, \"keydown\", this._onKeyDown.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n            this._index = -1;\n            this._elements = [];\n        });\n    }\n    _update() {\n        this._index = 0;\n        this._elements = this._getFocusableElements();\n    }\n    _scroll() {\n        let index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._findActiveIndex();\n        const element = this._elements[index];\n        if (element) {\n            requestAnimationFrame(()=>{\n                requestAnimationFrame(()=>{\n                    scrollIntoCenter(element, {\n                        behavior: \"smooth\",\n                        boundary: (el)=>{\n                            return !el.hasAttribute(\"data-root\");\n                        }\n                    });\n                });\n            });\n        }\n    }\n    _focusActive() {\n        let scroll = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n        const index = this._findActiveIndex();\n        this._focusAt(index >= 0 ? index : 0, scroll);\n    }\n    _focusAt(index) {\n        let scroll = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        this._index = index;\n        if (this._elements[index]) {\n            this._elements[index].focus({\n                preventScroll: true\n            });\n            if (scroll) this._scroll(index);\n        } else {\n            var _this__el;\n            (_this__el = this._el) === null || _this__el === void 0 ? void 0 : _this__el.focus({\n                preventScroll: true\n            });\n        }\n    }\n    _findActiveIndex() {\n        return this._elements.findIndex((el)=>document.activeElement === el || el.getAttribute(\"role\") === \"menuitemradio\" && el.getAttribute(\"aria-checked\") === \"true\");\n    }\n    _onFocus() {\n        if (this._index >= 0) return;\n        this._update();\n        this._focusActive();\n    }\n    _validateKeyEvent(event1) {\n        const el = event1.target;\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.wasEnterKeyPressed)(event1) && el instanceof Element) {\n            const role = el.getAttribute(\"role\");\n            return !/a|input|select|button/.test(el.localName) && !role;\n        }\n        return VALID_KEYS.has(event1.key);\n    }\n    _onKeyUp(event1) {\n        if (!this._validateKeyEvent(event1)) return;\n        event1.stopPropagation();\n        event1.preventDefault();\n    }\n    _onKeyDown(event1) {\n        if (!this._validateKeyEvent(event1)) return;\n        event1.stopPropagation();\n        event1.preventDefault();\n        switch(event1.key){\n            case \"Escape\":\n                this._delegate._closeMenu(event1);\n                break;\n            case \"Tab\":\n                this._focusAt(this._nextIndex(event1.shiftKey ? -1 : 1));\n                break;\n            case \"ArrowUp\":\n                this._focusAt(this._nextIndex(-1));\n                break;\n            case \"ArrowDown\":\n                this._focusAt(this._nextIndex(1));\n                break;\n            case \"Home\":\n            case \"PageUp\":\n                this._focusAt(0);\n                break;\n            case \"End\":\n            case \"PageDown\":\n                this._focusAt(this._elements.length - 1);\n                break;\n        }\n    }\n    _nextIndex(delta) {\n        var _this__elements_index;\n        let index = this._index;\n        do {\n            index = (index + delta + this._elements.length) % this._elements.length;\n        }while (((_this__elements_index = this._elements[index]) === null || _this__elements_index === void 0 ? void 0 : _this__elements_index.offsetParent) === null);\n        return index;\n    }\n    _getFocusableElements() {\n        if (!this._el) return [];\n        const focusableElements = this._el.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR), elements = [];\n        const is = (node)=>{\n            return node.getAttribute(\"role\") === \"menu\";\n        };\n        for (const el of focusableElements){\n            if (isHTMLElement(el) && el.offsetParent !== null && // does not have display: none\n            isElementParent(this._el, el, is)) {\n                elements.push(el);\n            }\n        }\n        return elements;\n    }\n    constructor(_delegate){\n        this._delegate = _delegate;\n        this._index = -1;\n        this._el = null;\n        this._elements = [];\n    }\n}\nvar __defProp$9 = Object.defineProperty;\nvar __getOwnPropDesc$9 = Object.getOwnPropertyDescriptor;\nvar __decorateClass$9 = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$9(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$9(target, key, result);\n    return result;\n};\nlet idCount = 0;\nclass Menu extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get triggerElement() {\n        return this._trigger();\n    }\n    get contentElement() {\n        return this._content();\n    }\n    get isSubmenu() {\n        return !!this._parentMenu;\n    }\n    onSetup() {\n        this._media = useMediaContext();\n        const currentIdCount = ++idCount;\n        this._menuId = \"media-menu-\".concat(currentIdCount);\n        this._menuButtonId = \"media-menu-button-\".concat(currentIdCount);\n        this._focus = new MenuFocusController({\n            _closeMenu: this.close.bind(this)\n        });\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(menuContext)) {\n            this._parentMenu = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(menuContext);\n        }\n        this._observeSliders();\n        this.setAttributes({\n            \"data-open\": this._expanded,\n            \"data-root\": !this.isSubmenu,\n            \"data-submenu\": this.isSubmenu,\n            \"data-disabled\": this._isDisabled.bind(this)\n        });\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(menuContext, {\n            _button: this._trigger,\n            _content: this._content,\n            _expanded: this._expanded,\n            _hint: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(\"\"),\n            _submenu: !!this._parentMenu,\n            _disable: this._disable.bind(this),\n            _attachMenuButton: this._attachMenuButton.bind(this),\n            _attachMenuItems: this._attachMenuItems.bind(this),\n            _attachObserver: this._attachObserver.bind(this),\n            _disableMenuButton: this._disableMenuButton.bind(this),\n            _addSubmenu: this._addSubmenu.bind(this),\n            _onTransitionEvent: (callback)=>{\n                this._transitionCallbacks.add(callback);\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n                    this._transitionCallbacks.delete(callback);\n                });\n            }\n        });\n    }\n    onAttach(el) {\n        el.style.setProperty(\"display\", \"contents\");\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchExpanded.bind(this));\n        if (this.isSubmenu) {\n            var _this__parentMenu;\n            (_this__parentMenu = this._parentMenu) === null || _this__parentMenu === void 0 ? void 0 : _this__parentMenu._addSubmenu(this);\n        }\n    }\n    onDestroy() {\n        this._trigger.set(null);\n        this._content.set(null);\n        this._menuObserver = null;\n        this._transitionCallbacks.clear();\n    }\n    _observeSliders() {\n        let sliderActiveTimer = -1, parentSliderObserver = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(sliderObserverContext) ? (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(sliderObserverContext) : null;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(sliderObserverContext, {\n            onDragStart: ()=>{\n                var _parentSliderObserver_onDragStart;\n                parentSliderObserver === null || parentSliderObserver === void 0 ? void 0 : (_parentSliderObserver_onDragStart = parentSliderObserver.onDragStart) === null || _parentSliderObserver_onDragStart === void 0 ? void 0 : _parentSliderObserver_onDragStart.call(parentSliderObserver);\n                window.clearTimeout(sliderActiveTimer);\n                sliderActiveTimer = -1;\n                this._isSliderActive = true;\n            },\n            onDragEnd: ()=>{\n                var _parentSliderObserver_onDragEnd;\n                parentSliderObserver === null || parentSliderObserver === void 0 ? void 0 : (_parentSliderObserver_onDragEnd = parentSliderObserver.onDragEnd) === null || _parentSliderObserver_onDragEnd === void 0 ? void 0 : _parentSliderObserver_onDragEnd.call(parentSliderObserver);\n                sliderActiveTimer = window.setTimeout(()=>{\n                    this._isSliderActive = false;\n                    sliderActiveTimer = -1;\n                }, 300);\n            }\n        });\n    }\n    _watchExpanded() {\n        const expanded = this._isExpanded();\n        if (!this.isSubmenu) this._onResize();\n        this._updateMenuItemsHidden(expanded);\n        if (!expanded) return;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            const { height } = this._media.$state, content = this._content();\n            content && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(content, \"--player-height\", height() + \"px\");\n        });\n        this._focus._listen();\n        this.listen(\"pointerup\", this._onPointerUp.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(window, \"pointerup\", this._onWindowPointerUp.bind(this));\n    }\n    _attachMenuButton(button) {\n        const el = button.el, isMenuItem = this.isSubmenu, isARIADisabled = $ariaBool(this._isDisabled.bind(this));\n        setAttributeIfEmpty(el, \"tabindex\", isMenuItem ? \"-1\" : \"0\");\n        setAttributeIfEmpty(el, \"role\", isMenuItem ? \"menuitem\" : \"button\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"id\", this._menuButtonId);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"aria-haspopup\", \"menu\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"aria-expanded\", \"false\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-root\", !this.isSubmenu);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-submenu\", this.isSubmenu);\n        const watchAttrs = ()=>{\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-open\", this._expanded());\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"aria-disabled\", isARIADisabled());\n        };\n        if (IS_SERVER) watchAttrs();\n        else (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(watchAttrs);\n        this._trigger.set(el);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>{\n            this._trigger.set(null);\n        });\n    }\n    _attachMenuItems(items) {\n        const el = items.el;\n        el.style.setProperty(\"display\", \"none\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"id\", this._menuId);\n        setAttributeIfEmpty(el, \"role\", \"menu\");\n        setAttributeIfEmpty(el, \"tabindex\", \"-1\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-root\", !this.isSubmenu);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-submenu\", this.isSubmenu);\n        this._content.set(el);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>this._content.set(null));\n        const watchAttrs = ()=>(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-open\", this._expanded());\n        if (IS_SERVER) watchAttrs();\n        else (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(watchAttrs);\n        this._focus._attachMenu(el);\n        this._updateMenuItemsHidden(false);\n        const onTransition = this._onResizeTransition.bind(this);\n        if (!this.isSubmenu) {\n            items.listen(\"transitionstart\", onTransition);\n            items.listen(\"transitionend\", onTransition);\n            items.listen(\"animationend\", this._onResize);\n            items.listen(\"vds-menu-resize\", this._onResize);\n        } else {\n            var _this__parentMenu;\n            (_this__parentMenu = this._parentMenu) === null || _this__parentMenu === void 0 ? void 0 : _this__parentMenu._onTransitionEvent(onTransition);\n        }\n    }\n    _attachObserver(observer) {\n        this._menuObserver = observer;\n    }\n    _updateMenuItemsHidden(expanded) {\n        const content = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._content);\n        if (content) (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(content, \"aria-hidden\", (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ariaBool)(!expanded));\n    }\n    _disableMenuButton(disabled) {\n        this._isTriggerDisabled.set(disabled);\n    }\n    _onExpandedChange(isExpanded, event1) {\n        var _this_el;\n        this._wasKeyboardExpand = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isKeyboardEvent)(event1);\n        event1 === null || event1 === void 0 ? void 0 : event1.stopPropagation();\n        if (this._expanded() === isExpanded) return;\n        if (this._isDisabled()) {\n            if (isExpanded) this._popper.hide(event1);\n            return;\n        }\n        (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.dispatchEvent(new Event(\"vds-menu-resize\", {\n            bubbles: true,\n            composed: true\n        }));\n        const trigger = this._trigger(), content = this._content();\n        if (trigger) {\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(trigger, \"aria-controls\", isExpanded && this._menuId);\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(trigger, \"aria-expanded\", (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ariaBool)(isExpanded));\n        }\n        if (content) (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(content, \"aria-labelledby\", isExpanded && this._menuButtonId);\n        this._expanded.set(isExpanded);\n        this._toggleMediaControls(event1);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.tick)();\n        if (this._wasKeyboardExpand) {\n            if (isExpanded) content === null || content === void 0 ? void 0 : content.focus();\n            else trigger === null || trigger === void 0 ? void 0 : trigger.focus();\n            for (const el of [\n                this.el,\n                content\n            ]){\n                el && el.setAttribute(\"data-keyboard\", \"\");\n            }\n        } else {\n            for (const el of [\n                this.el,\n                content\n            ]){\n                el && el.removeAttribute(\"data-keyboard\");\n            }\n        }\n        this.dispatch(isExpanded ? \"open\" : \"close\", {\n            trigger: event1\n        });\n        if (isExpanded) {\n            var _this__menuObserver__onOpen, _this__menuObserver;\n            if (!this.isSubmenu && this._media.activeMenu !== this) {\n                var _this__media_activeMenu;\n                (_this__media_activeMenu = this._media.activeMenu) === null || _this__media_activeMenu === void 0 ? void 0 : _this__media_activeMenu.close(event1);\n                this._media.activeMenu = this;\n            }\n            (_this__menuObserver = this._menuObserver) === null || _this__menuObserver === void 0 ? void 0 : (_this__menuObserver__onOpen = _this__menuObserver._onOpen) === null || _this__menuObserver__onOpen === void 0 ? void 0 : _this__menuObserver__onOpen.call(_this__menuObserver, event1);\n        } else {\n            var _this__menuObserver__onClose, _this__menuObserver1;\n            if (this.isSubmenu) {\n                for (const el of this._submenus)el.close(event1);\n            } else {\n                this._media.activeMenu = null;\n            }\n            (_this__menuObserver1 = this._menuObserver) === null || _this__menuObserver1 === void 0 ? void 0 : (_this__menuObserver__onClose = _this__menuObserver1._onClose) === null || _this__menuObserver__onClose === void 0 ? void 0 : _this__menuObserver__onClose.call(_this__menuObserver1, event1);\n        }\n        if (isExpanded) {\n            requestAnimationFrame(this._updateFocus.bind(this));\n        }\n    }\n    _updateFocus() {\n        if (this._isTransitionActive || this._isSubmenuOpen) return;\n        this._focus._update();\n        requestAnimationFrame(()=>{\n            if (this._wasKeyboardExpand) {\n                this._focus._focusActive();\n            } else {\n                this._focus._scroll();\n            }\n        });\n    }\n    _isExpanded() {\n        return !this._isDisabled() && this._expanded();\n    }\n    _isDisabled() {\n        return this._disabled() || this._isTriggerDisabled();\n    }\n    _disable(disabled) {\n        this._disabled.set(disabled);\n    }\n    _onPointerUp(event1) {\n        const content = this._content();\n        if (this._isSliderActive || content && isEventInside(content, event1)) {\n            return;\n        }\n        event1.stopPropagation();\n    }\n    _onWindowPointerUp(event1) {\n        const content = this._content();\n        if (this._isSliderActive || content && isEventInside(content, event1)) {\n            return;\n        }\n        this.close(event1);\n    }\n    _getCloseTarget() {\n        var _this_el;\n        const target = (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.querySelector('[data-part=\"close-target\"]');\n        return this.el && target && isElementParent(this.el, target, (node)=>node.getAttribute(\"role\") === \"menu\") ? target : null;\n    }\n    _toggleMediaControls(trigger) {\n        if (this.isSubmenu) return;\n        if (this._expanded()) this._media.remote.pauseControls(trigger);\n        else this._media.remote.resumeControls(trigger);\n    }\n    _addSubmenu(menu) {\n        this._submenus.add(menu);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(menu, \"open\", this._onSubmenuOpenBind);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(menu, \"close\", this._onSubmenuCloseBind);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(this._removeSubmenuBind);\n    }\n    _removeSubmenu(menu) {\n        this._submenus.delete(menu);\n    }\n    _onSubmenuOpen(event1) {\n        this._isSubmenuOpen = true;\n        const content = this._content();\n        if (this.isSubmenu) {\n            var _this_triggerElement;\n            (_this_triggerElement = this.triggerElement) === null || _this_triggerElement === void 0 ? void 0 : _this_triggerElement.setAttribute(\"aria-hidden\", \"true\");\n        }\n        for (const target of this._submenus){\n            if (target !== event1.target) {\n                for (const el of [\n                    target.el,\n                    target.triggerElement\n                ]){\n                    el === null || el === void 0 ? void 0 : el.setAttribute(\"aria-hidden\", \"true\");\n                }\n            }\n        }\n        if (content) {\n            const el = event1.target.el;\n            for (const child of content.children){\n                if (child.contains(el)) {\n                    child.setAttribute(\"data-open\", \"\");\n                } else if (child !== el) {\n                    child.setAttribute(\"data-hidden\", \"\");\n                }\n            }\n        }\n    }\n    _onSubmenuClose(event1) {\n        this._isSubmenuOpen = false;\n        const content = this._content();\n        if (this.isSubmenu) {\n            var _this_triggerElement;\n            (_this_triggerElement = this.triggerElement) === null || _this_triggerElement === void 0 ? void 0 : _this_triggerElement.setAttribute(\"aria-hidden\", \"false\");\n        }\n        for (const target of this._submenus){\n            for (const el of [\n                target.el,\n                target.triggerElement\n            ]){\n                el === null || el === void 0 ? void 0 : el.setAttribute(\"aria-hidden\", \"false\");\n            }\n        }\n        if (content) {\n            for (const child of content.children){\n                child.removeAttribute(\"data-open\");\n                child.removeAttribute(\"data-hidden\");\n            }\n        }\n    }\n    _onResizeTransition(event1) {\n        const content = this._content();\n        if (content && event1.propertyName === \"height\") {\n            this._isTransitionActive = event1.type === \"transitionstart\";\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(content, \"data-transition\", this._isTransitionActive ? \"height\" : null);\n            if (this._expanded()) this._updateFocus();\n        }\n        for (const callback of this._transitionCallbacks)callback(event1);\n    }\n    open(trigger) {\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._expanded)) return;\n        this._popper.show(trigger);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.tick)();\n    }\n    close(trigger) {\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._expanded)) return;\n        this._popper.hide(trigger);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.tick)();\n    }\n    constructor(){\n        super();\n        this._expanded = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n        this._disabled = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n        this._trigger = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null);\n        this._content = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null);\n        this._submenus = /* @__PURE__ */ new Set();\n        this._menuObserver = null;\n        this._isSliderActive = false;\n        this._isTriggerDisabled = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n        this._transitionCallbacks = /* @__PURE__ */ new Set();\n        this._wasKeyboardExpand = false;\n        this._removeSubmenuBind = this._removeSubmenu.bind(this);\n        this._isSubmenuOpen = false;\n        this._onSubmenuOpenBind = this._onSubmenuOpen.bind(this);\n        this._onSubmenuCloseBind = this._onSubmenuClose.bind(this);\n        this._onResize = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.animationFrameThrottle)(()=>{\n            const content = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._content);\n            if (!content || IS_SERVER) return;\n            let height = 0, styles = getComputedStyle(content), children = [\n                ...content.children\n            ];\n            for (const prop2 of [\n                \"paddingTop\",\n                \"paddingBottom\",\n                \"borderTopWidth\",\n                \"borderBottomWidth\"\n            ]){\n                height += parseFloat(styles[prop2]) || 0;\n            }\n            for (const child of children){\n                if (isHTMLElement(child) && child.style.display === \"contents\") {\n                    children.push(...child.children);\n                } else if (child.nodeType === 3) {\n                    height += parseFloat(getComputedStyle(child).fontSize);\n                } else if (isHTMLElement(child)) {\n                    if (!isElementVisible(child)) continue;\n                    const style = getComputedStyle(child);\n                    height += child.offsetHeight + (parseFloat(style.marginTop) || 0) + (parseFloat(style.marginBottom) || 0);\n                }\n            }\n            (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(content, \"--menu-height\", height + \"px\");\n        });\n        this._isTransitionActive = false;\n        const { showDelay } = this.$props;\n        this._popper = new Popper({\n            _trigger: this._trigger,\n            _content: this._content,\n            _showDelay: showDelay,\n            _listen: (trigger, show, hide)=>{\n                onPress(trigger, (event1)=>{\n                    if (this._expanded()) hide(event1);\n                    else show(event1);\n                });\n                const closeTarget = this._getCloseTarget();\n                if (closeTarget) {\n                    onPress(closeTarget, (event1)=>{\n                        event1.stopPropagation();\n                        hide(event1);\n                    });\n                }\n            },\n            _onChange: this._onExpandedChange.bind(this)\n        });\n    }\n}\nMenu.props = {\n    showDelay: 0\n};\n__decorateClass$9([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], Menu.prototype, \"triggerElement\");\n__decorateClass$9([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], Menu.prototype, \"contentElement\");\n__decorateClass$9([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], Menu.prototype, \"isSubmenu\");\n__decorateClass$9([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], Menu.prototype, \"open\");\n__decorateClass$9([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], Menu.prototype, \"close\");\nvar __defProp$8 = Object.defineProperty;\nvar __getOwnPropDesc$8 = Object.getOwnPropertyDescriptor;\nvar __decorateClass$8 = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$8(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$8(target, key, result);\n    return result;\n};\nclass MenuButton extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get expanded() {\n        var _this__menu;\n        var _this__menu__expanded;\n        return (_this__menu__expanded = (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._expanded()) !== null && _this__menu__expanded !== void 0 ? _this__menu__expanded : false;\n    }\n    onSetup() {\n        this._menu = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(menuContext);\n    }\n    onAttach(el) {\n        this._menu._attachMenuButton(this);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchDisabled.bind(this));\n        setAttributeIfEmpty(el, \"type\", \"button\");\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHintEl.bind(this));\n        this._onMutation();\n        const mutations = new MutationObserver(this._onMutation.bind(this));\n        mutations.observe(el, {\n            attributeFilter: [\n                \"data-part\"\n            ],\n            childList: true,\n            subtree: true\n        });\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>mutations.disconnect());\n        onPress(el, (trigger)=>{\n            this.dispatch(\"select\", {\n                trigger\n            });\n        });\n    }\n    _watchDisabled() {\n        this._menu._disableMenuButton(this.$props.disabled());\n    }\n    _watchHintEl() {\n        const el = this._hintEl();\n        if (!el) return;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            const text = this._menu._hint();\n            if (text) el.textContent = text;\n        });\n    }\n    _onMutation() {\n        var _this_el;\n        const hintEl = (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.querySelector('[data-part=\"hint\"]');\n        this._hintEl.set(hintEl !== null && hintEl !== void 0 ? hintEl : null);\n    }\n    constructor(){\n        super();\n        this._hintEl = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null);\n        new FocusVisibleController();\n    }\n}\nMenuButton.props = {\n    disabled: false\n};\n__decorateClass$8([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], MenuButton.prototype, \"expanded\");\nclass MenuItem extends MenuButton {\n}\nclass MenuPortal extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(menuPortalContext, {\n            _attach: this._attachElement.bind(this)\n        });\n    }\n    onAttach(el) {\n        el.style.setProperty(\"display\", \"contents\");\n    }\n    // Need this so connect scope is defined.\n    onConnect(el) {}\n    onDestroy() {\n        var _this__target;\n        (_this__target = this._target) === null || _this__target === void 0 ? void 0 : _this__target.remove();\n        this._target = null;\n    }\n    _attachElement(el) {\n        this._portal(false);\n        this._target = el;\n        requestScopedAnimationFrame(()=>{\n            requestScopedAnimationFrame(()=>{\n                if (!this.connectScope) return;\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchDisabled.bind(this));\n            });\n        });\n    }\n    _watchDisabled() {\n        const { fullscreen } = this._media.$state, { disabled } = this.$props, _disabled = disabled();\n        this._portal(_disabled === \"fullscreen\" ? !fullscreen() : !_disabled);\n    }\n    _portal(shouldPortal) {\n        if (!this._target) return;\n        let container = this._getContainer(this.$props.container());\n        if (!container) return;\n        const isPortalled = this._target.parentElement === container;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(this._target, \"data-portal\", shouldPortal);\n        if (shouldPortal) {\n            if (!isPortalled) {\n                this._target.remove();\n                container.append(this._target);\n            }\n        } else if (isPortalled && this._target.parentElement === container) {\n            var _this_el;\n            this._target.remove();\n            (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.append(this._target);\n        }\n    }\n    _getContainer(selector) {\n        if (isHTMLElement(selector)) return selector;\n        return selector ? document.querySelector(selector) : document.body;\n    }\n    constructor(){\n        super(...arguments);\n        this._target = null;\n    }\n}\nMenuPortal.props = {\n    container: null,\n    disabled: false\n};\nconst menuPortalContext = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nclass MenuItems extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onAttach(el) {\n        this._menu = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(menuContext);\n        this._menu._attachMenuItems(this);\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(menuPortalContext)) {\n            const portal = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(menuPortalContext);\n            if (portal) {\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(menuPortalContext, null);\n                portal._attach(el);\n                (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(()=>portal._attach(null));\n            }\n        }\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchPlacement.bind(this));\n    }\n    _watchPlacement() {\n        if (!this.el) return;\n        const placement = this.$props.placement();\n        if (placement) {\n            Object.assign(this.el.style, {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"max-content\"\n            });\n            const { offset: mainOffset, alignOffset } = this.$props;\n            return autoPlacement(this.el, this._getButton(), placement, {\n                offsetVarName: \"media-menu\",\n                xOffset: alignOffset(),\n                yOffset: mainOffset()\n            });\n        } else {\n            this.el.removeAttribute(\"style\");\n            this.el.style.display = \"none\";\n        }\n    }\n    _getButton() {\n        return this._menu._button();\n    }\n    constructor(){\n        super();\n        new FocusVisibleController();\n        const { placement } = this.$props;\n        this.setAttributes({\n            \"data-placement\": placement\n        });\n    }\n}\nMenuItems.props = {\n    placement: null,\n    offset: 0,\n    alignOffset: 0\n};\nconst radioControllerContext = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nclass RadioGroupController extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.ViewController {\n    get _values() {\n        return Array.from(this._group).map((radio)=>radio._value());\n    }\n    get value() {\n        return this._value();\n    }\n    set value(value) {\n        this._onChange(value);\n    }\n    onSetup() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(radioControllerContext, {\n            add: this._addRadio.bind(this),\n            remove: this._removeRadio.bind(this)\n        });\n    }\n    onAttach(el) {\n        const isMenuItem = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(menuContext);\n        if (!isMenuItem) setAttributeIfEmpty(el, \"role\", \"radiogroup\");\n        this.setAttributes({\n            value: this._value\n        });\n    }\n    onDestroy() {\n        this._group.clear();\n    }\n    _addRadio(radio) {\n        if (this._group.has(radio)) return;\n        this._group.add(radio);\n        radio._onCheck = this._onChangeBind;\n        radio._check(radio._value() === this._value());\n    }\n    _removeRadio(radio) {\n        radio._onCheck = null;\n        this._group.delete(radio);\n    }\n    _onChange(newValue, trigger) {\n        var _this__onValueChange, _this;\n        const currentValue = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._value);\n        if (!newValue || newValue === currentValue) return;\n        const currentRadio = this._findRadio(currentValue), newRadio = this._findRadio(newValue);\n        currentRadio === null || currentRadio === void 0 ? void 0 : currentRadio._check(false, trigger);\n        newRadio === null || newRadio === void 0 ? void 0 : newRadio._check(true, trigger);\n        this._value.set(newValue);\n        (_this__onValueChange = (_this = this)._onValueChange) === null || _this__onValueChange === void 0 ? void 0 : _this__onValueChange.call(_this, newValue, trigger);\n    }\n    _findRadio(newValue) {\n        for (const radio of this._group){\n            if (newValue === (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(radio._value)) return radio;\n        }\n        return null;\n    }\n    constructor(){\n        super(...arguments);\n        this._group = /* @__PURE__ */ new Set();\n        this._value = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(\"\");\n        this._controller = null;\n        this._onChangeBind = this._onChange.bind(this);\n    }\n}\nvar __defProp$7 = Object.defineProperty;\nvar __getOwnPropDesc$7 = Object.getOwnPropertyDescriptor;\nvar __decorateClass$7 = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$7(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$7(target, key, result);\n    return result;\n};\nclass RadioGroup extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get values() {\n        return this._controller._values;\n    }\n    get value() {\n        return this._controller.value;\n    }\n    set value(newValue) {\n        this._controller.value = newValue;\n    }\n    onSetup() {\n        if (IS_SERVER) this._watchValue();\n        else (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchValue.bind(this));\n    }\n    _watchValue() {\n        this._controller.value = this.$props.value();\n    }\n    _onValueChange(value, trigger) {\n        const event1 = this.createEvent(\"change\", {\n            detail: value,\n            trigger\n        });\n        this.dispatch(event1);\n    }\n    constructor(){\n        super();\n        this._controller = new RadioGroupController();\n        this._controller._onValueChange = this._onValueChange.bind(this);\n    }\n}\nRadioGroup.props = {\n    value: \"\"\n};\n__decorateClass$7([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], RadioGroup.prototype, \"values\");\n__decorateClass$7([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], RadioGroup.prototype, \"value\");\nvar __defProp$6 = Object.defineProperty;\nvar __getOwnPropDesc$6 = Object.getOwnPropertyDescriptor;\nvar __decorateClass$6 = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$6(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$6(target, key, result);\n    return result;\n};\nclass Radio extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get checked() {\n        return this._checked();\n    }\n    onSetup() {\n        this.setAttributes({\n            value: this.$props.value,\n            \"data-checked\": this._checked,\n            \"aria-checked\": $ariaBool(this._checked)\n        });\n    }\n    onAttach(el) {\n        const isMenuItem = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(menuContext);\n        setAttributeIfEmpty(el, \"tabindex\", isMenuItem ? \"-1\" : \"0\");\n        setAttributeIfEmpty(el, \"role\", isMenuItem ? \"menuitemradio\" : \"radio\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchValue.bind(this));\n    }\n    onConnect(el) {\n        this._addToGroup();\n        onPress(el, this._onPress.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(this._onDisconnect.bind(this));\n    }\n    _onDisconnect() {\n        var _s = $RefreshSig$();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.scoped)(_s(()=>{\n            _s();\n            const group = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(radioControllerContext);\n            group.remove(this._controller);\n        }, \"Y9S6FUgNnXnPiAtfGgD+VC7uCGc=\"), this.connectScope);\n    }\n    _addToGroup() {\n        const group = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(radioControllerContext);\n        group.add(this._controller);\n    }\n    _watchValue() {\n        const { value } = this.$props, newValue = value();\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._checked)) {\n            var _this__controller__onCheck, _this__controller;\n            (_this__controller__onCheck = (_this__controller = this._controller)._onCheck) === null || _this__controller__onCheck === void 0 ? void 0 : _this__controller__onCheck.call(_this__controller, newValue);\n        }\n    }\n    _onPress(event1) {\n        var _this__controller__onCheck, _this__controller;\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._checked)) return;\n        this._onChange(true, event1);\n        this._onSelect(event1);\n        (_this__controller__onCheck = (_this__controller = this._controller)._onCheck) === null || _this__controller__onCheck === void 0 ? void 0 : _this__controller__onCheck.call(_this__controller, (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$props.value), event1);\n    }\n    _check(value, trigger) {\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._checked) === value) return;\n        this._onChange(value, trigger);\n    }\n    _onChange(value, trigger) {\n        this._checked.set(value);\n        this.dispatch(\"change\", {\n            detail: value,\n            trigger\n        });\n    }\n    _onSelect(trigger) {\n        this.dispatch(\"select\", {\n            trigger\n        });\n    }\n    constructor(){\n        super();\n        this._checked = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n        this._controller = {\n            _value: this.$props.value,\n            _check: this._check.bind(this),\n            _onCheck: null\n        };\n        new FocusVisibleController();\n    }\n}\nRadio.props = {\n    value: \"\"\n};\n__decorateClass$6([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], Radio.prototype, \"checked\");\nvar __defProp$5 = Object.defineProperty;\nvar __getOwnPropDesc$5 = Object.getOwnPropertyDescriptor;\nvar __decorateClass$5 = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$5(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$5(target, key, result);\n    return result;\n};\nclass ChaptersRadioGroup extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get value() {\n        return this._controller.value;\n    }\n    get disabled() {\n        var _this__cues;\n        return !((_this__cues = this._cues()) === null || _this__cues === void 0 ? void 0 : _this__cues.length);\n    }\n    onSetup() {\n        this._media = useMediaContext();\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(menuContext)) {\n            this._menu = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(menuContext);\n        }\n        const { thumbnails } = this.$props;\n        this.setAttributes({\n            \"data-thumbnails\": ()=>!!thumbnails()\n        });\n    }\n    onAttach(el) {\n        var _this__menu;\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._attachObserver({\n            _onOpen: this._onOpen.bind(this)\n        });\n    }\n    getOptions() {\n        const { clipStartTime, clipEndTime } = this._media.$state, startTime = clipStartTime(), endTime = clipEndTime() || Infinity;\n        return this._cues().map((cue, i)=>({\n                cue,\n                value: i.toString(),\n                label: cue.text,\n                startTime: formatTime(Math.max(0, cue.startTime - startTime)),\n                duration: formatSpokenTime(Math.min(endTime, cue.endTime) - Math.max(startTime, cue.startTime))\n            }));\n    }\n    _onOpen() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(()=>this._watchCurrentTime());\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchCurrentTime.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchControllerDisabled.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchTrack.bind(this));\n        watchActiveTextTrack(this._media.textTracks, \"chapters\", this._track.set);\n    }\n    _watchTrack() {\n        const track = this._track();\n        if (!track) return;\n        const onCuesChange = this._onCuesChange.bind(this, track);\n        onCuesChange();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"add-cue\", onCuesChange);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"remove-cue\", onCuesChange);\n        return ()=>{\n            this._cues.set([]);\n        };\n    }\n    _onCuesChange(track) {\n        const { clipStartTime, clipEndTime } = this._media.$state, startTime = clipStartTime(), endTime = clipEndTime() || Infinity;\n        this._cues.set([\n            ...track.cues\n        ].filter((cue)=>cue.startTime <= endTime && cue.endTime >= startTime));\n    }\n    _watchCurrentTime() {\n        var _this__menu;\n        if (!((_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._expanded())) return;\n        const track = this._track();\n        if (!track) {\n            this._controller.value = \"-1\";\n            return;\n        }\n        const { realCurrentTime, clipStartTime, clipEndTime } = this._media.$state, startTime = clipStartTime(), endTime = clipEndTime() || Infinity, time = realCurrentTime(), activeCueIndex = this._cues().findIndex((cue)=>isCueActive(cue, time));\n        this._controller.value = activeCueIndex.toString();\n        if (activeCueIndex >= 0) {\n            requestScopedAnimationFrame(()=>{\n                if (!this.connectScope) return;\n                const cue = this._cues()[activeCueIndex], radio = this.el.querySelector(\"[aria-checked='true']\"), cueStartTime = Math.max(startTime, cue.startTime), duration = Math.min(endTime, cue.endTime) - cueStartTime, playedPercent = Math.max(0, time - cueStartTime) / duration * 100;\n                radio && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setStyle)(radio, \"--progress\", round(playedPercent, 3) + \"%\");\n            });\n        }\n    }\n    _watchControllerDisabled() {\n        var _this__menu;\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._disable(this.disabled);\n    }\n    _onValueChange(value, trigger) {\n        if (this.disabled || !trigger) return;\n        const index = +value, cues = this._cues(), { clipStartTime } = this._media.$state;\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(index) && (cues === null || cues === void 0 ? void 0 : cues[index])) {\n            this._controller.value = index.toString();\n            this._media.remote.seek(cues[index].startTime - clipStartTime(), trigger);\n            this.dispatch(\"change\", {\n                detail: cues[index],\n                trigger\n            });\n        }\n    }\n    constructor(){\n        super();\n        this._track = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null);\n        this._cues = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)([]);\n        this._controller = new RadioGroupController();\n        this._controller._onValueChange = this._onValueChange.bind(this);\n    }\n}\nChaptersRadioGroup.props = {\n    thumbnails: null\n};\n__decorateClass$5([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], ChaptersRadioGroup.prototype, \"value\");\n__decorateClass$5([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], ChaptersRadioGroup.prototype, \"disabled\");\n__decorateClass$5([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], ChaptersRadioGroup.prototype, \"getOptions\");\nvar __defProp$4 = Object.defineProperty;\nvar __getOwnPropDesc$4 = Object.getOwnPropertyDescriptor;\nvar __decorateClass$4 = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$4(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$4(target, key, result);\n    return result;\n};\nclass AudioRadioGroup extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get value() {\n        return this._controller.value;\n    }\n    get disabled() {\n        const { audioTracks } = this._media.$state;\n        return audioTracks().length <= 1;\n    }\n    onSetup() {\n        this._media = useMediaContext();\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(menuContext)) {\n            this._menu = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(menuContext);\n        }\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchValue.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchControllerDisabled.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHintText.bind(this));\n    }\n    getOptions() {\n        const { audioTracks } = this._media.$state;\n        return audioTracks().map((track)=>({\n                track,\n                label: track.label,\n                value: track.label.toLowerCase()\n            }));\n    }\n    _watchValue() {\n        this._controller.value = this._getValue();\n    }\n    _watchHintText() {\n        var _this__menu;\n        const { emptyLabel } = this.$props, { audioTrack } = this._media.$state, track = audioTrack();\n        var _track_label;\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._hint.set((_track_label = track === null || track === void 0 ? void 0 : track.label) !== null && _track_label !== void 0 ? _track_label : emptyLabel());\n    }\n    _watchControllerDisabled() {\n        var _this__menu;\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._disable(this.disabled);\n    }\n    _getValue() {\n        const { audioTrack } = this._media.$state;\n        const track = audioTrack();\n        return track ? track.label.toLowerCase() : \"\";\n    }\n    _onValueChange(value, trigger) {\n        if (this.disabled) return;\n        const index = this._media.audioTracks.toArray().findIndex((track)=>track.label.toLowerCase() === value);\n        if (index >= 0) {\n            const track = this._media.audioTracks[index];\n            this._media.remote.changeAudioTrack(index, trigger);\n            this.dispatch(\"change\", {\n                detail: track,\n                trigger\n            });\n        }\n    }\n    constructor(){\n        super();\n        this._controller = new RadioGroupController();\n        this._controller._onValueChange = this._onValueChange.bind(this);\n    }\n}\nAudioRadioGroup.props = {\n    emptyLabel: \"Default\"\n};\n__decorateClass$4([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], AudioRadioGroup.prototype, \"value\");\n__decorateClass$4([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], AudioRadioGroup.prototype, \"disabled\");\n__decorateClass$4([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], AudioRadioGroup.prototype, \"getOptions\");\nvar __defProp$3 = Object.defineProperty;\nvar __getOwnPropDesc$3 = Object.getOwnPropertyDescriptor;\nvar __decorateClass$3 = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$3(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$3(target, key, result);\n    return result;\n};\nconst DEFAULT_AUDIO_GAINS = [\n    1,\n    1.25,\n    1.5,\n    1.75,\n    2,\n    2.5,\n    3,\n    4\n];\nclass AudioGainRadioGroup extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get value() {\n        return this._controller.value;\n    }\n    get disabled() {\n        const { gains } = this.$props, { canSetAudioGain } = this._media.$state;\n        return !canSetAudioGain() || gains().length === 0;\n    }\n    onSetup() {\n        this._media = useMediaContext();\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(menuContext)) {\n            this._menu = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(menuContext);\n        }\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchValue.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHintText.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchControllerDisabled.bind(this));\n    }\n    getOptions() {\n        const { gains, normalLabel } = this.$props;\n        return gains().map((gain)=>({\n                label: gain === 1 || gain === null ? normalLabel : String(gain * 100) + \"%\",\n                value: gain.toString()\n            }));\n    }\n    _watchValue() {\n        this._controller.value = this._getValue();\n    }\n    _watchHintText() {\n        var _this__menu;\n        const { normalLabel } = this.$props, { audioGain } = this._media.$state, gain = audioGain();\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._hint.set(gain === 1 || gain == null ? normalLabel() : String(gain * 100) + \"%\");\n    }\n    _watchControllerDisabled() {\n        var _this__menu;\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._disable(this.disabled);\n    }\n    _getValue() {\n        var _audioGain;\n        const { audioGain } = this._media.$state;\n        var _audioGain_toString;\n        return (_audioGain_toString = (_audioGain = audioGain()) === null || _audioGain === void 0 ? void 0 : _audioGain.toString()) !== null && _audioGain_toString !== void 0 ? _audioGain_toString : \"1\";\n    }\n    _onValueChange(value, trigger) {\n        if (this.disabled) return;\n        const gain = +value;\n        this._media.remote.changeAudioGain(gain, trigger);\n        this.dispatch(\"change\", {\n            detail: gain,\n            trigger\n        });\n    }\n    constructor(){\n        super();\n        this._controller = new RadioGroupController();\n        this._controller._onValueChange = this._onValueChange.bind(this);\n    }\n}\nAudioGainRadioGroup.props = {\n    normalLabel: \"Disabled\",\n    gains: DEFAULT_AUDIO_GAINS\n};\n__decorateClass$3([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], AudioGainRadioGroup.prototype, \"value\");\n__decorateClass$3([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], AudioGainRadioGroup.prototype, \"disabled\");\n__decorateClass$3([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], AudioGainRadioGroup.prototype, \"getOptions\");\nvar __defProp$2 = Object.defineProperty;\nvar __getOwnPropDesc$2 = Object.getOwnPropertyDescriptor;\nvar __decorateClass$2 = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$2(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$2(target, key, result);\n    return result;\n};\nclass CaptionsRadioGroup extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get value() {\n        return this._controller.value;\n    }\n    get disabled() {\n        const { hasCaptions } = this._media.$state;\n        return !hasCaptions();\n    }\n    onSetup() {\n        this._media = useMediaContext();\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(menuContext)) {\n            this._menu = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(menuContext);\n        }\n    }\n    onConnect(el) {\n        var _super_onConnect;\n        (_super_onConnect = super.onConnect) === null || _super_onConnect === void 0 ? void 0 : _super_onConnect.call(this, el);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchValue.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchControllerDisabled.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHintText.bind(this));\n    }\n    getOptions() {\n        const { offLabel } = this.$props, { textTracks } = this._media.$state;\n        return [\n            {\n                value: \"off\",\n                label: offLabel\n            },\n            ...textTracks().filter(isTrackCaptionKind).map((track)=>({\n                    track,\n                    label: track.label,\n                    value: this._getTrackValue(track)\n                }))\n        ];\n    }\n    _watchValue() {\n        this._controller.value = this._getValue();\n    }\n    _watchHintText() {\n        var _this__menu;\n        const { offLabel } = this.$props, { textTrack } = this._media.$state, track = textTrack();\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._hint.set(track && isTrackCaptionKind(track) && track.mode === \"showing\" ? track.label : offLabel());\n    }\n    _watchControllerDisabled() {\n        var _this__menu;\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._disable(this.disabled);\n    }\n    _getValue() {\n        const { textTrack } = this._media.$state, track = textTrack();\n        return track && isTrackCaptionKind(track) && track.mode === \"showing\" ? this._getTrackValue(track) : \"off\";\n    }\n    _onValueChange(value, trigger) {\n        if (this.disabled) return;\n        if (value === \"off\") {\n            const track = this._media.textTracks.selected;\n            if (track) {\n                const index2 = this._media.textTracks.indexOf(track);\n                this._media.remote.changeTextTrackMode(index2, \"disabled\", trigger);\n                this.dispatch(\"change\", {\n                    detail: null,\n                    trigger\n                });\n            }\n            return;\n        }\n        const index = this._media.textTracks.toArray().findIndex((track)=>this._getTrackValue(track) === value);\n        if (index >= 0) {\n            const track = this._media.textTracks[index];\n            this._media.remote.changeTextTrackMode(index, \"showing\", trigger);\n            this.dispatch(\"change\", {\n                detail: track,\n                trigger\n            });\n        }\n    }\n    _getTrackValue(track) {\n        return track.id + \":\" + track.kind + \"-\" + track.label.toLowerCase();\n    }\n    constructor(){\n        super();\n        this._controller = new RadioGroupController();\n        this._controller._onValueChange = this._onValueChange.bind(this);\n    }\n}\nCaptionsRadioGroup.props = {\n    offLabel: \"Off\"\n};\n__decorateClass$2([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], CaptionsRadioGroup.prototype, \"value\");\n__decorateClass$2([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], CaptionsRadioGroup.prototype, \"disabled\");\n__decorateClass$2([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], CaptionsRadioGroup.prototype, \"getOptions\");\nvar __defProp$1 = Object.defineProperty;\nvar __getOwnPropDesc$1 = Object.getOwnPropertyDescriptor;\nvar __decorateClass$1 = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc$1(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp$1(target, key, result);\n    return result;\n};\nconst DEFAULT_PLAYBACK_RATES = [\n    0.25,\n    0.5,\n    0.75,\n    1,\n    1.25,\n    1.5,\n    1.75,\n    2\n];\nclass SpeedRadioGroup extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get value() {\n        return this._controller.value;\n    }\n    get disabled() {\n        const { rates } = this.$props, { canSetPlaybackRate } = this._media.$state;\n        return !canSetPlaybackRate() || rates().length === 0;\n    }\n    onSetup() {\n        this._media = useMediaContext();\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(menuContext)) {\n            this._menu = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(menuContext);\n        }\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchValue.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHintText.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchControllerDisabled.bind(this));\n    }\n    getOptions() {\n        const { rates, normalLabel } = this.$props;\n        return rates().map((rate)=>({\n                label: rate === 1 ? normalLabel : rate + \"\\xd7\",\n                value: rate.toString()\n            }));\n    }\n    _watchValue() {\n        this._controller.value = this._getValue();\n    }\n    _watchHintText() {\n        var _this__menu;\n        const { normalLabel } = this.$props, { playbackRate } = this._media.$state, rate = playbackRate();\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._hint.set(rate === 1 ? normalLabel() : rate + \"\\xd7\");\n    }\n    _watchControllerDisabled() {\n        var _this__menu;\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._disable(this.disabled);\n    }\n    _getValue() {\n        const { playbackRate } = this._media.$state;\n        return playbackRate().toString();\n    }\n    _onValueChange(value, trigger) {\n        if (this.disabled) return;\n        const rate = +value;\n        this._media.remote.changePlaybackRate(rate, trigger);\n        this.dispatch(\"change\", {\n            detail: rate,\n            trigger\n        });\n    }\n    constructor(){\n        super();\n        this._controller = new RadioGroupController();\n        this._controller._onValueChange = this._onValueChange.bind(this);\n    }\n}\nSpeedRadioGroup.props = {\n    normalLabel: \"Normal\",\n    rates: DEFAULT_PLAYBACK_RATES\n};\n__decorateClass$1([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], SpeedRadioGroup.prototype, \"value\");\n__decorateClass$1([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], SpeedRadioGroup.prototype, \"disabled\");\n__decorateClass$1([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], SpeedRadioGroup.prototype, \"getOptions\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind)=>{\n    var result = __getOwnPropDesc(target, key);\n    for(var i = decorators.length - 1, decorator; i >= 0; i--)if (decorator = decorators[i]) result = decorator(target, key, result) || result;\n    if (result) __defProp(target, key, result);\n    return result;\n};\nclass QualityRadioGroup extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get value() {\n        return this._controller.value;\n    }\n    get disabled() {\n        const { canSetQuality, qualities } = this._media.$state;\n        return !canSetQuality() || qualities().length <= 1;\n    }\n    onSetup() {\n        this._media = useMediaContext();\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasProvidedContext)(menuContext)) {\n            this._menu = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(menuContext);\n        }\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchValue.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchControllerDisabled.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHintText.bind(this));\n    }\n    getOptions() {\n        const { autoLabel, hideBitrate } = this.$props;\n        return [\n            {\n                value: \"auto\",\n                label: autoLabel\n            },\n            ...this._sortedQualities().map((quality)=>{\n                const bitrate = quality.bitrate && quality.bitrate >= 0 ? \"\".concat(round(quality.bitrate / 1e6, 2), \" Mbps\") : null;\n                return {\n                    quality,\n                    label: quality.height + \"p\",\n                    value: this._getQualityId(quality),\n                    bitrate: ()=>!hideBitrate() ? bitrate : null\n                };\n            })\n        ];\n    }\n    _watchValue() {\n        this._controller.value = this._getValue();\n    }\n    _watchHintText() {\n        var _this__menu;\n        const { autoLabel } = this.$props, { autoQuality, quality } = this._media.$state, qualityText = quality() ? quality().height + \"p\" : \"\";\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._hint.set(!autoQuality() ? qualityText : autoLabel() + (qualityText ? \" (\".concat(qualityText, \")\") : \"\"));\n    }\n    _watchControllerDisabled() {\n        var _this__menu;\n        (_this__menu = this._menu) === null || _this__menu === void 0 ? void 0 : _this__menu._disable(this.disabled);\n    }\n    _onValueChange(value, trigger) {\n        if (this.disabled) return;\n        if (value === \"auto\") {\n            this._media.remote.changeQuality(-1, trigger);\n            this.dispatch(\"change\", {\n                detail: \"auto\",\n                trigger\n            });\n            return;\n        }\n        const { qualities } = this._media.$state, index = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(qualities).findIndex((quality)=>this._getQualityId(quality) === value);\n        if (index >= 0) {\n            const quality = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(qualities)[index];\n            this._media.remote.changeQuality(index, trigger);\n            this.dispatch(\"change\", {\n                detail: quality,\n                trigger\n            });\n        }\n    }\n    _getValue() {\n        const { quality, autoQuality } = this._media.$state;\n        if (autoQuality()) return \"auto\";\n        const currentQuality = quality();\n        return currentQuality ? this._getQualityId(currentQuality) : \"auto\";\n    }\n    _getQualityId(quality) {\n        return quality.height + \"_\" + quality.bitrate;\n    }\n    constructor(){\n        super();\n        this._sortedQualities = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.computed)(()=>{\n            const { sort } = this.$props, { qualities } = this._media.$state;\n            return sortVideoQualities(qualities(), sort() === \"descending\");\n        });\n        this._controller = new RadioGroupController();\n        this._controller._onValueChange = this._onValueChange.bind(this);\n    }\n}\nQualityRadioGroup.props = {\n    autoLabel: \"Auto\",\n    hideBitrate: false,\n    sort: \"descending\"\n};\n__decorateClass([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], QualityRadioGroup.prototype, \"value\");\n__decorateClass([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.prop\n], QualityRadioGroup.prototype, \"disabled\");\n__decorateClass([\n    _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.method\n], QualityRadioGroup.prototype, \"getOptions\");\nclass Gesture extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        const { event: event1, action } = this.$props;\n        this.setAttributes({\n            event: event1,\n            action\n        });\n    }\n    onAttach(el) {\n        el.setAttribute(\"data-media-gesture\", \"\");\n        el.style.setProperty(\"pointer-events\", \"none\");\n    }\n    onConnect(el) {\n        var _this__media_player_el;\n        this._provider = (_this__media_player_el = this._media.player.el) === null || _this__media_player_el === void 0 ? void 0 : _this__media_player_el.querySelector(\"[data-media-provider]\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._attachListener.bind(this));\n    }\n    _attachListener() {\n        let eventType = this.$props.event(), disabled = this.$props.disabled();\n        if (!this._provider || !eventType || disabled) return;\n        if (/^dbl/.test(eventType)) {\n            eventType = eventType.split(/^dbl/)[1];\n        }\n        if (eventType === \"pointerup\" || eventType === \"pointerdown\") {\n            const pointer = this._media.$state.pointer();\n            if (pointer === \"coarse\") {\n                eventType = eventType === \"pointerup\" ? \"touchend\" : \"touchstart\";\n            }\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._provider, eventType, this._acceptEvent.bind(this), {\n            passive: false\n        });\n    }\n    _acceptEvent(event1) {\n        if (this.$props.disabled() || (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isPointerEvent)(event1) && (event1.button !== 0 || this._media.activeMenu) || (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isTouchEvent)(event1) && this._media.activeMenu || isTouchPinchEvent(event1) || !this._inBounds(event1)) {\n            return;\n        }\n        event1.MEDIA_GESTURE = true;\n        event1.preventDefault();\n        const eventType = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$props.event), isDblEvent = eventType === null || eventType === void 0 ? void 0 : eventType.startsWith(\"dbl\");\n        if (!isDblEvent) {\n            if (this._presses === 0) {\n                setTimeout(()=>{\n                    if (this._presses === 1) this._handleEvent(event1);\n                }, 250);\n            }\n        } else if (this._presses === 1) {\n            queueMicrotask(()=>this._handleEvent(event1));\n            clearTimeout(this._pressTimerId);\n            this._presses = 0;\n            return;\n        }\n        if (this._presses === 0) {\n            this._pressTimerId = window.setTimeout(()=>{\n                this._presses = 0;\n            }, 275);\n        }\n        this._presses++;\n    }\n    _handleEvent(event1) {\n        this.el.setAttribute(\"data-triggered\", \"\");\n        requestAnimationFrame(()=>{\n            if (this._isTopLayer()) {\n                this._performAction((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this.$props.action), event1);\n            }\n            requestAnimationFrame(()=>{\n                this.el.removeAttribute(\"data-triggered\");\n            });\n        });\n    }\n    /** Validate event occurred in gesture bounds. */ _inBounds(event1) {\n        if (!this.el) return false;\n        if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isPointerEvent)(event1) || (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isMouseEvent)(event1) || (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isTouchEvent)(event1)) {\n            var _event_changedTouches_;\n            const touch = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isTouchEvent)(event1) ? (_event_changedTouches_ = event1.changedTouches[0]) !== null && _event_changedTouches_ !== void 0 ? _event_changedTouches_ : event1.touches[0] : void 0;\n            var _touch_clientX;\n            const clientX = (_touch_clientX = touch === null || touch === void 0 ? void 0 : touch.clientX) !== null && _touch_clientX !== void 0 ? _touch_clientX : event1.clientX;\n            var _touch_clientY;\n            const clientY = (_touch_clientY = touch === null || touch === void 0 ? void 0 : touch.clientY) !== null && _touch_clientY !== void 0 ? _touch_clientY : event1.clientY;\n            const rect = this.el.getBoundingClientRect();\n            const inBounds = clientY >= rect.top && clientY <= rect.bottom && clientX >= rect.left && clientX <= rect.right;\n            return event1.type.includes(\"leave\") ? !inBounds : inBounds;\n        }\n        return true;\n    }\n    /** Validate gesture has the highest z-index in this triggered group. */ _isTopLayer() {\n        const gestures = this._media.player.el.querySelectorAll(\"[data-media-gesture][data-triggered]\");\n        return Array.from(gestures).sort((a, b)=>+getComputedStyle(b).zIndex - +getComputedStyle(a).zIndex)[0] === this.el;\n    }\n    _performAction(action, trigger) {\n        if (!action) return;\n        const willTriggerEvent = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"will-trigger\", {\n            detail: action,\n            cancelable: true,\n            trigger\n        });\n        this.dispatchEvent(willTriggerEvent);\n        if (willTriggerEvent.defaultPrevented) return;\n        const [method, value] = action.replace(/:([a-z])/, \"-$1\").split(\":\");\n        if (action.includes(\":fullscreen\")) {\n            this._media.remote.toggleFullscreen(\"prefer-media\", trigger);\n        } else if (action.includes(\"seek:\")) {\n            this._media.remote.seek((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._media.$state.currentTime) + (+value || 0), trigger);\n        } else {\n            this._media.remote[(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.kebabToCamelCase)(method)](trigger);\n        }\n        this.dispatch(\"trigger\", {\n            detail: action,\n            trigger\n        });\n    }\n    constructor(){\n        super(...arguments);\n        this._provider = null;\n        this._presses = 0;\n        this._pressTimerId = -1;\n    }\n}\nGesture.props = {\n    disabled: false,\n    event: void 0,\n    action: void 0\n};\nclass CaptionsTextRenderer {\n    attach() {}\n    canRender() {\n        return true;\n    }\n    detach() {\n        this._disposal.empty();\n        this._renderer.reset();\n        this._track = null;\n    }\n    changeTrack(track) {\n        if (!track || this._track === track) return;\n        this._disposal.empty();\n        if (track.readyState < 2) {\n            this._renderer.reset();\n            this._disposal.add((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"load\", ()=>this._changeTrack(track), {\n                once: true\n            }));\n        } else {\n            this._changeTrack(track);\n        }\n        this._disposal.add((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"add-cue\", (event1)=>{\n            this._renderer.addCue(event1.detail);\n        }), (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(track, \"remove-cue\", (event1)=>{\n            this._renderer.removeCue(event1.detail);\n        }));\n        this._track = track;\n    }\n    _changeTrack(track) {\n        this._renderer.changeTrack({\n            cues: [\n                ...track.cues\n            ],\n            regions: [\n                ...track.regions\n            ]\n        });\n    }\n    constructor(_renderer){\n        this._renderer = _renderer;\n        this.priority = 10;\n        this._track = null;\n        this._disposal = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createDisposalBin)();\n    }\n}\nconst _Captions = class _Captions extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    get _lib() {\n        return _Captions._lib;\n    }\n    onSetup() {\n        this._media = useMediaContext();\n        this.setAttributes({\n            \"aria-hidden\": $ariaBool(this._isHidden.bind(this))\n        });\n    }\n    onAttach(el) {\n        el.style.setProperty(\"pointer-events\", \"none\");\n    }\n    onConnect(el) {\n        if (!this._lib()) {\n            __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_media-captions_dist_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! media-captions */ \"(app-pages-browser)/./node_modules/media-captions/dist/dev.js\")).then((lib)=>this._lib.set(lib));\n        }\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchViewType.bind(this));\n    }\n    _isHidden() {\n        const { textTrack, remotePlaybackState, iOSControls } = this._media.$state, track = textTrack();\n        return iOSControls() || remotePlaybackState() === \"connected\" || !track || !isTrackCaptionKind(track);\n    }\n    _watchViewType() {\n        if (!this._lib()) return;\n        const { viewType } = this._media.$state;\n        if (viewType() === \"audio\") {\n            return this._setupAudioView();\n        } else {\n            return this._setupVideoView();\n        }\n    }\n    _setupAudioView() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onTrackChange.bind(this));\n        this._listenToFontStyleChanges(null);\n        return ()=>{\n            this.el.textContent = \"\";\n        };\n    }\n    _onTrackChange() {\n        if (this._isHidden()) return;\n        this._onCueChange();\n        const { textTrack } = this._media.$state;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(textTrack(), \"cue-change\", this._onCueChange.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onUpdateTimedNodes.bind(this));\n    }\n    _onCueChange() {\n        this.el.textContent = \"\";\n        if (this._hideExampleTimer >= 0) {\n            this._removeExample();\n        }\n        const { realCurrentTime, textTrack } = this._media.$state, { renderVTTCueString } = this._lib(), time = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(realCurrentTime), activeCues = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.peek)(textTrack).activeCues;\n        for (const cue of activeCues){\n            const displayEl = this._createCueDisplayElement(), cueEl = this._createCueElement();\n            cueEl.innerHTML = renderVTTCueString(cue, time);\n            displayEl.append(cueEl);\n            this.el.append(cueEl);\n        }\n    }\n    _onUpdateTimedNodes() {\n        const { realCurrentTime } = this._media.$state, { updateTimedVTTCueNodes } = this._lib();\n        updateTimedVTTCueNodes(this.el, realCurrentTime());\n    }\n    _setupVideoView() {\n        const { CaptionsRenderer } = this._lib(), renderer = new CaptionsRenderer(this.el), textRenderer = new CaptionsTextRenderer(renderer);\n        this._media.textRenderers.add(textRenderer);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchTextDirection.bind(this, renderer));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchMediaTime.bind(this, renderer));\n        this._listenToFontStyleChanges(renderer);\n        return ()=>{\n            this.el.textContent = \"\";\n            this._media.textRenderers.remove(textRenderer);\n            renderer.destroy();\n        };\n    }\n    _watchTextDirection(renderer) {\n        renderer.dir = this.$props.textDir();\n    }\n    _watchMediaTime(renderer) {\n        var _textTrack;\n        if (this._isHidden()) return;\n        const { realCurrentTime, textTrack } = this._media.$state;\n        renderer.currentTime = realCurrentTime();\n        if (this._hideExampleTimer >= 0 && ((_textTrack = textTrack()) === null || _textTrack === void 0 ? void 0 : _textTrack.activeCues[0])) {\n            this._removeExample();\n        }\n    }\n    _listenToFontStyleChanges(renderer) {\n        const player = this._media.player;\n        if (!player) return;\n        const onChange = this._onFontStyleChange.bind(this, renderer);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(player, \"vds-font-change\", onChange);\n    }\n    _onFontStyleChange(renderer) {\n        var _textTrack;\n        if (this._hideExampleTimer >= 0) {\n            this._hideExample();\n            return;\n        }\n        const { textTrack } = this._media.$state;\n        if (!((_textTrack = textTrack()) === null || _textTrack === void 0 ? void 0 : _textTrack.activeCues[0])) {\n            this._showExample();\n        } else {\n            renderer === null || renderer === void 0 ? void 0 : renderer.update(true);\n        }\n    }\n    _showExample() {\n        var _this_el, _this_el1;\n        const display = this._createCueDisplayElement();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(display, \"data-example\", \"\");\n        const cue = this._createCueElement();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(cue, \"data-example\", \"\");\n        cue.textContent = this.$props.exampleText();\n        display === null || display === void 0 ? void 0 : display.append(cue);\n        (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.append(display);\n        (_this_el1 = this.el) === null || _this_el1 === void 0 ? void 0 : _this_el1.setAttribute(\"data-example\", \"\");\n        this._hideExample();\n    }\n    _hideExample() {\n        window.clearTimeout(this._hideExampleTimer);\n        this._hideExampleTimer = window.setTimeout(this._removeExample.bind(this), 2500);\n    }\n    _removeExample() {\n        var _this_el, _this_el1;\n        (_this_el = this.el) === null || _this_el === void 0 ? void 0 : _this_el.removeAttribute(\"data-example\");\n        if ((_this_el1 = this.el) === null || _this_el1 === void 0 ? void 0 : _this_el1.querySelector(\"[data-example]\")) this.el.textContent = \"\";\n        this._hideExampleTimer = -1;\n    }\n    _createCueDisplayElement() {\n        const el = document.createElement(\"div\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-part\", \"cue-display\");\n        return el;\n    }\n    _createCueElement() {\n        const el = document.createElement(\"div\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(el, \"data-part\", \"cue\");\n        return el;\n    }\n    constructor(){\n        super(...arguments);\n        this._hideExampleTimer = -1;\n    }\n};\n_Captions.props = {\n    textDir: \"ltr\",\n    exampleText: \"Captions look like this.\"\n};\n_Captions._lib = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null);\nlet Captions = _Captions;\nclass Poster extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        this._watchSrc();\n        this._watchAlt();\n        this._watchCrossOrigin();\n        this._watchHidden();\n    }\n    onAttach(el) {\n        el.style.setProperty(\"pointer-events\", \"none\");\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchImg.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchSrc.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchAlt.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchCrossOrigin.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHidden.bind(this));\n        const { started } = this._media.$state;\n        this.setAttributes({\n            \"data-visible\": ()=>!started() && !this.$state.hidden(),\n            \"data-loading\": this._isLoading.bind(this),\n            \"data-error\": this._hasError.bind(this),\n            \"data-hidden\": this.$state.hidden\n        });\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onPreconnect.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._onLoadStart.bind(this));\n    }\n    _hasError() {\n        const { error } = this.$state;\n        return !(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isNull)(error());\n    }\n    _onPreconnect() {\n        const { canLoadPoster, poster } = this._media.$state;\n        if (!canLoadPoster() && poster()) preconnect(poster(), \"preconnect\");\n    }\n    _watchHidden() {\n        const { src } = this.$props, { poster, nativeControls } = this._media.$state;\n        this.el && (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(this.el, \"display\", nativeControls() ? \"none\" : null);\n        this.$state.hidden.set(this._hasError() || !(src() || poster()) || nativeControls());\n    }\n    _isLoading() {\n        const { loading, hidden } = this.$state;\n        return !hidden() && loading();\n    }\n    _watchImg() {\n        const img = this.$state.img();\n        if (!img) return;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(img, \"load\", this._onLoad.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(img, \"error\", this._onError.bind(this));\n    }\n    _watchSrc() {\n        const { poster: defaultPoster } = this._media.$props, { canLoadPoster, providedPoster, inferredPoster } = this._media.$state;\n        const src = this.$props.src() || \"\", poster = src || defaultPoster() || inferredPoster();\n        if (this._prevSrc === providedPoster()) {\n            providedPoster.set(src);\n        }\n        this.$state.src.set(canLoadPoster() && poster.length ? poster : null);\n        this._prevSrc = src;\n    }\n    _watchAlt() {\n        const { src } = this.$props, { alt } = this.$state, { poster } = this._media.$state;\n        alt.set(src() || poster() ? this.$props.alt() : null);\n    }\n    _watchCrossOrigin() {\n        const { crossOrigin: crossOriginProp } = this.$props, { crossOrigin: crossOriginState } = this.$state, { crossOrigin: mediaCrossOrigin, poster: src } = this._media.$state, crossOrigin = crossOriginProp() !== null ? crossOriginProp() : mediaCrossOrigin();\n        crossOriginState.set(/ytimg\\.com|vimeo/.test(src() || \"\") ? null : crossOrigin === true ? \"anonymous\" : crossOrigin);\n    }\n    _onLoadStart() {\n        const { loading, error } = this.$state, { canLoadPoster, poster } = this._media.$state;\n        loading.set(canLoadPoster() && !!poster());\n        error.set(null);\n    }\n    _onLoad() {\n        const { loading, error } = this.$state;\n        loading.set(false);\n        error.set(null);\n    }\n    _onError(event1) {\n        const { loading, error } = this.$state;\n        loading.set(false);\n        error.set(event1);\n    }\n    constructor(){\n        super(...arguments);\n        this._prevSrc = \"\";\n    }\n}\nPoster.props = {\n    src: null,\n    alt: null,\n    crossOrigin: null\n};\nPoster.state = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.State({\n    img: null,\n    src: null,\n    alt: null,\n    crossOrigin: null,\n    loading: true,\n    error: null,\n    hidden: false\n});\nclass Time extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        this._watchTime();\n        const { type } = this.$props;\n        this.setAttributes({\n            \"data-type\": type,\n            \"data-remainder\": this._shouldInvert.bind(this)\n        });\n        new IntersectionObserverController({\n            callback: this._onIntersectionChange.bind(this)\n        }).attach(this);\n    }\n    onAttach(el) {\n        if (!el.hasAttribute(\"role\")) (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchRole.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchTime.bind(this));\n    }\n    onConnect(el) {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.onDispose)(observeVisibility(el, this._isVisible.set));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchHidden.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._watchToggle.bind(this));\n    }\n    _onIntersectionChange(entries) {\n        this._isIntersecting.set(entries[0].isIntersecting);\n    }\n    _watchHidden() {\n        const { hidden } = this.$props;\n        this.$state.hidden.set(hidden() || !this._isVisible() || !this._isIntersecting());\n    }\n    _watchToggle() {\n        if (!this.$props.toggle()) {\n            this._invert.set(null);\n            return;\n        }\n        if (this.el) {\n            onPress(this.el, this._onToggle.bind(this));\n        }\n    }\n    _watchTime() {\n        const { hidden, timeText } = this.$state, { duration } = this._media.$state;\n        if (hidden()) return;\n        const { type, padHours, padMinutes, showHours } = this.$props, seconds = this._getSeconds(type()), $duration = duration(), shouldInvert = this._shouldInvert();\n        if (!Number.isFinite(seconds + $duration)) {\n            timeText.set(\"LIVE\");\n            return;\n        }\n        const time = shouldInvert ? Math.max(0, $duration - seconds) : seconds, formattedTime = formatTime(time, {\n            padHrs: padHours(),\n            padMins: padMinutes(),\n            showHrs: showHours()\n        });\n        timeText.set((shouldInvert ? \"-\" : \"\") + formattedTime);\n    }\n    _watchRole() {\n        if (!this.el) return;\n        const { toggle } = this.$props;\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(this.el, \"role\", toggle() ? \"timer\" : null);\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(this.el, \"tabindex\", toggle() ? 0 : null);\n    }\n    _getSeconds(type) {\n        const { bufferedEnd, duration, currentTime } = this._media.$state;\n        switch(type){\n            case \"buffered\":\n                return bufferedEnd();\n            case \"duration\":\n                return duration();\n            default:\n                return currentTime();\n        }\n    }\n    _shouldInvert() {\n        return this.$props.remainder() && this._invert() !== false;\n    }\n    _onToggle(event1) {\n        event1.preventDefault();\n        if (this._invert() === null) {\n            this._invert.set(!this.$props.remainder());\n            return;\n        }\n        this._invert.set((v)=>!v);\n    }\n    constructor(){\n        super(...arguments);\n        this._invert = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(null);\n        this._isVisible = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(true);\n        this._isIntersecting = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(true);\n    }\n}\nTime.props = {\n    type: \"current\",\n    showHours: false,\n    padHours: null,\n    padMinutes: null,\n    remainder: false,\n    toggle: false,\n    hidden: false\n};\nTime.state = new _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.State({\n    timeText: \"\",\n    hidden: false\n});\nconst plyrLayoutContext = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst plyrLayoutProps = {\n    clickToPlay: true,\n    clickToFullscreen: true,\n    controls: [\n        \"play-large\",\n        \"play\",\n        \"progress\",\n        \"current-time\",\n        \"mute+volume\",\n        \"captions\",\n        \"settings\",\n        \"pip\",\n        \"airplay\",\n        \"fullscreen\"\n    ],\n    customIcons: false,\n    displayDuration: false,\n    download: null,\n    markers: null,\n    invertTime: true,\n    thumbnails: null,\n    toggleTime: true,\n    translations: null,\n    seekTime: 10,\n    speed: [\n        0.5,\n        0.75,\n        1,\n        1.25,\n        1.5,\n        1.75,\n        2,\n        4\n    ]\n};\nclass PlyrLayout extends _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.Component {\n    onSetup() {\n        this._media = useMediaContext();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.provideContext)(plyrLayoutContext, {\n            ...this.$props,\n            previewTime: (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(0)\n        });\n    }\n}\nPlyrLayout.props = plyrLayoutProps;\nfunction usePlyrLayoutClasses(el, media) {\n    const { canAirPlay, canFullscreen, canPictureInPicture, controlsHidden, currentTime, fullscreen, hasCaptions, isAirPlayConnected, paused, pictureInPicture, playing, pointer, poster, textTrack, viewType, waiting } = media.$state;\n    el.classList.add(\"plyr\");\n    el.classList.add(\"plyr--full-ui\");\n    const classes = {\n        \"plyr--airplay-active\": isAirPlayConnected,\n        \"plyr--airplay-supported\": canAirPlay,\n        \"plyr--fullscreen-active\": fullscreen,\n        \"plyr--fullscreen-enabled\": canFullscreen,\n        \"plyr--hide-controls\": controlsHidden,\n        \"plyr--is-touch\": ()=>pointer() === \"coarse\",\n        \"plyr--loading\": waiting,\n        \"plyr--paused\": paused,\n        \"plyr--pip-active\": pictureInPicture,\n        \"plyr--pip-enabled\": canPictureInPicture,\n        \"plyr--playing\": playing,\n        \"plyr__poster-enabled\": poster,\n        \"plyr--stopped\": ()=>paused() && currentTime() === 0,\n        \"plyr--captions-active\": textTrack,\n        \"plyr--captions-enabled\": hasCaptions\n    };\n    const disposal = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createDisposalBin)();\n    for (const token of Object.keys(classes)){\n        disposal.add((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>void el.classList.toggle(token, !!classes[token]())));\n    }\n    disposal.add((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n        const token = \"plyr--\".concat(viewType());\n        el.classList.add(token);\n        return ()=>el.classList.remove(token);\n    }), (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n        var _$provider;\n        const { $provider } = media, type = (_$provider = $provider()) === null || _$provider === void 0 ? void 0 : _$provider.type, token = \"plyr--\".concat(isHTMLProvider(type) ? \"html5\" : type);\n        el.classList.toggle(token, !!type);\n        return ()=>el.classList.remove(token);\n    }));\n    return ()=>disposal.empty();\n}\nfunction isHTMLProvider(type) {\n    return type === \"audio\" || type === \"video\";\n}\n{\n    console.warn(\"[vidstack] dev mode!\");\n}class MediaPlayerInstance extends MediaPlayer {\n}\nclass MediaProviderInstance extends MediaProvider {\n}\nclass MediaAnnouncerInstance extends MediaAnnouncer {\n}\nclass ControlsInstance extends Controls {\n}\nclass ControlsGroupInstance extends ControlsGroup {\n}\nclass ToggleButtonInstance extends ToggleButton {\n}\nclass CaptionButtonInstance extends CaptionButton {\n}\nclass FullscreenButtonInstance extends FullscreenButton {\n}\nclass LiveButtonInstance extends LiveButton {\n}\nclass MuteButtonInstance extends MuteButton {\n}\nclass PIPButtonInstance extends PIPButton {\n}\nclass PlayButtonInstance extends PlayButton {\n}\nclass AirPlayButtonInstance extends AirPlayButton {\n}\nclass GoogleCastButtonInstance extends GoogleCastButton {\n}\nclass SeekButtonInstance extends SeekButton {\n}\nclass TooltipInstance extends Tooltip {\n}\nclass TooltipTriggerInstance extends TooltipTrigger {\n}\nclass TooltipContentInstance extends TooltipContent {\n}\nclass SliderInstance extends Slider {\n}\nclass TimeSliderInstance extends TimeSlider {\n}\nclass VolumeSliderInstance extends VolumeSlider {\n}\nclass AudioGainSliderInstance extends AudioGainSlider {\n}\nclass SpeedSliderInstance extends SpeedSlider {\n}\nclass QualitySliderInstance extends QualitySlider {\n}\nclass SliderThumbnailInstance extends SliderThumbnail {\n}\nclass SliderValueInstance extends SliderValue {\n}\nclass SliderVideoInstance extends SliderVideo {\n}\nclass SliderPreviewInstance extends SliderPreview {\n}\nclass SliderChaptersInstance extends SliderChapters {\n}\nclass MenuInstance extends Menu {\n}\nclass MenuButtonInstance extends MenuButton {\n}\nclass MenuItemsInstance extends MenuItems {\n}\nclass MenuItemInstance extends MenuItem {\n}\nclass MenuPortalInstance extends MenuPortal {\n}\nclass RadioGroupInstance extends RadioGroup {\n}\nclass RadioInstance extends Radio {\n}\nclass CaptionsInstance extends Captions {\n}\nclass GestureInstance extends Gesture {\n}\nclass PosterInstance extends Poster {\n}\nclass ThumbnailInstance extends Thumbnail {\n}\nclass TimeInstance extends Time {\n}\nconst Slot = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c1 = (props, forwardedRef)=>{\n    const { children, ...slotProps } = props;\n    const childrenArray = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n        const newElement = slottable.props.children;\n        const newChildren = childrenArray.map((child)=>{\n            if (child === slottable) {\n                if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(newElement) > 1) return react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null);\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? newElement.props.children : null;\n            } else {\n                return child;\n            }\n        });\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SlotClone, {\n            ...slotProps,\n            ref: forwardedRef\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newElement, void 0, newChildren) : null);\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SlotClone, {\n        ...slotProps,\n        ref: forwardedRef\n    }, children);\n});\n_c2 = Slot;\nSlot.displayName = \"Slot\";\nconst SlotClone = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { children, ...slotProps } = props;\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children, {\n            ...mergeProps(slotProps, children.props),\n            ref: forwardedRef ? (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.composeRefs)(forwardedRef, children.ref) : children.ref\n        });\n    }\n    return react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) > 1 ? react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null) : null;\n});\n_c3 = SlotClone;\nSlotClone.displayName = \"SlotClone\";\nconst Slottable = (param)=>{\n    let { children } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n};\n_c4 = Slottable;\nfunction isSlottable(child) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n    const overrideProps = {\n        ...childProps\n    };\n    for(const propName in childProps){\n        const slotPropValue = slotProps[propName];\n        const childPropValue = childProps[propName];\n        const isHandler = /^on[A-Z]/.test(propName);\n        if (isHandler) {\n            if (slotPropValue && childPropValue) {\n                overrideProps[propName] = function() {\n                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                        args[_key] = arguments[_key];\n                    }\n                    childPropValue(...args);\n                    slotPropValue(...args);\n                };\n            } else if (slotPropValue) {\n                overrideProps[propName] = slotPropValue;\n            }\n        } else if (propName === \"style\") {\n            overrideProps[propName] = {\n                ...slotPropValue,\n                ...childPropValue\n            };\n        } else if (propName === \"className\") {\n            overrideProps[propName] = [\n                slotPropValue,\n                childPropValue\n            ].filter(Boolean).join(\" \");\n        }\n    }\n    return {\n        ...slotProps,\n        ...overrideProps\n    };\n}\nconst NODES = [\n    \"button\",\n    \"div\",\n    \"span\",\n    \"img\",\n    \"video\",\n    \"audio\"\n];\nconst Primitive = NODES.reduce(_c5 = (primitives, node)=>{\n    const Node1 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n        const { asChild, ...primitiveProps } = props;\n        const Comp = asChild ? Slot : node;\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Comp, {\n            ...primitiveProps,\n            ref: forwardedRef\n        });\n    });\n    Node1.displayName = \"Primitive.\".concat(node);\n    return {\n        ...primitives,\n        [node]: Node1\n    };\n}, {});\n_c6 = Primitive;\nfunction isRemotionProvider(provider) {\n    return (provider === null || provider === void 0 ? void 0 : provider.$$PROVIDER_TYPE) === \"REMOTION\";\n}\nfunction isRemotionSrc(src) {\n    return (src === null || src === void 0 ? void 0 : src.type) === \"video/remotion\";\n}\nconst sliderStateRecord = SliderInstance.state.record, initialSliderStore = Object.keys(sliderStateRecord).reduce((store, prop)=>({\n        ...store,\n        [prop] () {\n            return sliderStateRecord[prop];\n        }\n    }), {});\nfunction useSliderState(prop, ref) {\n    var _ref_current;\n    _s1();\n    const $state = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext)(sliderState);\n    if (!$state && !ref) {\n        console.warn(\"[vidstack] `useSliderState` requires `RefObject<SliderInstance>` argument if called outside of a slider component\");\n    }\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(((ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.$state) || $state || initialSliderStore)[prop]);\n}\n_s1(useSliderState, \"/688iXROspLctwyUOalXkRuUl7k=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal\n    ];\n});\nfunction useSliderStore(ref) {\n    _s2();\n    const $state = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext)(sliderState);\n    if (!$state && !ref) {\n        console.warn(\"[vidstack] `useSliderStore` requires `RefObject<SliderInstance>` argument if called outside of a slider component\");\n    }\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignalRecord)((ref === null || ref === void 0 ? void 0 : ref.current) ? ref.current.$state : $state || initialSliderStore);\n}\n_s2(useSliderStore, \"+BZ9Fd2Sf89IdDa9AaqvVLazM5o=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignalRecord\n    ];\n});\nconst mediaStateRecord = MediaPlayerInstance.state.record, initialMediaStore = Object.keys(mediaStateRecord).reduce((store, prop)=>({\n        ...store,\n        [prop] () {\n            return mediaStateRecord[prop];\n        }\n    }), {});\nfunction useMediaState(prop, ref) {\n    var _ref_current;\n    _s3();\n    const $state = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext)(mediaState);\n    if (!$state && !ref) {\n        console.warn(\"[vidstack] `useMediaState` requires `RefObject<MediaPlayerInstance>` argument if called outside the `<MediaPlayer>` component\");\n    }\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(((ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.$state) || $state || initialMediaStore)[prop]);\n}\n_s3(useMediaState, \"/688iXROspLctwyUOalXkRuUl7k=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal\n    ];\n});\nfunction useMediaStore(ref) {\n    _s4();\n    const $state = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext)(mediaState);\n    if (!$state && !ref) {\n        console.warn(\"[vidstack] `useMediaStore` requires `RefObject<MediaPlayerInstance>` argument if called outside the `<MediaPlayer>` component\");\n    }\n    return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignalRecord)((ref === null || ref === void 0 ? void 0 : ref.current) ? ref.current.$state : $state || initialMediaStore);\n}\n_s4(useMediaStore, \"+BZ9Fd2Sf89IdDa9AaqvVLazM5o=\", false, function() {\n    return [\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignalRecord\n    ];\n});\n\nvar _c1, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c1, \"Slot$React.forwardRef\");\n$RefreshReg$(_c2, \"Slot\");\n$RefreshReg$(_c3, \"SlotClone\");\n$RefreshReg$(_c4, \"Slottable\");\n$RefreshReg$(_c5, \"Primitive$NODES.reduce\");\n$RefreshReg$(_c6, \"Primitive\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Nm9OJy7x.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Wdd6fBp8.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-Wdd6fBp8.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useActive: function() { return /* binding */ useActive; },\n/* harmony export */   useClassName: function() { return /* binding */ useClassName; },\n/* harmony export */   useColorSchemePreference: function() { return /* binding */ useColorSchemePreference; },\n/* harmony export */   useLayoutName: function() { return /* binding */ useLayoutName; },\n/* harmony export */   useResizeObserver: function() { return /* binding */ useResizeObserver; },\n/* harmony export */   useTransitionActive: function() { return /* binding */ useTransitionActive; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* harmony import */ var _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vidstack-BOkHoBGu.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BOkHoBGu.js\");\n/* __next_internal_client_entry_do_not_use__ useActive,useClassName,useColorSchemePreference,useLayoutName,useResizeObserver,useTransitionActive auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$();\n\n\n\nfunction useClassName(el, className) {\n    _s();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!el || !className) return;\n        const tokens = className.split(\" \");\n        for (const token of tokens)el.classList.add(token);\n        return ()=>{\n            for (const token of tokens)el.classList.remove(token);\n        };\n    }, [\n        el,\n        className\n    ]);\n}\n_s(useClassName, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nfunction useResizeObserver(el, callback) {\n    _s1();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!el) return;\n        callback();\n        const observer = new ResizeObserver((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.animationFrameThrottle)(callback));\n        observer.observe(el);\n        return ()=>observer.disconnect();\n    }, [\n        el,\n        callback\n    ]);\n}\n_s1(useResizeObserver, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nfunction useTransitionActive(el) {\n    _s2();\n    const [isActive, setIsActive] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!el) return;\n        const disposal = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createDisposalBin)();\n        disposal.add((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(el, \"transitionstart\", ()=>setIsActive(true)), (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(el, \"transitionend\", ()=>setIsActive(false)));\n        return ()=>disposal.empty();\n    }, [\n        el\n    ]);\n    return isActive;\n}\n_s2(useTransitionActive, \"Got/rvXObncgVYAtKDAIOlzhTAc=\");\nfunction useMouseEnter(el) {\n    _s3();\n    const [isMouseEnter, setIsMouseEnter] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!el) return;\n        const disposal = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createDisposalBin)();\n        disposal.add((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(el, \"mouseenter\", ()=>setIsMouseEnter(true)), (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(el, \"mouseleave\", ()=>setIsMouseEnter(false)));\n        return ()=>disposal.empty();\n    }, [\n        el\n    ]);\n    return isMouseEnter;\n}\n_s3(useMouseEnter, \"ajAC7zeok0FFP53r9FbxbpcWDHg=\");\nfunction useFocusIn(el) {\n    _s4();\n    const [isFocusIn, setIsFocusIn] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!el) return;\n        const disposal = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createDisposalBin)();\n        disposal.add((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(el, \"focusin\", ()=>setIsFocusIn(true)), (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(el, \"focusout\", ()=>setIsFocusIn(false)));\n        return ()=>disposal.empty();\n    }, [\n        el\n    ]);\n    return isFocusIn;\n}\n_s4(useFocusIn, \"YodbzlhzN4d6KT5jjUCvID+lTQ0=\");\nfunction useActive(el) {\n    _s5();\n    const isMouseEnter = useMouseEnter(el), isFocusIn = useFocusIn(el), prevMouseEnter = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    if (prevMouseEnter.current && !isMouseEnter) return false;\n    prevMouseEnter.current = isMouseEnter;\n    return isMouseEnter || isFocusIn;\n}\n_s5(useActive, \"3yuJOHB+zQw4r/kKNHmyYepWbZU=\", false, function() {\n    return [\n        useMouseEnter,\n        useFocusIn\n    ];\n});\nfunction useColorSchemePreference() {\n    _s6();\n    const [colorScheme, setColorScheme] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\"dark\");\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const media = window.matchMedia(\"(prefers-color-scheme: light)\");\n        function onChange() {\n            setColorScheme(media.matches ? \"light\" : \"dark\");\n        }\n        onChange();\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(media, \"change\", onChange);\n    }, []);\n    return colorScheme;\n}\n_s6(useColorSchemePreference, \"Qz8RyQ8SSKn4v01dJVXIBiOSKnY=\");\nfunction useLayoutName(name) {\n    _s7();\n    const player = (0,_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_2__.useMediaPlayer)();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!player) return;\n        return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            const el = player.$el;\n            el === null || el === void 0 ? void 0 : el.setAttribute(\"data-layout\", name);\n            return ()=>el === null || el === void 0 ? void 0 : el.removeAttribute(\"data-layout\");\n        });\n    }, [\n        player\n    ]);\n}\n_s7(useLayoutName, \"IQ1NZbZNmNIZofzBQBT1KUsfc1I=\", false, function() {\n    return [\n        _vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_2__.useMediaPlayer\n    ];\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L2NodW5rcy92aWRzdGFjay1XZGQ2ZkJwOC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBRStCO0FBQ3lFO0FBQ2hEO0FBRXhELFNBQVNNLGFBQWFDLEVBQUUsRUFBRUMsU0FBUzs7SUFDakNSLDRDQUFlLENBQUM7UUFDZCxJQUFJLENBQUNPLE1BQU0sQ0FBQ0MsV0FBVztRQUN2QixNQUFNRSxTQUFTRixVQUFVRyxLQUFLLENBQUM7UUFDL0IsS0FBSyxNQUFNQyxTQUFTRixPQUFRSCxHQUFHTSxTQUFTLENBQUNDLEdBQUcsQ0FBQ0Y7UUFDN0MsT0FBTztZQUNMLEtBQUssTUFBTUEsU0FBU0YsT0FBUUgsR0FBR00sU0FBUyxDQUFDRSxNQUFNLENBQUNIO1FBQ2xEO0lBQ0YsR0FBRztRQUFDTDtRQUFJQztLQUFVO0FBQ3BCO0dBVFNGO0FBVVQsU0FBU1Usa0JBQWtCVCxFQUFFLEVBQUVVLFFBQVE7O0lBQ3JDakIsNENBQWUsQ0FBQztRQUNkLElBQUksQ0FBQ08sSUFBSTtRQUNUVTtRQUNBLE1BQU1DLFdBQVcsSUFBSUMsZUFBZWxCLDRFQUFzQkEsQ0FBQ2dCO1FBQzNEQyxTQUFTRSxPQUFPLENBQUNiO1FBQ2pCLE9BQU8sSUFBTVcsU0FBU0csVUFBVTtJQUNsQyxHQUFHO1FBQUNkO1FBQUlVO0tBQVM7QUFDbkI7SUFSU0Q7QUFTVCxTQUFTTSxvQkFBb0JmLEVBQUU7O0lBQzdCLE1BQU0sQ0FBQ2dCLFVBQVVDLFlBQVksR0FBR3hCLDJDQUFjLENBQUM7SUFDL0NBLDRDQUFlLENBQUM7UUFDZCxJQUFJLENBQUNPLElBQUk7UUFDVCxNQUFNbUIsV0FBV3ZCLHVFQUFpQkE7UUFDbEN1QixTQUFTWixHQUFHLENBQ1ZaLGlFQUFXQSxDQUFDSyxJQUFJLG1CQUFtQixJQUFNaUIsWUFBWSxRQUNyRHRCLGlFQUFXQSxDQUFDSyxJQUFJLGlCQUFpQixJQUFNaUIsWUFBWTtRQUVyRCxPQUFPLElBQU1FLFNBQVNDLEtBQUs7SUFDN0IsR0FBRztRQUFDcEI7S0FBRztJQUNQLE9BQU9nQjtBQUNUO0lBWlNEO0FBYVQsU0FBU00sY0FBY3JCLEVBQUU7O0lBQ3ZCLE1BQU0sQ0FBQ3NCLGNBQWNDLGdCQUFnQixHQUFHOUIsMkNBQWMsQ0FBQztJQUN2REEsNENBQWUsQ0FBQztRQUNkLElBQUksQ0FBQ08sSUFBSTtRQUNULE1BQU1tQixXQUFXdkIsdUVBQWlCQTtRQUNsQ3VCLFNBQVNaLEdBQUcsQ0FDVlosaUVBQVdBLENBQUNLLElBQUksY0FBYyxJQUFNdUIsZ0JBQWdCLFFBQ3BENUIsaUVBQVdBLENBQUNLLElBQUksY0FBYyxJQUFNdUIsZ0JBQWdCO1FBRXRELE9BQU8sSUFBTUosU0FBU0MsS0FBSztJQUM3QixHQUFHO1FBQUNwQjtLQUFHO0lBQ1AsT0FBT3NCO0FBQ1Q7SUFaU0Q7QUFhVCxTQUFTRyxXQUFXeEIsRUFBRTs7SUFDcEIsTUFBTSxDQUFDeUIsV0FBV0MsYUFBYSxHQUFHakMsMkNBQWMsQ0FBQztJQUNqREEsNENBQWUsQ0FBQztRQUNkLElBQUksQ0FBQ08sSUFBSTtRQUNULE1BQU1tQixXQUFXdkIsdUVBQWlCQTtRQUNsQ3VCLFNBQVNaLEdBQUcsQ0FDVlosaUVBQVdBLENBQUNLLElBQUksV0FBVyxJQUFNMEIsYUFBYSxRQUM5Qy9CLGlFQUFXQSxDQUFDSyxJQUFJLFlBQVksSUFBTTBCLGFBQWE7UUFFakQsT0FBTyxJQUFNUCxTQUFTQyxLQUFLO0lBQzdCLEdBQUc7UUFBQ3BCO0tBQUc7SUFDUCxPQUFPeUI7QUFDVDtJQVpTRDtBQWFULFNBQVNHLFVBQVUzQixFQUFFOztJQUNuQixNQUFNc0IsZUFBZUQsY0FBY3JCLEtBQUt5QixZQUFZRCxXQUFXeEIsS0FBSzRCLGlCQUFpQm5DLHlDQUFZLENBQUM7SUFDbEcsSUFBSW1DLGVBQWVFLE9BQU8sSUFBSSxDQUFDUixjQUFjLE9BQU87SUFDcERNLGVBQWVFLE9BQU8sR0FBR1I7SUFDekIsT0FBT0EsZ0JBQWdCRztBQUN6QjtJQUxTRTs7UUFDY047UUFBK0JHOzs7QUFLdEQsU0FBU087O0lBQ1AsTUFBTSxDQUFDQyxhQUFhQyxlQUFlLEdBQUd4QywyQ0FBYyxDQUFDO0lBQ3JEQSw0Q0FBZSxDQUFDO1FBQ2QsTUFBTXlDLFFBQVFDLE9BQU9DLFVBQVUsQ0FBQztRQUNoQyxTQUFTQztZQUNQSixlQUFlQyxNQUFNSSxPQUFPLEdBQUcsVUFBVTtRQUMzQztRQUNBRDtRQUNBLE9BQU8xQyxpRUFBV0EsQ0FBQ3VDLE9BQU8sVUFBVUc7SUFDdEMsR0FBRyxFQUFFO0lBQ0wsT0FBT0w7QUFDVDtJQVhTRDtBQWFULFNBQVNRLGNBQWNDLElBQUk7O0lBQ3pCLE1BQU1DLFNBQVMzQyxxRUFBY0E7SUFDN0JMLDRDQUFlLENBQUM7UUFDZCxJQUFJLENBQUNnRCxRQUFRO1FBQ2IsT0FBTzVDLDREQUFNQSxDQUFDO1lBQ1osTUFBTUcsS0FBS3lDLE9BQU9DLEdBQUc7WUFDckIxQyxlQUFBQSx5QkFBQUEsR0FBSTJDLFlBQVksQ0FBQyxlQUFlSDtZQUNoQyxPQUFPLElBQU14QyxlQUFBQSx5QkFBQUEsR0FBSTRDLGVBQWUsQ0FBQztRQUNuQztJQUNGLEdBQUc7UUFBQ0g7S0FBTztBQUNiO0lBVlNGOztRQUNRekMsaUVBQWNBOzs7QUFXcUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B2aWRzdGFjay9yZWFjdC9kZXYvY2h1bmtzL3ZpZHN0YWNrLVdkZDZmQnA4LmpzP2NmZGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgYW5pbWF0aW9uRnJhbWVUaHJvdHRsZSwgbGlzdGVuRXZlbnQsIGNyZWF0ZURpc3Bvc2FsQmluLCBlZmZlY3QgfSBmcm9tICcuL3ZpZHN0YWNrLTNoczMtOGlfLmpzJztcbmltcG9ydCB7IHVzZU1lZGlhUGxheWVyIH0gZnJvbSAnLi92aWRzdGFjay1CT2tIb0JHdS5qcyc7XG5cbmZ1bmN0aW9uIHVzZUNsYXNzTmFtZShlbCwgY2xhc3NOYW1lKSB7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFlbCB8fCAhY2xhc3NOYW1lKSByZXR1cm47XG4gICAgY29uc3QgdG9rZW5zID0gY2xhc3NOYW1lLnNwbGl0KFwiIFwiKTtcbiAgICBmb3IgKGNvbnN0IHRva2VuIG9mIHRva2VucykgZWwuY2xhc3NMaXN0LmFkZCh0b2tlbik7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGZvciAoY29uc3QgdG9rZW4gb2YgdG9rZW5zKSBlbC5jbGFzc0xpc3QucmVtb3ZlKHRva2VuKTtcbiAgICB9O1xuICB9LCBbZWwsIGNsYXNzTmFtZV0pO1xufVxuZnVuY3Rpb24gdXNlUmVzaXplT2JzZXJ2ZXIoZWwsIGNhbGxiYWNrKSB7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFlbCkgcmV0dXJuO1xuICAgIGNhbGxiYWNrKCk7XG4gICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoYW5pbWF0aW9uRnJhbWVUaHJvdHRsZShjYWxsYmFjaykpO1xuICAgIG9ic2VydmVyLm9ic2VydmUoZWwpO1xuICAgIHJldHVybiAoKSA9PiBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gIH0sIFtlbCwgY2FsbGJhY2tdKTtcbn1cbmZ1bmN0aW9uIHVzZVRyYW5zaXRpb25BY3RpdmUoZWwpIHtcbiAgY29uc3QgW2lzQWN0aXZlLCBzZXRJc0FjdGl2ZV0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFlbCkgcmV0dXJuO1xuICAgIGNvbnN0IGRpc3Bvc2FsID0gY3JlYXRlRGlzcG9zYWxCaW4oKTtcbiAgICBkaXNwb3NhbC5hZGQoXG4gICAgICBsaXN0ZW5FdmVudChlbCwgXCJ0cmFuc2l0aW9uc3RhcnRcIiwgKCkgPT4gc2V0SXNBY3RpdmUodHJ1ZSkpLFxuICAgICAgbGlzdGVuRXZlbnQoZWwsIFwidHJhbnNpdGlvbmVuZFwiLCAoKSA9PiBzZXRJc0FjdGl2ZShmYWxzZSkpXG4gICAgKTtcbiAgICByZXR1cm4gKCkgPT4gZGlzcG9zYWwuZW1wdHkoKTtcbiAgfSwgW2VsXSk7XG4gIHJldHVybiBpc0FjdGl2ZTtcbn1cbmZ1bmN0aW9uIHVzZU1vdXNlRW50ZXIoZWwpIHtcbiAgY29uc3QgW2lzTW91c2VFbnRlciwgc2V0SXNNb3VzZUVudGVyXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWVsKSByZXR1cm47XG4gICAgY29uc3QgZGlzcG9zYWwgPSBjcmVhdGVEaXNwb3NhbEJpbigpO1xuICAgIGRpc3Bvc2FsLmFkZChcbiAgICAgIGxpc3RlbkV2ZW50KGVsLCBcIm1vdXNlZW50ZXJcIiwgKCkgPT4gc2V0SXNNb3VzZUVudGVyKHRydWUpKSxcbiAgICAgIGxpc3RlbkV2ZW50KGVsLCBcIm1vdXNlbGVhdmVcIiwgKCkgPT4gc2V0SXNNb3VzZUVudGVyKGZhbHNlKSlcbiAgICApO1xuICAgIHJldHVybiAoKSA9PiBkaXNwb3NhbC5lbXB0eSgpO1xuICB9LCBbZWxdKTtcbiAgcmV0dXJuIGlzTW91c2VFbnRlcjtcbn1cbmZ1bmN0aW9uIHVzZUZvY3VzSW4oZWwpIHtcbiAgY29uc3QgW2lzRm9jdXNJbiwgc2V0SXNGb2N1c0luXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWVsKSByZXR1cm47XG4gICAgY29uc3QgZGlzcG9zYWwgPSBjcmVhdGVEaXNwb3NhbEJpbigpO1xuICAgIGRpc3Bvc2FsLmFkZChcbiAgICAgIGxpc3RlbkV2ZW50KGVsLCBcImZvY3VzaW5cIiwgKCkgPT4gc2V0SXNGb2N1c0luKHRydWUpKSxcbiAgICAgIGxpc3RlbkV2ZW50KGVsLCBcImZvY3Vzb3V0XCIsICgpID0+IHNldElzRm9jdXNJbihmYWxzZSkpXG4gICAgKTtcbiAgICByZXR1cm4gKCkgPT4gZGlzcG9zYWwuZW1wdHkoKTtcbiAgfSwgW2VsXSk7XG4gIHJldHVybiBpc0ZvY3VzSW47XG59XG5mdW5jdGlvbiB1c2VBY3RpdmUoZWwpIHtcbiAgY29uc3QgaXNNb3VzZUVudGVyID0gdXNlTW91c2VFbnRlcihlbCksIGlzRm9jdXNJbiA9IHVzZUZvY3VzSW4oZWwpLCBwcmV2TW91c2VFbnRlciA9IFJlYWN0LnVzZVJlZihmYWxzZSk7XG4gIGlmIChwcmV2TW91c2VFbnRlci5jdXJyZW50ICYmICFpc01vdXNlRW50ZXIpIHJldHVybiBmYWxzZTtcbiAgcHJldk1vdXNlRW50ZXIuY3VycmVudCA9IGlzTW91c2VFbnRlcjtcbiAgcmV0dXJuIGlzTW91c2VFbnRlciB8fCBpc0ZvY3VzSW47XG59XG5mdW5jdGlvbiB1c2VDb2xvclNjaGVtZVByZWZlcmVuY2UoKSB7XG4gIGNvbnN0IFtjb2xvclNjaGVtZSwgc2V0Q29sb3JTY2hlbWVdID0gUmVhY3QudXNlU3RhdGUoXCJkYXJrXCIpO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IG1lZGlhID0gd2luZG93Lm1hdGNoTWVkaWEoXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGxpZ2h0KVwiKTtcbiAgICBmdW5jdGlvbiBvbkNoYW5nZSgpIHtcbiAgICAgIHNldENvbG9yU2NoZW1lKG1lZGlhLm1hdGNoZXMgPyBcImxpZ2h0XCIgOiBcImRhcmtcIik7XG4gICAgfVxuICAgIG9uQ2hhbmdlKCk7XG4gICAgcmV0dXJuIGxpc3RlbkV2ZW50KG1lZGlhLCBcImNoYW5nZVwiLCBvbkNoYW5nZSk7XG4gIH0sIFtdKTtcbiAgcmV0dXJuIGNvbG9yU2NoZW1lO1xufVxuXG5mdW5jdGlvbiB1c2VMYXlvdXROYW1lKG5hbWUpIHtcbiAgY29uc3QgcGxheWVyID0gdXNlTWVkaWFQbGF5ZXIoKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXBsYXllcikgcmV0dXJuO1xuICAgIHJldHVybiBlZmZlY3QoKCkgPT4ge1xuICAgICAgY29uc3QgZWwgPSBwbGF5ZXIuJGVsO1xuICAgICAgZWw/LnNldEF0dHJpYnV0ZShcImRhdGEtbGF5b3V0XCIsIG5hbWUpO1xuICAgICAgcmV0dXJuICgpID0+IGVsPy5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLWxheW91dFwiKTtcbiAgICB9KTtcbiAgfSwgW3BsYXllcl0pO1xufVxuXG5leHBvcnQgeyB1c2VBY3RpdmUsIHVzZUNsYXNzTmFtZSwgdXNlQ29sb3JTY2hlbWVQcmVmZXJlbmNlLCB1c2VMYXlvdXROYW1lLCB1c2VSZXNpemVPYnNlcnZlciwgdXNlVHJhbnNpdGlvbkFjdGl2ZSB9O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiYW5pbWF0aW9uRnJhbWVUaHJvdHRsZSIsImxpc3RlbkV2ZW50IiwiY3JlYXRlRGlzcG9zYWxCaW4iLCJlZmZlY3QiLCJ1c2VNZWRpYVBsYXllciIsInVzZUNsYXNzTmFtZSIsImVsIiwiY2xhc3NOYW1lIiwidXNlRWZmZWN0IiwidG9rZW5zIiwic3BsaXQiLCJ0b2tlbiIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInVzZVJlc2l6ZU9ic2VydmVyIiwiY2FsbGJhY2siLCJvYnNlcnZlciIsIlJlc2l6ZU9ic2VydmVyIiwib2JzZXJ2ZSIsImRpc2Nvbm5lY3QiLCJ1c2VUcmFuc2l0aW9uQWN0aXZlIiwiaXNBY3RpdmUiLCJzZXRJc0FjdGl2ZSIsInVzZVN0YXRlIiwiZGlzcG9zYWwiLCJlbXB0eSIsInVzZU1vdXNlRW50ZXIiLCJpc01vdXNlRW50ZXIiLCJzZXRJc01vdXNlRW50ZXIiLCJ1c2VGb2N1c0luIiwiaXNGb2N1c0luIiwic2V0SXNGb2N1c0luIiwidXNlQWN0aXZlIiwicHJldk1vdXNlRW50ZXIiLCJ1c2VSZWYiLCJjdXJyZW50IiwidXNlQ29sb3JTY2hlbWVQcmVmZXJlbmNlIiwiY29sb3JTY2hlbWUiLCJzZXRDb2xvclNjaGVtZSIsIm1lZGlhIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm9uQ2hhbmdlIiwibWF0Y2hlcyIsInVzZUxheW91dE5hbWUiLCJuYW1lIiwicGxheWVyIiwiJGVsIiwic2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Wdd6fBp8.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/player/vidstack-default-icons.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/player/vidstack-default-icons.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultLayoutIcons: function() { return /* binding */ defaultLayoutIcons; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunks/vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* harmony import */ var _chunks_vidstack_CBF7iUqu_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunks/vidstack-CBF7iUqu.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-CBF7iUqu.js\");\n/* __next_internal_client_entry_do_not_use__ defaultLayoutIcons auto */ \n\n\nfunction createIcon(paths) {\n    function DefaultLayoutIcon(props) {\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chunks_vidstack_CBF7iUqu_js__WEBPACK_IMPORTED_MODULE_1__.Icon, {\n            paths,\n            ...props\n        });\n    }\n    DefaultLayoutIcon.displayName = \"DefaultLayoutIcon\";\n    return DefaultLayoutIcon;\n}\nconst defaultLayoutIcons = {\n    AirPlayButton: {\n        Default: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$5)\n    },\n    GoogleCastButton: {\n        Default: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$24)\n    },\n    PlayButton: {\n        Play: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$62),\n        Pause: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$59),\n        Replay: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$74)\n    },\n    MuteButton: {\n        Mute: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$54),\n        VolumeLow: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$105),\n        VolumeHigh: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$104)\n    },\n    CaptionButton: {\n        On: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$26),\n        Off: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$27)\n    },\n    PIPButton: {\n        Enter: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$61),\n        Exit: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$60)\n    },\n    FullscreenButton: {\n        Enter: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$40),\n        Exit: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$39)\n    },\n    SeekButton: {\n        Backward: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$77),\n        Forward: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$81)\n    },\n    DownloadButton: {\n        Default: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$31)\n    },\n    Menu: {\n        Accessibility: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$0),\n        ArrowLeft: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$11),\n        ArrowRight: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$22),\n        Audio: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$53),\n        Chapters: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$16),\n        Captions: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$27),\n        Playback: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$63),\n        Settings: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$88),\n        AudioBoostUp: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$104),\n        AudioBoostDown: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$105),\n        SpeedUp: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$35),\n        SpeedDown: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$34),\n        QualityUp: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$13),\n        QualityDown: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$8),\n        FontSizeUp: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$13),\n        FontSizeDown: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$8),\n        OpacityUp: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$33),\n        OpacityDown: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$56),\n        RadioCheck: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$19)\n    },\n    KeyboardDisplay: {\n        Play: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$62),\n        Pause: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$59),\n        Mute: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$54),\n        VolumeUp: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$104),\n        VolumeDown: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$105),\n        EnterFullscreen: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$40),\n        ExitFullscreen: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$39),\n        EnterPiP: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$61),\n        ExitPiP: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$60),\n        CaptionsOn: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$26),\n        CaptionsOff: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$27),\n        SeekForward: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$35),\n        SeekBackward: createIcon(_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_2__.Icon$34)\n    }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L3BsYXllci92aWRzdGFjay1kZWZhdWx0LWljb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7d0VBRStCO0FBQ3VTO0FBQ2hSO0FBRXRELFNBQVNpQyxXQUFXQyxLQUFLO0lBQ3ZCLFNBQVNDLGtCQUFrQkMsS0FBSztRQUM5QixPQUFPLGFBQWEsaUJBQUdwQyxnREFBbUIsQ0FBQ2dDLDhEQUFJQSxFQUFFO1lBQUVFO1lBQU8sR0FBR0UsS0FBSztRQUFDO0lBQ3JFO0lBQ0FELGtCQUFrQkcsV0FBVyxHQUFHO0lBQ2hDLE9BQU9IO0FBQ1Q7QUFDQSxNQUFNSSxxQkFBcUI7SUFDekJDLGVBQWU7UUFDYkMsU0FBU1IsV0FBV2hDLCtEQUFNQTtJQUM1QjtJQUNBeUMsa0JBQWtCO1FBQ2hCRCxTQUFTUixXQUFXL0IsZ0VBQU9BO0lBQzdCO0lBQ0F5QyxZQUFZO1FBQ1ZDLE1BQU1YLFdBQVc5QixnRUFBT0E7UUFDeEIwQyxPQUFPWixXQUFXN0IsZ0VBQU9BO1FBQ3pCMEMsUUFBUWIsV0FBVzVCLGdFQUFPQTtJQUM1QjtJQUNBMEMsWUFBWTtRQUNWQyxNQUFNZixXQUFXM0IsZ0VBQU9BO1FBQ3hCMkMsV0FBV2hCLFdBQVcxQixpRUFBUUE7UUFDOUIyQyxZQUFZakIsV0FBV3pCLGlFQUFRQTtJQUNqQztJQUNBMkMsZUFBZTtRQUNiQyxJQUFJbkIsV0FBV3hCLGdFQUFPQTtRQUN0QjRDLEtBQUtwQixXQUFXdkIsZ0VBQU9BO0lBQ3pCO0lBQ0E0QyxXQUFXO1FBQ1RDLE9BQU90QixXQUFXdEIsZ0VBQU9BO1FBQ3pCNkMsTUFBTXZCLFdBQVdyQixnRUFBT0E7SUFDMUI7SUFDQTZDLGtCQUFrQjtRQUNoQkYsT0FBT3RCLFdBQVdwQixnRUFBT0E7UUFDekIyQyxNQUFNdkIsV0FBV25CLGdFQUFPQTtJQUMxQjtJQUNBNEMsWUFBWTtRQUNWQyxVQUFVMUIsV0FBV2xCLGdFQUFPQTtRQUM1QjZDLFNBQVMzQixXQUFXakIsZ0VBQU9BO0lBQzdCO0lBQ0E2QyxnQkFBZ0I7UUFDZHBCLFNBQVNSLFdBQVdoQixnRUFBT0E7SUFDN0I7SUFDQTZDLE1BQU07UUFDSkMsZUFBZTlCLFdBQVdmLCtEQUFNQTtRQUNoQzhDLFdBQVcvQixXQUFXZCxnRUFBT0E7UUFDN0I4QyxZQUFZaEMsV0FBV2IsZ0VBQU9BO1FBQzlCOEMsT0FBT2pDLFdBQVdaLGdFQUFPQTtRQUN6QjhDLFVBQVVsQyxXQUFXWCxnRUFBT0E7UUFDNUI4QyxVQUFVbkMsV0FBV3ZCLGdFQUFPQTtRQUM1QjJELFVBQVVwQyxXQUFXVixnRUFBT0E7UUFDNUIrQyxVQUFVckMsV0FBV1QsZ0VBQU9BO1FBQzVCK0MsY0FBY3RDLFdBQVd6QixpRUFBUUE7UUFDakNnRSxnQkFBZ0J2QyxXQUFXMUIsaUVBQVFBO1FBQ25Da0UsU0FBU3hDLFdBQVdSLGdFQUFPQTtRQUMzQmlELFdBQVd6QyxXQUFXUCxnRUFBT0E7UUFDN0JpRCxXQUFXMUMsV0FBV04sZ0VBQU9BO1FBQzdCaUQsYUFBYTNDLFdBQVdMLCtEQUFNQTtRQUM5QmlELFlBQVk1QyxXQUFXTixnRUFBT0E7UUFDOUJtRCxjQUFjN0MsV0FBV0wsK0RBQU1BO1FBQy9CbUQsV0FBVzlDLFdBQVdKLGdFQUFPQTtRQUM3Qm1ELGFBQWEvQyxXQUFXSCxnRUFBT0E7UUFDL0JtRCxZQUFZaEQsV0FBV0YsZ0VBQU9BO0lBQ2hDO0lBQ0FtRCxpQkFBaUI7UUFDZnRDLE1BQU1YLFdBQVc5QixnRUFBT0E7UUFDeEIwQyxPQUFPWixXQUFXN0IsZ0VBQU9BO1FBQ3pCNEMsTUFBTWYsV0FBVzNCLGdFQUFPQTtRQUN4QjZFLFVBQVVsRCxXQUFXekIsaUVBQVFBO1FBQzdCNEUsWUFBWW5ELFdBQVcxQixpRUFBUUE7UUFDL0I4RSxpQkFBaUJwRCxXQUFXcEIsZ0VBQU9BO1FBQ25DeUUsZ0JBQWdCckQsV0FBV25CLGdFQUFPQTtRQUNsQ3lFLFVBQVV0RCxXQUFXdEIsZ0VBQU9BO1FBQzVCNkUsU0FBU3ZELFdBQVdyQixnRUFBT0E7UUFDM0I2RSxZQUFZeEQsV0FBV3hCLGdFQUFPQTtRQUM5QmlGLGFBQWF6RCxXQUFXdkIsZ0VBQU9BO1FBQy9CaUYsYUFBYTFELFdBQVdSLGdFQUFPQTtRQUMvQm1FLGNBQWMzRCxXQUFXUCxnRUFBT0E7SUFDbEM7QUFDRjtBQUU4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHZpZHN0YWNrL3JlYWN0L2Rldi9wbGF5ZXIvdmlkc3RhY2stZGVmYXVsdC1pY29ucy5qcz9kM2UyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEljb24kNSwgSWNvbiQyNCwgSWNvbiQ2MiwgSWNvbiQ1OSwgSWNvbiQ3NCwgSWNvbiQ1NCwgSWNvbiQxMDUsIEljb24kMTA0LCBJY29uJDI2LCBJY29uJDI3LCBJY29uJDYxLCBJY29uJDYwLCBJY29uJDQwLCBJY29uJDM5LCBJY29uJDc3LCBJY29uJDgxLCBJY29uJDMxLCBJY29uJDAsIEljb24kMTEsIEljb24kMjIsIEljb24kNTMsIEljb24kMTYsIEljb24kNjMsIEljb24kODgsIEljb24kMzUsIEljb24kMzQsIEljb24kMTMsIEljb24kOCwgSWNvbiQzMywgSWNvbiQ1NiwgSWNvbiQxOSB9IGZyb20gJy4uL2NodW5rcy92aWRzdGFjay0zaHMzLThpXy5qcyc7XG5pbXBvcnQgeyBJY29uIH0gZnJvbSAnLi4vY2h1bmtzL3ZpZHN0YWNrLUNCRjdpVXF1LmpzJztcblxuZnVuY3Rpb24gY3JlYXRlSWNvbihwYXRocykge1xuICBmdW5jdGlvbiBEZWZhdWx0TGF5b3V0SWNvbihwcm9wcykge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChJY29uLCB7IHBhdGhzLCAuLi5wcm9wcyB9KTtcbiAgfVxuICBEZWZhdWx0TGF5b3V0SWNvbi5kaXNwbGF5TmFtZSA9IFwiRGVmYXVsdExheW91dEljb25cIjtcbiAgcmV0dXJuIERlZmF1bHRMYXlvdXRJY29uO1xufVxuY29uc3QgZGVmYXVsdExheW91dEljb25zID0ge1xuICBBaXJQbGF5QnV0dG9uOiB7XG4gICAgRGVmYXVsdDogY3JlYXRlSWNvbihJY29uJDUpXG4gIH0sXG4gIEdvb2dsZUNhc3RCdXR0b246IHtcbiAgICBEZWZhdWx0OiBjcmVhdGVJY29uKEljb24kMjQpXG4gIH0sXG4gIFBsYXlCdXR0b246IHtcbiAgICBQbGF5OiBjcmVhdGVJY29uKEljb24kNjIpLFxuICAgIFBhdXNlOiBjcmVhdGVJY29uKEljb24kNTkpLFxuICAgIFJlcGxheTogY3JlYXRlSWNvbihJY29uJDc0KVxuICB9LFxuICBNdXRlQnV0dG9uOiB7XG4gICAgTXV0ZTogY3JlYXRlSWNvbihJY29uJDU0KSxcbiAgICBWb2x1bWVMb3c6IGNyZWF0ZUljb24oSWNvbiQxMDUpLFxuICAgIFZvbHVtZUhpZ2g6IGNyZWF0ZUljb24oSWNvbiQxMDQpXG4gIH0sXG4gIENhcHRpb25CdXR0b246IHtcbiAgICBPbjogY3JlYXRlSWNvbihJY29uJDI2KSxcbiAgICBPZmY6IGNyZWF0ZUljb24oSWNvbiQyNylcbiAgfSxcbiAgUElQQnV0dG9uOiB7XG4gICAgRW50ZXI6IGNyZWF0ZUljb24oSWNvbiQ2MSksXG4gICAgRXhpdDogY3JlYXRlSWNvbihJY29uJDYwKVxuICB9LFxuICBGdWxsc2NyZWVuQnV0dG9uOiB7XG4gICAgRW50ZXI6IGNyZWF0ZUljb24oSWNvbiQ0MCksXG4gICAgRXhpdDogY3JlYXRlSWNvbihJY29uJDM5KVxuICB9LFxuICBTZWVrQnV0dG9uOiB7XG4gICAgQmFja3dhcmQ6IGNyZWF0ZUljb24oSWNvbiQ3NyksXG4gICAgRm9yd2FyZDogY3JlYXRlSWNvbihJY29uJDgxKVxuICB9LFxuICBEb3dubG9hZEJ1dHRvbjoge1xuICAgIERlZmF1bHQ6IGNyZWF0ZUljb24oSWNvbiQzMSlcbiAgfSxcbiAgTWVudToge1xuICAgIEFjY2Vzc2liaWxpdHk6IGNyZWF0ZUljb24oSWNvbiQwKSxcbiAgICBBcnJvd0xlZnQ6IGNyZWF0ZUljb24oSWNvbiQxMSksXG4gICAgQXJyb3dSaWdodDogY3JlYXRlSWNvbihJY29uJDIyKSxcbiAgICBBdWRpbzogY3JlYXRlSWNvbihJY29uJDUzKSxcbiAgICBDaGFwdGVyczogY3JlYXRlSWNvbihJY29uJDE2KSxcbiAgICBDYXB0aW9uczogY3JlYXRlSWNvbihJY29uJDI3KSxcbiAgICBQbGF5YmFjazogY3JlYXRlSWNvbihJY29uJDYzKSxcbiAgICBTZXR0aW5nczogY3JlYXRlSWNvbihJY29uJDg4KSxcbiAgICBBdWRpb0Jvb3N0VXA6IGNyZWF0ZUljb24oSWNvbiQxMDQpLFxuICAgIEF1ZGlvQm9vc3REb3duOiBjcmVhdGVJY29uKEljb24kMTA1KSxcbiAgICBTcGVlZFVwOiBjcmVhdGVJY29uKEljb24kMzUpLFxuICAgIFNwZWVkRG93bjogY3JlYXRlSWNvbihJY29uJDM0KSxcbiAgICBRdWFsaXR5VXA6IGNyZWF0ZUljb24oSWNvbiQxMyksXG4gICAgUXVhbGl0eURvd246IGNyZWF0ZUljb24oSWNvbiQ4KSxcbiAgICBGb250U2l6ZVVwOiBjcmVhdGVJY29uKEljb24kMTMpLFxuICAgIEZvbnRTaXplRG93bjogY3JlYXRlSWNvbihJY29uJDgpLFxuICAgIE9wYWNpdHlVcDogY3JlYXRlSWNvbihJY29uJDMzKSxcbiAgICBPcGFjaXR5RG93bjogY3JlYXRlSWNvbihJY29uJDU2KSxcbiAgICBSYWRpb0NoZWNrOiBjcmVhdGVJY29uKEljb24kMTkpXG4gIH0sXG4gIEtleWJvYXJkRGlzcGxheToge1xuICAgIFBsYXk6IGNyZWF0ZUljb24oSWNvbiQ2MiksXG4gICAgUGF1c2U6IGNyZWF0ZUljb24oSWNvbiQ1OSksXG4gICAgTXV0ZTogY3JlYXRlSWNvbihJY29uJDU0KSxcbiAgICBWb2x1bWVVcDogY3JlYXRlSWNvbihJY29uJDEwNCksXG4gICAgVm9sdW1lRG93bjogY3JlYXRlSWNvbihJY29uJDEwNSksXG4gICAgRW50ZXJGdWxsc2NyZWVuOiBjcmVhdGVJY29uKEljb24kNDApLFxuICAgIEV4aXRGdWxsc2NyZWVuOiBjcmVhdGVJY29uKEljb24kMzkpLFxuICAgIEVudGVyUGlQOiBjcmVhdGVJY29uKEljb24kNjEpLFxuICAgIEV4aXRQaVA6IGNyZWF0ZUljb24oSWNvbiQ2MCksXG4gICAgQ2FwdGlvbnNPbjogY3JlYXRlSWNvbihJY29uJDI2KSxcbiAgICBDYXB0aW9uc09mZjogY3JlYXRlSWNvbihJY29uJDI3KSxcbiAgICBTZWVrRm9yd2FyZDogY3JlYXRlSWNvbihJY29uJDM1KSxcbiAgICBTZWVrQmFja3dhcmQ6IGNyZWF0ZUljb24oSWNvbiQzNClcbiAgfVxufTtcblxuZXhwb3J0IHsgZGVmYXVsdExheW91dEljb25zIH07XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJJY29uJDUiLCJJY29uJDI0IiwiSWNvbiQ2MiIsIkljb24kNTkiLCJJY29uJDc0IiwiSWNvbiQ1NCIsIkljb24kMTA1IiwiSWNvbiQxMDQiLCJJY29uJDI2IiwiSWNvbiQyNyIsIkljb24kNjEiLCJJY29uJDYwIiwiSWNvbiQ0MCIsIkljb24kMzkiLCJJY29uJDc3IiwiSWNvbiQ4MSIsIkljb24kMzEiLCJJY29uJDAiLCJJY29uJDExIiwiSWNvbiQyMiIsIkljb24kNTMiLCJJY29uJDE2IiwiSWNvbiQ2MyIsIkljb24kODgiLCJJY29uJDM1IiwiSWNvbiQzNCIsIkljb24kMTMiLCJJY29uJDgiLCJJY29uJDMzIiwiSWNvbiQ1NiIsIkljb24kMTkiLCJJY29uIiwiY3JlYXRlSWNvbiIsInBhdGhzIiwiRGVmYXVsdExheW91dEljb24iLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJkaXNwbGF5TmFtZSIsImRlZmF1bHRMYXlvdXRJY29ucyIsIkFpclBsYXlCdXR0b24iLCJEZWZhdWx0IiwiR29vZ2xlQ2FzdEJ1dHRvbiIsIlBsYXlCdXR0b24iLCJQbGF5IiwiUGF1c2UiLCJSZXBsYXkiLCJNdXRlQnV0dG9uIiwiTXV0ZSIsIlZvbHVtZUxvdyIsIlZvbHVtZUhpZ2giLCJDYXB0aW9uQnV0dG9uIiwiT24iLCJPZmYiLCJQSVBCdXR0b24iLCJFbnRlciIsIkV4aXQiLCJGdWxsc2NyZWVuQnV0dG9uIiwiU2Vla0J1dHRvbiIsIkJhY2t3YXJkIiwiRm9yd2FyZCIsIkRvd25sb2FkQnV0dG9uIiwiTWVudSIsIkFjY2Vzc2liaWxpdHkiLCJBcnJvd0xlZnQiLCJBcnJvd1JpZ2h0IiwiQXVkaW8iLCJDaGFwdGVycyIsIkNhcHRpb25zIiwiUGxheWJhY2siLCJTZXR0aW5ncyIsIkF1ZGlvQm9vc3RVcCIsIkF1ZGlvQm9vc3REb3duIiwiU3BlZWRVcCIsIlNwZWVkRG93biIsIlF1YWxpdHlVcCIsIlF1YWxpdHlEb3duIiwiRm9udFNpemVVcCIsIkZvbnRTaXplRG93biIsIk9wYWNpdHlVcCIsIk9wYWNpdHlEb3duIiwiUmFkaW9DaGVjayIsIktleWJvYXJkRGlzcGxheSIsIlZvbHVtZVVwIiwiVm9sdW1lRG93biIsIkVudGVyRnVsbHNjcmVlbiIsIkV4aXRGdWxsc2NyZWVuIiwiRW50ZXJQaVAiLCJFeGl0UGlQIiwiQ2FwdGlvbnNPbiIsIkNhcHRpb25zT2ZmIiwiU2Vla0ZvcndhcmQiLCJTZWVrQmFja3dhcmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/player/vidstack-default-icons.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/vidstack.js":
/*!******************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/vidstack.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ARIAKeyShortcuts: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.ARIAKeyShortcuts; },\n/* harmony export */   AUDIO_EXTENSIONS: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.AUDIO_EXTENSIONS; },\n/* harmony export */   AUDIO_TYPES: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.AUDIO_TYPES; },\n/* harmony export */   AirPlayButton: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.AirPlayButton; },\n/* harmony export */   AirPlayButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.AirPlayButtonInstance; },\n/* harmony export */   AudioGainSlider: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.audioGainSlider; },\n/* harmony export */   AudioGainSliderInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.AudioGainSliderInstance; },\n/* harmony export */   AudioProviderLoader: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.AudioProviderLoader; },\n/* harmony export */   AudioTrackList: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.AudioTrackList; },\n/* harmony export */   Caption: function() { return /* binding */ caption; },\n/* harmony export */   CaptionButton: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.CaptionButton; },\n/* harmony export */   CaptionButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.CaptionButtonInstance; },\n/* harmony export */   Captions: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.Captions; },\n/* harmony export */   CaptionsInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.CaptionsInstance; },\n/* harmony export */   ChapterTitle: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.ChapterTitle; },\n/* harmony export */   Controls: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.controls; },\n/* harmony export */   ControlsGroupInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.ControlsGroupInstance; },\n/* harmony export */   ControlsInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.ControlsInstance; },\n/* harmony export */   DASHProviderLoader: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.DASHProviderLoader; },\n/* harmony export */   DASH_VIDEO_EXTENSIONS: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.DASH_VIDEO_EXTENSIONS; },\n/* harmony export */   DASH_VIDEO_TYPES: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.DASH_VIDEO_TYPES; },\n/* harmony export */   DEFAULT_AUDIO_GAINS: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_AUDIO_GAINS; },\n/* harmony export */   DEFAULT_PLAYBACK_RATES: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_PLAYBACK_RATES; },\n/* harmony export */   FullscreenButton: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.FullscreenButton; },\n/* harmony export */   FullscreenButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.FullscreenButtonInstance; },\n/* harmony export */   FullscreenController: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.FullscreenController; },\n/* harmony export */   Gesture: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.Gesture; },\n/* harmony export */   GestureInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.GestureInstance; },\n/* harmony export */   GoogleCastButton: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.GoogleCastButton; },\n/* harmony export */   GoogleCastButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.GoogleCastButtonInstance; },\n/* harmony export */   HLSProviderLoader: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.HLSProviderLoader; },\n/* harmony export */   HLS_VIDEO_EXTENSIONS: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.HLS_VIDEO_EXTENSIONS; },\n/* harmony export */   HLS_VIDEO_TYPES: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.HLS_VIDEO_TYPES; },\n/* harmony export */   Icon: function() { return /* reexport safe */ _chunks_vidstack_CBF7iUqu_js__WEBPACK_IMPORTED_MODULE_7__.Icon; },\n/* harmony export */   LibASSTextRenderer: function() { return /* binding */ LibASSTextRenderer; },\n/* harmony export */   List: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.List; },\n/* harmony export */   LiveButton: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.LiveButton; },\n/* harmony export */   LiveButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.LiveButtonInstance; },\n/* harmony export */   LocalMediaStorage: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.LocalMediaStorage; },\n/* harmony export */   Logger: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.Logger; },\n/* harmony export */   MEDIA_KEY_SHORTCUTS: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MEDIA_KEY_SHORTCUTS; },\n/* harmony export */   MediaAnnouncer: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.MediaAnnouncer; },\n/* harmony export */   MediaAnnouncerInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MediaAnnouncerInstance; },\n/* harmony export */   MediaControls: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MediaControls; },\n/* harmony export */   MediaPlayer: function() { return /* binding */ MediaPlayer; },\n/* harmony export */   MediaPlayerInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MediaPlayerInstance; },\n/* harmony export */   MediaProvider: function() { return /* binding */ MediaProvider; },\n/* harmony export */   MediaProviderInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MediaProviderInstance; },\n/* harmony export */   MediaRemoteControl: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MediaRemoteControl; },\n/* harmony export */   Menu: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.menu; },\n/* harmony export */   MenuButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MenuButtonInstance; },\n/* harmony export */   MenuInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MenuInstance; },\n/* harmony export */   MenuItemInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MenuItemInstance; },\n/* harmony export */   MenuItemsInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MenuItemsInstance; },\n/* harmony export */   MenuPortalInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MenuPortalInstance; },\n/* harmony export */   MuteButton: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.MuteButton; },\n/* harmony export */   MuteButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MuteButtonInstance; },\n/* harmony export */   PIPButton: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.PIPButton; },\n/* harmony export */   PIPButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.PIPButtonInstance; },\n/* harmony export */   PlayButton: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.PlayButton; },\n/* harmony export */   PlayButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.PlayButtonInstance; },\n/* harmony export */   Poster: function() { return /* binding */ Poster; },\n/* harmony export */   PosterInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.PosterInstance; },\n/* harmony export */   QualitySlider: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.qualitySlider; },\n/* harmony export */   QualitySliderInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.QualitySliderInstance; },\n/* harmony export */   RadioGroup: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.radioGroup; },\n/* harmony export */   RadioGroupInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.RadioGroupInstance; },\n/* harmony export */   RadioInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.RadioInstance; },\n/* harmony export */   ScreenOrientationController: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.ScreenOrientationController; },\n/* harmony export */   SeekButton: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.SeekButton; },\n/* harmony export */   SeekButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.SeekButtonInstance; },\n/* harmony export */   Slider: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.slider; },\n/* harmony export */   SliderChaptersInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.SliderChaptersInstance; },\n/* harmony export */   SliderInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.SliderInstance; },\n/* harmony export */   SliderPreviewInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.SliderPreviewInstance; },\n/* harmony export */   SliderThumbnailInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.SliderThumbnailInstance; },\n/* harmony export */   SliderValueInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.SliderValueInstance; },\n/* harmony export */   SliderVideoInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.SliderVideoInstance; },\n/* harmony export */   SpeedSlider: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.speedSlider; },\n/* harmony export */   SpeedSliderInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.SpeedSliderInstance; },\n/* harmony export */   Spinner: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.spinner; },\n/* harmony export */   TextRenderers: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TextRenderers; },\n/* harmony export */   TextTrack: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TextTrack; },\n/* harmony export */   TextTrackList: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TextTrackList; },\n/* harmony export */   Thumbnail: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.thumbnail; },\n/* harmony export */   ThumbnailInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.ThumbnailInstance; },\n/* harmony export */   Time: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.Time; },\n/* harmony export */   TimeInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TimeInstance; },\n/* harmony export */   TimeRange: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TimeRange; },\n/* harmony export */   TimeSlider: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.timeSlider; },\n/* harmony export */   TimeSliderInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TimeSliderInstance; },\n/* harmony export */   Title: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.Title; },\n/* harmony export */   ToggleButton: function() { return /* binding */ ToggleButton; },\n/* harmony export */   ToggleButtonInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.ToggleButtonInstance; },\n/* harmony export */   Tooltip: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.tooltip; },\n/* harmony export */   TooltipContentInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TooltipContentInstance; },\n/* harmony export */   TooltipInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TooltipInstance; },\n/* harmony export */   TooltipTriggerInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TooltipTriggerInstance; },\n/* harmony export */   Track: function() { return /* binding */ Track; },\n/* harmony export */   VIDEO_EXTENSIONS: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.VIDEO_EXTENSIONS; },\n/* harmony export */   VIDEO_TYPES: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.VIDEO_TYPES; },\n/* harmony export */   VideoProviderLoader: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.VideoProviderLoader; },\n/* harmony export */   VideoQualityList: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.VideoQualityList; },\n/* harmony export */   VimeoProviderLoader: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.VimeoProviderLoader; },\n/* harmony export */   VolumeSlider: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.volumeSlider; },\n/* harmony export */   VolumeSliderInstance: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.VolumeSliderInstance; },\n/* harmony export */   YouTubeProviderLoader: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.YouTubeProviderLoader; },\n/* harmony export */   appendTriggerEvent: function() { return /* reexport safe */ _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.appendTriggerEvent; },\n/* harmony export */   canChangeVolume: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.canChangeVolume; },\n/* harmony export */   canFullscreen: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.canFullscreen; },\n/* harmony export */   canGoogleCastSrc: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.canGoogleCastSrc; },\n/* harmony export */   canOrientScreen: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.canOrientScreen; },\n/* harmony export */   canPlayHLSNatively: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.canPlayHLSNatively; },\n/* harmony export */   canRotateScreen: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.canRotateScreen; },\n/* harmony export */   canUsePictureInPicture: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.canUsePictureInPicture; },\n/* harmony export */   canUseVideoPresentation: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.canUseVideoPresentation; },\n/* harmony export */   createTextTrack: function() { return /* binding */ createTextTrack; },\n/* harmony export */   findActiveCue: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.findActiveCue; },\n/* harmony export */   findTriggerEvent: function() { return /* reexport safe */ _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.findTriggerEvent; },\n/* harmony export */   formatSpokenTime: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.formatSpokenTime; },\n/* harmony export */   formatTime: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.formatTime; },\n/* harmony export */   getDownloadFile: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.getDownloadFile; },\n/* harmony export */   getTimeRangesEnd: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.getTimeRangesEnd; },\n/* harmony export */   getTimeRangesStart: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.getTimeRangesStart; },\n/* harmony export */   hasTriggerEvent: function() { return /* reexport safe */ _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.hasTriggerEvent; },\n/* harmony export */   isAudioProvider: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isAudioProvider; },\n/* harmony export */   isAudioSrc: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isAudioSrc; },\n/* harmony export */   isCueActive: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isCueActive; },\n/* harmony export */   isDASHProvider: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isDASHProvider; },\n/* harmony export */   isDASHSrc: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isDASHSrc; },\n/* harmony export */   isGoogleCastProvider: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isGoogleCastProvider; },\n/* harmony export */   isHLSProvider: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isHLSProvider; },\n/* harmony export */   isHLSSrc: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isHLSSrc; },\n/* harmony export */   isHTMLAudioElement: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLAudioElement; },\n/* harmony export */   isHTMLIFrameElement: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLIFrameElement; },\n/* harmony export */   isHTMLMediaElement: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLMediaElement; },\n/* harmony export */   isHTMLVideoElement: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLVideoElement; },\n/* harmony export */   isKeyboardClick: function() { return /* reexport safe */ _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isKeyboardClick; },\n/* harmony export */   isKeyboardEvent: function() { return /* reexport safe */ _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isKeyboardEvent; },\n/* harmony export */   isMediaStream: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isMediaStream; },\n/* harmony export */   isPointerEvent: function() { return /* reexport safe */ _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isPointerEvent; },\n/* harmony export */   isTrackCaptionKind: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isTrackCaptionKind; },\n/* harmony export */   isVideoProvider: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isVideoProvider; },\n/* harmony export */   isVideoQualitySrc: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isVideoQualitySrc; },\n/* harmony export */   isVideoSrc: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isVideoSrc; },\n/* harmony export */   isVimeoProvider: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isVimeoProvider; },\n/* harmony export */   isYouTubeProvider: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isYouTubeProvider; },\n/* harmony export */   mediaContext: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.mediaContext; },\n/* harmony export */   mediaState: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.mediaState; },\n/* harmony export */   normalizeTimeIntervals: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.normalizeTimeIntervals; },\n/* harmony export */   parseJSONCaptionsFile: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.parseJSONCaptionsFile; },\n/* harmony export */   sliderState: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.sliderState; },\n/* harmony export */   softResetMediaState: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.softResetMediaState; },\n/* harmony export */   sortVideoQualities: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.sortVideoQualities; },\n/* harmony export */   updateTimeIntervals: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.updateTimeIntervals; },\n/* harmony export */   useActiveTextCues: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.useActiveTextCues; },\n/* harmony export */   useActiveTextTrack: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.useActiveTextTrack; },\n/* harmony export */   useActiveThumbnail: function() { return /* binding */ useActiveThumbnail; },\n/* harmony export */   useAudioGainOptions: function() { return /* binding */ useAudioGainOptions; },\n/* harmony export */   useAudioOptions: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useAudioOptions; },\n/* harmony export */   useCaptionOptions: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useCaptionOptions; },\n/* harmony export */   useChapterOptions: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.useChapterOptions; },\n/* harmony export */   useChapterTitle: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.useChapterTitle; },\n/* harmony export */   useMediaContext: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext; },\n/* harmony export */   useMediaPlayer: function() { return /* reexport safe */ _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaPlayer; },\n/* harmony export */   useMediaProvider: function() { return /* binding */ useMediaProvider; },\n/* harmony export */   useMediaRemote: function() { return /* reexport safe */ _chunks_vidstack_D3MJ0cre_js__WEBPACK_IMPORTED_MODULE_5__.useMediaRemote; },\n/* harmony export */   useMediaState: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.useMediaState; },\n/* harmony export */   useMediaStore: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.useMediaStore; },\n/* harmony export */   usePlaybackRateOptions: function() { return /* reexport safe */ _chunks_vidstack_D3MJ0cre_js__WEBPACK_IMPORTED_MODULE_5__.usePlaybackRateOptions; },\n/* harmony export */   useSliderPreview: function() { return /* binding */ useSliderPreview; },\n/* harmony export */   useSliderState: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.useSliderState; },\n/* harmony export */   useSliderStore: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.useSliderStore; },\n/* harmony export */   useState: function() { return /* binding */ useState; },\n/* harmony export */   useStore: function() { return /* binding */ useStore; },\n/* harmony export */   useTextCues: function() { return /* reexport safe */ _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.useTextCues; },\n/* harmony export */   useThumbnails: function() { return /* binding */ useThumbnails; },\n/* harmony export */   useVideoQualityOptions: function() { return /* reexport safe */ _chunks_vidstack_D3MJ0cre_js__WEBPACK_IMPORTED_MODULE_5__.useVideoQualityOptions; },\n/* harmony export */   walkTriggerEventChain: function() { return /* reexport safe */ _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.walkTriggerEventChain; },\n/* harmony export */   watchActiveTextTrack: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.watchActiveTextTrack; },\n/* harmony export */   watchCueTextChange: function() { return /* reexport safe */ _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.watchCueTextChange; }\n/* harmony export */ });\n/* harmony import */ var _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunks/vidstack-Nm9OJy7x.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Nm9OJy7x.js\");\n/* harmony import */ var _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunks/vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunks/vidstack-DcX2JzmB.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-DcX2JzmB.js\");\n/* harmony import */ var _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunks/vidstack-BOkHoBGu.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BOkHoBGu.js\");\n/* harmony import */ var _chunks_vidstack_CBF7iUqu_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chunks/vidstack-CBF7iUqu.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-CBF7iUqu.js\");\n/* harmony import */ var _chunks_vidstack_D3MJ0cre_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunks/vidstack-D3MJ0cre.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-D3MJ0cre.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* __next_internal_client_entry_do_not_use__ ARIAKeyShortcuts,AUDIO_EXTENSIONS,AUDIO_TYPES,AirPlayButtonInstance,AudioGainSliderInstance,AudioProviderLoader,AudioTrackList,CaptionButtonInstance,CaptionsInstance,ControlsGroupInstance,ControlsInstance,DASHProviderLoader,DASH_VIDEO_EXTENSIONS,DASH_VIDEO_TYPES,DEFAULT_PLAYBACK_RATES,FullscreenButtonInstance,FullscreenController,GestureInstance,GoogleCastButtonInstance,HLSProviderLoader,HLS_VIDEO_EXTENSIONS,HLS_VIDEO_TYPES,List,LiveButtonInstance,LocalMediaStorage,Logger,MEDIA_KEY_SHORTCUTS,MediaAnnouncerInstance,MediaControls,MediaRemoteControl,MenuButtonInstance,MenuInstance,MenuItemInstance,MenuItemsInstance,MenuPortalInstance,MuteButtonInstance,PIPButtonInstance,PlayButtonInstance,QualitySliderInstance,RadioGroupInstance,RadioInstance,ScreenOrientationController,SeekButtonInstance,SliderChaptersInstance,SliderInstance,SliderPreviewInstance,SliderThumbnailInstance,SliderValueInstance,SliderVideoInstance,SpeedSliderInstance,TextRenderers,TextTrackList,ThumbnailInstance,TimeInstance,TimeRange,TimeSliderInstance,TooltipContentInstance,TooltipInstance,TooltipTriggerInstance,VIDEO_EXTENSIONS,VIDEO_TYPES,VideoProviderLoader,VideoQualityList,VimeoProviderLoader,VolumeSliderInstance,YouTubeProviderLoader,canChangeVolume,canFullscreen,canGoogleCastSrc,canOrientScreen,canPlayHLSNatively,canRotateScreen,canUsePictureInPicture,canUseVideoPresentation,findActiveCue,formatSpokenTime,formatTime,getDownloadFile,getTimeRangesEnd,getTimeRangesStart,isAudioProvider,isAudioSrc,isCueActive,isDASHProvider,isDASHSrc,isGoogleCastProvider,isHLSProvider,isHLSSrc,isHTMLAudioElement,isHTMLIFrameElement,isHTMLMediaElement,isHTMLVideoElement,isMediaStream,isTrackCaptionKind,isVideoProvider,isVideoQualitySrc,isVideoSrc,isVimeoProvider,isYouTubeProvider,mediaContext,normalizeTimeIntervals,parseJSONCaptionsFile,sliderState,softResetMediaState,sortVideoQualities,updateTimeIntervals,useMediaStore,useSliderState,useSliderStore,watchActiveTextTrack,watchCueTextChange,appendTriggerEvent,findTriggerEvent,hasTriggerEvent,isKeyboardClick,isKeyboardEvent,isPointerEvent,walkTriggerEventChain,AudioGainSlider,Captions,ChapterTitle,Controls,GoogleCastButton,MediaAnnouncer,QualitySlider,SpeedSlider,Spinner,Title,Tooltip,useActiveTextCues,useActiveTextTrack,useChapterOptions,useChapterTitle,useTextCues,AirPlayButton,CaptionButton,FullscreenButton,Gesture,LiveButton,Menu,MuteButton,PIPButton,PlayButton,RadioGroup,SeekButton,Slider,Thumbnail,Time,TimeSlider,VolumeSlider,useAudioOptions,useCaptionOptions,useMediaPlayer,useMediaRemote,usePlaybackRateOptions,useVideoQualityOptions,Caption,DEFAULT_AUDIO_GAINS,Icon,LibASSTextRenderer,MediaPlayer,MediaPlayerInstance,MediaProvider,MediaProviderInstance,Poster,PosterInstance,TextTrack,ToggleButton,ToggleButtonInstance,Track,createTextTrack,mediaState,useActiveThumbnail,useAudioGainOptions,useMediaContext,useMediaProvider,useMediaState,useSliderPreview,useState,useStore,useThumbnails auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass LibASSTextRenderer {\n    canRender(track, video) {\n        return !!video && !!track.src && ((0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.isString)(track.type) && this._typeRE.test(track.type) || this._typeRE.test(track.src));\n    }\n    attach(video) {\n        if (!video) return;\n        this.loader().then(async (mod)=>{\n            var _this__track;\n            this._instance = new mod.default({\n                ...this.config,\n                video,\n                subUrl: ((_this__track = this._track) === null || _this__track === void 0 ? void 0 : _this__track.src) || \"\"\n            });\n            (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._instance, \"ready\", ()=>{\n                var _this__instance;\n                const canvas = (_this__instance = this._instance) === null || _this__instance === void 0 ? void 0 : _this__instance._canvas;\n                if (canvas) canvas.style.pointerEvents = \"none\";\n            });\n            (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._instance, \"error\", (event)=>{\n                if (this._track) {\n                    this._track[_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TextTrackSymbol._readyState] = 3;\n                    this._track.dispatchEvent(new _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"error\", {\n                        trigger: event,\n                        detail: event.error\n                    }));\n                }\n            });\n        });\n    }\n    changeTrack(track) {\n        if (!track || track.readyState === 3) {\n            this._freeTrack();\n        } else if (this._track !== track) {\n            var _this__instance;\n            (_this__instance = this._instance) === null || _this__instance === void 0 ? void 0 : _this__instance.setTrackByUrl(track.src);\n            this._track = track;\n        }\n    }\n    detach() {\n        this._freeTrack();\n    }\n    _freeTrack() {\n        var _this__instance;\n        (_this__instance = this._instance) === null || _this__instance === void 0 ? void 0 : _this__instance.freeTrack();\n        this._track = null;\n    }\n    constructor(loader, config){\n        this.loader = loader;\n        this.config = config;\n        this.priority = 1;\n        this._instance = null;\n        this._track = null;\n        this._typeRE = /(ssa|ass)$/;\n    }\n}\nconst playerCallbacks = [\n    \"onAbort\",\n    \"onAudioTrackChange\",\n    \"onAudioTracksChange\",\n    \"onAutoPlay\",\n    \"onAutoPlayChange\",\n    \"onAutoPlayFail\",\n    \"onCanLoad\",\n    \"onCanPlay\",\n    \"onCanPlayThrough\",\n    \"onControlsChange\",\n    \"onDestroy\",\n    \"onDurationChange\",\n    \"onEmptied\",\n    \"onEnd\",\n    \"onEnded\",\n    \"onError\",\n    \"onFindMediaPlayer\",\n    \"onFullscreenChange\",\n    \"onFullscreenError\",\n    \"onLiveChange\",\n    \"onLiveEdgeChange\",\n    \"onLoadedData\",\n    \"onLoadedMetadata\",\n    \"onLoadStart\",\n    \"onLoopChange\",\n    \"onOrientationChange\",\n    \"onPause\",\n    \"onPictureInPictureChange\",\n    \"onPictureInPictureError\",\n    \"onPlay\",\n    \"onPlayFail\",\n    \"onPlaying\",\n    \"onPlaysInlineChange\",\n    \"onPosterChange\",\n    \"onProgress\",\n    \"onProviderChange\",\n    \"onProviderLoaderChange\",\n    \"onProviderSetup\",\n    \"onQualitiesChange\",\n    \"onQualityChange\",\n    \"onRateChange\",\n    \"onReplay\",\n    \"onSeeked\",\n    \"onSeeking\",\n    \"onSourceChange\",\n    \"onSourceChange\",\n    \"onStalled\",\n    \"onStarted\",\n    \"onStreamTypeChange\",\n    \"onSuspend\",\n    \"onTextTrackChange\",\n    \"onTextTracksChange\",\n    \"onTimeUpdate\",\n    \"onTitleChange\",\n    \"onVdsLog\",\n    \"onVideoPresentationChange\",\n    \"onVolumeChange\",\n    \"onWaiting\"\n];\nconst MediaPlayerBridge = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MediaPlayerInstance, {\n    events: playerCallbacks,\n    eventsRegex: /^onHls/,\n    domEventsRegex: /^onMedia/\n});\n_c = MediaPlayerBridge;\nconst MediaPlayer = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(_c1 = (param, forwardRef)=>{\n    let { aspectRatio, children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(MediaPlayerBridge, {\n        ...props,\n        src: props.src,\n        ref: forwardRef,\n        style: {\n            aspectRatio,\n            ...props.style\n        }\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.Primitive.div, {\n            ...props2\n        }, children));\n});\n_c2 = MediaPlayer;\nMediaPlayer.displayName = \"MediaPlayer\";\nconst MediaProviderBridge = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.MediaProviderInstance);\n_c3 = MediaProviderBridge;\nconst MediaProvider = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(_c4 = _s((param, forwardRef)=>{\n    let { loaders = [], children, mediaProps, ...props } = param;\n    _s();\n    const reactLoaders = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(()=>loaders.map((Loader)=>new Loader()), loaders);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(MediaProviderBridge, {\n        ...props,\n        loaders: reactLoaders,\n        ref: forwardRef\n    }, (props2, instance)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", {\n            ...props2\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(MediaOutlet, {\n            ...mediaProps,\n            provider: instance\n        }), children));\n}, \"RahLe7LVVUPOfO+x+vsuEQXdME0=\")), \"RahLe7LVVUPOfO+x+vsuEQXdME0=\");\n_c5 = MediaProvider;\nMediaProvider.displayName = \"MediaProvider\";\nfunction MediaOutlet(param) {\n    let { provider, ...props } = param;\n    _s1();\n    const { crossOrigin, poster, remotePlaybackInfo, nativeControls, viewType } = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext)(_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.mediaState), { loader } = provider.$state, { $provider: $$provider, $providerSetup: $$providerSetup } = (0,_chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext)(), $nativeControls = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(nativeControls), $crossOrigin = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(crossOrigin), $poster = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(poster), $loader = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(loader), $provider = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)($$provider), $providerSetup = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)($$providerSetup), $remoteInfo = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(remotePlaybackInfo), $mediaType = $loader === null || $loader === void 0 ? void 0 : $loader.mediaType(), $viewType = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(viewType), isAudioView = $viewType === \"audio\", isYouTubeEmbed = ($loader === null || $loader === void 0 ? void 0 : $loader.name) === \"youtube\", isVimeoEmbed = ($loader === null || $loader === void 0 ? void 0 : $loader.name) === \"vimeo\", isEmbed = isYouTubeEmbed || isVimeoEmbed, isRemotion = ($loader === null || $loader === void 0 ? void 0 : $loader.name) === \"remotion\", isGoogleCast = ($loader === null || $loader === void 0 ? void 0 : $loader.name) === \"google-cast\", [googleCastIconPaths, setGoogleCastIconPaths] = react__WEBPACK_IMPORTED_MODULE_2__.useState(\"\");\n    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(()=>{\n        if (!isGoogleCast || googleCastIconPaths) return;\n        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./chunks/vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\")).then(function(n) {\n            return n.chromecast;\n        }).then((mod)=>{\n            setGoogleCastIconPaths(mod.default);\n        });\n    }, [\n        isGoogleCast\n    ]);\n    if (isGoogleCast) {\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", {\n            className: \"vds-google-cast\",\n            ref: (el)=>{\n                provider.load(el);\n            }\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(_chunks_vidstack_CBF7iUqu_js__WEBPACK_IMPORTED_MODULE_7__.Icon, {\n            paths: googleCastIconPaths\n        }), ($remoteInfo === null || $remoteInfo === void 0 ? void 0 : $remoteInfo.deviceName) ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"span\", {\n            className: \"vds-google-cast-info\"\n        }, \"Google Cast on\", \" \", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"span\", {\n            className: \"vds-google-cast-device-name\"\n        }, $remoteInfo.deviceName)) : null);\n    }\n    if (isRemotion) {\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", {\n            \"data-remotion-canvas\": true\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", {\n            \"data-remotion-container\": true,\n            ref: (el)=>{\n                provider.load(el);\n            }\n        }, (0,_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.isRemotionProvider)($provider) && $providerSetup ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement($provider.render) : null));\n    }\n    return isEmbed ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"iframe\", {\n        className: isYouTubeEmbed ? \"vds-youtube\" : \"vds-vimeo\",\n        suppressHydrationWarning: true,\n        tabIndex: !$nativeControls ? -1 : void 0,\n        \"aria-hidden\": \"true\",\n        \"data-no-controls\": !$nativeControls ? \"\" : void 0,\n        ref (el) {\n            provider.load(el);\n        }\n    }), !$nativeControls && !isAudioView ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", {\n        className: \"vds-blocker\"\n    }) : null) : $mediaType ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement($mediaType === \"audio\" ? \"audio\" : \"video\", {\n        ...props,\n        controls: $nativeControls ? true : null,\n        crossOrigin: typeof $crossOrigin === \"boolean\" ? \"\" : $crossOrigin,\n        poster: $mediaType === \"video\" && $nativeControls && $poster ? $poster : null,\n        preload: \"none\",\n        \"aria-hidden\": \"true\",\n        suppressHydrationWarning: true,\n        ref (el) {\n            provider.load(el);\n        }\n    }) : null;\n}\n_s1(MediaOutlet, \"06qEnTXIJonC2zwNRRHmeIAV7i0=\", false, function() {\n    return [\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useStateContext,\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal\n    ];\n});\n_c6 = MediaOutlet;\nMediaOutlet.displayName = \"MediaOutlet\";\nfunction createTextTrack(init) {\n    _s2();\n    const media = (0,_chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext)(), track = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(()=>new _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.TextTrack(init), Object.values(init));\n    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(()=>{\n        media.textTracks.add(track);\n        return ()=>void media.textTracks.remove(track);\n    }, [\n        track\n    ]);\n    return track;\n}\n_s2(createTextTrack, \"pYVwNA+LTnE86eOXfDoCOmdwUtg=\", false, function() {\n    return [\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext\n    ];\n});\nfunction Track(param) {\n    let { lang, ...props } = param;\n    createTextTrack({\n        language: lang,\n        ...props\n    });\n    return null;\n}\n_c7 = Track;\nTrack.displayName = \"Track\";\nconst ToggleButtonBridge = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.ToggleButtonInstance);\n_c8 = ToggleButtonBridge;\nconst ToggleButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(_c9 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(ToggleButtonBridge, {\n        ...props\n    }, (props2)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.Primitive.button, {\n            ...props2,\n            ref: (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c10 = ToggleButton;\nToggleButton.displayName = \"ToggleButton\";\nconst PosterBridge = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.createReactComponent)(_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.PosterInstance);\n_c11 = PosterBridge;\nconst Poster = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(_c12 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(PosterBridge, {\n        ...props\n    }, (props2, instance)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(PosterImg, {\n            ...props2,\n            instance,\n            ref: (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.composeRefs)(props2.ref, forwardRef)\n        }, children));\n});\n_c13 = Poster;\nPoster.displayName = \"Poster\";\nconst PosterImg = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(_s3((param, forwardRef)=>{\n    let { instance, children, ...props } = param;\n    _s3();\n    const { src, img, alt, crossOrigin, loading, hidden } = instance.$state, $src = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(src), $alt = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(alt), $crossOrigin = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(crossOrigin), $loading = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(loading), $hidden = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(hidden);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.Primitive.img, {\n        ...props,\n        src: $src || void 0,\n        alt: $alt || void 0,\n        crossOrigin: $crossOrigin || void 0,\n        ref: (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.composeRefs)(img.set, forwardRef),\n        style: {\n            display: $loading || $hidden ? \"none\" : void 0\n        }\n    }, children);\n}, \"8ZoCe33tM2JjyWF8Uht71kSFpcE=\", false, function() {\n    return [\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal\n    ];\n}));\n_c14 = PosterImg;\nPosterImg.displayName = \"PosterImg\";\nconst Root = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(_c15 = (param, forwardRef)=>{\n    let { children, ...props } = param;\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.Primitive.div, {\n        translate: \"yes\",\n        \"aria-live\": \"off\",\n        \"aria-atomic\": \"true\",\n        ...props,\n        ref: forwardRef\n    }, children);\n});\n_c16 = Root;\nRoot.displayName = \"Caption\";\nconst Text = /*#__PURE__*/ _s4(react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(_c17 = _s4((props, forwardRef)=>{\n    _s4();\n    const textTrack = (0,_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.useMediaState)(\"textTrack\"), [activeCue, setActiveCue] = react__WEBPACK_IMPORTED_MODULE_2__.useState();\n    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(()=>{\n        if (!textTrack) return;\n        function onCueChange() {\n            setActiveCue(textTrack === null || textTrack === void 0 ? void 0 : textTrack.activeCues[0]);\n        }\n        textTrack.addEventListener(\"cue-change\", onCueChange);\n        return ()=>{\n            textTrack.removeEventListener(\"cue-change\", onCueChange);\n            setActiveCue(void 0);\n        };\n    }, [\n        textTrack\n    ]);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createElement(_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.Primitive.span, {\n        ...props,\n        \"data-part\": \"cue\",\n        dangerouslySetInnerHTML: {\n            __html: (activeCue === null || activeCue === void 0 ? void 0 : activeCue.text) || \"\"\n        },\n        ref: forwardRef\n    });\n}, \"eknr7Y/5ZLH2J+IuxINKvodpgaw=\", false, function() {\n    return [\n        _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.useMediaState\n    ];\n})), \"eknr7Y/5ZLH2J+IuxINKvodpgaw=\", false, function() {\n    return [\n        _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.useMediaState\n    ];\n});\n_c18 = Text;\nText.displayName = \"CaptionText\";\nvar caption = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Root: Root,\n    Text: Text\n});\nfunction useState(ctor, prop, ref) {\n    _s5();\n    const initialValue = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(()=>ctor.state.record[prop], [\n        ctor,\n        prop\n    ]);\n    return (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(ref.current ? ref.current.$state[prop] : initialValue);\n}\n_s5(useState, \"bgsfgQEBgwikywjI08WTXJi7DBg=\", false, function() {\n    return [\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal\n    ];\n});\nconst storesCache = /* @__PURE__ */ new Map();\nfunction useStore(ctor, ref) {\n    _s6();\n    const initialStore = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(()=>{\n        let store = storesCache.get(ctor);\n        if (!store) {\n            store = new Proxy(ctor.state.record, {\n                get: (_, prop)=>()=>ctor.state.record[prop]\n            });\n            storesCache.set(ctor, store);\n        }\n        return store;\n    }, [\n        ctor\n    ]);\n    return (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignalRecord)(ref.current ? ref.current.$state : initialStore);\n}\n_s6(useStore, \"qbSwojbkHRTEWiZLXyN0UklgRUk=\", false, function() {\n    return [\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignalRecord\n    ];\n});\nfunction useMediaProvider() {\n    _s7();\n    const [provider, setProvider] = react__WEBPACK_IMPORTED_MODULE_2__.useState(null), context = (0,_chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext)();\n    if (!context) {\n        throw Error(\"[vidstack] no media context was found - was this called outside of `<MediaPlayer>`?\");\n    }\n    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(()=>{\n        if (!context) return;\n        return (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            setProvider(context.$provider());\n        });\n    }, []);\n    return provider;\n}\n_s7(useMediaProvider, \"xUpCO1g0DWHE9liBIojyJCe69K0=\", false, function() {\n    return [\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext\n    ];\n});\nfunction useThumbnails(src) {\n    let crossOrigin = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n    _s8();\n    const scope = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope)(), $src = (0,_chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.createSignal)(src), $crossOrigin = (0,_chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.createSignal)(crossOrigin), loader = (0,_chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.useScoped)(()=>_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.ThumbnailsLoader.create($src, $crossOrigin));\n    if (!scope) {\n        console.warn(\"[vidstack] `useThumbnails` must be called inside a child component of `<MediaPlayer>`\");\n    }\n    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(()=>{\n        $src.set(src);\n    }, [\n        src\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(()=>{\n        $crossOrigin.set(crossOrigin);\n    }, [\n        crossOrigin\n    ]);\n    return (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(loader.$images);\n}\n_s8(useThumbnails, \"lvkN2ISKo77oJwsO+/oO3SLhEDo=\", false, function() {\n    return [\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope,\n        _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.useScoped,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useReactScope,\n        _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.useScoped,\n        _chunks_vidstack_DcX2JzmB_js__WEBPACK_IMPORTED_MODULE_3__.useScoped,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal\n    ];\n});\nfunction useActiveThumbnail(thumbnails, time) {\n    _s9();\n    return react__WEBPACK_IMPORTED_MODULE_2__.useMemo(()=>{\n        let activeIndex = -1;\n        for(let i = thumbnails.length - 1; i >= 0; i--){\n            const image = thumbnails[i];\n            if (time >= image.startTime && (!image.endTime || time < image.endTime)) {\n                activeIndex = i;\n                break;\n            }\n        }\n        return thumbnails[activeIndex] || null;\n    }, [\n        thumbnails,\n        time\n    ]);\n}\n_s9(useActiveThumbnail, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nfunction useSliderPreview() {\n    let { clamp = false, offset = 0, orientation = \"horizontal\" } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s10();\n    const [rootRef, setRootRef] = react__WEBPACK_IMPORTED_MODULE_2__.useState(null), [previewRef, setPreviewRef] = react__WEBPACK_IMPORTED_MODULE_2__.useState(null), [pointerValue, setPointerValue] = react__WEBPACK_IMPORTED_MODULE_2__.useState(0), [isVisible, setIsVisible] = react__WEBPACK_IMPORTED_MODULE_2__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(()=>{\n        if (!rootRef) return;\n        const dragging = (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.signal)(false);\n        function updatePointerValue(event) {\n            if (!rootRef) return;\n            setPointerValue(getPointerValue(rootRef, event, orientation));\n        }\n        return (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.effect)(()=>{\n            if (!dragging()) {\n                (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(rootRef, \"pointerenter\", ()=>{\n                    setIsVisible(true);\n                    previewRef === null || previewRef === void 0 ? void 0 : previewRef.setAttribute(\"data-visible\", \"\");\n                });\n                (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(rootRef, \"pointerdown\", (event)=>{\n                    dragging.set(true);\n                    updatePointerValue(event);\n                });\n                (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(rootRef, \"pointerleave\", ()=>{\n                    setIsVisible(false);\n                    previewRef === null || previewRef === void 0 ? void 0 : previewRef.removeAttribute(\"data-visible\");\n                });\n                (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(rootRef, \"pointermove\", (event)=>{\n                    updatePointerValue(event);\n                });\n                return;\n            }\n            previewRef === null || previewRef === void 0 ? void 0 : previewRef.setAttribute(\"data-dragging\", \"\");\n            (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(document, \"pointerup\", (event)=>{\n                dragging.set(false);\n                previewRef === null || previewRef === void 0 ? void 0 : previewRef.removeAttribute(\"data-dragging\");\n                updatePointerValue(event);\n            });\n            (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(document, \"pointermove\", (event)=>{\n                updatePointerValue(event);\n            });\n            (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(document, \"touchmove\", (e)=>e.preventDefault(), {\n                passive: false\n            });\n        });\n    }, [\n        rootRef\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(()=>{\n        if (previewRef) {\n            previewRef.style.setProperty(\"--slider-pointer\", pointerValue + \"%\");\n        }\n    }, [\n        previewRef,\n        pointerValue\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(()=>{\n        if (!previewRef) return;\n        const update = ()=>{\n            (0,_chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.updateSliderPreviewPlacement)(previewRef, {\n                offset,\n                clamp,\n                orientation\n            });\n        };\n        update();\n        const resize = new ResizeObserver(update);\n        resize.observe(previewRef);\n        return ()=>resize.disconnect();\n    }, [\n        previewRef,\n        clamp,\n        offset,\n        orientation\n    ]);\n    return {\n        previewRootRef: setRootRef,\n        previewRef: setPreviewRef,\n        previewValue: pointerValue,\n        isPreviewVisible: isVisible\n    };\n}\n_s10(useSliderPreview, \"Dxu5ku1HG5S2uxkMRPs2W8OqdY0=\");\nfunction getPointerValue(root, event, orientation) {\n    let thumbPositionRate, rect = root.getBoundingClientRect();\n    if (orientation === \"vertical\") {\n        const { bottom: trackBottom, height: trackHeight } = rect;\n        thumbPositionRate = (trackBottom - event.clientY) / trackHeight;\n    } else {\n        const { left: trackLeft, width: trackWidth } = rect;\n        thumbPositionRate = (event.clientX - trackLeft) / trackWidth;\n    }\n    return round(Math.max(0, Math.min(100, 100 * thumbPositionRate)));\n}\nfunction round(num) {\n    return Number(num.toFixed(3));\n}\nfunction useAudioGainOptions() {\n    let { gains = _chunks_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_AUDIO_GAINS, disabledLabel = \"disabled\" } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s11();\n    const media = (0,_chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext)(), { audioGain, canSetAudioGain } = media.$state;\n    (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(audioGain);\n    (0,_chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal)(canSetAudioGain);\n    return react__WEBPACK_IMPORTED_MODULE_2__.useMemo(()=>{\n        const options = gains.map((opt)=>{\n            const label = typeof opt === \"number\" ? opt === 1 && disabledLabel ? disabledLabel : opt * 100 + \"%\" : opt.label, gain = typeof opt === \"number\" ? opt : opt.gain;\n            return {\n                label,\n                value: gain.toString(),\n                gain,\n                get selected () {\n                    return audioGain() === gain;\n                },\n                select (trigger) {\n                    media.remote.changeAudioGain(gain, trigger);\n                }\n            };\n        });\n        Object.defineProperty(options, \"disabled\", {\n            get () {\n                return !canSetAudioGain() || !options.length;\n            }\n        });\n        Object.defineProperty(options, \"selectedValue\", {\n            get () {\n                var _audioGain;\n                return (_audioGain = audioGain()) === null || _audioGain === void 0 ? void 0 : _audioGain.toString();\n            }\n        });\n        return options;\n    }, [\n        gains\n    ]);\n}\n_s11(useAudioGainOptions, \"DbgXejgFLTnOOI2u9scYJ+dercA=\", false, function() {\n    return [\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_BOkHoBGu_js__WEBPACK_IMPORTED_MODULE_4__.useMediaContext,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal,\n        _chunks_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_1__.useSignal\n    ];\n});\n\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n$RefreshReg$(_c, \"MediaPlayerBridge\");\n$RefreshReg$(_c1, \"MediaPlayer$React.forwardRef\");\n$RefreshReg$(_c2, \"MediaPlayer\");\n$RefreshReg$(_c3, \"MediaProviderBridge\");\n$RefreshReg$(_c4, \"MediaProvider$React.forwardRef\");\n$RefreshReg$(_c5, \"MediaProvider\");\n$RefreshReg$(_c6, \"MediaOutlet\");\n$RefreshReg$(_c7, \"Track\");\n$RefreshReg$(_c8, \"ToggleButtonBridge\");\n$RefreshReg$(_c9, \"ToggleButton$React.forwardRef\");\n$RefreshReg$(_c10, \"ToggleButton\");\n$RefreshReg$(_c11, \"PosterBridge\");\n$RefreshReg$(_c12, \"Poster$React.forwardRef\");\n$RefreshReg$(_c13, \"Poster\");\n$RefreshReg$(_c14, \"PosterImg\");\n$RefreshReg$(_c15, \"Root$React.forwardRef\");\n$RefreshReg$(_c16, \"Root\");\n$RefreshReg$(_c17, \"Text$React.forwardRef\");\n$RefreshReg$(_c18, \"Text\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L3ZpZHN0YWNrLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFNFI7QUFDbXpEO0FBQ2g1RDtBQUNoQjtBQUNoSjtBQUN5QztBQUM4UjtBQUN0UztBQUN1UztBQUNsVDtBQUMwRDtBQUNyRjtBQUNQO0FBRW5CLE1BQU1xTTtJQVNKQyxVQUFVQyxLQUFLLEVBQUVDLEtBQUssRUFBRTtRQUN0QixPQUFPLENBQUMsQ0FBQ0EsU0FBUyxDQUFDLENBQUNELE1BQU1FLEdBQUcsSUFBSzdFLENBQUFBLHFFQUFRQSxDQUFDMkUsTUFBTUcsSUFBSSxLQUFLLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNMLE1BQU1HLElBQUksS0FBSyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDTCxNQUFNRSxHQUFHO0lBQ3hIO0lBQ0FJLE9BQU9MLEtBQUssRUFBRTtRQUNaLElBQUksQ0FBQ0EsT0FBTztRQUNaLElBQUksQ0FBQ00sTUFBTSxHQUFHQyxJQUFJLENBQUMsT0FBT0M7Z0JBSWQ7WUFIVixJQUFJLENBQUNDLFNBQVMsR0FBRyxJQUFJRCxJQUFJRSxPQUFPLENBQUM7Z0JBQy9CLEdBQUcsSUFBSSxDQUFDQyxNQUFNO2dCQUNkWDtnQkFDQVksUUFBUSxxQkFBSSxDQUFDQyxNQUFNLGNBQVgsZ0RBQWFaLEdBQUcsS0FBSTtZQUM5QjtZQUNBNUUsd0VBQVdBLENBQUMsSUFBSSxDQUFDb0YsU0FBUyxFQUFFLFNBQVM7b0JBQ3BCO2dCQUFmLE1BQU1LLFVBQVMsc0JBQUksQ0FBQ0wsU0FBUyxjQUFkLHNEQUFnQk0sT0FBTztnQkFDdEMsSUFBSUQsUUFBUUEsT0FBT0UsS0FBSyxDQUFDQyxhQUFhLEdBQUc7WUFDM0M7WUFDQTVGLHdFQUFXQSxDQUFDLElBQUksQ0FBQ29GLFNBQVMsRUFBRSxTQUFTLENBQUNTO2dCQUNwQyxJQUFJLElBQUksQ0FBQ0wsTUFBTSxFQUFFO29CQUNmLElBQUksQ0FBQ0EsTUFBTSxDQUFDck4seUVBQWVBLENBQUMyTixXQUFXLENBQUMsR0FBRztvQkFDM0MsSUFBSSxDQUFDTixNQUFNLENBQUNPLGFBQWEsQ0FDdkIsSUFBSTlGLGlFQUFRQSxDQUFDLFNBQVM7d0JBQ3BCK0YsU0FBU0g7d0JBQ1RJLFFBQVFKLE1BQU1LLEtBQUs7b0JBQ3JCO2dCQUVKO1lBQ0Y7UUFDRjtJQUNGO0lBQ0FDLFlBQVl6QixLQUFLLEVBQUU7UUFDakIsSUFBSSxDQUFDQSxTQUFTQSxNQUFNMEIsVUFBVSxLQUFLLEdBQUc7WUFDcEMsSUFBSSxDQUFDQyxVQUFVO1FBQ2pCLE9BQU8sSUFBSSxJQUFJLENBQUNiLE1BQU0sS0FBS2QsT0FBTztnQkFDaEM7YUFBQSxzQkFBSSxDQUFDVSxTQUFTLGNBQWQsc0RBQWdCa0IsYUFBYSxDQUFDNUIsTUFBTUUsR0FBRztZQUN2QyxJQUFJLENBQUNZLE1BQU0sR0FBR2Q7UUFDaEI7SUFDRjtJQUNBNkIsU0FBUztRQUNQLElBQUksQ0FBQ0YsVUFBVTtJQUNqQjtJQUNBQSxhQUFhO1lBQ1g7U0FBQSxzQkFBSSxDQUFDakIsU0FBUyxjQUFkLHNEQUFnQm9CLFNBQVM7UUFDekIsSUFBSSxDQUFDaEIsTUFBTSxHQUFHO0lBQ2hCO0lBbERBaUIsWUFBWXhCLE1BQU0sRUFBRUssTUFBTSxDQUFFO1FBQzFCLElBQUksQ0FBQ0wsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQ0ssTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQ29CLFFBQVEsR0FBRztRQUNoQixJQUFJLENBQUN0QixTQUFTLEdBQUc7UUFDakIsSUFBSSxDQUFDSSxNQUFNLEdBQUc7UUFDZCxJQUFJLENBQUNWLE9BQU8sR0FBRztJQUNqQjtBQTRDRjtBQUVBLE1BQU02QixrQkFBa0I7SUFDdEI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQUVELE1BQU1DLG9CQUFvQjFHLGlGQUFvQkEsQ0FBQzdILDZFQUFtQkEsRUFBRTtJQUNsRXdPLFFBQVFGO0lBQ1JHLGFBQWE7SUFDYkMsZ0JBQWdCO0FBQ2xCO0tBSk1IO0FBS04sTUFBTUksNEJBQWMvRiw2Q0FBZ0IsT0FDbEMsUUFBc0NnRztRQUFyQyxFQUFFQyxXQUFXLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxPQUFPO0lBQ2xDLE9BQU8sYUFBYSxpQkFBR25HLGdEQUFtQixDQUN4QzJGLG1CQUNBO1FBQ0UsR0FBR1EsS0FBSztRQUNSeEMsS0FBS3dDLE1BQU14QyxHQUFHO1FBQ2QwQyxLQUFLTDtRQUNMdEIsT0FBTztZQUNMdUI7WUFDQSxHQUFHRSxNQUFNekIsS0FBSztRQUNoQjtJQUNGLEdBQ0EsQ0FBQzRCLFNBQVcsYUFBYSxpQkFBR3RHLGdEQUFtQixDQUFDN0ksbUVBQVNBLENBQUNvUCxHQUFHLEVBQUU7WUFBRSxHQUFHRCxNQUFNO1FBQUMsR0FBR0o7QUFFbEY7O0FBRUZILFlBQVlTLFdBQVcsR0FBRztBQUUxQixNQUFNQyxzQkFBc0J4SCxpRkFBb0JBLENBQUMzSCwrRUFBcUJBO01BQWhFbVA7QUFDTixNQUFNQyw4QkFBZ0IxRyxHQUFBQSw2Q0FBZ0IsVUFDcEMsUUFBbURnRztRQUFsRCxFQUFFVyxVQUFVLEVBQUUsRUFBRVQsUUFBUSxFQUFFVSxVQUFVLEVBQUUsR0FBR1QsT0FBTzs7SUFDL0MsTUFBTVUsZUFBZTdHLDBDQUFhLENBQUMsSUFBTTJHLFFBQVFJLEdBQUcsQ0FBQyxDQUFDQyxTQUFXLElBQUlBLFdBQVdMO0lBQ2hGLE9BQU8sYUFBYSxpQkFBRzNHLGdEQUFtQixDQUFDeUcscUJBQXFCO1FBQUUsR0FBR04sS0FBSztRQUFFUSxTQUFTRTtRQUFjUixLQUFLTDtJQUFXLEdBQUcsQ0FBQ00sUUFBUVcsV0FBYSxhQUFhLGlCQUFHakgsZ0RBQW1CLENBQUMsT0FBTztZQUFFLEdBQUdzRyxNQUFNO1FBQUMsR0FBRyxhQUFhLGlCQUFHdEcsZ0RBQW1CLENBQUNrSCxhQUFhO1lBQUUsR0FBR04sVUFBVTtZQUFFTyxVQUFVRjtRQUFTLElBQUlmO0FBQ2pTOztBQUVGUSxjQUFjRixXQUFXLEdBQUc7QUFDNUIsU0FBU1UsWUFBWSxLQUFzQjtRQUF0QixFQUFFQyxRQUFRLEVBQUUsR0FBR2hCLE9BQU8sR0FBdEI7O0lBQ25CLE1BQU0sRUFBRWlCLFdBQVcsRUFBRUMsTUFBTSxFQUFFQyxrQkFBa0IsRUFBRUMsY0FBYyxFQUFFQyxRQUFRLEVBQUUsR0FBR3RJLDRFQUFlQSxDQUFDM0gsb0VBQVVBLEdBQUcsRUFBRXlNLE1BQU0sRUFBRSxHQUFHbUQsU0FBU00sTUFBTSxFQUFFLEVBQUVDLFdBQVdDLFVBQVUsRUFBRUMsZ0JBQWdCQyxlQUFlLEVBQUUsR0FBR3BHLDZFQUFlQSxJQUFJcUcsa0JBQWtCM0ksc0VBQVNBLENBQUNvSSxpQkFBaUJRLGVBQWU1SSxzRUFBU0EsQ0FBQ2lJLGNBQWNZLFVBQVU3SSxzRUFBU0EsQ0FBQ2tJLFNBQVNZLFVBQVU5SSxzRUFBU0EsQ0FBQzZFLFNBQVMwRCxZQUFZdkksc0VBQVNBLENBQUN3SSxhQUFhQyxpQkFBaUJ6SSxzRUFBU0EsQ0FBQzBJLGtCQUFrQkssY0FBYy9JLHNFQUFTQSxDQUFDbUkscUJBQXFCYSxhQUFhRixvQkFBQUEsOEJBQUFBLFFBQVNHLFNBQVMsSUFBSUMsWUFBWWxKLHNFQUFTQSxDQUFDcUksV0FBV2MsY0FBY0QsY0FBYyxTQUFTRSxpQkFBaUJOLENBQUFBLG9CQUFBQSw4QkFBQUEsUUFBU08sSUFBSSxNQUFLLFdBQVdDLGVBQWVSLENBQUFBLG9CQUFBQSw4QkFBQUEsUUFBU08sSUFBSSxNQUFLLFNBQVNFLFVBQVVILGtCQUFrQkUsY0FBY0UsYUFBYVYsQ0FBQUEsb0JBQUFBLDhCQUFBQSxRQUFTTyxJQUFJLE1BQUssWUFBWUksZUFBZVgsQ0FBQUEsb0JBQUFBLDhCQUFBQSxRQUFTTyxJQUFJLE1BQUssZUFBZSxDQUFDSyxxQkFBcUJDLHVCQUF1QixHQUFHOUksMkNBQWMsQ0FBQztJQUN6MkJBLDRDQUFlLENBQUM7UUFDZCxJQUFJLENBQUM0SSxnQkFBZ0JDLHFCQUFxQjtRQUMxQywrTUFBTyxDQUFpQzVFLElBQUksQ0FBQyxTQUFVZ0YsQ0FBQztZQUFJLE9BQU9BLEVBQUVDLFVBQVU7UUFBRSxHQUFHakYsSUFBSSxDQUFDLENBQUNDO1lBQ3hGNEUsdUJBQXVCNUUsSUFBSUUsT0FBTztRQUNwQztJQUNGLEdBQUc7UUFBQ3dFO0tBQWE7SUFDakIsSUFBSUEsY0FBYztRQUNoQixPQUFPLGFBQWEsaUJBQUc1SSxnREFBbUIsQ0FDeEMsT0FDQTtZQUNFbUosV0FBVztZQUNYOUMsS0FBSyxDQUFDK0M7Z0JBQ0pqQyxTQUFTa0MsSUFBSSxDQUFDRDtZQUNoQjtRQUNGLEdBQ0EsYUFBYSxpQkFBR3BKLGdEQUFtQixDQUFDbUQsOERBQUlBLEVBQUU7WUFBRW1HLE9BQU9UO1FBQW9CLElBQ3ZFWCxDQUFBQSx3QkFBQUEsa0NBQUFBLFlBQWFxQixVQUFVLElBQUcsYUFBYSxpQkFBR3ZKLGdEQUFtQixDQUFDLFFBQVE7WUFBRW1KLFdBQVc7UUFBdUIsR0FBRyxrQkFBa0IsS0FBSyxhQUFhLGlCQUFHbkosZ0RBQW1CLENBQUMsUUFBUTtZQUFFbUosV0FBVztRQUE4QixHQUFHakIsWUFBWXFCLFVBQVUsS0FBSztJQUU3UDtJQUNBLElBQUlaLFlBQVk7UUFDZCxPQUFPLGFBQWEsaUJBQUczSSxnREFBbUIsQ0FBQyxPQUFPO1lBQUUsd0JBQXdCO1FBQUssR0FBRyxhQUFhLGlCQUFHQSxnREFBbUIsQ0FDckgsT0FDQTtZQUNFLDJCQUEyQjtZQUMzQnFHLEtBQUssQ0FBQytDO2dCQUNKakMsU0FBU2tDLElBQUksQ0FBQ0Q7WUFDaEI7UUFDRixHQUNBL1IsZ0ZBQWtCQSxDQUFDcVEsY0FBY0UsK0JBQWlCNUgsZ0RBQW1CLENBQUMwSCxVQUFVOEIsTUFBTSxJQUFJO0lBRTlGO0lBQ0EsT0FBT2Qsd0JBQVUxSSxnREFBbUIsQ0FDbENBLDJDQUFjLEVBQ2Qsb0JBQ0FBLGdEQUFtQixDQUFDLFVBQVU7UUFDNUJtSixXQUFXWixpQkFBaUIsZ0JBQWdCO1FBQzVDbUIsMEJBQTBCO1FBQzFCQyxVQUFVLENBQUM3QixrQkFBa0IsQ0FBQyxJQUFJLEtBQUs7UUFDdkMsZUFBZTtRQUNmLG9CQUFvQixDQUFDQSxrQkFBa0IsS0FBSyxLQUFLO1FBQ2pEekIsS0FBSStDLEVBQUU7WUFDSmpDLFNBQVNrQyxJQUFJLENBQUNEO1FBQ2hCO0lBQ0YsSUFDQSxDQUFDdEIsbUJBQW1CLENBQUNRLDRCQUFjdEksZ0RBQW1CLENBQUMsT0FBTztRQUFFbUosV0FBVztJQUFjLEtBQUssUUFDNUZoQiwyQkFBYW5JLGdEQUFtQixDQUFDbUksZUFBZSxVQUFVLFVBQVUsU0FBUztRQUMvRSxHQUFHaEMsS0FBSztRQUNSNUYsVUFBVXVILGtCQUFrQixPQUFPO1FBQ25DVixhQUFhLE9BQU9XLGlCQUFpQixZQUFZLEtBQUtBO1FBQ3REVixRQUFRYyxlQUFlLFdBQVdMLG1CQUFtQkUsVUFBVUEsVUFBVTtRQUN6RTRCLFNBQVM7UUFDVCxlQUFlO1FBQ2ZGLDBCQUEwQjtRQUMxQnJELEtBQUkrQyxFQUFFO1lBQ0pqQyxTQUFTa0MsSUFBSSxDQUFDRDtRQUNoQjtJQUNGLEtBQUs7QUFDUDtJQTNEU2xDOztRQUN1RWhJLHdFQUFlQTtRQUFmQSx3RUFBZUE7UUFBeUd1Qyx5RUFBZUE7UUFBc0J0QyxrRUFBU0E7UUFBaUNBLGtFQUFTQTtRQUF5QkEsa0VBQVNBO1FBQW9CQSxrRUFBU0E7UUFBc0JBLGtFQUFTQTtRQUErQkEsa0VBQVNBO1FBQWlDQSxrRUFBU0E7UUFBcUVBLGtFQUFTQTtRQUF0VnNDLHlFQUFlQTtRQUFzQnRDLGtFQUFTQTtRQUFpQ0Esa0VBQVNBO1FBQXlCQSxrRUFBU0E7UUFBb0JBLGtFQUFTQTtRQUFzQkEsa0VBQVNBO1FBQStCQSxrRUFBU0E7UUFBaUNBLGtFQUFTQTtRQUFoWUQsd0VBQWVBO1FBQXlHdUMseUVBQWVBO1FBQXNCdEMsa0VBQVNBO1FBQWlDQSxrRUFBU0E7UUFBeUJBLGtFQUFTQTtRQUFvQkEsa0VBQVNBO1FBQXNCQSxrRUFBU0E7UUFBK0JBLGtFQUFTQTtRQUFpQ0Esa0VBQVNBO1FBQXFFQSxrRUFBU0E7UUFBVEEsa0VBQVNBO1FBQTljRCx3RUFBZUE7UUFBeUd1Qyx5RUFBZUE7UUFBc0J0QyxrRUFBU0E7UUFBaUNBLGtFQUFTQTtRQUF5QkEsa0VBQVNBO1FBQW9CQSxrRUFBU0E7UUFBc0JBLGtFQUFTQTtRQUErQkEsa0VBQVNBO1FBQWlDQSxrRUFBU0E7UUFBcUVBLGtFQUFTQTtRQUE5Y0Qsd0VBQWVBO1FBQXlHdUMseUVBQWVBO1FBQXNCdEMsa0VBQVNBO1FBQWlDQSxrRUFBU0E7UUFBeUJBLGtFQUFTQTtRQUFvQkEsa0VBQVNBO1FBQXNCQSxrRUFBU0E7UUFBK0JBLGtFQUFTQTtRQUFpQ0Esa0VBQVNBO1FBQXFFQSxrRUFBU0E7UUFBOWNELHdFQUFlQTtRQUF5R3VDLHlFQUFlQTtRQUFzQnRDLGtFQUFTQTtRQUFpQ0Esa0VBQVNBO1FBQXlCQSxrRUFBU0E7UUFBb0JBLGtFQUFTQTtRQUFzQkEsa0VBQVNBO1FBQStCQSxrRUFBU0E7UUFBaUNBLGtFQUFTQTtRQUFxRUEsa0VBQVNBO1FBQTljRCx3RUFBZUE7UUFBeUd1Qyx5RUFBZUE7UUFBc0J0QyxrRUFBU0E7UUFBaUNBLGtFQUFTQTtRQUF5QkEsa0VBQVNBO1FBQW9CQSxrRUFBU0E7UUFBc0JBLGtFQUFTQTtRQUErQkEsa0VBQVNBO1FBQWlDQSxrRUFBU0E7UUFBcUVBLGtFQUFTQTtRQUE5Y0Qsd0VBQWVBO1FBQXlHdUMseUVBQWVBO1FBQXNCdEMsa0VBQVNBO1FBQWlDQSxrRUFBU0E7UUFBeUJBLGtFQUFTQTtRQUFvQkEsa0VBQVNBO1FBQXNCQSxrRUFBU0E7UUFBK0JBLGtFQUFTQTtRQUFpQ0Esa0VBQVNBO1FBQXFFQSxrRUFBU0E7UUFBOWNELHdFQUFlQTtRQUF5R3VDLHlFQUFlQTtRQUFzQnRDLGtFQUFTQTtRQUFpQ0Esa0VBQVNBO1FBQXlCQSxrRUFBU0E7UUFBb0JBLGtFQUFTQTtRQUFzQkEsa0VBQVNBO1FBQStCQSxrRUFBU0E7UUFBaUNBLGtFQUFTQTtRQUFxRUEsa0VBQVNBOzs7TUFEcmhCK0g7QUE0RFRBLFlBQVlWLFdBQVcsR0FBRztBQUUxQixTQUFTcUQsZ0JBQWdCQyxJQUFJOztJQUMzQixNQUFNQyxRQUFRdEksNkVBQWVBLElBQUlnQyxRQUFRekQsMENBQWEsQ0FBQyxJQUFNLElBQUl4SSxtRUFBU0EsQ0FBQ3NTLE9BQU9FLE9BQU9DLE1BQU0sQ0FBQ0g7SUFDaEc5Siw0Q0FBZSxDQUFDO1FBQ2QrSixNQUFNRyxVQUFVLENBQUNDLEdBQUcsQ0FBQzFHO1FBQ3JCLE9BQU8sSUFBTSxLQUFLc0csTUFBTUcsVUFBVSxDQUFDRSxNQUFNLENBQUMzRztJQUM1QyxHQUFHO1FBQUNBO0tBQU07SUFDVixPQUFPQTtBQUNUO0lBUFNvRzs7UUFDT3BJLHlFQUFlQTs7O0FBUS9CLFNBQVM0SSxNQUFNLEtBQWtCO1FBQWxCLEVBQUVDLElBQUksRUFBRSxHQUFHbkUsT0FBTyxHQUFsQjtJQUNiMEQsZ0JBQWdCO1FBQUVVLFVBQVVEO1FBQU0sR0FBR25FLEtBQUs7SUFBQztJQUMzQyxPQUFPO0FBQ1Q7TUFIU2tFO0FBSVRBLE1BQU03RCxXQUFXLEdBQUc7QUFFcEIsTUFBTWdFLHFCQUFxQnZMLGlGQUFvQkEsQ0FBQ3hILDhFQUFvQkE7TUFBOUQrUztBQUNOLE1BQU1DLDZCQUFlekssNkNBQWdCLE9BQ25DLFFBQXlCZ0c7UUFBeEIsRUFBRUUsUUFBUSxFQUFFLEdBQUdDLE9BQU87SUFDckIsT0FBTyxhQUFhLGlCQUFHbkcsZ0RBQW1CLENBQUN3SyxvQkFBb0I7UUFBRSxHQUFHckUsS0FBSztJQUFDLEdBQUcsQ0FBQ0csU0FBVyxhQUFhLGlCQUFHdEcsZ0RBQW1CLENBQzFIN0ksbUVBQVNBLENBQUN1VCxNQUFNLEVBQ2hCO1lBQ0UsR0FBR3BFLE1BQU07WUFDVEQsS0FBS2pILHdFQUFXQSxDQUFDa0gsT0FBT0QsR0FBRyxFQUFFTDtRQUMvQixHQUNBRTtBQUVKOztBQUVGdUUsYUFBYWpFLFdBQVcsR0FBRztBQUUzQixNQUFNbUUsZUFBZTFMLGlGQUFvQkEsQ0FBQ3ZILHdFQUFjQTtPQUFsRGlUO0FBQ04sTUFBTUMsdUJBQVM1Syw2Q0FBZ0IsUUFDN0IsUUFBeUJnRztRQUF4QixFQUFFRSxRQUFRLEVBQUUsR0FBR0MsT0FBTztJQUNyQixPQUFPLGFBQWEsaUJBQUduRyxnREFBbUIsQ0FBQzJLLGNBQWM7UUFBRSxHQUFHeEUsS0FBSztJQUFDLEdBQUcsQ0FBQ0csUUFBUVcsV0FBYSxhQUFhLGlCQUFHakgsZ0RBQW1CLENBQzlINkssV0FDQTtZQUNFLEdBQUd2RSxNQUFNO1lBQ1RXO1lBQ0FaLEtBQUtqSCx3RUFBV0EsQ0FBQ2tILE9BQU9ELEdBQUcsRUFBRUw7UUFDL0IsR0FDQUU7QUFFSjs7QUFFRjBFLE9BQU9wRSxXQUFXLEdBQUc7QUFDckIsTUFBTXFFLDBCQUFZN0ssNkNBQWdCLEtBQ2hDLFFBQW1DZ0c7UUFBbEMsRUFBRWlCLFFBQVEsRUFBRWYsUUFBUSxFQUFFLEdBQUdDLE9BQU87O0lBQy9CLE1BQU0sRUFBRXhDLEdBQUcsRUFBRW1ILEdBQUcsRUFBRUMsR0FBRyxFQUFFM0QsV0FBVyxFQUFFNEQsT0FBTyxFQUFFQyxNQUFNLEVBQUUsR0FBR2hFLFNBQVNRLE1BQU0sRUFBRXlELE9BQU8vTCxzRUFBU0EsQ0FBQ3dFLE1BQU13SCxPQUFPaE0sc0VBQVNBLENBQUM0TCxNQUFNaEQsZUFBZTVJLHNFQUFTQSxDQUFDaUksY0FBY2dFLFdBQVdqTSxzRUFBU0EsQ0FBQzZMLFVBQVVLLFVBQVVsTSxzRUFBU0EsQ0FBQzhMO0lBQ2pOLE9BQU8sYUFBYSxpQkFBR2pMLGdEQUFtQixDQUN4QzdJLG1FQUFTQSxDQUFDMlQsR0FBRyxFQUNiO1FBQ0UsR0FBRzNFLEtBQUs7UUFDUnhDLEtBQUt1SCxRQUFRLEtBQUs7UUFDbEJILEtBQUtJLFFBQVEsS0FBSztRQUNsQi9ELGFBQWFXLGdCQUFnQixLQUFLO1FBQ2xDMUIsS0FBS2pILHdFQUFXQSxDQUFDMEwsSUFBSVEsR0FBRyxFQUFFdEY7UUFDMUJ0QixPQUFPO1lBQUU2RyxTQUFTSCxZQUFZQyxVQUFVLFNBQVMsS0FBSztRQUFFO0lBQzFELEdBQ0FuRjtBQUVKOztRQWJrRi9HLGtFQUFTQTtRQUFjQSxrRUFBU0E7UUFBc0JBLGtFQUFTQTtRQUEwQkEsa0VBQVNBO1FBQXFCQSxrRUFBU0E7UUFBaElBLGtFQUFTQTtRQUFjQSxrRUFBU0E7UUFBc0JBLGtFQUFTQTtRQUEwQkEsa0VBQVNBO1FBQXFCQSxrRUFBU0E7OztPQUY5TTBMO0FBaUJOQSxVQUFVckUsV0FBVyxHQUFHO0FBRXhCLE1BQU1nRixxQkFBT3hMLDZDQUFnQixRQUFDLFFBQXlCZ0c7UUFBeEIsRUFBRUUsUUFBUSxFQUFFLEdBQUdDLE9BQU87SUFDbkQsT0FBTyxhQUFhLGlCQUFHbkcsZ0RBQW1CLENBQ3hDN0ksbUVBQVNBLENBQUNvUCxHQUFHLEVBQ2I7UUFDRWtGLFdBQVc7UUFDWCxhQUFhO1FBQ2IsZUFBZTtRQUNmLEdBQUd0RixLQUFLO1FBQ1JFLEtBQUtMO0lBQ1AsR0FDQUU7QUFFSjs7QUFDQXNGLEtBQUtoRixXQUFXLEdBQUc7QUFDbkIsTUFBTWtGLHFCQUFPMUwsSUFBQUEsNkNBQWdCLFlBQUMsQ0FBQ21HLE9BQU9IOztJQUNwQyxNQUFNMkYsWUFBWWhVLDJFQUFhQSxDQUFDLGNBQWMsQ0FBQ2lVLFdBQVdDLGFBQWEsR0FBRzdMLDJDQUFjO0lBQ3hGQSw0Q0FBZSxDQUFDO1FBQ2QsSUFBSSxDQUFDMkwsV0FBVztRQUNoQixTQUFTRztZQUNQRCxhQUFhRixzQkFBQUEsZ0NBQUFBLFVBQVdJLFVBQVUsQ0FBQyxFQUFFO1FBQ3ZDO1FBQ0FKLFVBQVVLLGdCQUFnQixDQUFDLGNBQWNGO1FBQ3pDLE9BQU87WUFDTEgsVUFBVU0sbUJBQW1CLENBQUMsY0FBY0g7WUFDNUNELGFBQWEsS0FBSztRQUNwQjtJQUNGLEdBQUc7UUFBQ0Y7S0FBVTtJQUNkLE9BQU8sYUFBYSxpQkFBRzNMLGdEQUFtQixDQUN4QzdJLG1FQUFTQSxDQUFDK1UsSUFBSSxFQUNkO1FBQ0UsR0FBRy9GLEtBQUs7UUFDUixhQUFhO1FBQ2JnRyx5QkFBeUI7WUFDdkJDLFFBQVFSLENBQUFBLHNCQUFBQSxnQ0FBQUEsVUFBV1MsSUFBSSxLQUFJO1FBQzdCO1FBQ0FoRyxLQUFLTDtJQUNQO0FBRUo7O1FBdkJvQnJPLHVFQUFhQTs7OztRQUFiQSx1RUFBYUE7Ozs7QUF3QmpDK1QsS0FBS2xGLFdBQVcsR0FBRztBQUVuQixJQUFJOEYsVUFBVSxXQUFXLEdBQUV0QyxPQUFPdUMsTUFBTSxDQUFDO0lBQ3ZDQyxXQUFXO0lBQ1hoQixNQUFNQTtJQUNORSxNQUFNQTtBQUNSO0FBRUEsU0FBUzNDLFNBQVMwRCxJQUFJLEVBQUVDLElBQUksRUFBRXJHLEdBQUc7O0lBQy9CLE1BQU1zRyxlQUFlM00sMENBQWEsQ0FBQyxJQUFNeU0sS0FBS0csS0FBSyxDQUFDQyxNQUFNLENBQUNILEtBQUssRUFBRTtRQUFDRDtRQUFNQztLQUFLO0lBQzlFLE9BQU92TixzRUFBU0EsQ0FBQ2tILElBQUl5RyxPQUFPLEdBQUd6RyxJQUFJeUcsT0FBTyxDQUFDckYsTUFBTSxDQUFDaUYsS0FBSyxHQUFHQztBQUM1RDtJQUhTNUQ7O1FBRUE1SixrRUFBU0E7OztBQUVsQixNQUFNNE4sY0FBYyxhQUFhLEdBQUcsSUFBSUM7QUFDeEMsU0FBU0MsU0FBU1IsSUFBSSxFQUFFcEcsR0FBRzs7SUFDekIsTUFBTTZHLGVBQWVsTiwwQ0FBYSxDQUFDO1FBQ2pDLElBQUltTixRQUFRSixZQUFZSyxHQUFHLENBQUNYO1FBQzVCLElBQUksQ0FBQ1UsT0FBTztZQUNWQSxRQUFRLElBQUlFLE1BQU1aLEtBQUtHLEtBQUssQ0FBQ0MsTUFBTSxFQUFFO2dCQUNuQ08sS0FBSyxDQUFDRSxHQUFHWixPQUFTLElBQU1ELEtBQUtHLEtBQUssQ0FBQ0MsTUFBTSxDQUFDSCxLQUFLO1lBQ2pEO1lBQ0FLLFlBQVl6QixHQUFHLENBQUNtQixNQUFNVTtRQUN4QjtRQUNBLE9BQU9BO0lBQ1QsR0FBRztRQUFDVjtLQUFLO0lBQ1QsT0FBT3BOLDRFQUFlQSxDQUFDZ0gsSUFBSXlHLE9BQU8sR0FBR3pHLElBQUl5RyxPQUFPLENBQUNyRixNQUFNLEdBQUd5RjtBQUM1RDtJQVpTRDs7UUFXQTVOLHdFQUFlQTs7O0FBR3hCLFNBQVNrTzs7SUFDUCxNQUFNLENBQUNwRyxVQUFVcUcsWUFBWSxHQUFHeE4sMkNBQWMsQ0FBQyxPQUFPeU4sVUFBVWhNLDZFQUFlQTtJQUMvRSxJQUFJLENBQUNnTSxTQUFTO1FBQ1osTUFBTUMsTUFDSjtJQUVKO0lBQ0ExTiw0Q0FBZSxDQUFDO1FBQ2QsSUFBSSxDQUFDeU4sU0FBUztRQUNkLE9BQU9uTyxtRUFBTUEsQ0FBQztZQUNaa08sWUFBWUMsUUFBUS9GLFNBQVM7UUFDL0I7SUFDRixHQUFHLEVBQUU7SUFDTCxPQUFPUDtBQUNUO0lBZFNvRzs7UUFDeUQ5TCx5RUFBZUE7OztBQWVqRixTQUFTa00sY0FBY2hLLEdBQUc7UUFBRXlELGNBQUFBLGlFQUFjOztJQUN4QyxNQUFNd0csUUFBUXJPLDBFQUFhQSxJQUFJMkwsT0FBT2pMLDBFQUFZQSxDQUFDMEQsTUFBTW9FLGVBQWU5SCwwRUFBWUEsQ0FBQ21ILGNBQWNwRCxTQUFTOUQsdUVBQVNBLENBQUMsSUFBTXRJLDBFQUFnQkEsQ0FBQ2lXLE1BQU0sQ0FBQzNDLE1BQU1uRDtJQUMxSixJQUFJLENBQUM2RixPQUFPO1FBQ1ZFLFFBQVFDLElBQUksQ0FDVDtJQUVMO0lBQ0EvTiw0Q0FBZSxDQUFDO1FBQ2RrTCxLQUFLSSxHQUFHLENBQUMzSDtJQUNYLEdBQUc7UUFBQ0E7S0FBSTtJQUNSM0QsNENBQWUsQ0FBQztRQUNkK0gsYUFBYXVELEdBQUcsQ0FBQ2xFO0lBQ25CLEdBQUc7UUFBQ0E7S0FBWTtJQUNoQixPQUFPakksc0VBQVNBLENBQUM2RSxPQUFPZ0ssT0FBTztBQUNqQztJQWRTTDs7UUFDT3BPLHNFQUFhQTtRQUFiQSxzRUFBYUE7UUFBaUZXLG1FQUFTQTtRQUF2R1gsc0VBQWFBO1FBQWlGVyxtRUFBU0E7UUFBVEEsbUVBQVNBO1FBWTlHZixrRUFBU0E7OztBQUVsQixTQUFTOE8sbUJBQW1CQyxVQUFVLEVBQUVDLElBQUk7O0lBQzFDLE9BQU9uTywwQ0FBYSxDQUFDO1FBQ25CLElBQUlvTyxjQUFjLENBQUM7UUFDbkIsSUFBSyxJQUFJQyxJQUFJSCxXQUFXSSxNQUFNLEdBQUcsR0FBR0QsS0FBSyxHQUFHQSxJQUFLO1lBQy9DLE1BQU1FLFFBQVFMLFVBQVUsQ0FBQ0csRUFBRTtZQUMzQixJQUFJRixRQUFRSSxNQUFNQyxTQUFTLElBQUssRUFBQ0QsTUFBTUUsT0FBTyxJQUFJTixPQUFPSSxNQUFNRSxPQUFPLEdBQUc7Z0JBQ3ZFTCxjQUFjQztnQkFDZDtZQUNGO1FBQ0Y7UUFDQSxPQUFPSCxVQUFVLENBQUNFLFlBQVksSUFBSTtJQUNwQyxHQUFHO1FBQUNGO1FBQVlDO0tBQUs7QUFDdkI7SUFaU0Y7QUFjVCxTQUFTUztRQUFpQixFQUN4QkMsUUFBUSxLQUFLLEVBQ2JDLFNBQVMsQ0FBQyxFQUNWQyxjQUFjLFlBQVksRUFDM0IsR0FKeUIsaUVBSXRCLENBQUM7O0lBQ0gsTUFBTSxDQUFDQyxTQUFTQyxXQUFXLEdBQUcvTywyQ0FBYyxDQUFDLE9BQU8sQ0FBQ2dQLFlBQVlDLGNBQWMsR0FBR2pQLDJDQUFjLENBQUMsT0FBTyxDQUFDa1AsY0FBY0MsZ0JBQWdCLEdBQUduUCwyQ0FBYyxDQUFDLElBQUksQ0FBQ29QLFdBQVdDLGFBQWEsR0FBR3JQLDJDQUFjLENBQUM7SUFDeE1BLDRDQUFlLENBQUM7UUFDZCxJQUFJLENBQUM4TyxTQUFTO1FBQ2QsTUFBTVEsV0FBVzlQLG1FQUFNQSxDQUFDO1FBQ3hCLFNBQVMrUCxtQkFBbUIzSyxLQUFLO1lBQy9CLElBQUksQ0FBQ2tLLFNBQVM7WUFDZEssZ0JBQWdCSyxnQkFBZ0JWLFNBQVNsSyxPQUFPaUs7UUFDbEQ7UUFDQSxPQUFPdlAsbUVBQU1BLENBQUM7WUFDWixJQUFJLENBQUNnUSxZQUFZO2dCQUNmdlEsd0VBQVdBLENBQUMrUCxTQUFTLGdCQUFnQjtvQkFDbkNPLGFBQWE7b0JBQ2JMLHVCQUFBQSxpQ0FBQUEsV0FBWVMsWUFBWSxDQUFDLGdCQUFnQjtnQkFDM0M7Z0JBQ0ExUSx3RUFBV0EsQ0FBQytQLFNBQVMsZUFBZSxDQUFDbEs7b0JBQ25DMEssU0FBU2hFLEdBQUcsQ0FBQztvQkFDYmlFLG1CQUFtQjNLO2dCQUNyQjtnQkFDQTdGLHdFQUFXQSxDQUFDK1AsU0FBUyxnQkFBZ0I7b0JBQ25DTyxhQUFhO29CQUNiTCx1QkFBQUEsaUNBQUFBLFdBQVlVLGVBQWUsQ0FBQztnQkFDOUI7Z0JBQ0EzUSx3RUFBV0EsQ0FBQytQLFNBQVMsZUFBZSxDQUFDbEs7b0JBQ25DMkssbUJBQW1CM0s7Z0JBQ3JCO2dCQUNBO1lBQ0Y7WUFDQW9LLHVCQUFBQSxpQ0FBQUEsV0FBWVMsWUFBWSxDQUFDLGlCQUFpQjtZQUMxQzFRLHdFQUFXQSxDQUFDNFEsVUFBVSxhQUFhLENBQUMvSztnQkFDbEMwSyxTQUFTaEUsR0FBRyxDQUFDO2dCQUNiMEQsdUJBQUFBLGlDQUFBQSxXQUFZVSxlQUFlLENBQUM7Z0JBQzVCSCxtQkFBbUIzSztZQUNyQjtZQUNBN0Ysd0VBQVdBLENBQUM0USxVQUFVLGVBQWUsQ0FBQy9LO2dCQUNwQzJLLG1CQUFtQjNLO1lBQ3JCO1lBQ0E3Rix3RUFBV0EsQ0FBQzRRLFVBQVUsYUFBYSxDQUFDQyxJQUFNQSxFQUFFQyxjQUFjLElBQUk7Z0JBQzVEQyxTQUFTO1lBQ1g7UUFDRjtJQUNGLEdBQUc7UUFBQ2hCO0tBQVE7SUFDWjlPLDRDQUFlLENBQUM7UUFDZCxJQUFJZ1AsWUFBWTtZQUNkQSxXQUFXdEssS0FBSyxDQUFDcUwsV0FBVyxDQUFDLG9CQUFvQmIsZUFBZTtRQUNsRTtJQUNGLEdBQUc7UUFBQ0Y7UUFBWUU7S0FBYTtJQUM3QmxQLDRDQUFlLENBQUM7UUFDZCxJQUFJLENBQUNnUCxZQUFZO1FBQ2pCLE1BQU1nQixTQUFTO1lBQ2JuWSwwRkFBNEJBLENBQUNtWCxZQUFZO2dCQUN2Q0o7Z0JBQ0FEO2dCQUNBRTtZQUNGO1FBQ0Y7UUFDQW1CO1FBQ0EsTUFBTUMsU0FBUyxJQUFJQyxlQUFlRjtRQUNsQ0MsT0FBT0UsT0FBTyxDQUFDbkI7UUFDZixPQUFPLElBQU1pQixPQUFPRyxVQUFVO0lBQ2hDLEdBQUc7UUFBQ3BCO1FBQVlMO1FBQU9DO1FBQVFDO0tBQVk7SUFDM0MsT0FBTztRQUNMd0IsZ0JBQWdCdEI7UUFDaEJDLFlBQVlDO1FBQ1pxQixjQUFjcEI7UUFDZHFCLGtCQUFrQm5CO0lBQ3BCO0FBQ0Y7S0F2RVNWO0FBd0VULFNBQVNjLGdCQUFnQmdCLElBQUksRUFBRTVMLEtBQUssRUFBRWlLLFdBQVc7SUFDL0MsSUFBSTRCLG1CQUFtQkMsT0FBT0YsS0FBS0cscUJBQXFCO0lBQ3hELElBQUk5QixnQkFBZ0IsWUFBWTtRQUM5QixNQUFNLEVBQUUrQixRQUFRQyxXQUFXLEVBQUVDLFFBQVFDLFdBQVcsRUFBRSxHQUFHTDtRQUNyREQsb0JBQW9CLENBQUNJLGNBQWNqTSxNQUFNb00sT0FBTyxJQUFJRDtJQUN0RCxPQUFPO1FBQ0wsTUFBTSxFQUFFRSxNQUFNQyxTQUFTLEVBQUVDLE9BQU9DLFVBQVUsRUFBRSxHQUFHVjtRQUMvQ0Qsb0JBQW9CLENBQUM3TCxNQUFNeU0sT0FBTyxHQUFHSCxTQUFRLElBQUtFO0lBQ3BEO0lBQ0EsT0FBT0UsTUFBTUMsS0FBS0MsR0FBRyxDQUFDLEdBQUdELEtBQUtFLEdBQUcsQ0FBQyxLQUFLLE1BQU1oQjtBQUMvQztBQUNBLFNBQVNhLE1BQU1JLEdBQUc7SUFDaEIsT0FBT0MsT0FBT0QsSUFBSUUsT0FBTyxDQUFDO0FBQzVCO0FBRUEsU0FBU0M7UUFBb0IsRUFDM0JDLFFBQVFoYSw2RUFBbUIsRUFDM0JpYSxnQkFBZ0IsVUFBVSxFQUMzQixHQUg0QixpRUFHekIsQ0FBQzs7SUFDSCxNQUFNaEksUUFBUXRJLDZFQUFlQSxJQUFJLEVBQUV1USxTQUFTLEVBQUVDLGVBQWUsRUFBRSxHQUFHbEksTUFBTXRDLE1BQU07SUFDOUV0SSxzRUFBU0EsQ0FBQzZTO0lBQ1Y3UyxzRUFBU0EsQ0FBQzhTO0lBQ1YsT0FBT2pTLDBDQUFhLENBQUM7UUFDbkIsTUFBTWtTLFVBQVVKLE1BQU0vSyxHQUFHLENBQUMsQ0FBQ29MO1lBQ3pCLE1BQU1DLFFBQVEsT0FBT0QsUUFBUSxXQUFXQSxRQUFRLEtBQUtKLGdCQUFnQkEsZ0JBQWdCSSxNQUFNLE1BQU0sTUFBTUEsSUFBSUMsS0FBSyxFQUFFQyxPQUFPLE9BQU9GLFFBQVEsV0FBV0EsTUFBTUEsSUFBSUUsSUFBSTtZQUNqSyxPQUFPO2dCQUNMRDtnQkFDQUUsT0FBT0QsS0FBS0UsUUFBUTtnQkFDcEJGO2dCQUNBLElBQUlHLFlBQVc7b0JBQ2IsT0FBT1IsZ0JBQWdCSztnQkFDekI7Z0JBQ0FJLFFBQU8xTixPQUFPO29CQUNaZ0YsTUFBTTJJLE1BQU0sQ0FBQ0MsZUFBZSxDQUFDTixNQUFNdE47Z0JBQ3JDO1lBQ0Y7UUFDRjtRQUNBaUYsT0FBTzRJLGNBQWMsQ0FBQ1YsU0FBUyxZQUFZO1lBQ3pDOUU7Z0JBQ0UsT0FBTyxDQUFDNkUscUJBQXFCLENBQUNDLFFBQVE1RCxNQUFNO1lBQzlDO1FBQ0Y7UUFDQXRFLE9BQU80SSxjQUFjLENBQUNWLFNBQVMsaUJBQWlCO1lBQzlDOUU7b0JBQ1M0RTtnQkFBUCxRQUFPQSxhQUFBQSx5QkFBQUEsaUNBQUFBLFdBQWFPLFFBQVE7WUFDOUI7UUFDRjtRQUNBLE9BQU9MO0lBQ1QsR0FBRztRQUFDSjtLQUFNO0FBQ1o7S0FsQ1NEOztRQUlPcFEseUVBQWVBO1FBQWZBLHlFQUFlQTtRQUM3QnRDLGtFQUFTQTtRQUNUQSxrRUFBU0E7OztBQThCcVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B2aWRzdGFjay9yZWFjdC9kZXYvdmlkc3RhY2suanM/NDMzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxuXG5pbXBvcnQgeyBUZXh0VHJhY2tTeW1ib2wsIFByaW1pdGl2ZSwgTWVkaWFQbGF5ZXJJbnN0YW5jZSwgaXNSZW1vdGlvblByb3ZpZGVyLCBNZWRpYVByb3ZpZGVySW5zdGFuY2UsIG1lZGlhU3RhdGUsIFRleHRUcmFjaywgVG9nZ2xlQnV0dG9uSW5zdGFuY2UsIFBvc3Rlckluc3RhbmNlLCB1c2VNZWRpYVN0YXRlLCBUaHVtYm5haWxzTG9hZGVyLCB1cGRhdGVTbGlkZXJQcmV2aWV3UGxhY2VtZW50LCBERUZBVUxUX0FVRElPX0dBSU5TIH0gZnJvbSAnLi9jaHVua3Mvdmlkc3RhY2stTm05T0p5N3guanMnO1xuZXhwb3J0IHsgQVJJQUtleVNob3J0Y3V0cywgQVVESU9fRVhURU5TSU9OUywgQVVESU9fVFlQRVMsIEFpclBsYXlCdXR0b25JbnN0YW5jZSwgQXVkaW9HYWluU2xpZGVySW5zdGFuY2UsIEF1ZGlvUHJvdmlkZXJMb2FkZXIsIEF1ZGlvVHJhY2tMaXN0LCBDYXB0aW9uQnV0dG9uSW5zdGFuY2UsIENhcHRpb25zSW5zdGFuY2UsIENvbnRyb2xzR3JvdXBJbnN0YW5jZSwgQ29udHJvbHNJbnN0YW5jZSwgREFTSFByb3ZpZGVyTG9hZGVyLCBEQVNIX1ZJREVPX0VYVEVOU0lPTlMsIERBU0hfVklERU9fVFlQRVMsIERFRkFVTFRfUExBWUJBQ0tfUkFURVMsIEZ1bGxzY3JlZW5CdXR0b25JbnN0YW5jZSwgRnVsbHNjcmVlbkNvbnRyb2xsZXIsIEdlc3R1cmVJbnN0YW5jZSwgR29vZ2xlQ2FzdEJ1dHRvbkluc3RhbmNlLCBITFNQcm92aWRlckxvYWRlciwgSExTX1ZJREVPX0VYVEVOU0lPTlMsIEhMU19WSURFT19UWVBFUywgTGlzdCwgTGl2ZUJ1dHRvbkluc3RhbmNlLCBMb2NhbE1lZGlhU3RvcmFnZSwgTG9nZ2VyLCBNRURJQV9LRVlfU0hPUlRDVVRTLCBNZWRpYUFubm91bmNlckluc3RhbmNlLCBNZWRpYUNvbnRyb2xzLCBNZWRpYVJlbW90ZUNvbnRyb2wsIE1lbnVCdXR0b25JbnN0YW5jZSwgTWVudUluc3RhbmNlLCBNZW51SXRlbUluc3RhbmNlLCBNZW51SXRlbXNJbnN0YW5jZSwgTWVudVBvcnRhbEluc3RhbmNlLCBNdXRlQnV0dG9uSW5zdGFuY2UsIFBJUEJ1dHRvbkluc3RhbmNlLCBQbGF5QnV0dG9uSW5zdGFuY2UsIFF1YWxpdHlTbGlkZXJJbnN0YW5jZSwgUmFkaW9Hcm91cEluc3RhbmNlLCBSYWRpb0luc3RhbmNlLCBTY3JlZW5PcmllbnRhdGlvbkNvbnRyb2xsZXIsIFNlZWtCdXR0b25JbnN0YW5jZSwgU2xpZGVyQ2hhcHRlcnNJbnN0YW5jZSwgU2xpZGVySW5zdGFuY2UsIFNsaWRlclByZXZpZXdJbnN0YW5jZSwgU2xpZGVyVGh1bWJuYWlsSW5zdGFuY2UsIFNsaWRlclZhbHVlSW5zdGFuY2UsIFNsaWRlclZpZGVvSW5zdGFuY2UsIFNwZWVkU2xpZGVySW5zdGFuY2UsIFRleHRSZW5kZXJlcnMsIFRleHRUcmFja0xpc3QsIFRodW1ibmFpbEluc3RhbmNlLCBUaW1lSW5zdGFuY2UsIFRpbWVSYW5nZSwgVGltZVNsaWRlckluc3RhbmNlLCBUb29sdGlwQ29udGVudEluc3RhbmNlLCBUb29sdGlwSW5zdGFuY2UsIFRvb2x0aXBUcmlnZ2VySW5zdGFuY2UsIFZJREVPX0VYVEVOU0lPTlMsIFZJREVPX1RZUEVTLCBWaWRlb1Byb3ZpZGVyTG9hZGVyLCBWaWRlb1F1YWxpdHlMaXN0LCBWaW1lb1Byb3ZpZGVyTG9hZGVyLCBWb2x1bWVTbGlkZXJJbnN0YW5jZSwgWW91VHViZVByb3ZpZGVyTG9hZGVyLCBjYW5DaGFuZ2VWb2x1bWUsIGNhbkZ1bGxzY3JlZW4sIGNhbkdvb2dsZUNhc3RTcmMsIGNhbk9yaWVudFNjcmVlbiwgY2FuUGxheUhMU05hdGl2ZWx5LCBjYW5Sb3RhdGVTY3JlZW4sIGNhblVzZVBpY3R1cmVJblBpY3R1cmUsIGNhblVzZVZpZGVvUHJlc2VudGF0aW9uLCBmaW5kQWN0aXZlQ3VlLCBmb3JtYXRTcG9rZW5UaW1lLCBmb3JtYXRUaW1lLCBnZXREb3dubG9hZEZpbGUsIGdldFRpbWVSYW5nZXNFbmQsIGdldFRpbWVSYW5nZXNTdGFydCwgaXNBdWRpb1Byb3ZpZGVyLCBpc0F1ZGlvU3JjLCBpc0N1ZUFjdGl2ZSwgaXNEQVNIUHJvdmlkZXIsIGlzREFTSFNyYywgaXNHb29nbGVDYXN0UHJvdmlkZXIsIGlzSExTUHJvdmlkZXIsIGlzSExTU3JjLCBpc0hUTUxBdWRpb0VsZW1lbnQsIGlzSFRNTElGcmFtZUVsZW1lbnQsIGlzSFRNTE1lZGlhRWxlbWVudCwgaXNIVE1MVmlkZW9FbGVtZW50LCBpc01lZGlhU3RyZWFtLCBpc1RyYWNrQ2FwdGlvbktpbmQsIGlzVmlkZW9Qcm92aWRlciwgaXNWaWRlb1F1YWxpdHlTcmMsIGlzVmlkZW9TcmMsIGlzVmltZW9Qcm92aWRlciwgaXNZb3VUdWJlUHJvdmlkZXIsIG1lZGlhQ29udGV4dCwgbm9ybWFsaXplVGltZUludGVydmFscywgcGFyc2VKU09OQ2FwdGlvbnNGaWxlLCBzbGlkZXJTdGF0ZSwgc29mdFJlc2V0TWVkaWFTdGF0ZSwgc29ydFZpZGVvUXVhbGl0aWVzLCB1cGRhdGVUaW1lSW50ZXJ2YWxzLCB1c2VNZWRpYVN0b3JlLCB1c2VTbGlkZXJTdGF0ZSwgdXNlU2xpZGVyU3RvcmUsIHdhdGNoQWN0aXZlVGV4dFRyYWNrLCB3YXRjaEN1ZVRleHRDaGFuZ2UgfSBmcm9tICcuL2NodW5rcy92aWRzdGFjay1ObTlPSnk3eC5qcyc7XG5pbXBvcnQgeyBpc1N0cmluZywgbGlzdGVuRXZlbnQsIERPTUV2ZW50LCBjcmVhdGVSZWFjdENvbXBvbmVudCwgdXNlU3RhdGVDb250ZXh0LCB1c2VTaWduYWwsIGNvbXBvc2VSZWZzLCB1c2VTaWduYWxSZWNvcmQsIGVmZmVjdCwgdXNlUmVhY3RTY29wZSwgc2lnbmFsIH0gZnJvbSAnLi9jaHVua3Mvdmlkc3RhY2stM2hzMy04aV8uanMnO1xuZXhwb3J0IHsgYXBwZW5kVHJpZ2dlckV2ZW50LCBmaW5kVHJpZ2dlckV2ZW50LCBoYXNUcmlnZ2VyRXZlbnQsIGlzS2V5Ym9hcmRDbGljaywgaXNLZXlib2FyZEV2ZW50LCBpc1BvaW50ZXJFdmVudCwgd2Fsa1RyaWdnZXJFdmVudENoYWluIH0gZnJvbSAnLi9jaHVua3Mvdmlkc3RhY2stM2hzMy04aV8uanMnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlU2lnbmFsLCB1c2VTY29wZWQgfSBmcm9tICcuL2NodW5rcy92aWRzdGFjay1EY1gySnptQi5qcyc7XG5leHBvcnQgeyBhdWRpb0dhaW5TbGlkZXIgYXMgQXVkaW9HYWluU2xpZGVyLCBDYXB0aW9ucywgQ2hhcHRlclRpdGxlLCBjb250cm9scyBhcyBDb250cm9scywgR29vZ2xlQ2FzdEJ1dHRvbiwgTWVkaWFBbm5vdW5jZXIsIHF1YWxpdHlTbGlkZXIgYXMgUXVhbGl0eVNsaWRlciwgc3BlZWRTbGlkZXIgYXMgU3BlZWRTbGlkZXIsIHNwaW5uZXIgYXMgU3Bpbm5lciwgVGl0bGUsIHRvb2x0aXAgYXMgVG9vbHRpcCwgdXNlQWN0aXZlVGV4dEN1ZXMsIHVzZUFjdGl2ZVRleHRUcmFjaywgdXNlQ2hhcHRlck9wdGlvbnMsIHVzZUNoYXB0ZXJUaXRsZSwgdXNlVGV4dEN1ZXMgfSBmcm9tICcuL2NodW5rcy92aWRzdGFjay1EY1gySnptQi5qcyc7XG5pbXBvcnQgeyB1c2VNZWRpYUNvbnRleHQgfSBmcm9tICcuL2NodW5rcy92aWRzdGFjay1CT2tIb0JHdS5qcyc7XG5leHBvcnQgeyBBaXJQbGF5QnV0dG9uLCBDYXB0aW9uQnV0dG9uLCBGdWxsc2NyZWVuQnV0dG9uLCBHZXN0dXJlLCBMaXZlQnV0dG9uLCBtZW51IGFzIE1lbnUsIE11dGVCdXR0b24sIFBJUEJ1dHRvbiwgUGxheUJ1dHRvbiwgcmFkaW9Hcm91cCBhcyBSYWRpb0dyb3VwLCBTZWVrQnV0dG9uLCBzbGlkZXIgYXMgU2xpZGVyLCB0aHVtYm5haWwgYXMgVGh1bWJuYWlsLCBUaW1lLCB0aW1lU2xpZGVyIGFzIFRpbWVTbGlkZXIsIHZvbHVtZVNsaWRlciBhcyBWb2x1bWVTbGlkZXIsIHVzZUF1ZGlvT3B0aW9ucywgdXNlQ2FwdGlvbk9wdGlvbnMsIHVzZU1lZGlhUGxheWVyIH0gZnJvbSAnLi9jaHVua3Mvdmlkc3RhY2stQk9rSG9CR3UuanMnO1xuaW1wb3J0IHsgSWNvbiB9IGZyb20gJy4vY2h1bmtzL3ZpZHN0YWNrLUNCRjdpVXF1LmpzJztcbmV4cG9ydCB7IHVzZU1lZGlhUmVtb3RlLCB1c2VQbGF5YmFja1JhdGVPcHRpb25zLCB1c2VWaWRlb1F1YWxpdHlPcHRpb25zIH0gZnJvbSAnLi9jaHVua3Mvdmlkc3RhY2stRDNNSjBjcmUuanMnO1xuaW1wb3J0ICdAZmxvYXRpbmctdWkvZG9tJztcbmltcG9ydCAncmVhY3QtZG9tJztcblxuY2xhc3MgTGliQVNTVGV4dFJlbmRlcmVyIHtcbiAgY29uc3RydWN0b3IobG9hZGVyLCBjb25maWcpIHtcbiAgICB0aGlzLmxvYWRlciA9IGxvYWRlcjtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLnByaW9yaXR5ID0gMTtcbiAgICB0aGlzLl9pbnN0YW5jZSA9IG51bGw7XG4gICAgdGhpcy5fdHJhY2sgPSBudWxsO1xuICAgIHRoaXMuX3R5cGVSRSA9IC8oc3NhfGFzcykkLztcbiAgfVxuICBjYW5SZW5kZXIodHJhY2ssIHZpZGVvKSB7XG4gICAgcmV0dXJuICEhdmlkZW8gJiYgISF0cmFjay5zcmMgJiYgKGlzU3RyaW5nKHRyYWNrLnR5cGUpICYmIHRoaXMuX3R5cGVSRS50ZXN0KHRyYWNrLnR5cGUpIHx8IHRoaXMuX3R5cGVSRS50ZXN0KHRyYWNrLnNyYykpO1xuICB9XG4gIGF0dGFjaCh2aWRlbykge1xuICAgIGlmICghdmlkZW8pIHJldHVybjtcbiAgICB0aGlzLmxvYWRlcigpLnRoZW4oYXN5bmMgKG1vZCkgPT4ge1xuICAgICAgdGhpcy5faW5zdGFuY2UgPSBuZXcgbW9kLmRlZmF1bHQoe1xuICAgICAgICAuLi50aGlzLmNvbmZpZyxcbiAgICAgICAgdmlkZW8sXG4gICAgICAgIHN1YlVybDogdGhpcy5fdHJhY2s/LnNyYyB8fCBcIlwiXG4gICAgICB9KTtcbiAgICAgIGxpc3RlbkV2ZW50KHRoaXMuX2luc3RhbmNlLCBcInJlYWR5XCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgY2FudmFzID0gdGhpcy5faW5zdGFuY2U/Ll9jYW52YXM7XG4gICAgICAgIGlmIChjYW52YXMpIGNhbnZhcy5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJub25lXCI7XG4gICAgICB9KTtcbiAgICAgIGxpc3RlbkV2ZW50KHRoaXMuX2luc3RhbmNlLCBcImVycm9yXCIsIChldmVudCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5fdHJhY2spIHtcbiAgICAgICAgICB0aGlzLl90cmFja1tUZXh0VHJhY2tTeW1ib2wuX3JlYWR5U3RhdGVdID0gMztcbiAgICAgICAgICB0aGlzLl90cmFjay5kaXNwYXRjaEV2ZW50KFxuICAgICAgICAgICAgbmV3IERPTUV2ZW50KFwiZXJyb3JcIiwge1xuICAgICAgICAgICAgICB0cmlnZ2VyOiBldmVudCxcbiAgICAgICAgICAgICAgZGV0YWlsOiBldmVudC5lcnJvclxuICAgICAgICAgICAgfSlcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBjaGFuZ2VUcmFjayh0cmFjaykge1xuICAgIGlmICghdHJhY2sgfHwgdHJhY2sucmVhZHlTdGF0ZSA9PT0gMykge1xuICAgICAgdGhpcy5fZnJlZVRyYWNrKCk7XG4gICAgfSBlbHNlIGlmICh0aGlzLl90cmFjayAhPT0gdHJhY2spIHtcbiAgICAgIHRoaXMuX2luc3RhbmNlPy5zZXRUcmFja0J5VXJsKHRyYWNrLnNyYyk7XG4gICAgICB0aGlzLl90cmFjayA9IHRyYWNrO1xuICAgIH1cbiAgfVxuICBkZXRhY2goKSB7XG4gICAgdGhpcy5fZnJlZVRyYWNrKCk7XG4gIH1cbiAgX2ZyZWVUcmFjaygpIHtcbiAgICB0aGlzLl9pbnN0YW5jZT8uZnJlZVRyYWNrKCk7XG4gICAgdGhpcy5fdHJhY2sgPSBudWxsO1xuICB9XG59XG5cbmNvbnN0IHBsYXllckNhbGxiYWNrcyA9IFtcbiAgXCJvbkFib3J0XCIsXG4gIFwib25BdWRpb1RyYWNrQ2hhbmdlXCIsXG4gIFwib25BdWRpb1RyYWNrc0NoYW5nZVwiLFxuICBcIm9uQXV0b1BsYXlcIixcbiAgXCJvbkF1dG9QbGF5Q2hhbmdlXCIsXG4gIFwib25BdXRvUGxheUZhaWxcIixcbiAgXCJvbkNhbkxvYWRcIixcbiAgXCJvbkNhblBsYXlcIixcbiAgXCJvbkNhblBsYXlUaHJvdWdoXCIsXG4gIFwib25Db250cm9sc0NoYW5nZVwiLFxuICBcIm9uRGVzdHJveVwiLFxuICBcIm9uRHVyYXRpb25DaGFuZ2VcIixcbiAgXCJvbkVtcHRpZWRcIixcbiAgXCJvbkVuZFwiLFxuICBcIm9uRW5kZWRcIixcbiAgXCJvbkVycm9yXCIsXG4gIFwib25GaW5kTWVkaWFQbGF5ZXJcIixcbiAgXCJvbkZ1bGxzY3JlZW5DaGFuZ2VcIixcbiAgXCJvbkZ1bGxzY3JlZW5FcnJvclwiLFxuICBcIm9uTGl2ZUNoYW5nZVwiLFxuICBcIm9uTGl2ZUVkZ2VDaGFuZ2VcIixcbiAgXCJvbkxvYWRlZERhdGFcIixcbiAgXCJvbkxvYWRlZE1ldGFkYXRhXCIsXG4gIFwib25Mb2FkU3RhcnRcIixcbiAgXCJvbkxvb3BDaGFuZ2VcIixcbiAgXCJvbk9yaWVudGF0aW9uQ2hhbmdlXCIsXG4gIFwib25QYXVzZVwiLFxuICBcIm9uUGljdHVyZUluUGljdHVyZUNoYW5nZVwiLFxuICBcIm9uUGljdHVyZUluUGljdHVyZUVycm9yXCIsXG4gIFwib25QbGF5XCIsXG4gIFwib25QbGF5RmFpbFwiLFxuICBcIm9uUGxheWluZ1wiLFxuICBcIm9uUGxheXNJbmxpbmVDaGFuZ2VcIixcbiAgXCJvblBvc3RlckNoYW5nZVwiLFxuICBcIm9uUHJvZ3Jlc3NcIixcbiAgXCJvblByb3ZpZGVyQ2hhbmdlXCIsXG4gIFwib25Qcm92aWRlckxvYWRlckNoYW5nZVwiLFxuICBcIm9uUHJvdmlkZXJTZXR1cFwiLFxuICBcIm9uUXVhbGl0aWVzQ2hhbmdlXCIsXG4gIFwib25RdWFsaXR5Q2hhbmdlXCIsXG4gIFwib25SYXRlQ2hhbmdlXCIsXG4gIFwib25SZXBsYXlcIixcbiAgXCJvblNlZWtlZFwiLFxuICBcIm9uU2Vla2luZ1wiLFxuICBcIm9uU291cmNlQ2hhbmdlXCIsXG4gIFwib25Tb3VyY2VDaGFuZ2VcIixcbiAgXCJvblN0YWxsZWRcIixcbiAgXCJvblN0YXJ0ZWRcIixcbiAgXCJvblN0cmVhbVR5cGVDaGFuZ2VcIixcbiAgXCJvblN1c3BlbmRcIixcbiAgXCJvblRleHRUcmFja0NoYW5nZVwiLFxuICBcIm9uVGV4dFRyYWNrc0NoYW5nZVwiLFxuICBcIm9uVGltZVVwZGF0ZVwiLFxuICBcIm9uVGl0bGVDaGFuZ2VcIixcbiAgXCJvblZkc0xvZ1wiLFxuICBcIm9uVmlkZW9QcmVzZW50YXRpb25DaGFuZ2VcIixcbiAgXCJvblZvbHVtZUNoYW5nZVwiLFxuICBcIm9uV2FpdGluZ1wiXG5dO1xuXG5jb25zdCBNZWRpYVBsYXllckJyaWRnZSA9IGNyZWF0ZVJlYWN0Q29tcG9uZW50KE1lZGlhUGxheWVySW5zdGFuY2UsIHtcbiAgZXZlbnRzOiBwbGF5ZXJDYWxsYmFja3MsXG4gIGV2ZW50c1JlZ2V4OiAvXm9uSGxzLyxcbiAgZG9tRXZlbnRzUmVnZXg6IC9eb25NZWRpYS9cbn0pO1xuY29uc3QgTWVkaWFQbGF5ZXIgPSBSZWFjdC5mb3J3YXJkUmVmKFxuICAoeyBhc3BlY3RSYXRpbywgY2hpbGRyZW4sIC4uLnByb3BzIH0sIGZvcndhcmRSZWYpID0+IHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBNZWRpYVBsYXllckJyaWRnZSxcbiAgICAgIHtcbiAgICAgICAgLi4ucHJvcHMsXG4gICAgICAgIHNyYzogcHJvcHMuc3JjLFxuICAgICAgICByZWY6IGZvcndhcmRSZWYsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgYXNwZWN0UmF0aW8sXG4gICAgICAgICAgLi4ucHJvcHMuc3R5bGVcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIChwcm9wczIpID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFByaW1pdGl2ZS5kaXYsIHsgLi4ucHJvcHMyIH0sIGNoaWxkcmVuKVxuICAgICk7XG4gIH1cbik7XG5NZWRpYVBsYXllci5kaXNwbGF5TmFtZSA9IFwiTWVkaWFQbGF5ZXJcIjtcblxuY29uc3QgTWVkaWFQcm92aWRlckJyaWRnZSA9IGNyZWF0ZVJlYWN0Q29tcG9uZW50KE1lZGlhUHJvdmlkZXJJbnN0YW5jZSk7XG5jb25zdCBNZWRpYVByb3ZpZGVyID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHsgbG9hZGVycyA9IFtdLCBjaGlsZHJlbiwgbWVkaWFQcm9wcywgLi4ucHJvcHMgfSwgZm9yd2FyZFJlZikgPT4ge1xuICAgIGNvbnN0IHJlYWN0TG9hZGVycyA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gbG9hZGVycy5tYXAoKExvYWRlcikgPT4gbmV3IExvYWRlcigpKSwgbG9hZGVycyk7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KE1lZGlhUHJvdmlkZXJCcmlkZ2UsIHsgLi4ucHJvcHMsIGxvYWRlcnM6IHJlYWN0TG9hZGVycywgcmVmOiBmb3J3YXJkUmVmIH0sIChwcm9wczIsIGluc3RhbmNlKSA9PiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IC4uLnByb3BzMiB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChNZWRpYU91dGxldCwgeyAuLi5tZWRpYVByb3BzLCBwcm92aWRlcjogaW5zdGFuY2UgfSksIGNoaWxkcmVuKSk7XG4gIH1cbik7XG5NZWRpYVByb3ZpZGVyLmRpc3BsYXlOYW1lID0gXCJNZWRpYVByb3ZpZGVyXCI7XG5mdW5jdGlvbiBNZWRpYU91dGxldCh7IHByb3ZpZGVyLCAuLi5wcm9wcyB9KSB7XG4gIGNvbnN0IHsgY3Jvc3NPcmlnaW4sIHBvc3RlciwgcmVtb3RlUGxheWJhY2tJbmZvLCBuYXRpdmVDb250cm9scywgdmlld1R5cGUgfSA9IHVzZVN0YXRlQ29udGV4dChtZWRpYVN0YXRlKSwgeyBsb2FkZXIgfSA9IHByb3ZpZGVyLiRzdGF0ZSwgeyAkcHJvdmlkZXI6ICQkcHJvdmlkZXIsICRwcm92aWRlclNldHVwOiAkJHByb3ZpZGVyU2V0dXAgfSA9IHVzZU1lZGlhQ29udGV4dCgpLCAkbmF0aXZlQ29udHJvbHMgPSB1c2VTaWduYWwobmF0aXZlQ29udHJvbHMpLCAkY3Jvc3NPcmlnaW4gPSB1c2VTaWduYWwoY3Jvc3NPcmlnaW4pLCAkcG9zdGVyID0gdXNlU2lnbmFsKHBvc3RlciksICRsb2FkZXIgPSB1c2VTaWduYWwobG9hZGVyKSwgJHByb3ZpZGVyID0gdXNlU2lnbmFsKCQkcHJvdmlkZXIpLCAkcHJvdmlkZXJTZXR1cCA9IHVzZVNpZ25hbCgkJHByb3ZpZGVyU2V0dXApLCAkcmVtb3RlSW5mbyA9IHVzZVNpZ25hbChyZW1vdGVQbGF5YmFja0luZm8pLCAkbWVkaWFUeXBlID0gJGxvYWRlcj8ubWVkaWFUeXBlKCksICR2aWV3VHlwZSA9IHVzZVNpZ25hbCh2aWV3VHlwZSksIGlzQXVkaW9WaWV3ID0gJHZpZXdUeXBlID09PSBcImF1ZGlvXCIsIGlzWW91VHViZUVtYmVkID0gJGxvYWRlcj8ubmFtZSA9PT0gXCJ5b3V0dWJlXCIsIGlzVmltZW9FbWJlZCA9ICRsb2FkZXI/Lm5hbWUgPT09IFwidmltZW9cIiwgaXNFbWJlZCA9IGlzWW91VHViZUVtYmVkIHx8IGlzVmltZW9FbWJlZCwgaXNSZW1vdGlvbiA9ICRsb2FkZXI/Lm5hbWUgPT09IFwicmVtb3Rpb25cIiwgaXNHb29nbGVDYXN0ID0gJGxvYWRlcj8ubmFtZSA9PT0gXCJnb29nbGUtY2FzdFwiLCBbZ29vZ2xlQ2FzdEljb25QYXRocywgc2V0R29vZ2xlQ2FzdEljb25QYXRoc10gPSBSZWFjdC51c2VTdGF0ZShcIlwiKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWlzR29vZ2xlQ2FzdCB8fCBnb29nbGVDYXN0SWNvblBhdGhzKSByZXR1cm47XG4gICAgaW1wb3J0KCcuL2NodW5rcy92aWRzdGFjay0zaHMzLThpXy5qcycpLnRoZW4oZnVuY3Rpb24gKG4pIHsgcmV0dXJuIG4uY2hyb21lY2FzdDsgfSkudGhlbigobW9kKSA9PiB7XG4gICAgICBzZXRHb29nbGVDYXN0SWNvblBhdGhzKG1vZC5kZWZhdWx0KTtcbiAgICB9KTtcbiAgfSwgW2lzR29vZ2xlQ2FzdF0pO1xuICBpZiAoaXNHb29nbGVDYXN0KSB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgXCJkaXZcIixcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcInZkcy1nb29nbGUtY2FzdFwiLFxuICAgICAgICByZWY6IChlbCkgPT4ge1xuICAgICAgICAgIHByb3ZpZGVyLmxvYWQoZWwpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSWNvbiwgeyBwYXRoczogZ29vZ2xlQ2FzdEljb25QYXRocyB9KSxcbiAgICAgICRyZW1vdGVJbmZvPy5kZXZpY2VOYW1lID8gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcInZkcy1nb29nbGUtY2FzdC1pbmZvXCIgfSwgXCJHb29nbGUgQ2FzdCBvblwiLCBcIiBcIiwgLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcInZkcy1nb29nbGUtY2FzdC1kZXZpY2UtbmFtZVwiIH0sICRyZW1vdGVJbmZvLmRldmljZU5hbWUpKSA6IG51bGxcbiAgICApO1xuICB9XG4gIGlmIChpc1JlbW90aW9uKSB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgXCJkYXRhLXJlbW90aW9uLWNhbnZhc1wiOiB0cnVlIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgXCJkaXZcIixcbiAgICAgIHtcbiAgICAgICAgXCJkYXRhLXJlbW90aW9uLWNvbnRhaW5lclwiOiB0cnVlLFxuICAgICAgICByZWY6IChlbCkgPT4ge1xuICAgICAgICAgIHByb3ZpZGVyLmxvYWQoZWwpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgaXNSZW1vdGlvblByb3ZpZGVyKCRwcm92aWRlcikgJiYgJHByb3ZpZGVyU2V0dXAgPyBSZWFjdC5jcmVhdGVFbGVtZW50KCRwcm92aWRlci5yZW5kZXIpIDogbnVsbFxuICAgICkpO1xuICB9XG4gIHJldHVybiBpc0VtYmVkID8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBSZWFjdC5GcmFnbWVudCxcbiAgICBudWxsLFxuICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIiwge1xuICAgICAgY2xhc3NOYW1lOiBpc1lvdVR1YmVFbWJlZCA/IFwidmRzLXlvdXR1YmVcIiA6IFwidmRzLXZpbWVvXCIsXG4gICAgICBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmc6IHRydWUsXG4gICAgICB0YWJJbmRleDogISRuYXRpdmVDb250cm9scyA/IC0xIDogdm9pZCAwLFxuICAgICAgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIixcbiAgICAgIFwiZGF0YS1uby1jb250cm9sc1wiOiAhJG5hdGl2ZUNvbnRyb2xzID8gXCJcIiA6IHZvaWQgMCxcbiAgICAgIHJlZihlbCkge1xuICAgICAgICBwcm92aWRlci5sb2FkKGVsKTtcbiAgICAgIH1cbiAgICB9KSxcbiAgICAhJG5hdGl2ZUNvbnRyb2xzICYmICFpc0F1ZGlvVmlldyA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwidmRzLWJsb2NrZXJcIiB9KSA6IG51bGxcbiAgKSA6ICRtZWRpYVR5cGUgPyBSZWFjdC5jcmVhdGVFbGVtZW50KCRtZWRpYVR5cGUgPT09IFwiYXVkaW9cIiA/IFwiYXVkaW9cIiA6IFwidmlkZW9cIiwge1xuICAgIC4uLnByb3BzLFxuICAgIGNvbnRyb2xzOiAkbmF0aXZlQ29udHJvbHMgPyB0cnVlIDogbnVsbCxcbiAgICBjcm9zc09yaWdpbjogdHlwZW9mICRjcm9zc09yaWdpbiA9PT0gXCJib29sZWFuXCIgPyBcIlwiIDogJGNyb3NzT3JpZ2luLFxuICAgIHBvc3RlcjogJG1lZGlhVHlwZSA9PT0gXCJ2aWRlb1wiICYmICRuYXRpdmVDb250cm9scyAmJiAkcG9zdGVyID8gJHBvc3RlciA6IG51bGwsXG4gICAgcHJlbG9hZDogXCJub25lXCIsXG4gICAgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIixcbiAgICBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmc6IHRydWUsXG4gICAgcmVmKGVsKSB7XG4gICAgICBwcm92aWRlci5sb2FkKGVsKTtcbiAgICB9XG4gIH0pIDogbnVsbDtcbn1cbk1lZGlhT3V0bGV0LmRpc3BsYXlOYW1lID0gXCJNZWRpYU91dGxldFwiO1xuXG5mdW5jdGlvbiBjcmVhdGVUZXh0VHJhY2soaW5pdCkge1xuICBjb25zdCBtZWRpYSA9IHVzZU1lZGlhQ29udGV4dCgpLCB0cmFjayA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gbmV3IFRleHRUcmFjayhpbml0KSwgT2JqZWN0LnZhbHVlcyhpbml0KSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbWVkaWEudGV4dFRyYWNrcy5hZGQodHJhY2spO1xuICAgIHJldHVybiAoKSA9PiB2b2lkIG1lZGlhLnRleHRUcmFja3MucmVtb3ZlKHRyYWNrKTtcbiAgfSwgW3RyYWNrXSk7XG4gIHJldHVybiB0cmFjaztcbn1cblxuZnVuY3Rpb24gVHJhY2soeyBsYW5nLCAuLi5wcm9wcyB9KSB7XG4gIGNyZWF0ZVRleHRUcmFjayh7IGxhbmd1YWdlOiBsYW5nLCAuLi5wcm9wcyB9KTtcbiAgcmV0dXJuIG51bGw7XG59XG5UcmFjay5kaXNwbGF5TmFtZSA9IFwiVHJhY2tcIjtcblxuY29uc3QgVG9nZ2xlQnV0dG9uQnJpZGdlID0gY3JlYXRlUmVhY3RDb21wb25lbnQoVG9nZ2xlQnV0dG9uSW5zdGFuY2UpO1xuY29uc3QgVG9nZ2xlQnV0dG9uID0gUmVhY3QuZm9yd2FyZFJlZihcbiAgKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0sIGZvcndhcmRSZWYpID0+IHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVG9nZ2xlQnV0dG9uQnJpZGdlLCB7IC4uLnByb3BzIH0sIChwcm9wczIpID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgUHJpbWl0aXZlLmJ1dHRvbixcbiAgICAgIHtcbiAgICAgICAgLi4ucHJvcHMyLFxuICAgICAgICByZWY6IGNvbXBvc2VSZWZzKHByb3BzMi5yZWYsIGZvcndhcmRSZWYpXG4gICAgICB9LFxuICAgICAgY2hpbGRyZW5cbiAgICApKTtcbiAgfVxuKTtcblRvZ2dsZUJ1dHRvbi5kaXNwbGF5TmFtZSA9IFwiVG9nZ2xlQnV0dG9uXCI7XG5cbmNvbnN0IFBvc3RlckJyaWRnZSA9IGNyZWF0ZVJlYWN0Q29tcG9uZW50KFBvc3Rlckluc3RhbmNlKTtcbmNvbnN0IFBvc3RlciA9IFJlYWN0LmZvcndhcmRSZWYoXG4gICh7IGNoaWxkcmVuLCAuLi5wcm9wcyB9LCBmb3J3YXJkUmVmKSA9PiB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFBvc3RlckJyaWRnZSwgeyAuLi5wcm9wcyB9LCAocHJvcHMyLCBpbnN0YW5jZSkgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBQb3N0ZXJJbWcsXG4gICAgICB7XG4gICAgICAgIC4uLnByb3BzMixcbiAgICAgICAgaW5zdGFuY2UsXG4gICAgICAgIHJlZjogY29tcG9zZVJlZnMocHJvcHMyLnJlZiwgZm9yd2FyZFJlZilcbiAgICAgIH0sXG4gICAgICBjaGlsZHJlblxuICAgICkpO1xuICB9XG4pO1xuUG9zdGVyLmRpc3BsYXlOYW1lID0gXCJQb3N0ZXJcIjtcbmNvbnN0IFBvc3RlckltZyA9IFJlYWN0LmZvcndhcmRSZWYoXG4gICh7IGluc3RhbmNlLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgZm9yd2FyZFJlZikgPT4ge1xuICAgIGNvbnN0IHsgc3JjLCBpbWcsIGFsdCwgY3Jvc3NPcmlnaW4sIGxvYWRpbmcsIGhpZGRlbiB9ID0gaW5zdGFuY2UuJHN0YXRlLCAkc3JjID0gdXNlU2lnbmFsKHNyYyksICRhbHQgPSB1c2VTaWduYWwoYWx0KSwgJGNyb3NzT3JpZ2luID0gdXNlU2lnbmFsKGNyb3NzT3JpZ2luKSwgJGxvYWRpbmcgPSB1c2VTaWduYWwobG9hZGluZyksICRoaWRkZW4gPSB1c2VTaWduYWwoaGlkZGVuKTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBQcmltaXRpdmUuaW1nLFxuICAgICAge1xuICAgICAgICAuLi5wcm9wcyxcbiAgICAgICAgc3JjOiAkc3JjIHx8IHZvaWQgMCxcbiAgICAgICAgYWx0OiAkYWx0IHx8IHZvaWQgMCxcbiAgICAgICAgY3Jvc3NPcmlnaW46ICRjcm9zc09yaWdpbiB8fCB2b2lkIDAsXG4gICAgICAgIHJlZjogY29tcG9zZVJlZnMoaW1nLnNldCwgZm9yd2FyZFJlZiksXG4gICAgICAgIHN0eWxlOiB7IGRpc3BsYXk6ICRsb2FkaW5nIHx8ICRoaWRkZW4gPyBcIm5vbmVcIiA6IHZvaWQgMCB9XG4gICAgICB9LFxuICAgICAgY2hpbGRyZW5cbiAgICApO1xuICB9XG4pO1xuUG9zdGVySW1nLmRpc3BsYXlOYW1lID0gXCJQb3N0ZXJJbWdcIjtcblxuY29uc3QgUm9vdCA9IFJlYWN0LmZvcndhcmRSZWYoKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0sIGZvcndhcmRSZWYpID0+IHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgIFByaW1pdGl2ZS5kaXYsXG4gICAge1xuICAgICAgdHJhbnNsYXRlOiBcInllc1wiLFxuICAgICAgXCJhcmlhLWxpdmVcIjogXCJvZmZcIixcbiAgICAgIFwiYXJpYS1hdG9taWNcIjogXCJ0cnVlXCIsXG4gICAgICAuLi5wcm9wcyxcbiAgICAgIHJlZjogZm9yd2FyZFJlZlxuICAgIH0sXG4gICAgY2hpbGRyZW5cbiAgKTtcbn0pO1xuUm9vdC5kaXNwbGF5TmFtZSA9IFwiQ2FwdGlvblwiO1xuY29uc3QgVGV4dCA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkUmVmKSA9PiB7XG4gIGNvbnN0IHRleHRUcmFjayA9IHVzZU1lZGlhU3RhdGUoXCJ0ZXh0VHJhY2tcIiksIFthY3RpdmVDdWUsIHNldEFjdGl2ZUN1ZV0gPSBSZWFjdC51c2VTdGF0ZSgpO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghdGV4dFRyYWNrKSByZXR1cm47XG4gICAgZnVuY3Rpb24gb25DdWVDaGFuZ2UoKSB7XG4gICAgICBzZXRBY3RpdmVDdWUodGV4dFRyYWNrPy5hY3RpdmVDdWVzWzBdKTtcbiAgICB9XG4gICAgdGV4dFRyYWNrLmFkZEV2ZW50TGlzdGVuZXIoXCJjdWUtY2hhbmdlXCIsIG9uQ3VlQ2hhbmdlKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdGV4dFRyYWNrLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjdWUtY2hhbmdlXCIsIG9uQ3VlQ2hhbmdlKTtcbiAgICAgIHNldEFjdGl2ZUN1ZSh2b2lkIDApO1xuICAgIH07XG4gIH0sIFt0ZXh0VHJhY2tdKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgIFByaW1pdGl2ZS5zcGFuLFxuICAgIHtcbiAgICAgIC4uLnByb3BzLFxuICAgICAgXCJkYXRhLXBhcnRcIjogXCJjdWVcIixcbiAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICAgIF9faHRtbDogYWN0aXZlQ3VlPy50ZXh0IHx8IFwiXCJcbiAgICAgIH0sXG4gICAgICByZWY6IGZvcndhcmRSZWZcbiAgICB9XG4gICk7XG59KTtcblRleHQuZGlzcGxheU5hbWUgPSBcIkNhcHRpb25UZXh0XCI7XG5cbnZhciBjYXB0aW9uID0gLyojX19QVVJFX18qL09iamVjdC5mcmVlemUoe1xuICBfX3Byb3RvX186IG51bGwsXG4gIFJvb3Q6IFJvb3QsXG4gIFRleHQ6IFRleHRcbn0pO1xuXG5mdW5jdGlvbiB1c2VTdGF0ZShjdG9yLCBwcm9wLCByZWYpIHtcbiAgY29uc3QgaW5pdGlhbFZhbHVlID0gUmVhY3QudXNlTWVtbygoKSA9PiBjdG9yLnN0YXRlLnJlY29yZFtwcm9wXSwgW2N0b3IsIHByb3BdKTtcbiAgcmV0dXJuIHVzZVNpZ25hbChyZWYuY3VycmVudCA/IHJlZi5jdXJyZW50LiRzdGF0ZVtwcm9wXSA6IGluaXRpYWxWYWx1ZSk7XG59XG5jb25zdCBzdG9yZXNDYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG5mdW5jdGlvbiB1c2VTdG9yZShjdG9yLCByZWYpIHtcbiAgY29uc3QgaW5pdGlhbFN0b3JlID0gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgbGV0IHN0b3JlID0gc3RvcmVzQ2FjaGUuZ2V0KGN0b3IpO1xuICAgIGlmICghc3RvcmUpIHtcbiAgICAgIHN0b3JlID0gbmV3IFByb3h5KGN0b3Iuc3RhdGUucmVjb3JkLCB7XG4gICAgICAgIGdldDogKF8sIHByb3ApID0+ICgpID0+IGN0b3Iuc3RhdGUucmVjb3JkW3Byb3BdXG4gICAgICB9KTtcbiAgICAgIHN0b3Jlc0NhY2hlLnNldChjdG9yLCBzdG9yZSk7XG4gICAgfVxuICAgIHJldHVybiBzdG9yZTtcbiAgfSwgW2N0b3JdKTtcbiAgcmV0dXJuIHVzZVNpZ25hbFJlY29yZChyZWYuY3VycmVudCA/IHJlZi5jdXJyZW50LiRzdGF0ZSA6IGluaXRpYWxTdG9yZSk7XG59XG5cbmZ1bmN0aW9uIHVzZU1lZGlhUHJvdmlkZXIoKSB7XG4gIGNvbnN0IFtwcm92aWRlciwgc2V0UHJvdmlkZXJdID0gUmVhY3QudXNlU3RhdGUobnVsbCksIGNvbnRleHQgPSB1c2VNZWRpYUNvbnRleHQoKTtcbiAgaWYgKCFjb250ZXh0KSB7XG4gICAgdGhyb3cgRXJyb3IoXG4gICAgICBcIlt2aWRzdGFja10gbm8gbWVkaWEgY29udGV4dCB3YXMgZm91bmQgLSB3YXMgdGhpcyBjYWxsZWQgb3V0c2lkZSBvZiBgPE1lZGlhUGxheWVyPmA/XCJcbiAgICApO1xuICB9XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFjb250ZXh0KSByZXR1cm47XG4gICAgcmV0dXJuIGVmZmVjdCgoKSA9PiB7XG4gICAgICBzZXRQcm92aWRlcihjb250ZXh0LiRwcm92aWRlcigpKTtcbiAgICB9KTtcbiAgfSwgW10pO1xuICByZXR1cm4gcHJvdmlkZXI7XG59XG5cbmZ1bmN0aW9uIHVzZVRodW1ibmFpbHMoc3JjLCBjcm9zc09yaWdpbiA9IG51bGwpIHtcbiAgY29uc3Qgc2NvcGUgPSB1c2VSZWFjdFNjb3BlKCksICRzcmMgPSBjcmVhdGVTaWduYWwoc3JjKSwgJGNyb3NzT3JpZ2luID0gY3JlYXRlU2lnbmFsKGNyb3NzT3JpZ2luKSwgbG9hZGVyID0gdXNlU2NvcGVkKCgpID0+IFRodW1ibmFpbHNMb2FkZXIuY3JlYXRlKCRzcmMsICRjcm9zc09yaWdpbikpO1xuICBpZiAoIXNjb3BlKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgYFt2aWRzdGFja10gXFxgdXNlVGh1bWJuYWlsc1xcYCBtdXN0IGJlIGNhbGxlZCBpbnNpZGUgYSBjaGlsZCBjb21wb25lbnQgb2YgXFxgPE1lZGlhUGxheWVyPlxcYGBcbiAgICApO1xuICB9XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgJHNyYy5zZXQoc3JjKTtcbiAgfSwgW3NyY10pO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICRjcm9zc09yaWdpbi5zZXQoY3Jvc3NPcmlnaW4pO1xuICB9LCBbY3Jvc3NPcmlnaW5dKTtcbiAgcmV0dXJuIHVzZVNpZ25hbChsb2FkZXIuJGltYWdlcyk7XG59XG5mdW5jdGlvbiB1c2VBY3RpdmVUaHVtYm5haWwodGh1bWJuYWlscywgdGltZSkge1xuICByZXR1cm4gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgbGV0IGFjdGl2ZUluZGV4ID0gLTE7XG4gICAgZm9yIChsZXQgaSA9IHRodW1ibmFpbHMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIGNvbnN0IGltYWdlID0gdGh1bWJuYWlsc1tpXTtcbiAgICAgIGlmICh0aW1lID49IGltYWdlLnN0YXJ0VGltZSAmJiAoIWltYWdlLmVuZFRpbWUgfHwgdGltZSA8IGltYWdlLmVuZFRpbWUpKSB7XG4gICAgICAgIGFjdGl2ZUluZGV4ID0gaTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0aHVtYm5haWxzW2FjdGl2ZUluZGV4XSB8fCBudWxsO1xuICB9LCBbdGh1bWJuYWlscywgdGltZV0pO1xufVxuXG5mdW5jdGlvbiB1c2VTbGlkZXJQcmV2aWV3KHtcbiAgY2xhbXAgPSBmYWxzZSxcbiAgb2Zmc2V0ID0gMCxcbiAgb3JpZW50YXRpb24gPSBcImhvcml6b250YWxcIlxufSA9IHt9KSB7XG4gIGNvbnN0IFtyb290UmVmLCBzZXRSb290UmVmXSA9IFJlYWN0LnVzZVN0YXRlKG51bGwpLCBbcHJldmlld1JlZiwgc2V0UHJldmlld1JlZl0gPSBSZWFjdC51c2VTdGF0ZShudWxsKSwgW3BvaW50ZXJWYWx1ZSwgc2V0UG9pbnRlclZhbHVlXSA9IFJlYWN0LnVzZVN0YXRlKDApLCBbaXNWaXNpYmxlLCBzZXRJc1Zpc2libGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghcm9vdFJlZikgcmV0dXJuO1xuICAgIGNvbnN0IGRyYWdnaW5nID0gc2lnbmFsKGZhbHNlKTtcbiAgICBmdW5jdGlvbiB1cGRhdGVQb2ludGVyVmFsdWUoZXZlbnQpIHtcbiAgICAgIGlmICghcm9vdFJlZikgcmV0dXJuO1xuICAgICAgc2V0UG9pbnRlclZhbHVlKGdldFBvaW50ZXJWYWx1ZShyb290UmVmLCBldmVudCwgb3JpZW50YXRpb24pKTtcbiAgICB9XG4gICAgcmV0dXJuIGVmZmVjdCgoKSA9PiB7XG4gICAgICBpZiAoIWRyYWdnaW5nKCkpIHtcbiAgICAgICAgbGlzdGVuRXZlbnQocm9vdFJlZiwgXCJwb2ludGVyZW50ZXJcIiwgKCkgPT4ge1xuICAgICAgICAgIHNldElzVmlzaWJsZSh0cnVlKTtcbiAgICAgICAgICBwcmV2aWV3UmVmPy5zZXRBdHRyaWJ1dGUoXCJkYXRhLXZpc2libGVcIiwgXCJcIik7XG4gICAgICAgIH0pO1xuICAgICAgICBsaXN0ZW5FdmVudChyb290UmVmLCBcInBvaW50ZXJkb3duXCIsIChldmVudCkgPT4ge1xuICAgICAgICAgIGRyYWdnaW5nLnNldCh0cnVlKTtcbiAgICAgICAgICB1cGRhdGVQb2ludGVyVmFsdWUoZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICAgICAgbGlzdGVuRXZlbnQocm9vdFJlZiwgXCJwb2ludGVybGVhdmVcIiwgKCkgPT4ge1xuICAgICAgICAgIHNldElzVmlzaWJsZShmYWxzZSk7XG4gICAgICAgICAgcHJldmlld1JlZj8ucmVtb3ZlQXR0cmlidXRlKFwiZGF0YS12aXNpYmxlXCIpO1xuICAgICAgICB9KTtcbiAgICAgICAgbGlzdGVuRXZlbnQocm9vdFJlZiwgXCJwb2ludGVybW92ZVwiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICB1cGRhdGVQb2ludGVyVmFsdWUoZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgcHJldmlld1JlZj8uc2V0QXR0cmlidXRlKFwiZGF0YS1kcmFnZ2luZ1wiLCBcIlwiKTtcbiAgICAgIGxpc3RlbkV2ZW50KGRvY3VtZW50LCBcInBvaW50ZXJ1cFwiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgZHJhZ2dpbmcuc2V0KGZhbHNlKTtcbiAgICAgICAgcHJldmlld1JlZj8ucmVtb3ZlQXR0cmlidXRlKFwiZGF0YS1kcmFnZ2luZ1wiKTtcbiAgICAgICAgdXBkYXRlUG9pbnRlclZhbHVlKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgICAgbGlzdGVuRXZlbnQoZG9jdW1lbnQsIFwicG9pbnRlcm1vdmVcIiwgKGV2ZW50KSA9PiB7XG4gICAgICAgIHVwZGF0ZVBvaW50ZXJWYWx1ZShldmVudCk7XG4gICAgICB9KTtcbiAgICAgIGxpc3RlbkV2ZW50KGRvY3VtZW50LCBcInRvdWNobW92ZVwiLCAoZSkgPT4gZS5wcmV2ZW50RGVmYXVsdCgpLCB7XG4gICAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSwgW3Jvb3RSZWZdKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAocHJldmlld1JlZikge1xuICAgICAgcHJldmlld1JlZi5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tc2xpZGVyLXBvaW50ZXJcIiwgcG9pbnRlclZhbHVlICsgXCIlXCIpO1xuICAgIH1cbiAgfSwgW3ByZXZpZXdSZWYsIHBvaW50ZXJWYWx1ZV0pO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghcHJldmlld1JlZikgcmV0dXJuO1xuICAgIGNvbnN0IHVwZGF0ZSA9ICgpID0+IHtcbiAgICAgIHVwZGF0ZVNsaWRlclByZXZpZXdQbGFjZW1lbnQocHJldmlld1JlZiwge1xuICAgICAgICBvZmZzZXQsXG4gICAgICAgIGNsYW1wLFxuICAgICAgICBvcmllbnRhdGlvblxuICAgICAgfSk7XG4gICAgfTtcbiAgICB1cGRhdGUoKTtcbiAgICBjb25zdCByZXNpemUgPSBuZXcgUmVzaXplT2JzZXJ2ZXIodXBkYXRlKTtcbiAgICByZXNpemUub2JzZXJ2ZShwcmV2aWV3UmVmKTtcbiAgICByZXR1cm4gKCkgPT4gcmVzaXplLmRpc2Nvbm5lY3QoKTtcbiAgfSwgW3ByZXZpZXdSZWYsIGNsYW1wLCBvZmZzZXQsIG9yaWVudGF0aW9uXSk7XG4gIHJldHVybiB7XG4gICAgcHJldmlld1Jvb3RSZWY6IHNldFJvb3RSZWYsXG4gICAgcHJldmlld1JlZjogc2V0UHJldmlld1JlZixcbiAgICBwcmV2aWV3VmFsdWU6IHBvaW50ZXJWYWx1ZSxcbiAgICBpc1ByZXZpZXdWaXNpYmxlOiBpc1Zpc2libGVcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldFBvaW50ZXJWYWx1ZShyb290LCBldmVudCwgb3JpZW50YXRpb24pIHtcbiAgbGV0IHRodW1iUG9zaXRpb25SYXRlLCByZWN0ID0gcm9vdC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgaWYgKG9yaWVudGF0aW9uID09PSBcInZlcnRpY2FsXCIpIHtcbiAgICBjb25zdCB7IGJvdHRvbTogdHJhY2tCb3R0b20sIGhlaWdodDogdHJhY2tIZWlnaHQgfSA9IHJlY3Q7XG4gICAgdGh1bWJQb3NpdGlvblJhdGUgPSAodHJhY2tCb3R0b20gLSBldmVudC5jbGllbnRZKSAvIHRyYWNrSGVpZ2h0O1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IHsgbGVmdDogdHJhY2tMZWZ0LCB3aWR0aDogdHJhY2tXaWR0aCB9ID0gcmVjdDtcbiAgICB0aHVtYlBvc2l0aW9uUmF0ZSA9IChldmVudC5jbGllbnRYIC0gdHJhY2tMZWZ0KSAvIHRyYWNrV2lkdGg7XG4gIH1cbiAgcmV0dXJuIHJvdW5kKE1hdGgubWF4KDAsIE1hdGgubWluKDEwMCwgMTAwICogdGh1bWJQb3NpdGlvblJhdGUpKSk7XG59XG5mdW5jdGlvbiByb3VuZChudW0pIHtcbiAgcmV0dXJuIE51bWJlcihudW0udG9GaXhlZCgzKSk7XG59XG5cbmZ1bmN0aW9uIHVzZUF1ZGlvR2Fpbk9wdGlvbnMoe1xuICBnYWlucyA9IERFRkFVTFRfQVVESU9fR0FJTlMsXG4gIGRpc2FibGVkTGFiZWwgPSBcImRpc2FibGVkXCJcbn0gPSB7fSkge1xuICBjb25zdCBtZWRpYSA9IHVzZU1lZGlhQ29udGV4dCgpLCB7IGF1ZGlvR2FpbiwgY2FuU2V0QXVkaW9HYWluIH0gPSBtZWRpYS4kc3RhdGU7XG4gIHVzZVNpZ25hbChhdWRpb0dhaW4pO1xuICB1c2VTaWduYWwoY2FuU2V0QXVkaW9HYWluKTtcbiAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IG9wdGlvbnMgPSBnYWlucy5tYXAoKG9wdCkgPT4ge1xuICAgICAgY29uc3QgbGFiZWwgPSB0eXBlb2Ygb3B0ID09PSBcIm51bWJlclwiID8gb3B0ID09PSAxICYmIGRpc2FibGVkTGFiZWwgPyBkaXNhYmxlZExhYmVsIDogb3B0ICogMTAwICsgXCIlXCIgOiBvcHQubGFiZWwsIGdhaW4gPSB0eXBlb2Ygb3B0ID09PSBcIm51bWJlclwiID8gb3B0IDogb3B0LmdhaW47XG4gICAgICByZXR1cm4ge1xuICAgICAgICBsYWJlbCxcbiAgICAgICAgdmFsdWU6IGdhaW4udG9TdHJpbmcoKSxcbiAgICAgICAgZ2FpbixcbiAgICAgICAgZ2V0IHNlbGVjdGVkKCkge1xuICAgICAgICAgIHJldHVybiBhdWRpb0dhaW4oKSA9PT0gZ2FpbjtcbiAgICAgICAgfSxcbiAgICAgICAgc2VsZWN0KHRyaWdnZXIpIHtcbiAgICAgICAgICBtZWRpYS5yZW1vdGUuY2hhbmdlQXVkaW9HYWluKGdhaW4sIHRyaWdnZXIpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvcHRpb25zLCBcImRpc2FibGVkXCIsIHtcbiAgICAgIGdldCgpIHtcbiAgICAgICAgcmV0dXJuICFjYW5TZXRBdWRpb0dhaW4oKSB8fCAhb3B0aW9ucy5sZW5ndGg7XG4gICAgICB9XG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9wdGlvbnMsIFwic2VsZWN0ZWRWYWx1ZVwiLCB7XG4gICAgICBnZXQoKSB7XG4gICAgICAgIHJldHVybiBhdWRpb0dhaW4oKT8udG9TdHJpbmcoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gb3B0aW9ucztcbiAgfSwgW2dhaW5zXSk7XG59XG5cbmV4cG9ydCB7IGNhcHRpb24gYXMgQ2FwdGlvbiwgREVGQVVMVF9BVURJT19HQUlOUywgSWNvbiwgTGliQVNTVGV4dFJlbmRlcmVyLCBNZWRpYVBsYXllciwgTWVkaWFQbGF5ZXJJbnN0YW5jZSwgTWVkaWFQcm92aWRlciwgTWVkaWFQcm92aWRlckluc3RhbmNlLCBQb3N0ZXIsIFBvc3Rlckluc3RhbmNlLCBUZXh0VHJhY2ssIFRvZ2dsZUJ1dHRvbiwgVG9nZ2xlQnV0dG9uSW5zdGFuY2UsIFRyYWNrLCBjcmVhdGVUZXh0VHJhY2ssIG1lZGlhU3RhdGUsIHVzZUFjdGl2ZVRodW1ibmFpbCwgdXNlQXVkaW9HYWluT3B0aW9ucywgdXNlTWVkaWFDb250ZXh0LCB1c2VNZWRpYVByb3ZpZGVyLCB1c2VNZWRpYVN0YXRlLCB1c2VTbGlkZXJQcmV2aWV3LCB1c2VTdGF0ZSwgdXNlU3RvcmUsIHVzZVRodW1ibmFpbHMgfTtcbiJdLCJuYW1lcyI6WyJUZXh0VHJhY2tTeW1ib2wiLCJQcmltaXRpdmUiLCJNZWRpYVBsYXllckluc3RhbmNlIiwiaXNSZW1vdGlvblByb3ZpZGVyIiwiTWVkaWFQcm92aWRlckluc3RhbmNlIiwibWVkaWFTdGF0ZSIsIlRleHRUcmFjayIsIlRvZ2dsZUJ1dHRvbkluc3RhbmNlIiwiUG9zdGVySW5zdGFuY2UiLCJ1c2VNZWRpYVN0YXRlIiwiVGh1bWJuYWlsc0xvYWRlciIsInVwZGF0ZVNsaWRlclByZXZpZXdQbGFjZW1lbnQiLCJERUZBVUxUX0FVRElPX0dBSU5TIiwiQVJJQUtleVNob3J0Y3V0cyIsIkFVRElPX0VYVEVOU0lPTlMiLCJBVURJT19UWVBFUyIsIkFpclBsYXlCdXR0b25JbnN0YW5jZSIsIkF1ZGlvR2FpblNsaWRlckluc3RhbmNlIiwiQXVkaW9Qcm92aWRlckxvYWRlciIsIkF1ZGlvVHJhY2tMaXN0IiwiQ2FwdGlvbkJ1dHRvbkluc3RhbmNlIiwiQ2FwdGlvbnNJbnN0YW5jZSIsIkNvbnRyb2xzR3JvdXBJbnN0YW5jZSIsIkNvbnRyb2xzSW5zdGFuY2UiLCJEQVNIUHJvdmlkZXJMb2FkZXIiLCJEQVNIX1ZJREVPX0VYVEVOU0lPTlMiLCJEQVNIX1ZJREVPX1RZUEVTIiwiREVGQVVMVF9QTEFZQkFDS19SQVRFUyIsIkZ1bGxzY3JlZW5CdXR0b25JbnN0YW5jZSIsIkZ1bGxzY3JlZW5Db250cm9sbGVyIiwiR2VzdHVyZUluc3RhbmNlIiwiR29vZ2xlQ2FzdEJ1dHRvbkluc3RhbmNlIiwiSExTUHJvdmlkZXJMb2FkZXIiLCJITFNfVklERU9fRVhURU5TSU9OUyIsIkhMU19WSURFT19UWVBFUyIsIkxpc3QiLCJMaXZlQnV0dG9uSW5zdGFuY2UiLCJMb2NhbE1lZGlhU3RvcmFnZSIsIkxvZ2dlciIsIk1FRElBX0tFWV9TSE9SVENVVFMiLCJNZWRpYUFubm91bmNlckluc3RhbmNlIiwiTWVkaWFDb250cm9scyIsIk1lZGlhUmVtb3RlQ29udHJvbCIsIk1lbnVCdXR0b25JbnN0YW5jZSIsIk1lbnVJbnN0YW5jZSIsIk1lbnVJdGVtSW5zdGFuY2UiLCJNZW51SXRlbXNJbnN0YW5jZSIsIk1lbnVQb3J0YWxJbnN0YW5jZSIsIk11dGVCdXR0b25JbnN0YW5jZSIsIlBJUEJ1dHRvbkluc3RhbmNlIiwiUGxheUJ1dHRvbkluc3RhbmNlIiwiUXVhbGl0eVNsaWRlckluc3RhbmNlIiwiUmFkaW9Hcm91cEluc3RhbmNlIiwiUmFkaW9JbnN0YW5jZSIsIlNjcmVlbk9yaWVudGF0aW9uQ29udHJvbGxlciIsIlNlZWtCdXR0b25JbnN0YW5jZSIsIlNsaWRlckNoYXB0ZXJzSW5zdGFuY2UiLCJTbGlkZXJJbnN0YW5jZSIsIlNsaWRlclByZXZpZXdJbnN0YW5jZSIsIlNsaWRlclRodW1ibmFpbEluc3RhbmNlIiwiU2xpZGVyVmFsdWVJbnN0YW5jZSIsIlNsaWRlclZpZGVvSW5zdGFuY2UiLCJTcGVlZFNsaWRlckluc3RhbmNlIiwiVGV4dFJlbmRlcmVycyIsIlRleHRUcmFja0xpc3QiLCJUaHVtYm5haWxJbnN0YW5jZSIsIlRpbWVJbnN0YW5jZSIsIlRpbWVSYW5nZSIsIlRpbWVTbGlkZXJJbnN0YW5jZSIsIlRvb2x0aXBDb250ZW50SW5zdGFuY2UiLCJUb29sdGlwSW5zdGFuY2UiLCJUb29sdGlwVHJpZ2dlckluc3RhbmNlIiwiVklERU9fRVhURU5TSU9OUyIsIlZJREVPX1RZUEVTIiwiVmlkZW9Qcm92aWRlckxvYWRlciIsIlZpZGVvUXVhbGl0eUxpc3QiLCJWaW1lb1Byb3ZpZGVyTG9hZGVyIiwiVm9sdW1lU2xpZGVySW5zdGFuY2UiLCJZb3VUdWJlUHJvdmlkZXJMb2FkZXIiLCJjYW5DaGFuZ2VWb2x1bWUiLCJjYW5GdWxsc2NyZWVuIiwiY2FuR29vZ2xlQ2FzdFNyYyIsImNhbk9yaWVudFNjcmVlbiIsImNhblBsYXlITFNOYXRpdmVseSIsImNhblJvdGF0ZVNjcmVlbiIsImNhblVzZVBpY3R1cmVJblBpY3R1cmUiLCJjYW5Vc2VWaWRlb1ByZXNlbnRhdGlvbiIsImZpbmRBY3RpdmVDdWUiLCJmb3JtYXRTcG9rZW5UaW1lIiwiZm9ybWF0VGltZSIsImdldERvd25sb2FkRmlsZSIsImdldFRpbWVSYW5nZXNFbmQiLCJnZXRUaW1lUmFuZ2VzU3RhcnQiLCJpc0F1ZGlvUHJvdmlkZXIiLCJpc0F1ZGlvU3JjIiwiaXNDdWVBY3RpdmUiLCJpc0RBU0hQcm92aWRlciIsImlzREFTSFNyYyIsImlzR29vZ2xlQ2FzdFByb3ZpZGVyIiwiaXNITFNQcm92aWRlciIsImlzSExTU3JjIiwiaXNIVE1MQXVkaW9FbGVtZW50IiwiaXNIVE1MSUZyYW1lRWxlbWVudCIsImlzSFRNTE1lZGlhRWxlbWVudCIsImlzSFRNTFZpZGVvRWxlbWVudCIsImlzTWVkaWFTdHJlYW0iLCJpc1RyYWNrQ2FwdGlvbktpbmQiLCJpc1ZpZGVvUHJvdmlkZXIiLCJpc1ZpZGVvUXVhbGl0eVNyYyIsImlzVmlkZW9TcmMiLCJpc1ZpbWVvUHJvdmlkZXIiLCJpc1lvdVR1YmVQcm92aWRlciIsIm1lZGlhQ29udGV4dCIsIm5vcm1hbGl6ZVRpbWVJbnRlcnZhbHMiLCJwYXJzZUpTT05DYXB0aW9uc0ZpbGUiLCJzbGlkZXJTdGF0ZSIsInNvZnRSZXNldE1lZGlhU3RhdGUiLCJzb3J0VmlkZW9RdWFsaXRpZXMiLCJ1cGRhdGVUaW1lSW50ZXJ2YWxzIiwidXNlTWVkaWFTdG9yZSIsInVzZVNsaWRlclN0YXRlIiwidXNlU2xpZGVyU3RvcmUiLCJ3YXRjaEFjdGl2ZVRleHRUcmFjayIsIndhdGNoQ3VlVGV4dENoYW5nZSIsImlzU3RyaW5nIiwibGlzdGVuRXZlbnQiLCJET01FdmVudCIsImNyZWF0ZVJlYWN0Q29tcG9uZW50IiwidXNlU3RhdGVDb250ZXh0IiwidXNlU2lnbmFsIiwiY29tcG9zZVJlZnMiLCJ1c2VTaWduYWxSZWNvcmQiLCJlZmZlY3QiLCJ1c2VSZWFjdFNjb3BlIiwic2lnbmFsIiwiYXBwZW5kVHJpZ2dlckV2ZW50IiwiZmluZFRyaWdnZXJFdmVudCIsImhhc1RyaWdnZXJFdmVudCIsImlzS2V5Ym9hcmRDbGljayIsImlzS2V5Ym9hcmRFdmVudCIsImlzUG9pbnRlckV2ZW50Iiwid2Fsa1RyaWdnZXJFdmVudENoYWluIiwiUmVhY3QiLCJjcmVhdGVTaWduYWwiLCJ1c2VTY29wZWQiLCJhdWRpb0dhaW5TbGlkZXIiLCJBdWRpb0dhaW5TbGlkZXIiLCJDYXB0aW9ucyIsIkNoYXB0ZXJUaXRsZSIsImNvbnRyb2xzIiwiQ29udHJvbHMiLCJHb29nbGVDYXN0QnV0dG9uIiwiTWVkaWFBbm5vdW5jZXIiLCJxdWFsaXR5U2xpZGVyIiwiUXVhbGl0eVNsaWRlciIsInNwZWVkU2xpZGVyIiwiU3BlZWRTbGlkZXIiLCJzcGlubmVyIiwiU3Bpbm5lciIsIlRpdGxlIiwidG9vbHRpcCIsIlRvb2x0aXAiLCJ1c2VBY3RpdmVUZXh0Q3VlcyIsInVzZUFjdGl2ZVRleHRUcmFjayIsInVzZUNoYXB0ZXJPcHRpb25zIiwidXNlQ2hhcHRlclRpdGxlIiwidXNlVGV4dEN1ZXMiLCJ1c2VNZWRpYUNvbnRleHQiLCJBaXJQbGF5QnV0dG9uIiwiQ2FwdGlvbkJ1dHRvbiIsIkZ1bGxzY3JlZW5CdXR0b24iLCJHZXN0dXJlIiwiTGl2ZUJ1dHRvbiIsIm1lbnUiLCJNZW51IiwiTXV0ZUJ1dHRvbiIsIlBJUEJ1dHRvbiIsIlBsYXlCdXR0b24iLCJyYWRpb0dyb3VwIiwiUmFkaW9Hcm91cCIsIlNlZWtCdXR0b24iLCJzbGlkZXIiLCJTbGlkZXIiLCJ0aHVtYm5haWwiLCJUaHVtYm5haWwiLCJUaW1lIiwidGltZVNsaWRlciIsIlRpbWVTbGlkZXIiLCJ2b2x1bWVTbGlkZXIiLCJWb2x1bWVTbGlkZXIiLCJ1c2VBdWRpb09wdGlvbnMiLCJ1c2VDYXB0aW9uT3B0aW9ucyIsInVzZU1lZGlhUGxheWVyIiwiSWNvbiIsInVzZU1lZGlhUmVtb3RlIiwidXNlUGxheWJhY2tSYXRlT3B0aW9ucyIsInVzZVZpZGVvUXVhbGl0eU9wdGlvbnMiLCJMaWJBU1NUZXh0UmVuZGVyZXIiLCJjYW5SZW5kZXIiLCJ0cmFjayIsInZpZGVvIiwic3JjIiwidHlwZSIsIl90eXBlUkUiLCJ0ZXN0IiwiYXR0YWNoIiwibG9hZGVyIiwidGhlbiIsIm1vZCIsIl9pbnN0YW5jZSIsImRlZmF1bHQiLCJjb25maWciLCJzdWJVcmwiLCJfdHJhY2siLCJjYW52YXMiLCJfY2FudmFzIiwic3R5bGUiLCJwb2ludGVyRXZlbnRzIiwiZXZlbnQiLCJfcmVhZHlTdGF0ZSIsImRpc3BhdGNoRXZlbnQiLCJ0cmlnZ2VyIiwiZGV0YWlsIiwiZXJyb3IiLCJjaGFuZ2VUcmFjayIsInJlYWR5U3RhdGUiLCJfZnJlZVRyYWNrIiwic2V0VHJhY2tCeVVybCIsImRldGFjaCIsImZyZWVUcmFjayIsImNvbnN0cnVjdG9yIiwicHJpb3JpdHkiLCJwbGF5ZXJDYWxsYmFja3MiLCJNZWRpYVBsYXllckJyaWRnZSIsImV2ZW50cyIsImV2ZW50c1JlZ2V4IiwiZG9tRXZlbnRzUmVnZXgiLCJNZWRpYVBsYXllciIsImZvcndhcmRSZWYiLCJhc3BlY3RSYXRpbyIsImNoaWxkcmVuIiwicHJvcHMiLCJjcmVhdGVFbGVtZW50IiwicmVmIiwicHJvcHMyIiwiZGl2IiwiZGlzcGxheU5hbWUiLCJNZWRpYVByb3ZpZGVyQnJpZGdlIiwiTWVkaWFQcm92aWRlciIsImxvYWRlcnMiLCJtZWRpYVByb3BzIiwicmVhY3RMb2FkZXJzIiwidXNlTWVtbyIsIm1hcCIsIkxvYWRlciIsImluc3RhbmNlIiwiTWVkaWFPdXRsZXQiLCJwcm92aWRlciIsImNyb3NzT3JpZ2luIiwicG9zdGVyIiwicmVtb3RlUGxheWJhY2tJbmZvIiwibmF0aXZlQ29udHJvbHMiLCJ2aWV3VHlwZSIsIiRzdGF0ZSIsIiRwcm92aWRlciIsIiQkcHJvdmlkZXIiLCIkcHJvdmlkZXJTZXR1cCIsIiQkcHJvdmlkZXJTZXR1cCIsIiRuYXRpdmVDb250cm9scyIsIiRjcm9zc09yaWdpbiIsIiRwb3N0ZXIiLCIkbG9hZGVyIiwiJHJlbW90ZUluZm8iLCIkbWVkaWFUeXBlIiwibWVkaWFUeXBlIiwiJHZpZXdUeXBlIiwiaXNBdWRpb1ZpZXciLCJpc1lvdVR1YmVFbWJlZCIsIm5hbWUiLCJpc1ZpbWVvRW1iZWQiLCJpc0VtYmVkIiwiaXNSZW1vdGlvbiIsImlzR29vZ2xlQ2FzdCIsImdvb2dsZUNhc3RJY29uUGF0aHMiLCJzZXRHb29nbGVDYXN0SWNvblBhdGhzIiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJuIiwiY2hyb21lY2FzdCIsImNsYXNzTmFtZSIsImVsIiwibG9hZCIsInBhdGhzIiwiZGV2aWNlTmFtZSIsInJlbmRlciIsIkZyYWdtZW50Iiwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIiwidGFiSW5kZXgiLCJwcmVsb2FkIiwiY3JlYXRlVGV4dFRyYWNrIiwiaW5pdCIsIm1lZGlhIiwiT2JqZWN0IiwidmFsdWVzIiwidGV4dFRyYWNrcyIsImFkZCIsInJlbW92ZSIsIlRyYWNrIiwibGFuZyIsImxhbmd1YWdlIiwiVG9nZ2xlQnV0dG9uQnJpZGdlIiwiVG9nZ2xlQnV0dG9uIiwiYnV0dG9uIiwiUG9zdGVyQnJpZGdlIiwiUG9zdGVyIiwiUG9zdGVySW1nIiwiaW1nIiwiYWx0IiwibG9hZGluZyIsImhpZGRlbiIsIiRzcmMiLCIkYWx0IiwiJGxvYWRpbmciLCIkaGlkZGVuIiwic2V0IiwiZGlzcGxheSIsIlJvb3QiLCJ0cmFuc2xhdGUiLCJUZXh0IiwidGV4dFRyYWNrIiwiYWN0aXZlQ3VlIiwic2V0QWN0aXZlQ3VlIiwib25DdWVDaGFuZ2UiLCJhY3RpdmVDdWVzIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJzcGFuIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJ0ZXh0IiwiY2FwdGlvbiIsImZyZWV6ZSIsIl9fcHJvdG9fXyIsImN0b3IiLCJwcm9wIiwiaW5pdGlhbFZhbHVlIiwic3RhdGUiLCJyZWNvcmQiLCJjdXJyZW50Iiwic3RvcmVzQ2FjaGUiLCJNYXAiLCJ1c2VTdG9yZSIsImluaXRpYWxTdG9yZSIsInN0b3JlIiwiZ2V0IiwiUHJveHkiLCJfIiwidXNlTWVkaWFQcm92aWRlciIsInNldFByb3ZpZGVyIiwiY29udGV4dCIsIkVycm9yIiwidXNlVGh1bWJuYWlscyIsInNjb3BlIiwiY3JlYXRlIiwiY29uc29sZSIsIndhcm4iLCIkaW1hZ2VzIiwidXNlQWN0aXZlVGh1bWJuYWlsIiwidGh1bWJuYWlscyIsInRpbWUiLCJhY3RpdmVJbmRleCIsImkiLCJsZW5ndGgiLCJpbWFnZSIsInN0YXJ0VGltZSIsImVuZFRpbWUiLCJ1c2VTbGlkZXJQcmV2aWV3IiwiY2xhbXAiLCJvZmZzZXQiLCJvcmllbnRhdGlvbiIsInJvb3RSZWYiLCJzZXRSb290UmVmIiwicHJldmlld1JlZiIsInNldFByZXZpZXdSZWYiLCJwb2ludGVyVmFsdWUiLCJzZXRQb2ludGVyVmFsdWUiLCJpc1Zpc2libGUiLCJzZXRJc1Zpc2libGUiLCJkcmFnZ2luZyIsInVwZGF0ZVBvaW50ZXJWYWx1ZSIsImdldFBvaW50ZXJWYWx1ZSIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsImRvY3VtZW50IiwiZSIsInByZXZlbnREZWZhdWx0IiwicGFzc2l2ZSIsInNldFByb3BlcnR5IiwidXBkYXRlIiwicmVzaXplIiwiUmVzaXplT2JzZXJ2ZXIiLCJvYnNlcnZlIiwiZGlzY29ubmVjdCIsInByZXZpZXdSb290UmVmIiwicHJldmlld1ZhbHVlIiwiaXNQcmV2aWV3VmlzaWJsZSIsInJvb3QiLCJ0aHVtYlBvc2l0aW9uUmF0ZSIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJib3R0b20iLCJ0cmFja0JvdHRvbSIsImhlaWdodCIsInRyYWNrSGVpZ2h0IiwiY2xpZW50WSIsImxlZnQiLCJ0cmFja0xlZnQiLCJ3aWR0aCIsInRyYWNrV2lkdGgiLCJjbGllbnRYIiwicm91bmQiLCJNYXRoIiwibWF4IiwibWluIiwibnVtIiwiTnVtYmVyIiwidG9GaXhlZCIsInVzZUF1ZGlvR2Fpbk9wdGlvbnMiLCJnYWlucyIsImRpc2FibGVkTGFiZWwiLCJhdWRpb0dhaW4iLCJjYW5TZXRBdWRpb0dhaW4iLCJvcHRpb25zIiwib3B0IiwibGFiZWwiLCJnYWluIiwidmFsdWUiLCJ0b1N0cmluZyIsInNlbGVjdGVkIiwic2VsZWN0IiwicmVtb3RlIiwiY2hhbmdlQXVkaW9HYWluIiwiZGVmaW5lUHJvcGVydHkiLCJDYXB0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/vidstack.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs":
/*!*****************************************!*\
  !*** ./node_modules/clsx/dist/clsx.mjs ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clsx: function() { return /* binding */ clsx; }\n/* harmony export */ });\nfunction r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}/* harmony default export */ __webpack_exports__[\"default\"] = (clsx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWMsYUFBYSwrQ0FBK0MsZ0RBQWdELGVBQWUsUUFBUSxJQUFJLDBDQUEwQyx5Q0FBeUMsU0FBZ0IsZ0JBQWdCLHdDQUF3QyxJQUFJLG1EQUFtRCxTQUFTLCtEQUFlLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Nsc3gvZGlzdC9jbHN4Lm1qcz9lYjI5Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHIoZSl7dmFyIHQsZixuPVwiXCI7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGV8fFwibnVtYmVyXCI9PXR5cGVvZiBlKW4rPWU7ZWxzZSBpZihcIm9iamVjdFwiPT10eXBlb2YgZSlpZihBcnJheS5pc0FycmF5KGUpKXt2YXIgbz1lLmxlbmd0aDtmb3IodD0wO3Q8bzt0KyspZVt0XSYmKGY9cihlW3RdKSkmJihuJiYobis9XCIgXCIpLG4rPWYpfWVsc2UgZm9yKGYgaW4gZSllW2ZdJiYobiYmKG4rPVwiIFwiKSxuKz1mKTtyZXR1cm4gbn1leHBvcnQgZnVuY3Rpb24gY2xzeCgpe2Zvcih2YXIgZSx0LGY9MCxuPVwiXCIsbz1hcmd1bWVudHMubGVuZ3RoO2Y8bztmKyspKGU9YXJndW1lbnRzW2ZdKSYmKHQ9cihlKSkmJihuJiYobis9XCIgXCIpLG4rPXQpO3JldHVybiBufWV4cG9ydCBkZWZhdWx0IGNsc3g7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/tailwind-merge/dist/bundle-mjs.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTailwindMerge: function() { return /* binding */ createTailwindMerge; },\n/* harmony export */   extendTailwindMerge: function() { return /* binding */ extendTailwindMerge; },\n/* harmony export */   fromTheme: function() { return /* binding */ fromTheme; },\n/* harmony export */   getDefaultConfig: function() { return /* binding */ getDefaultConfig; },\n/* harmony export */   mergeConfigs: function() { return /* binding */ mergeConfigs; },\n/* harmony export */   twJoin: function() { return /* binding */ twJoin; },\n/* harmony export */   twMerge: function() { return /* binding */ twMerge; },\n/* harmony export */   validators: function() { return /* binding */ validators; }\n/* harmony export */ });\nconst CLASS_PART_SEPARATOR = '-';\nfunction createClassGroupUtils(config) {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  function getClassGroupId(className) {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  }\n  function getConflictingClassGroupIds(classGroupId, hasPostfixModifier) {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  }\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n}\nfunction getGroupRecursive(classParts, classPartObject) {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n}\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nfunction getGroupIdForArbitraryProperty(className) {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n}\n/**\n * Exported for testing only\n */\nfunction createClassMap(config) {\n  const {\n    theme,\n    prefix\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n}\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n}\nfunction getPart(classPartObject, path) {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n}\nfunction isThemeGetter(func) {\n  return func.isThemeGetter;\n}\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\n    const prefixedClassGroup = classGroup.map(classDefinition => {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nfunction createLruCache(maxCacheSize) {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  function update(key, value) {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  }\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n}\nconst IMPORTANT_MODIFIER = '!';\nfunction createParseClassName(config) {\n  const {\n    separator,\n    experimentalParseClassName\n  } = config;\n  const isSeparatorSingleCharacter = separator.length === 1;\n  const firstSeparatorCharacter = separator[0];\n  const separatorLength = separator.length;\n  // parseClassName inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  function parseClassName(className) {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  }\n  if (experimentalParseClassName) {\n    return function parseClassNameExperimental(className) {\n      return experimentalParseClassName({\n        className,\n        parseClassName\n      });\n    };\n  }\n  return parseClassName;\n}\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nfunction sortModifiers(modifiers) {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  const sortedModifiers = [];\n  let unsortedModifiers = [];\n  modifiers.forEach(modifier => {\n    const isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push(...unsortedModifiers.sort());\n  return sortedModifiers;\n}\nfunction createConfigUtils(config) {\n  return {\n    cache: createLruCache(config.cacheSize),\n    parseClassName: createParseClassName(config),\n    ...createClassGroupUtils(config)\n  };\n}\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nfunction mergeClassList(classList, configUtils) {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = new Set();\n  return classList.trim().split(SPLIT_CLASSES_REGEX).map(originalClassName => {\n    const {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        return {\n          isTailwindClass: false,\n          originalClassName\n        };\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        return {\n          isTailwindClass: false,\n          originalClassName\n        };\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    return {\n      isTailwindClass: true,\n      modifierId,\n      classGroupId,\n      originalClassName,\n      hasPostfixModifier\n    };\n  }).reverse()\n  // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n  .filter(parsed => {\n    if (!parsed.isTailwindClass) {\n      return true;\n    }\n    const {\n      modifierId,\n      classGroupId,\n      hasPostfixModifier\n    } = parsed;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.has(classId)) {\n      return false;\n    }\n    classGroupsInConflict.add(classId);\n    getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach(group => classGroupsInConflict.add(modifierId + group));\n    return true;\n  }).reverse().map(parsed => parsed.originalClassName).join(' ');\n}\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nfunction fromTheme(key) {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n}\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nfunction isLength(value) {\n  return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\n}\nfunction isArbitraryLength(value) {\n  return getIsArbitraryValue(value, 'length', isLengthOnly);\n}\nfunction isNumber(value) {\n  return Boolean(value) && !Number.isNaN(Number(value));\n}\nfunction isArbitraryNumber(value) {\n  return getIsArbitraryValue(value, 'number', isNumber);\n}\nfunction isInteger(value) {\n  return Boolean(value) && Number.isInteger(Number(value));\n}\nfunction isPercent(value) {\n  return value.endsWith('%') && isNumber(value.slice(0, -1));\n}\nfunction isArbitraryValue(value) {\n  return arbitraryValueRegex.test(value);\n}\nfunction isTshirtSize(value) {\n  return tshirtUnitRegex.test(value);\n}\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\nfunction isArbitrarySize(value) {\n  return getIsArbitraryValue(value, sizeLabels, isNever);\n}\nfunction isArbitraryPosition(value) {\n  return getIsArbitraryValue(value, 'position', isNever);\n}\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\nfunction isArbitraryImage(value) {\n  return getIsArbitraryValue(value, imageLabels, isImage);\n}\nfunction isArbitraryShadow(value) {\n  return getIsArbitraryValue(value, '', isShadow);\n}\nfunction isAny() {\n  return true;\n}\nfunction getIsArbitraryValue(value, label, testValue) {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n}\nfunction isLengthOnly(value) {\n  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n  return lengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\n}\nfunction isNever() {\n  return false;\n}\nfunction isShadow(value) {\n  return shadowRegex.test(value);\n}\nfunction isImage(value) {\n  return imageRegex.test(value);\n}\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isInteger,\n  isLength,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nfunction getDefaultConfig() {\n  const colors = fromTheme('colors');\n  const spacing = fromTheme('spacing');\n  const blur = fromTheme('blur');\n  const brightness = fromTheme('brightness');\n  const borderColor = fromTheme('borderColor');\n  const borderRadius = fromTheme('borderRadius');\n  const borderSpacing = fromTheme('borderSpacing');\n  const borderWidth = fromTheme('borderWidth');\n  const contrast = fromTheme('contrast');\n  const grayscale = fromTheme('grayscale');\n  const hueRotate = fromTheme('hueRotate');\n  const invert = fromTheme('invert');\n  const gap = fromTheme('gap');\n  const gradientColorStops = fromTheme('gradientColorStops');\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  const inset = fromTheme('inset');\n  const margin = fromTheme('margin');\n  const opacity = fromTheme('opacity');\n  const padding = fromTheme('padding');\n  const saturate = fromTheme('saturate');\n  const scale = fromTheme('scale');\n  const sepia = fromTheme('sepia');\n  const skew = fromTheme('skew');\n  const space = fromTheme('space');\n  const translate = fromTheme('translate');\n  const getOverscroll = () => ['auto', 'contain', 'none'];\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const getNumber = () => [isNumber, isArbitraryNumber];\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\n  return {\n    cacheSize: 500,\n    separator: ':',\n    theme: {\n      colors: [isAny],\n      spacing: [isLength, isArbitraryLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumber(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmptyAndArbitrary(),\n      contrast: getNumber(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumber(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumber(),\n      scale: getNumber(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: [...getPositions(), isArbitraryValue]\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: [inset]\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: [inset]\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: ['auto', isInteger, isArbitraryValue]\n      }],\n      // Flexbox and Grid\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: ['normal', ...getAlign()]\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...getAlign(), 'baseline']\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': [...getAlign(), 'baseline']\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: [padding]\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: [padding]\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: [margin]\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: [margin]\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/size\n       */\n      size: [{\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\n       * Placeholder Opacity\n       * @see https://tailwindcss.com/docs/placeholder-opacity\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\n       * Text Opacity\n       * @see https://tailwindcss.com/docs/text-opacity\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...getLineStyles(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength, isArbitraryValue]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Opacity\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/background-opacity\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: [...getPositions(), isArbitraryPosition]\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\n       * Border Opacity\n       * @see https://tailwindcss.com/docs/border-opacity\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...getLineStyles(), 'hidden']\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Divide Opacity\n       * @see https://tailwindcss.com/docs/divide-opacity\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/divide-style\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: ['', ...getLineStyles()]\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: [isLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w': [{\n        ring: getLengthWithEmptyAndArbitrary()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/ring-color\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\n       * Ring Opacity\n       * @see https://tailwindcss.com/docs/ring-opacity\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://tailwindcss.com/docs/ring-offset-width\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://tailwindcss.com/docs/ring-offset-color\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow-color\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...getBlendModes(), 'plus-lighter', 'plus-darker']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\n       * Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\n       * Backdrop Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n      /**\n       * Tranisition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\n       * Screen Readers\n       * @see https://tailwindcss.com/docs/screen-readers\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n}\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nfunction mergeConfigs(baseConfig, {\n  cacheSize,\n  prefix,\n  separator,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'separator', separator);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  for (const configKey in override) {\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\n  }\n  for (const key in extend) {\n    mergeConfigProperties(baseConfig[key], extend[key]);\n  }\n  return baseConfig;\n}\nfunction overrideProperty(baseObject, overrideKey, overrideValue) {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n}\nfunction overrideConfigProperties(baseObject, overrideObject) {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n}\nfunction mergeConfigProperties(baseObject, mergeObject) {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      const mergeValue = mergeObject[key];\n      if (mergeValue !== undefined) {\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\n      }\n    }\n  }\n}\nfunction extendTailwindMerge(configExtension, ...createConfig) {\n  return typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\n}\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\n\n//# sourceMappingURL=bundle-mjs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Crepo%5C%5Cvideo-transcricao%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);