"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_vidstack_react_dev_chunks_vidstack-Zc3I7oOd_js"],{

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Zc3I7oOd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-Zc3I7oOd.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findYouTubePoster: function() { return /* binding */ findYouTubePoster; },\n/* harmony export */   resolveYouTubeVideoId: function() { return /* binding */ resolveYouTubeVideoId; }\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ findYouTubePoster,resolveYouTubeVideoId auto */ const videoIdRE = /(?:youtu\\.be|youtube|youtube\\.com|youtube-nocookie\\.com)\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=|)((?:\\w|-){11})/;\nconst posterCache = /* @__PURE__ */ new Map();\nconst pendingFetch = /* @__PURE__ */ new Map();\nfunction resolveYouTubeVideoId(src) {\n    var _src_match;\n    return (_src_match = src.match(videoIdRE)) === null || _src_match === void 0 ? void 0 : _src_match[1];\n}\nasync function findYouTubePoster(videoId, abort) {\n    if (posterCache.has(videoId)) return posterCache.get(videoId);\n    if (pendingFetch.has(videoId)) return pendingFetch.get(videoId);\n    const pending = new Promise(async (resolve)=>{\n        const sizes = [\n            \"maxresdefault\",\n            \"sddefault\",\n            \"hqdefault\"\n        ];\n        for (const size of sizes){\n            for (const webp of [\n                true,\n                false\n            ]){\n                const url = resolveYouTubePosterURL(videoId, size, webp), response = await fetch(url, {\n                    mode: \"no-cors\",\n                    signal: abort.signal\n                });\n                if (response.status < 400) {\n                    posterCache.set(videoId, url);\n                    resolve(url);\n                    return;\n                }\n            }\n        }\n    }).catch(()=>\"\").finally(()=>pendingFetch.delete(videoId));\n    pendingFetch.set(videoId, pending);\n    return pending;\n}\nfunction resolveYouTubePosterURL(videoId, size, webp) {\n    const type = webp ? \"webp\" : \"jpg\";\n    return \"https://i.ytimg.com/\".concat(webp ? \"vi_webp\" : \"vi\", \"/\").concat(videoId, \"/\").concat(size, \".\").concat(type);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L2NodW5rcy92aWRzdGFjay1aYzNJN29PZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs2RkFFQSxNQUFNQSxZQUFZO0FBQ2xCLE1BQU1DLGNBQWMsYUFBYSxHQUFHLElBQUlDO0FBQ3hDLE1BQU1DLGVBQWUsYUFBYSxHQUFHLElBQUlEO0FBQ3pDLFNBQVNFLHNCQUFzQkMsR0FBRztRQUN6QkE7SUFBUCxRQUFPQSxhQUFBQSxJQUFJQyxLQUFLLENBQUNOLHdCQUFWSyxpQ0FBQUEsVUFBc0IsQ0FBQyxFQUFFO0FBQ2xDO0FBQ0EsZUFBZUUsa0JBQWtCQyxPQUFPLEVBQUVDLEtBQUs7SUFDN0MsSUFBSVIsWUFBWVMsR0FBRyxDQUFDRixVQUFVLE9BQU9QLFlBQVlVLEdBQUcsQ0FBQ0g7SUFDckQsSUFBSUwsYUFBYU8sR0FBRyxDQUFDRixVQUFVLE9BQU9MLGFBQWFRLEdBQUcsQ0FBQ0g7SUFDdkQsTUFBTUksVUFBVSxJQUFJQyxRQUFRLE9BQU9DO1FBQ2pDLE1BQU1DLFFBQVE7WUFBQztZQUFpQjtZQUFhO1NBQVk7UUFDekQsS0FBSyxNQUFNQyxRQUFRRCxNQUFPO1lBQ3hCLEtBQUssTUFBTUUsUUFBUTtnQkFBQztnQkFBTTthQUFNLENBQUU7Z0JBQ2hDLE1BQU1DLE1BQU1DLHdCQUF3QlgsU0FBU1EsTUFBTUMsT0FBT0csV0FBVyxNQUFNQyxNQUFNSCxLQUFLO29CQUNwRkksTUFBTTtvQkFDTkMsUUFBUWQsTUFBTWMsTUFBTTtnQkFDdEI7Z0JBQ0EsSUFBSUgsU0FBU0ksTUFBTSxHQUFHLEtBQUs7b0JBQ3pCdkIsWUFBWXdCLEdBQUcsQ0FBQ2pCLFNBQVNVO29CQUN6QkosUUFBUUk7b0JBQ1I7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0YsR0FBR1EsS0FBSyxDQUFDLElBQU0sSUFBSUMsT0FBTyxDQUFDLElBQU14QixhQUFheUIsTUFBTSxDQUFDcEI7SUFDckRMLGFBQWFzQixHQUFHLENBQUNqQixTQUFTSTtJQUMxQixPQUFPQTtBQUNUO0FBQ0EsU0FBU08sd0JBQXdCWCxPQUFPLEVBQUVRLElBQUksRUFBRUMsSUFBSTtJQUNsRCxNQUFNWSxPQUFPWixPQUFPLFNBQVM7SUFDN0IsT0FBTyx1QkFBa0RULE9BQTNCUyxPQUFPLFlBQVksTUFBSyxLQUFjRCxPQUFYUixTQUFRLEtBQVdxQixPQUFSYixNQUFLLEtBQVEsT0FBTGE7QUFDOUU7QUFFb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B2aWRzdGFjay9yZWFjdC9kZXYvY2h1bmtzL3ZpZHN0YWNrLVpjM0k3b09kLmpzPzUxMTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuY29uc3QgdmlkZW9JZFJFID0gLyg/OnlvdXR1XFwuYmV8eW91dHViZXx5b3V0dWJlXFwuY29tfHlvdXR1YmUtbm9jb29raWVcXC5jb20pXFwvKD86ZW1iZWRcXC98dlxcL3x3YXRjaFxcP3Y9fHdhdGNoXFw/Lismdj18KSgoPzpcXHd8LSl7MTF9KS87XG5jb25zdCBwb3N0ZXJDYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG5jb25zdCBwZW5kaW5nRmV0Y2ggPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuZnVuY3Rpb24gcmVzb2x2ZVlvdVR1YmVWaWRlb0lkKHNyYykge1xuICByZXR1cm4gc3JjLm1hdGNoKHZpZGVvSWRSRSk/LlsxXTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGZpbmRZb3VUdWJlUG9zdGVyKHZpZGVvSWQsIGFib3J0KSB7XG4gIGlmIChwb3N0ZXJDYWNoZS5oYXModmlkZW9JZCkpIHJldHVybiBwb3N0ZXJDYWNoZS5nZXQodmlkZW9JZCk7XG4gIGlmIChwZW5kaW5nRmV0Y2guaGFzKHZpZGVvSWQpKSByZXR1cm4gcGVuZGluZ0ZldGNoLmdldCh2aWRlb0lkKTtcbiAgY29uc3QgcGVuZGluZyA9IG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlKSA9PiB7XG4gICAgY29uc3Qgc2l6ZXMgPSBbXCJtYXhyZXNkZWZhdWx0XCIsIFwic2RkZWZhdWx0XCIsIFwiaHFkZWZhdWx0XCJdO1xuICAgIGZvciAoY29uc3Qgc2l6ZSBvZiBzaXplcykge1xuICAgICAgZm9yIChjb25zdCB3ZWJwIG9mIFt0cnVlLCBmYWxzZV0pIHtcbiAgICAgICAgY29uc3QgdXJsID0gcmVzb2x2ZVlvdVR1YmVQb3N0ZXJVUkwodmlkZW9JZCwgc2l6ZSwgd2VicCksIHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgICAgICAgbW9kZTogXCJuby1jb3JzXCIsXG4gICAgICAgICAgc2lnbmFsOiBhYm9ydC5zaWduYWxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPCA0MDApIHtcbiAgICAgICAgICBwb3N0ZXJDYWNoZS5zZXQodmlkZW9JZCwgdXJsKTtcbiAgICAgICAgICByZXNvbHZlKHVybCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9KS5jYXRjaCgoKSA9PiBcIlwiKS5maW5hbGx5KCgpID0+IHBlbmRpbmdGZXRjaC5kZWxldGUodmlkZW9JZCkpO1xuICBwZW5kaW5nRmV0Y2guc2V0KHZpZGVvSWQsIHBlbmRpbmcpO1xuICByZXR1cm4gcGVuZGluZztcbn1cbmZ1bmN0aW9uIHJlc29sdmVZb3VUdWJlUG9zdGVyVVJMKHZpZGVvSWQsIHNpemUsIHdlYnApIHtcbiAgY29uc3QgdHlwZSA9IHdlYnAgPyBcIndlYnBcIiA6IFwianBnXCI7XG4gIHJldHVybiBgaHR0cHM6Ly9pLnl0aW1nLmNvbS8ke3dlYnAgPyBcInZpX3dlYnBcIiA6IFwidmlcIn0vJHt2aWRlb0lkfS8ke3NpemV9LiR7dHlwZX1gO1xufVxuXG5leHBvcnQgeyBmaW5kWW91VHViZVBvc3RlciwgcmVzb2x2ZVlvdVR1YmVWaWRlb0lkIH07XG4iXSwibmFtZXMiOlsidmlkZW9JZFJFIiwicG9zdGVyQ2FjaGUiLCJNYXAiLCJwZW5kaW5nRmV0Y2giLCJyZXNvbHZlWW91VHViZVZpZGVvSWQiLCJzcmMiLCJtYXRjaCIsImZpbmRZb3VUdWJlUG9zdGVyIiwidmlkZW9JZCIsImFib3J0IiwiaGFzIiwiZ2V0IiwicGVuZGluZyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2l6ZXMiLCJzaXplIiwid2VicCIsInVybCIsInJlc29sdmVZb3VUdWJlUG9zdGVyVVJMIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1vZGUiLCJzaWduYWwiLCJzdGF0dXMiLCJzZXQiLCJjYXRjaCIsImZpbmFsbHkiLCJkZWxldGUiLCJ0eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Zc3I7oOd.js\n"));

/***/ })

}]);