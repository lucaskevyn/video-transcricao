"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_vidstack_react_dev_chunks_vidstack-C4FuHl6d_js"],{

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BKViz-QC.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-BKViz-QC.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmbedProvider: function() { return /* binding */ EmbedProvider; }\n/* harmony export */ });\n/* harmony import */ var _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vidstack-Nm9OJy7x.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Nm9OJy7x.js\");\n/* harmony import */ var _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* __next_internal_client_entry_do_not_use__ EmbedProvider auto */ \n\nclass EmbedProvider {\n    get iframe() {\n        return this._iframe;\n    }\n    setup() {\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__.listenEvent)(window, \"message\", this._onWindowMessage.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__.listenEvent)(this._iframe, \"load\", this._onLoad.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__.effect)(this._watchSrc.bind(this));\n    }\n    _watchSrc() {\n        const src = this._src();\n        if (!src.length) {\n            this._iframe.setAttribute(\"src\", \"\");\n            return;\n        }\n        const params = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__.peek)(()=>this._buildParams());\n        this._iframe.setAttribute(\"src\", (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_1__.appendParamsToURL)(src, params));\n    }\n    _postMessage(message, target) {\n        var _this__iframe_contentWindow;\n        if (_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_1__.IS_SERVER) return;\n        (_this__iframe_contentWindow = this._iframe.contentWindow) === null || _this__iframe_contentWindow === void 0 ? void 0 : _this__iframe_contentWindow.postMessage(JSON.stringify(message), target !== null && target !== void 0 ? target : \"*\");\n    }\n    _onWindowMessage(event) {\n        var _this__iframe;\n        const origin = this._getOrigin(), isOriginMatch = (event.source === null || event.source === ((_this__iframe = this._iframe) === null || _this__iframe === void 0 ? void 0 : _this__iframe.contentWindow)) && (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__.isString)(origin) || origin === event.origin);\n        if (!isOriginMatch) return;\n        try {\n            const message = JSON.parse(event.data);\n            if (message) this._onMessage(message, event);\n            return;\n        } catch (e) {}\n        if (event.data) this._onMessage(event.data, event);\n    }\n    constructor(_iframe){\n        this._iframe = _iframe;\n        this._src = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_0__.signal)(\"\");\n        /**\n     * Defines which referrer is sent when fetching the resource.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy}\n     */ this.referrerPolicy = null;\n        _iframe.setAttribute(\"frameBorder\", \"0\");\n        _iframe.setAttribute(\"aria-hidden\", \"true\");\n        _iframe.setAttribute(\"allow\", \"autoplay; fullscreen; encrypted-media; picture-in-picture; accelerometer; gyroscope\");\n        if (this.referrerPolicy !== null) {\n            _iframe.setAttribute(\"referrerpolicy\", this.referrerPolicy);\n        }\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L2NodW5rcy92aWRzdGFjay1CS1Zpei1RQy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7bUVBRXNFO0FBQ2U7QUFFckYsTUFBTU87SUFvQkosSUFBSUMsU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDQyxPQUFPO0lBQ3JCO0lBQ0FDLFFBQVE7UUFDTlAsaUVBQVdBLENBQUNRLFFBQVEsV0FBVyxJQUFJLENBQUNDLGdCQUFnQixDQUFDQyxJQUFJLENBQUMsSUFBSTtRQUM5RFYsaUVBQVdBLENBQUMsSUFBSSxDQUFDTSxPQUFPLEVBQUUsUUFBUSxJQUFJLENBQUNLLE9BQU8sQ0FBQ0QsSUFBSSxDQUFDLElBQUk7UUFDeERULDREQUFNQSxDQUFDLElBQUksQ0FBQ1csU0FBUyxDQUFDRixJQUFJLENBQUMsSUFBSTtJQUNqQztJQUNBRSxZQUFZO1FBQ1YsTUFBTUMsTUFBTSxJQUFJLENBQUNDLElBQUk7UUFDckIsSUFBSSxDQUFDRCxJQUFJRSxNQUFNLEVBQUU7WUFDZixJQUFJLENBQUNULE9BQU8sQ0FBQ1UsWUFBWSxDQUFDLE9BQU87WUFDakM7UUFDRjtRQUNBLE1BQU1DLFNBQVNmLDBEQUFJQSxDQUFDLElBQU0sSUFBSSxDQUFDZ0IsWUFBWTtRQUMzQyxJQUFJLENBQUNaLE9BQU8sQ0FBQ1UsWUFBWSxDQUFDLE9BQU9uQix3RUFBaUJBLENBQUNnQixLQUFLSTtJQUMxRDtJQUNBRSxhQUFhQyxPQUFPLEVBQUVDLE1BQU0sRUFBRTtZQUU1QjtRQURBLElBQUl2Qiw0REFBU0EsRUFBRTtTQUNmLGtDQUFJLENBQUNRLE9BQU8sQ0FBQ2dCLGFBQWEsY0FBMUIsOEVBQTRCQyxXQUFXLENBQUNDLEtBQUtDLFNBQVMsQ0FBQ0wsVUFBVUMsbUJBQUFBLG9CQUFBQSxTQUFVO0lBQzdFO0lBQ0FaLGlCQUFpQmlCLEtBQUssRUFBRTtZQUN1RTtRQUE3RixNQUFNQyxTQUFTLElBQUksQ0FBQ0MsVUFBVSxJQUFJQyxnQkFBZ0IsQ0FBQ0gsTUFBTUksTUFBTSxLQUFLLFFBQVFKLE1BQU1JLE1BQU0sT0FBSyxvQkFBSSxDQUFDeEIsT0FBTyxjQUFaLGtEQUFjZ0IsYUFBYSxDQUFELEtBQU8sRUFBQ25CLDhEQUFRQSxDQUFDd0IsV0FBV0EsV0FBV0QsTUFBTUMsTUFBTTtRQUMxSyxJQUFJLENBQUNFLGVBQWU7UUFDcEIsSUFBSTtZQUNGLE1BQU1ULFVBQVVJLEtBQUtPLEtBQUssQ0FBQ0wsTUFBTU0sSUFBSTtZQUNyQyxJQUFJWixTQUFTLElBQUksQ0FBQ2EsVUFBVSxDQUFDYixTQUFTTTtZQUN0QztRQUNGLEVBQUUsT0FBT1EsR0FBRyxDQUNaO1FBQ0EsSUFBSVIsTUFBTU0sSUFBSSxFQUFFLElBQUksQ0FBQ0MsVUFBVSxDQUFDUCxNQUFNTSxJQUFJLEVBQUVOO0lBQzlDO0lBbERBUyxZQUFZN0IsT0FBTyxDQUFFO1FBQ25CLElBQUksQ0FBQ0EsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ1EsSUFBSSxHQUFHZiw0REFBTUEsQ0FBQztRQUNuQjs7OztLQUlDLEdBQ0QsSUFBSSxDQUFDcUMsY0FBYyxHQUFHO1FBQ3RCOUIsUUFBUVUsWUFBWSxDQUFDLGVBQWU7UUFDcENWLFFBQVFVLFlBQVksQ0FBQyxlQUFlO1FBQ3BDVixRQUFRVSxZQUFZLENBQ2xCLFNBQ0E7UUFFRixJQUFJLElBQUksQ0FBQ29CLGNBQWMsS0FBSyxNQUFNO1lBQ2hDOUIsUUFBUVUsWUFBWSxDQUFDLGtCQUFrQixJQUFJLENBQUNvQixjQUFjO1FBQzVEO0lBQ0Y7QUFpQ0Y7QUFFeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B2aWRzdGFjay9yZWFjdC9kZXYvY2h1bmtzL3ZpZHN0YWNrLUJLVml6LVFDLmpzPzU0MzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuaW1wb3J0IHsgYXBwZW5kUGFyYW1zVG9VUkwsIElTX1NFUlZFUiB9IGZyb20gJy4vdmlkc3RhY2stTm05T0p5N3guanMnO1xuaW1wb3J0IHsgc2lnbmFsLCBsaXN0ZW5FdmVudCwgZWZmZWN0LCBwZWVrLCBpc1N0cmluZyB9IGZyb20gJy4vdmlkc3RhY2stM2hzMy04aV8uanMnO1xuXG5jbGFzcyBFbWJlZFByb3ZpZGVyIHtcbiAgY29uc3RydWN0b3IoX2lmcmFtZSkge1xuICAgIHRoaXMuX2lmcmFtZSA9IF9pZnJhbWU7XG4gICAgdGhpcy5fc3JjID0gc2lnbmFsKFwiXCIpO1xuICAgIC8qKlxuICAgICAqIERlZmluZXMgd2hpY2ggcmVmZXJyZXIgaXMgc2VudCB3aGVuIGZldGNoaW5nIHRoZSByZXNvdXJjZS5cbiAgICAgKlxuICAgICAqIEBzZWUge0BsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9IVE1MSUZyYW1lRWxlbWVudC9yZWZlcnJlclBvbGljeX1cbiAgICAgKi9cbiAgICB0aGlzLnJlZmVycmVyUG9saWN5ID0gbnVsbDtcbiAgICBfaWZyYW1lLnNldEF0dHJpYnV0ZShcImZyYW1lQm9yZGVyXCIsIFwiMFwiKTtcbiAgICBfaWZyYW1lLnNldEF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIsIFwidHJ1ZVwiKTtcbiAgICBfaWZyYW1lLnNldEF0dHJpYnV0ZShcbiAgICAgIFwiYWxsb3dcIixcbiAgICAgIFwiYXV0b3BsYXk7IGZ1bGxzY3JlZW47IGVuY3J5cHRlZC1tZWRpYTsgcGljdHVyZS1pbi1waWN0dXJlOyBhY2NlbGVyb21ldGVyOyBneXJvc2NvcGVcIlxuICAgICk7XG4gICAgaWYgKHRoaXMucmVmZXJyZXJQb2xpY3kgIT09IG51bGwpIHtcbiAgICAgIF9pZnJhbWUuc2V0QXR0cmlidXRlKFwicmVmZXJyZXJwb2xpY3lcIiwgdGhpcy5yZWZlcnJlclBvbGljeSk7XG4gICAgfVxuICB9XG4gIGdldCBpZnJhbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lmcmFtZTtcbiAgfVxuICBzZXR1cCgpIHtcbiAgICBsaXN0ZW5FdmVudCh3aW5kb3csIFwibWVzc2FnZVwiLCB0aGlzLl9vbldpbmRvd01lc3NhZ2UuYmluZCh0aGlzKSk7XG4gICAgbGlzdGVuRXZlbnQodGhpcy5faWZyYW1lLCBcImxvYWRcIiwgdGhpcy5fb25Mb2FkLmJpbmQodGhpcykpO1xuICAgIGVmZmVjdCh0aGlzLl93YXRjaFNyYy5iaW5kKHRoaXMpKTtcbiAgfVxuICBfd2F0Y2hTcmMoKSB7XG4gICAgY29uc3Qgc3JjID0gdGhpcy5fc3JjKCk7XG4gICAgaWYgKCFzcmMubGVuZ3RoKSB7XG4gICAgICB0aGlzLl9pZnJhbWUuc2V0QXR0cmlidXRlKFwic3JjXCIsIFwiXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBwYXJhbXMgPSBwZWVrKCgpID0+IHRoaXMuX2J1aWxkUGFyYW1zKCkpO1xuICAgIHRoaXMuX2lmcmFtZS5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgYXBwZW5kUGFyYW1zVG9VUkwoc3JjLCBwYXJhbXMpKTtcbiAgfVxuICBfcG9zdE1lc3NhZ2UobWVzc2FnZSwgdGFyZ2V0KSB7XG4gICAgaWYgKElTX1NFUlZFUikgcmV0dXJuO1xuICAgIHRoaXMuX2lmcmFtZS5jb250ZW50V2luZG93Py5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShtZXNzYWdlKSwgdGFyZ2V0ID8/IFwiKlwiKTtcbiAgfVxuICBfb25XaW5kb3dNZXNzYWdlKGV2ZW50KSB7XG4gICAgY29uc3Qgb3JpZ2luID0gdGhpcy5fZ2V0T3JpZ2luKCksIGlzT3JpZ2luTWF0Y2ggPSAoZXZlbnQuc291cmNlID09PSBudWxsIHx8IGV2ZW50LnNvdXJjZSA9PT0gdGhpcy5faWZyYW1lPy5jb250ZW50V2luZG93KSAmJiAoIWlzU3RyaW5nKG9yaWdpbikgfHwgb3JpZ2luID09PSBldmVudC5vcmlnaW4pO1xuICAgIGlmICghaXNPcmlnaW5NYXRjaCkgcmV0dXJuO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBtZXNzYWdlID0gSlNPTi5wYXJzZShldmVudC5kYXRhKTtcbiAgICAgIGlmIChtZXNzYWdlKSB0aGlzLl9vbk1lc3NhZ2UobWVzc2FnZSwgZXZlbnQpO1xuICAgICAgcmV0dXJuO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICB9XG4gICAgaWYgKGV2ZW50LmRhdGEpIHRoaXMuX29uTWVzc2FnZShldmVudC5kYXRhLCBldmVudCk7XG4gIH1cbn1cblxuZXhwb3J0IHsgRW1iZWRQcm92aWRlciB9O1xuIl0sIm5hbWVzIjpbImFwcGVuZFBhcmFtc1RvVVJMIiwiSVNfU0VSVkVSIiwic2lnbmFsIiwibGlzdGVuRXZlbnQiLCJlZmZlY3QiLCJwZWVrIiwiaXNTdHJpbmciLCJFbWJlZFByb3ZpZGVyIiwiaWZyYW1lIiwiX2lmcmFtZSIsInNldHVwIiwid2luZG93IiwiX29uV2luZG93TWVzc2FnZSIsImJpbmQiLCJfb25Mb2FkIiwiX3dhdGNoU3JjIiwic3JjIiwiX3NyYyIsImxlbmd0aCIsInNldEF0dHJpYnV0ZSIsInBhcmFtcyIsIl9idWlsZFBhcmFtcyIsIl9wb3N0TWVzc2FnZSIsIm1lc3NhZ2UiLCJ0YXJnZXQiLCJjb250ZW50V2luZG93IiwicG9zdE1lc3NhZ2UiLCJKU09OIiwic3RyaW5naWZ5IiwiZXZlbnQiLCJvcmlnaW4iLCJfZ2V0T3JpZ2luIiwiaXNPcmlnaW5NYXRjaCIsInNvdXJjZSIsInBhcnNlIiwiZGF0YSIsIl9vbk1lc3NhZ2UiLCJlIiwiY29uc3RydWN0b3IiLCJyZWZlcnJlclBvbGljeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BKViz-QC.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-C4FuHl6d.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-C4FuHl6d.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VimeoProvider: function() { return /* binding */ VimeoProvider; }\n/* harmony export */ });\n/* harmony import */ var _vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vidstack-3hs3-8i_.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-3hs3-8i_.js\");\n/* harmony import */ var _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vidstack-Nm9OJy7x.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Nm9OJy7x.js\");\n/* harmony import */ var _vidstack_BKViz_QC_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vidstack-BKViz-QC.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-BKViz-QC.js\");\n/* harmony import */ var _vidstack_krOAtKMi_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vidstack-krOAtKMi.js */ \"(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-krOAtKMi.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* __next_internal_client_entry_do_not_use__ VimeoProvider auto */ \n\n\n\n\n\nconst trackedVimeoEvents = [\n    \"bufferend\",\n    \"bufferstart\",\n    // 'cuechange',\n    \"durationchange\",\n    \"ended\",\n    \"enterpictureinpicture\",\n    \"error\",\n    \"fullscreenchange\",\n    \"leavepictureinpicture\",\n    \"loaded\",\n    // 'loadeddata',\n    // 'loadedmetadata',\n    // 'loadstart',\n    \"playProgress\",\n    \"loadProgress\",\n    \"pause\",\n    \"play\",\n    \"playbackratechange\",\n    // 'progress',\n    \"qualitychange\",\n    \"seeked\",\n    \"seeking\",\n    // 'texttrackchange',\n    \"timeupdate\",\n    \"volumechange\",\n    \"waiting\"\n];\nclass VimeoProvider extends _vidstack_BKViz_QC_js__WEBPACK_IMPORTED_MODULE_1__.EmbedProvider {\n    get _notify() {\n        return this._ctx.delegate._notify;\n    }\n    get type() {\n        return \"vimeo\";\n    }\n    get currentSrc() {\n        return this._currentSrc;\n    }\n    get videoId() {\n        return this._videoId();\n    }\n    get hash() {\n        return this._hash;\n    }\n    get isPro() {\n        return this._pro();\n    }\n    preconnect() {\n        (0,_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.preconnect)(this._getOrigin());\n    }\n    setup() {\n        super.setup();\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.effect)(this._watchVideoId.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.effect)(this._watchVideoInfo.bind(this));\n        (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.effect)(this._watchPro.bind(this));\n        this._notify(\"provider-setup\", this);\n    }\n    destroy() {\n        this._reset();\n        this.fullscreen = void 0;\n        const message = \"provider destroyed\";\n        for (const promises of this._promises.values()){\n            for (const { reject } of promises)reject(message);\n        }\n        this._promises.clear();\n        this._remote(\"destroy\");\n    }\n    async play() {\n        return this._remote(\"play\");\n    }\n    async pause() {\n        return this._remote(\"pause\");\n    }\n    setMuted(muted) {\n        this._remote(\"setMuted\", muted);\n    }\n    setCurrentTime(time) {\n        this._remote(\"seekTo\", time);\n        this._notify(\"seeking\", time);\n    }\n    setVolume(volume) {\n        this._remote(\"setVolume\", volume);\n        this._remote(\"setMuted\", (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.peek)(this._ctx.$state.muted));\n    }\n    setPlaybackRate(rate) {\n        this._remote(\"setPlaybackRate\", rate);\n    }\n    async loadSource(src) {\n        if (!(0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.isString)(src.src)) {\n            this._currentSrc = null;\n            this._hash = null;\n            this._videoId.set(\"\");\n            return;\n        }\n        const { videoId, hash } = (0,_vidstack_krOAtKMi_js__WEBPACK_IMPORTED_MODULE_4__.resolveVimeoVideoId)(src.src);\n        this._videoId.set(videoId !== null && videoId !== void 0 ? videoId : \"\");\n        this._hash = hash !== null && hash !== void 0 ? hash : null;\n        this._currentSrc = src;\n    }\n    _watchVideoId() {\n        this._reset();\n        const videoId = this._videoId();\n        if (!videoId) {\n            this._src.set(\"\");\n            return;\n        }\n        this._src.set(\"\".concat(this._getOrigin(), \"/video/\").concat(videoId));\n        this._notify(\"load-start\");\n    }\n    _watchVideoInfo() {\n        const videoId = this._videoId();\n        if (!videoId) return;\n        const promise = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.deferredPromise)(), abort = new AbortController();\n        this._videoInfoPromise = promise;\n        (0,_vidstack_krOAtKMi_js__WEBPACK_IMPORTED_MODULE_4__.getVimeoVideoInfo)(videoId, abort, this._hash).then((info)=>{\n            promise.resolve(info);\n        }).catch((e)=>{\n            promise.reject();\n            {\n                var _this__ctx_logger;\n                (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.warnGroup(\"Failed to fetch vimeo video info for id `\".concat(videoId, \"`.\")).labelledLog(\"Error\", e).dispatch();\n            }\n        });\n        return ()=>{\n            promise.reject();\n            abort.abort();\n        };\n    }\n    _watchPro() {\n        const isPro = this._pro(), { $state, qualities } = this._ctx;\n        $state.canSetPlaybackRate.set(isPro);\n        qualities[_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.ListSymbol._setReadonly](!isPro);\n        if (isPro) {\n            return (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.listenEvent)(qualities, \"change\", ()=>{\n                var _qualities_selected;\n                if (qualities.auto) return;\n                const id = (_qualities_selected = qualities.selected) === null || _qualities_selected === void 0 ? void 0 : _qualities_selected.id;\n                if (id) this._remote(\"setQuality\", id);\n            });\n        }\n    }\n    _getOrigin() {\n        return \"https://player.vimeo.com\";\n    }\n    _buildParams() {\n        const { keyDisabled } = this._ctx.$props, { playsInline, nativeControls } = this._ctx.$state, showControls = nativeControls();\n        return {\n            title: this.title,\n            byline: this.byline,\n            color: this.color,\n            portrait: this.portrait,\n            controls: showControls,\n            h: this.hash,\n            keyboard: showControls && !keyDisabled(),\n            transparent: true,\n            playsinline: playsInline(),\n            dnt: !this.cookies\n        };\n    }\n    _onAnimationFrame() {\n        this._remote(\"getCurrentTime\");\n    }\n    _onTimeUpdate(time, trigger) {\n        if (this._preventTimeUpdates && time === 0) return;\n        const { realCurrentTime, realDuration, paused, bufferedEnd } = this._ctx.$state;\n        if (realCurrentTime() === time) return;\n        const prevTime = realCurrentTime();\n        this._notify(\"time-change\", time, trigger);\n        if (Math.abs(prevTime - time) > 1.5) {\n            this._notify(\"seeking\", time, trigger);\n            if (!paused() && bufferedEnd() < time) {\n                this._notify(\"waiting\", void 0, trigger);\n            }\n        }\n        if (realDuration() - time < 0.01) {\n            this._notify(\"end\", void 0, trigger);\n            this._preventTimeUpdates = true;\n            setTimeout(()=>{\n                this._preventTimeUpdates = false;\n            }, 500);\n        }\n    }\n    _onSeeked(time, trigger) {\n        this._notify(\"seeked\", time, trigger);\n    }\n    _onLoaded(trigger) {\n        var _this__videoInfoPromise;\n        const videoId = this._videoId();\n        (_this__videoInfoPromise = this._videoInfoPromise) === null || _this__videoInfoPromise === void 0 ? void 0 : _this__videoInfoPromise.promise.then((info)=>{\n            if (!info) return;\n            const { title, poster, duration, pro } = info;\n            this._pro.set(pro);\n            this._notify(\"title-change\", title, trigger);\n            this._notify(\"poster-change\", poster, trigger);\n            this._notify(\"duration-change\", duration, trigger);\n            this._onReady(duration, trigger);\n        }).catch(()=>{\n            if (videoId !== this._videoId()) return;\n            this._remote(\"getVideoTitle\");\n            this._remote(\"getDuration\");\n        });\n    }\n    _onReady(duration, trigger) {\n        const { nativeControls } = this._ctx.$state, showEmbedControls = nativeControls();\n        this._seekableRange = new _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.TimeRange(0, duration);\n        const detail = {\n            buffered: new _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.TimeRange(0, 0),\n            seekable: this._seekableRange,\n            duration\n        };\n        this._ctx.delegate._ready(detail, trigger);\n        if (!showEmbedControls) {\n            this._remote(\"_hideOverlay\");\n        }\n        this._remote(\"getQualities\");\n        this._remote(\"getChapters\");\n    }\n    _onMethod(method, data, trigger) {\n        var _this__getPromise;\n        switch(method){\n            case \"getVideoTitle\":\n                const videoTitle = data;\n                this._notify(\"title-change\", videoTitle, trigger);\n                break;\n            case \"getDuration\":\n                const duration = data;\n                if (!this._ctx.$state.canPlay()) {\n                    this._onReady(duration, trigger);\n                } else {\n                    this._notify(\"duration-change\", duration, trigger);\n                }\n                break;\n            case \"getCurrentTime\":\n                this._onTimeUpdate(data, trigger);\n                break;\n            case \"getBuffered\":\n                if ((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.isArray)(data) && data.length) {\n                    this._onLoadProgress(data[data.length - 1][1], trigger);\n                }\n                break;\n            case \"setMuted\":\n                this._onVolumeChange((0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.peek)(this._ctx.$state.volume), data, trigger);\n                break;\n            case \"getChapters\":\n                this._onChaptersChange(data);\n                break;\n            case \"getQualities\":\n                this._onQualitiesChange(data, trigger);\n                break;\n        }\n        (_this__getPromise = this._getPromise(method)) === null || _this__getPromise === void 0 ? void 0 : _this__getPromise.resolve();\n    }\n    _attachListeners() {\n        for (const type of trackedVimeoEvents){\n            this._remote(\"addEventListener\", type);\n        }\n    }\n    _onPause(trigger) {\n        this._timeRAF._stop();\n        this._notify(\"pause\", void 0, trigger);\n    }\n    _onPlay(trigger) {\n        this._timeRAF._start();\n        this._notify(\"play\", void 0, trigger);\n    }\n    _onPlayProgress(trigger) {\n        const { paused } = this._ctx.$state;\n        if (!paused() && !this._preventTimeUpdates) {\n            this._notify(\"playing\", void 0, trigger);\n        }\n    }\n    _onLoadProgress(buffered, trigger) {\n        const detail = {\n            buffered: new _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.TimeRange(0, buffered),\n            seekable: this._seekableRange\n        };\n        this._notify(\"progress\", detail, trigger);\n    }\n    _onBufferStart(trigger) {\n        this._notify(\"waiting\", void 0, trigger);\n    }\n    _onBufferEnd(trigger) {\n        const { paused } = this._ctx.$state;\n        if (!paused()) this._notify(\"playing\", void 0, trigger);\n    }\n    _onWaiting(trigger) {\n        const { paused } = this._ctx.$state;\n        if (paused()) {\n            this._notify(\"play\", void 0, trigger);\n        }\n        this._notify(\"waiting\", void 0, trigger);\n    }\n    _onVolumeChange(volume, muted, trigger) {\n        const detail = {\n            volume,\n            muted\n        };\n        this._notify(\"volume-change\", detail, trigger);\n    }\n    // protected _onTextTrackChange(track: VimeoTextTrack, trigger: Event) {\n    //   const textTrack = this._ctx.textTracks.toArray().find((t) => t.language === track.language);\n    //   if (textTrack) textTrack.mode = track.mode;\n    // }\n    // protected _onTextTracksChange(tracks: VimeoTextTrack[], trigger: Event) {\n    //   for (const init of tracks) {\n    //     const textTrack = new TextTrack({\n    //       ...init,\n    //       label: init.label.replace('auto-generated', 'auto'),\n    //     });\n    //     textTrack[TextTrackSymbol._readyState] = 2;\n    //     this._ctx.textTracks.add(textTrack, trigger);\n    //     textTrack.setMode(init.mode, trigger);\n    //   }\n    // }\n    // protected _onCueChange(cue: VimeoTextCue, trigger: Event) {\n    //   const { textTracks, $state } = this._ctx,\n    //     { currentTime } = $state,\n    //     track = textTracks.selected;\n    //   if (this._currentCue) track?.removeCue(this._currentCue, trigger);\n    //   this._currentCue = new window.VTTCue(currentTime(), Number.MAX_SAFE_INTEGER, cue.text);\n    //   track?.addCue(this._currentCue, trigger);\n    // }\n    _onChaptersChange(chapters) {\n        this._removeChapters();\n        if (!chapters.length) return;\n        const track = new _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.TextTrack({\n            kind: \"chapters\",\n            default: true\n        }), { realDuration } = this._ctx.$state;\n        for(let i = 0; i < chapters.length; i++){\n            const chapter = chapters[i], nextChapter = chapters[i + 1];\n            var _nextChapter_startTime;\n            track.addCue(new window.VTTCue(chapter.startTime, (_nextChapter_startTime = nextChapter === null || nextChapter === void 0 ? void 0 : nextChapter.startTime) !== null && _nextChapter_startTime !== void 0 ? _nextChapter_startTime : realDuration(), chapter.title));\n        }\n        this._chaptersTrack = track;\n        this._ctx.textTracks.add(track);\n    }\n    _removeChapters() {\n        if (!this._chaptersTrack) return;\n        this._ctx.textTracks.remove(this._chaptersTrack);\n        this._chaptersTrack = null;\n    }\n    _onQualitiesChange(qualities, trigger) {\n        this._ctx.qualities[_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.QualitySymbol._enableAuto] = qualities.some((q)=>q.id === \"auto\") ? ()=>this._remote(\"setQuality\", \"auto\") : void 0;\n        for (const quality of qualities){\n            if (quality.id === \"auto\") continue;\n            const height = +quality.id.slice(0, -1);\n            if (isNaN(height)) continue;\n            this._ctx.qualities[_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.ListSymbol._add]({\n                id: quality.id,\n                width: height * (16 / 9),\n                height,\n                codec: \"avc1,h.264\",\n                bitrate: -1\n            }, trigger);\n        }\n        this._onQualityChange(qualities.find((q)=>q.active), trigger);\n    }\n    _onQualityChange() {\n        let { id } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, trigger = arguments.length > 1 ? arguments[1] : void 0;\n        if (!id) return;\n        const isAuto = id === \"auto\", newQuality = this._ctx.qualities.getById(id);\n        if (isAuto) {\n            this._ctx.qualities[_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.QualitySymbol._setAuto](isAuto, trigger);\n            this._ctx.qualities[_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.ListSymbol._select](void 0, true, trigger);\n        } else {\n            this._ctx.qualities[_vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.ListSymbol._select](newQuality !== null && newQuality !== void 0 ? newQuality : void 0, true, trigger);\n        }\n    }\n    _onEvent(event, payload, trigger) {\n        switch(event){\n            case \"ready\":\n                this._attachListeners();\n                break;\n            case \"loaded\":\n                this._onLoaded(trigger);\n                break;\n            case \"play\":\n                this._onPlay(trigger);\n                break;\n            case \"playProgress\":\n                this._onPlayProgress(trigger);\n                break;\n            case \"pause\":\n                this._onPause(trigger);\n                break;\n            case \"loadProgress\":\n                this._onLoadProgress(payload.seconds, trigger);\n                break;\n            case \"waiting\":\n                this._onWaiting(trigger);\n                break;\n            case \"bufferstart\":\n                this._onBufferStart(trigger);\n                break;\n            case \"bufferend\":\n                this._onBufferEnd(trigger);\n                break;\n            case \"volumechange\":\n                this._onVolumeChange(payload.volume, (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.peek)(this._ctx.$state.muted), trigger);\n                break;\n            case \"durationchange\":\n                this._seekableRange = new _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.TimeRange(0, payload.duration);\n                this._notify(\"duration-change\", payload.duration, trigger);\n                break;\n            case \"playbackratechange\":\n                this._notify(\"rate-change\", payload.playbackRate, trigger);\n                break;\n            case \"qualitychange\":\n                this._onQualityChange(payload, trigger);\n                break;\n            case \"fullscreenchange\":\n                this._fullscreenActive = payload.fullscreen;\n                this._notify(\"fullscreen-change\", payload.fullscreen, trigger);\n                break;\n            case \"enterpictureinpicture\":\n                this._notify(\"picture-in-picture-change\", true, trigger);\n                break;\n            case \"leavepictureinpicture\":\n                this._notify(\"picture-in-picture-change\", false, trigger);\n                break;\n            case \"ended\":\n                this._notify(\"end\", void 0, trigger);\n                break;\n            case \"error\":\n                this._onError(payload, trigger);\n                break;\n            case \"seek\":\n            case \"seeked\":\n                this._onSeeked(payload.seconds, trigger);\n                break;\n        }\n    }\n    _onError(error, trigger) {\n        const { message, method } = error;\n        if (method === \"setPlaybackRate\") {\n            this._pro.set(false);\n        }\n        if (method) {\n            var _this__getPromise;\n            (_this__getPromise = this._getPromise(method)) === null || _this__getPromise === void 0 ? void 0 : _this__getPromise.reject(message);\n        }\n        {\n            var _this__ctx_logger;\n            (_this__ctx_logger = this._ctx.logger) === null || _this__ctx_logger === void 0 ? void 0 : _this__ctx_logger.errorGroup(\"[vimeo]: \".concat(message)).labelledLog(\"Error\", error).labelledLog(\"Provider\", this).labelledLog(\"Event\", trigger).dispatch();\n        }\n    }\n    _onMessage(message, event) {\n        if (message.event) {\n            this._onEvent(message.event, message.data, event);\n        } else if (message.method) {\n            this._onMethod(message.method, message.value, event);\n        }\n    }\n    _onLoad() {}\n    async _remote(command, arg) {\n        let promise = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.deferredPromise)(), promises = this._promises.get(command);\n        if (!promises) this._promises.set(command, promises = []);\n        promises.push(promise);\n        this._postMessage({\n            method: command,\n            value: arg\n        });\n        return promise.promise;\n    }\n    _reset() {\n        this._timeRAF._stop();\n        this._seekableRange = new _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.TimeRange(0, 0);\n        this._videoInfoPromise = null;\n        this._currentCue = null;\n        this._pro.set(false);\n        this._removeChapters();\n    }\n    _getPromise(command) {\n        var _this__promises_get;\n        return (_this__promises_get = this._promises.get(command)) === null || _this__promises_get === void 0 ? void 0 : _this__promises_get.shift();\n    }\n    constructor(iframe, _ctx){\n        super(iframe);\n        this._ctx = _ctx;\n        this.$$PROVIDER_TYPE = \"VIMEO\";\n        this.scope = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.createScope)();\n        this._videoId = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.signal)(\"\");\n        this._pro = (0,_vidstack_3hs3_8i_js__WEBPACK_IMPORTED_MODULE_3__.signal)(false);\n        this._hash = null;\n        this._currentSrc = null;\n        this._fullscreenActive = false;\n        this._seekableRange = new _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.TimeRange(0, 0);\n        this._timeRAF = new _vidstack_Nm9OJy7x_js__WEBPACK_IMPORTED_MODULE_2__.RAFLoop(this._onAnimationFrame.bind(this));\n        this._currentCue = null;\n        this._chaptersTrack = null;\n        this._promises = /* @__PURE__ */ new Map();\n        this._videoInfoPromise = null;\n        /**\n     * Whether tracking session data should be enabled on the embed, including cookies and analytics.\n     * This is turned off by default to be GDPR-compliant.\n     *\n     * @defaultValue `false`\n     */ this.cookies = false;\n        this.title = true;\n        this.byline = true;\n        this.portrait = true;\n        this.color = \"00ADEF\";\n        // Embed will sometimes dispatch 0 at end of playback.\n        this._preventTimeUpdates = false;\n        const self = this;\n        this.fullscreen = {\n            get active () {\n                return self._fullscreenActive;\n            },\n            supported: true,\n            enter: ()=>this._remote(\"requestFullscreen\"),\n            exit: ()=>this._remote(\"exitFullscreen\")\n        };\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-C4FuHl6d.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-krOAtKMi.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-krOAtKMi.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVimeoVideoInfo: function() { return /* binding */ getVimeoVideoInfo; },\n/* harmony export */   resolveVimeoVideoId: function() { return /* binding */ resolveVimeoVideoId; }\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ getVimeoVideoInfo,resolveVimeoVideoId auto */ const videoIdRE = /(?:https:\\/\\/)?(?:player\\.)?vimeo(?:\\.com)?\\/(?:video\\/)?(\\d+)(?:(?:\\?hash=|\\?h=|\\/)(.*))?/;\nconst infoCache = /* @__PURE__ */ new Map();\nconst pendingFetch = /* @__PURE__ */ new Map();\nfunction resolveVimeoVideoId(src) {\n    const matches = src.match(videoIdRE);\n    return {\n        videoId: matches === null || matches === void 0 ? void 0 : matches[1],\n        hash: matches === null || matches === void 0 ? void 0 : matches[2]\n    };\n}\nasync function getVimeoVideoInfo(videoId, abort, videoHash) {\n    if (infoCache.has(videoId)) return infoCache.get(videoId);\n    if (pendingFetch.has(videoId)) return pendingFetch.get(videoId);\n    let oembedSrc = \"https://vimeo.com/api/oembed.json?url=https://player.vimeo.com/video/\".concat(videoId);\n    if (videoHash) {\n        oembedSrc = oembedSrc.concat(\"?h=\".concat(videoHash));\n    }\n    const promise = window.fetch(oembedSrc, {\n        mode: \"cors\",\n        signal: abort.signal\n    }).then((response)=>response.json()).then((data)=>{\n        var _data_thumbnail_url_match, _data_thumbnail_url;\n        var _data_title, _data_duration;\n        const thumnailRegex = /vimeocdn.com\\/video\\/(.*)?_/, thumbnailId = data === null || data === void 0 ? void 0 : (_data_thumbnail_url = data.thumbnail_url) === null || _data_thumbnail_url === void 0 ? void 0 : (_data_thumbnail_url_match = _data_thumbnail_url.match(thumnailRegex)) === null || _data_thumbnail_url_match === void 0 ? void 0 : _data_thumbnail_url_match[1], poster = thumbnailId ? \"https://i.vimeocdn.com/video/\".concat(thumbnailId, \"_1920x1080.webp\") : \"\", info = {\n            title: (_data_title = data === null || data === void 0 ? void 0 : data.title) !== null && _data_title !== void 0 ? _data_title : \"\",\n            duration: (_data_duration = data === null || data === void 0 ? void 0 : data.duration) !== null && _data_duration !== void 0 ? _data_duration : 0,\n            poster,\n            pro: data.account_type !== \"basic\"\n        };\n        infoCache.set(videoId, info);\n        return info;\n    }).finally(()=>pendingFetch.delete(videoId));\n    pendingFetch.set(videoId, promise);\n    return promise;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L2NodW5rcy92aWRzdGFjay1rck9BdEtNaS5qcyIsIm1hcHBpbmdzIjoiOzs7OzsyRkFFQSxNQUFNQSxZQUFZO0FBQ2xCLE1BQU1DLFlBQVksYUFBYSxHQUFHLElBQUlDO0FBQ3RDLE1BQU1DLGVBQWUsYUFBYSxHQUFHLElBQUlEO0FBQ3pDLFNBQVNFLG9CQUFvQkMsR0FBRztJQUM5QixNQUFNQyxVQUFVRCxJQUFJRSxLQUFLLENBQUNQO0lBQzFCLE9BQU87UUFBRVEsT0FBTyxFQUFFRixvQkFBQUEsOEJBQUFBLE9BQVMsQ0FBQyxFQUFFO1FBQUVHLElBQUksRUFBRUgsb0JBQUFBLDhCQUFBQSxPQUFTLENBQUMsRUFBRTtJQUFDO0FBQ3JEO0FBQ0EsZUFBZUksa0JBQWtCRixPQUFPLEVBQUVHLEtBQUssRUFBRUMsU0FBUztJQUN4RCxJQUFJWCxVQUFVWSxHQUFHLENBQUNMLFVBQVUsT0FBT1AsVUFBVWEsR0FBRyxDQUFDTjtJQUNqRCxJQUFJTCxhQUFhVSxHQUFHLENBQUNMLFVBQVUsT0FBT0wsYUFBYVcsR0FBRyxDQUFDTjtJQUN2RCxJQUFJTyxZQUFZLHdFQUFnRixPQUFSUDtJQUN4RixJQUFJSSxXQUFXO1FBQ2JHLFlBQVlBLFVBQVVDLE1BQU0sQ0FBQyxNQUFnQixPQUFWSjtJQUNyQztJQUNBLE1BQU1LLFVBQVVDLE9BQU9DLEtBQUssQ0FBQ0osV0FBVztRQUN0Q0ssTUFBTTtRQUNOQyxRQUFRVixNQUFNVSxNQUFNO0lBQ3RCLEdBQUdDLElBQUksQ0FBQyxDQUFDQyxXQUFhQSxTQUFTQyxJQUFJLElBQUlGLElBQUksQ0FBQyxDQUFDRztZQUN3QkEsMkJBQUFBO1lBQzFEQSxhQUNHQTtRQUZaLE1BQU1DLGdCQUFnQiwrQkFBK0JDLGNBQWNGLGlCQUFBQSw0QkFBQUEsc0JBQUFBLEtBQU1HLGFBQWEsY0FBbkJILDJDQUFBQSw0QkFBQUEsb0JBQXFCbEIsS0FBSyxDQUFDbUIsNEJBQTNCRCxnREFBQUEseUJBQTJDLENBQUMsRUFBRSxFQUFFSSxTQUFTRixjQUFjLGdDQUE0QyxPQUFaQSxhQUFZLHFCQUFtQixJQUFJRyxPQUFPO1lBQ2xOQyxPQUFPTixDQUFBQSxjQUFBQSxpQkFBQUEsMkJBQUFBLEtBQU1NLEtBQUssY0FBWE4seUJBQUFBLGNBQWU7WUFDdEJPLFVBQVVQLENBQUFBLGlCQUFBQSxpQkFBQUEsMkJBQUFBLEtBQU1PLFFBQVEsY0FBZFAsNEJBQUFBLGlCQUFrQjtZQUM1Qkk7WUFDQUksS0FBS1IsS0FBS1MsWUFBWSxLQUFLO1FBQzdCO1FBQ0FqQyxVQUFVa0MsR0FBRyxDQUFDM0IsU0FBU3NCO1FBQ3ZCLE9BQU9BO0lBQ1QsR0FBR00sT0FBTyxDQUFDLElBQU1qQyxhQUFha0MsTUFBTSxDQUFDN0I7SUFDckNMLGFBQWFnQyxHQUFHLENBQUMzQixTQUFTUztJQUMxQixPQUFPQTtBQUNUO0FBRWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L2NodW5rcy92aWRzdGFjay1rck9BdEtNaS5qcz9jMmI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmNvbnN0IHZpZGVvSWRSRSA9IC8oPzpodHRwczpcXC9cXC8pPyg/OnBsYXllclxcLik/dmltZW8oPzpcXC5jb20pP1xcLyg/OnZpZGVvXFwvKT8oXFxkKykoPzooPzpcXD9oYXNoPXxcXD9oPXxcXC8pKC4qKSk/LztcbmNvbnN0IGluZm9DYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG5jb25zdCBwZW5kaW5nRmV0Y2ggPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuZnVuY3Rpb24gcmVzb2x2ZVZpbWVvVmlkZW9JZChzcmMpIHtcbiAgY29uc3QgbWF0Y2hlcyA9IHNyYy5tYXRjaCh2aWRlb0lkUkUpO1xuICByZXR1cm4geyB2aWRlb0lkOiBtYXRjaGVzPy5bMV0sIGhhc2g6IG1hdGNoZXM/LlsyXSB9O1xufVxuYXN5bmMgZnVuY3Rpb24gZ2V0VmltZW9WaWRlb0luZm8odmlkZW9JZCwgYWJvcnQsIHZpZGVvSGFzaCkge1xuICBpZiAoaW5mb0NhY2hlLmhhcyh2aWRlb0lkKSkgcmV0dXJuIGluZm9DYWNoZS5nZXQodmlkZW9JZCk7XG4gIGlmIChwZW5kaW5nRmV0Y2guaGFzKHZpZGVvSWQpKSByZXR1cm4gcGVuZGluZ0ZldGNoLmdldCh2aWRlb0lkKTtcbiAgbGV0IG9lbWJlZFNyYyA9IGBodHRwczovL3ZpbWVvLmNvbS9hcGkvb2VtYmVkLmpzb24/dXJsPWh0dHBzOi8vcGxheWVyLnZpbWVvLmNvbS92aWRlby8ke3ZpZGVvSWR9YDtcbiAgaWYgKHZpZGVvSGFzaCkge1xuICAgIG9lbWJlZFNyYyA9IG9lbWJlZFNyYy5jb25jYXQoYD9oPSR7dmlkZW9IYXNofWApO1xuICB9XG4gIGNvbnN0IHByb21pc2UgPSB3aW5kb3cuZmV0Y2gob2VtYmVkU3JjLCB7XG4gICAgbW9kZTogXCJjb3JzXCIsXG4gICAgc2lnbmFsOiBhYm9ydC5zaWduYWxcbiAgfSkudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmpzb24oKSkudGhlbigoZGF0YSkgPT4ge1xuICAgIGNvbnN0IHRodW1uYWlsUmVnZXggPSAvdmltZW9jZG4uY29tXFwvdmlkZW9cXC8oLiopP18vLCB0aHVtYm5haWxJZCA9IGRhdGE/LnRodW1ibmFpbF91cmw/Lm1hdGNoKHRodW1uYWlsUmVnZXgpPy5bMV0sIHBvc3RlciA9IHRodW1ibmFpbElkID8gYGh0dHBzOi8vaS52aW1lb2Nkbi5jb20vdmlkZW8vJHt0aHVtYm5haWxJZH1fMTkyMHgxMDgwLndlYnBgIDogXCJcIiwgaW5mbyA9IHtcbiAgICAgIHRpdGxlOiBkYXRhPy50aXRsZSA/PyBcIlwiLFxuICAgICAgZHVyYXRpb246IGRhdGE/LmR1cmF0aW9uID8/IDAsXG4gICAgICBwb3N0ZXIsXG4gICAgICBwcm86IGRhdGEuYWNjb3VudF90eXBlICE9PSBcImJhc2ljXCJcbiAgICB9O1xuICAgIGluZm9DYWNoZS5zZXQodmlkZW9JZCwgaW5mbyk7XG4gICAgcmV0dXJuIGluZm87XG4gIH0pLmZpbmFsbHkoKCkgPT4gcGVuZGluZ0ZldGNoLmRlbGV0ZSh2aWRlb0lkKSk7XG4gIHBlbmRpbmdGZXRjaC5zZXQodmlkZW9JZCwgcHJvbWlzZSk7XG4gIHJldHVybiBwcm9taXNlO1xufVxuXG5leHBvcnQgeyBnZXRWaW1lb1ZpZGVvSW5mbywgcmVzb2x2ZVZpbWVvVmlkZW9JZCB9O1xuIl0sIm5hbWVzIjpbInZpZGVvSWRSRSIsImluZm9DYWNoZSIsIk1hcCIsInBlbmRpbmdGZXRjaCIsInJlc29sdmVWaW1lb1ZpZGVvSWQiLCJzcmMiLCJtYXRjaGVzIiwibWF0Y2giLCJ2aWRlb0lkIiwiaGFzaCIsImdldFZpbWVvVmlkZW9JbmZvIiwiYWJvcnQiLCJ2aWRlb0hhc2giLCJoYXMiLCJnZXQiLCJvZW1iZWRTcmMiLCJjb25jYXQiLCJwcm9taXNlIiwid2luZG93IiwiZmV0Y2giLCJtb2RlIiwic2lnbmFsIiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsImRhdGEiLCJ0aHVtbmFpbFJlZ2V4IiwidGh1bWJuYWlsSWQiLCJ0aHVtYm5haWxfdXJsIiwicG9zdGVyIiwiaW5mbyIsInRpdGxlIiwiZHVyYXRpb24iLCJwcm8iLCJhY2NvdW50X3R5cGUiLCJzZXQiLCJmaW5hbGx5IiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-krOAtKMi.js\n"));

/***/ })

}]);